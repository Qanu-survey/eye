# main of 4eq.py
4eq_solution_1 = [701, 155, 53, 1255]

# main of bell.py
bell_integral = 'integrate(exp(-x**2), (x, -oo, oo)) = sqrt(pi)'

# main of colors.py
map_coloring_europe = {'Slovakia': 'red', 'Romania': 'red', 'Ireland': 'red', 'Lithuania': 'red', 'Greece': 'red', 'Belgium': 'red', 'Cyprus': 'green', 'Latvia': 'green', 'Czech Republic': 'green', 'Italy': 'red', 'France': 'green', 'United Kingdom': 'blue', 'Malta': 'red', 'Germany': 'blue', 'Austria': 'yellow', 'Finland': 'red', 'Poland': 'yellow', 'Hungary': 'green', 'Slovenia': 'blue', 'Denmark': 'red', 'Luxemburg': 'yellow', 'Spain': 'red', 'Bulgaria': 'green', 'Netherlands': 'green', 'Estonia': 'blue', 'Croatia': 'red', 'Portugal': 'green', 'Sweden': 'green'}

# main of ea.py
ea_parent = 'METHINKS IT IS LIKE A WEASEL'

# main of easter.py
easter_2019 = '2019-04-21'
easter_2020 = '2020-04-12'
easter_2021 = '2021-04-04'
easter_2022 = '2022-04-17'
easter_2023 = '2023-04-09'
easter_2024 = '2024-03-31'
easter_2025 = '2025-04-20'
easter_2026 = '2026-04-05'
easter_2027 = '2027-03-28'
easter_2028 = '2028-04-16'
easter_2029 = '2029-04-01'
easter_2030 = '2030-04-21'
easter_2031 = '2031-04-13'
easter_2032 = '2032-03-28'
easter_2033 = '2033-04-17'
easter_2034 = '2034-04-09'
easter_2035 = '2035-03-25'
easter_2036 = '2036-04-13'
easter_2037 = '2037-04-05'
easter_2038 = '2038-04-25'
easter_2039 = '2039-04-10'

# main of euler.py
euler_identity = 'E**(I*pi) + 1 = 0'

# main of fibonacci.py
fibonacci_0 = 1
fibonacci_91 = 7540113804746346429
fibonacci_283 = 100694286476841731898333719576864360661213863366454327287613
fibonacci_3674 = 478732505303741385956404162345269858384744735877591245220155181425222583719052883909137058464486031445386821306651407715721324734656496647251457053851886221494227919117922121762759445109056363435769661016283973874009882426095042125170050552506439407003348815544330761584079400325135461550678193524079378861491450704396020972430999793292403017017483898367294476621937943974773294482313564414351612321712688966195460106059438547323207823437792403822551858544397854438499290008848427283999904470627694790572621142059740582469261837684610332863779365142229925216465377941388168082326549704808165258917845248614898837975480724751326240969762853171535705139586476456245058479704158211017314959533704159600834523154440762497873004614783236902025322702458152051015280133424450
fibonacci_29821 = 12020499997579279669116305555637388846572292844029395549342865155441078294690307511503749479168502311897170422698609577162433794155912710178955307811224003991513004370798060694882416985332465714740988827727130026077034098735833355975375594439096018281283780210925630070442728359675681819480815407569871781710706506563117409186477084106503416398119741465462373010159665853572300104896826908582751937431893457264802277958273510189219770316390540790121120870937510431799654928675915802094569818767800476397709653316529833363042503233587038379056086500639735741647744892086450970438339237864549937759926899493702397355111737946265510832530663047443842285637300706546458693518536051521314153511261825219138768720792748989415876743521156098725993006610101952905286342638020622837591500103544781883799074557625337915433174940439285696396806039472345757482144375006868734723819289215345011008692424063844139532915360868918346445026518473177798457457607403376848238172144083100279350367847827400552265973905111086883270608576633002338574284553637016451381648527893090576889333295558325132641138371912270579031072451717587674259947745189047978624193573175293240733815922514014796977638576108533664421091114050137388475253968841744386395689936783957259764343905971384532193792295894168601500771699897187658593639430541415075224790760785663468379591998042087067808279422649672600280620625711517886775313801691989147329167224415494259763506934336674971486569710695114482123534110300351524100041427117416636333617592783137006478583851896475556591806831772749889719868008133363619822748690931661124882300858531690234698351621271810269618863208880082898151223677444081553406548764610393243132832843603917931517334040165094006995628700423192083922550456123734587444939922163563862847017548421872924489612879631853961000109888918316908595890883173150407429848540560051675861263845532757557449910912335169300793691256262435408730073214182093892563185381567645119204583478480199762798310741906162648375377670220975322264271140334884653844139709213074123824903830021174775072707452279386614068191409092650866927385511449108229458099333515548203693340067186774806723169193101150354506867065735896549752712002983785976470598278920967333451371787749493894008432658858872782312770478066909483210116587156201232084408481548755153574652799588420376016027906589413653555858689771534226017109228270461078590260070903335230231510054019737312988390868913267202559530314543227876355382089602480765653798188138060374704422375130933176225959902538806880409427582983315699830654823452325729686344454117512297067312043108081054125861624491989083251337290705722034026910368167881510089174657287997455692328896005022728509353956078046308823379666202752435960824273361269184701749577466030428756639801029270163829905499030351408451785322796382361129689323290757531721296924145783158062509794904921776780534997332963366321919049937482787821886571319647213079100401901082275076705444667118417249927226980309828575727409996784966591842076275976973411199017473402429741275836818266095726638907471082569127520780340334832364301183119014170794648043154807780252829078212561557727664604273818777501932133412567715402895517958707291469762362884414967745144683344965350255807983804495485595814121893836381901898364952468203556444667667682623000953730168670028477310589458954197645538784352021131059582566904959078276474562528574700902855923254140077982048903955707428123058074937201498007440611821528930522343529443740732248730104592361546323575324825950364944688245420644146874031841927498265633225817916874036979546673354230142369635510496937102530108055343283517995634687454850436729927370551792813973668786782321592425401335662914675249609421281225315832732907367461919059458879662937681635732158226628448289457855731034627258645825196054502389360177573836650109319751867723542368405453687616305515354128653193499307105840565002746824545400396558822372639002092114755393136889076306987483042063647254766077659344346231907254683280722920896891186438984773987504841339478797773181051562157544221620425748679550088139531302272735337652575536084148549726797192519252904984446807298686185990833924416158434734172826415261292049009895411106517054681583187500350501742937232845984280630004320688656816275345130491807150663098446623225178156818660518912568660719568639419119448360366223970868827327475836410995667224509285408269641945631256753206601098406412958164872024687127561552939225473647305283976560276281293553290453064277957155008632782283995784676291517259098141057679638648736081772014236349674226205009323618906554678389827645388376181023270218394586794642543735446418978860922509825833372890331725253820792915045545719862621815668155005384165883540048537350155305700915312668084625435336281368975429547036966261503699066080911469317006538139882901036701660053952565243276540551419378940041664308015564295744064763059084067014243303304906133991639012141709882850720240381654855997766818797154102094523430837928142926148132177966427747504834119369105377143614226501611945342537269115773873928695438854804018281525619757722248469953685844354665885932301176099793345373126820502953256827195616029751447073889585962592561485316634444205740302639191828537306026084716787602173215549468126665357063531895193294734629763371871448863410593745927016335557320863446167824058808186514214558944851754260617668250257286552177631474968196198818608427120430226194432973500585400101481223883332335933167356259667713440156967106450845492656934002065206918888239030069169934641285843436001885387850360550364683492407173166053486546148521776057840621240909754338443789554503280645392679443791650986622192197183533010849744176756557050188363548327024650063754038634724635186623769561917816794342062265214909327755624879239313549712388661551126624575702587571824244103564294748938080435925256326990417588991526054229186145663875879372068642636883635421379783862562296391114722888976726353766720677493556400554549033617523538760230841005776162308120488741448949349937687351427588395787922282918243350963942191522139261047991919891461092161084248937532398500819057231703120695386793867979917356630159100590322950121504297357423235064705311614798898324196324010291392262258437263779830715305014361

# main of grover.py
grover_7_alternating_bits_oracle = [1, 0, 1, 0, 1, 0, 1]

# main of lee.py
lee_map_1 = [[2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [2, 1, None, None, None, None, None, None, None, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [3, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [4, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], [5, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], [6, 5, 6, 7, 8, 9, None, None, None, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], [7, 6, 7, 8, 9, 10, None, None, None, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], [8, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], [9, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], [10, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], [11, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], [12, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], [13, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [14, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], [15, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], [16, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], [17, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], [18, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], [19, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]]
lee_path_1 = [(9, 6), (9, 5), (9, 4), (9, 3), (9, 2), (9, 1), (8, 1), (7, 1), (6, 1), (5, 1), (4, 1), (3, 1), (2, 1), (1, 1)]

# main of queens.py
nqueen_8 = [(0, 4, 7, 5, 2, 6, 1, 3), (0, 5, 7, 2, 6, 3, 1, 4), (0, 6, 3, 5, 7, 1, 4, 2), (0, 6, 4, 7, 1, 3, 5, 2), (1, 3, 5, 7, 2, 0, 6, 4), (1, 4, 6, 0, 2, 7, 5, 3), (1, 4, 6, 3, 0, 7, 5, 2), (1, 5, 0, 6, 3, 7, 2, 4), (1, 5, 7, 2, 0, 3, 6, 4), (1, 6, 2, 5, 7, 4, 0, 3), (1, 6, 4, 7, 0, 3, 5, 2), (1, 7, 5, 0, 2, 4, 6, 3), (2, 0, 6, 4, 7, 1, 3, 5), (2, 4, 1, 7, 0, 6, 3, 5), (2, 4, 1, 7, 5, 3, 6, 0), (2, 4, 6, 0, 3, 1, 7, 5), (2, 4, 7, 3, 0, 6, 1, 5), (2, 5, 1, 4, 7, 0, 6, 3), (2, 5, 1, 6, 0, 3, 7, 4), (2, 5, 1, 6, 4, 0, 7, 3), (2, 5, 3, 0, 7, 4, 6, 1), (2, 5, 3, 1, 7, 4, 6, 0), (2, 5, 7, 0, 3, 6, 4, 1), (2, 5, 7, 0, 4, 6, 1, 3), (2, 5, 7, 1, 3, 0, 6, 4), (2, 6, 1, 7, 4, 0, 3, 5), (2, 6, 1, 7, 5, 3, 0, 4), (2, 7, 3, 6, 0, 5, 1, 4), (3, 0, 4, 7, 1, 6, 2, 5), (3, 0, 4, 7, 5, 2, 6, 1), (3, 1, 4, 7, 5, 0, 2, 6), (3, 1, 6, 2, 5, 7, 0, 4), (3, 1, 6, 2, 5, 7, 4, 0), (3, 1, 6, 4, 0, 7, 5, 2), (3, 1, 7, 4, 6, 0, 2, 5), (3, 1, 7, 5, 0, 2, 4, 6), (3, 5, 0, 4, 1, 7, 2, 6), (3, 5, 7, 1, 6, 0, 2, 4), (3, 5, 7, 2, 0, 6, 4, 1), (3, 6, 0, 7, 4, 1, 5, 2), (3, 6, 2, 7, 1, 4, 0, 5), (3, 6, 4, 1, 5, 0, 2, 7), (3, 6, 4, 2, 0, 5, 7, 1), (3, 7, 0, 2, 5, 1, 6, 4), (3, 7, 0, 4, 6, 1, 5, 2), (3, 7, 4, 2, 0, 6, 1, 5), (4, 0, 3, 5, 7, 1, 6, 2), (4, 0, 7, 3, 1, 6, 2, 5), (4, 0, 7, 5, 2, 6, 1, 3), (4, 1, 3, 5, 7, 2, 0, 6), (4, 1, 3, 6, 2, 7, 5, 0), (4, 1, 5, 0, 6, 3, 7, 2), (4, 1, 7, 0, 3, 6, 2, 5), (4, 2, 0, 5, 7, 1, 3, 6), (4, 2, 0, 6, 1, 7, 5, 3), (4, 2, 7, 3, 6, 0, 5, 1), (4, 6, 0, 2, 7, 5, 3, 1), (4, 6, 0, 3, 1, 7, 5, 2), (4, 6, 1, 3, 7, 0, 2, 5), (4, 6, 1, 5, 2, 0, 3, 7), (4, 6, 1, 5, 2, 0, 7, 3), (4, 6, 3, 0, 2, 7, 5, 1), (4, 7, 3, 0, 2, 5, 1, 6), (4, 7, 3, 0, 6, 1, 5, 2), (5, 0, 4, 1, 7, 2, 6, 3), (5, 1, 6, 0, 2, 4, 7, 3), (5, 1, 6, 0, 3, 7, 4, 2), (5, 2, 0, 6, 4, 7, 1, 3), (5, 2, 0, 7, 3, 1, 6, 4), (5, 2, 0, 7, 4, 1, 3, 6), (5, 2, 4, 6, 0, 3, 1, 7), (5, 2, 4, 7, 0, 3, 1, 6), (5, 2, 6, 1, 3, 7, 0, 4), (5, 2, 6, 1, 7, 4, 0, 3), (5, 2, 6, 3, 0, 7, 1, 4), (5, 3, 0, 4, 7, 1, 6, 2), (5, 3, 1, 7, 4, 6, 0, 2), (5, 3, 6, 0, 2, 4, 1, 7), (5, 3, 6, 0, 7, 1, 4, 2), (5, 7, 1, 3, 0, 6, 4, 2), (6, 0, 2, 7, 5, 3, 1, 4), (6, 1, 3, 0, 7, 4, 2, 5), (6, 1, 5, 2, 0, 3, 7, 4), (6, 2, 0, 5, 7, 4, 1, 3), (6, 2, 7, 1, 4, 0, 5, 3), (6, 3, 1, 4, 7, 0, 2, 5), (6, 3, 1, 7, 5, 0, 2, 4), (6, 4, 2, 0, 5, 7, 1, 3), (7, 1, 3, 0, 6, 4, 2, 5), (7, 1, 4, 2, 0, 6, 3, 5), (7, 2, 0, 5, 1, 4, 6, 3), (7, 3, 0, 2, 5, 1, 6, 4)]

# main of sudoku.py
sudoku_201906 = [[8, 1, 3, 4, 2, 5, 7, 9, 6], [6, 2, 4, 8, 9, 7, 3, 5, 1], [5, 7, 9, 6, 1, 3, 8, 4, 2], [4, 3, 7, 2, 8, 9, 6, 1, 5], [2, 8, 6, 3, 5, 1, 4, 7, 9], [1, 9, 5, 7, 6, 4, 2, 3, 8], [9, 4, 2, 5, 3, 8, 1, 6, 7], [7, 5, 8, 1, 4, 6, 9, 2, 3], [3, 6, 1, 9, 7, 2, 5, 8, 4]]
sudoku_201907 = [[4, 3, 9, 7, 6, 8, 5, 1, 2], [6, 8, 7, 2, 1, 5, 9, 4, 3], [5, 2, 1, 4, 9, 3, 8, 7, 6], [1, 7, 8, 9, 2, 4, 3, 6, 5], [2, 6, 3, 5, 8, 1, 7, 9, 4], [9, 4, 5, 3, 7, 6, 1, 2, 8], [3, 1, 4, 6, 5, 9, 2, 8, 7], [8, 5, 2, 1, 4, 7, 6, 3, 9], [7, 9, 6, 8, 3, 2, 4, 5, 1]]
sudoku_201909 = [[3, 4, 8, 6, 1, 9, 7, 2, 5], [5, 1, 2, 8, 7, 4, 3, 6, 9], [7, 9, 6, 3, 5, 2, 4, 1, 8], [4, 6, 7, 1, 9, 3, 8, 5, 2], [8, 3, 9, 2, 6, 5, 1, 4, 7], [1, 2, 5, 7, 4, 8, 6, 9, 3], [6, 5, 1, 9, 3, 7, 2, 8, 4], [2, 7, 4, 5, 8, 6, 9, 3, 1], [9, 8, 3, 4, 2, 1, 5, 7, 6]]
sudoku_201910 = [[3, 4, 1, 8, 6, 9, 7, 2, 5], [5, 2, 6, 4, 1, 7, 3, 8, 9], [9, 7, 8, 2, 3, 5, 6, 4, 1], [1, 8, 7, 6, 5, 2, 9, 3, 4], [4, 6, 5, 1, 9, 3, 2, 7, 8], [2, 3, 9, 7, 4, 8, 5, 1, 6], [6, 9, 2, 3, 8, 1, 4, 5, 7], [7, 1, 4, 5, 2, 6, 8, 9, 3], [8, 5, 3, 9, 7, 4, 1, 6, 2]]

