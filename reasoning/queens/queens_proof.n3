#Processed by EYE v19.0723.1200 josd
#eye --plugin http://josd.github.io/eye/reasoning/queens/queens_program.eyepl --query http://josd.github.io/eye/reasoning/queens/queens_query.n3

PREFIX queens: <http://josd.github.io/eye/reasoning/queens#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[] a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:component <#lemma3>;
  r:component <#lemma4>;
  r:component <#lemma5>;
  r:component <#lemma6>;
  r:component <#lemma7>;
  r:component <#lemma8>;
  r:component <#lemma9>;
  r:component <#lemma10>;
  r:component <#lemma11>;
  r:component <#lemma12>;
  r:component <#lemma13>;
  r:component <#lemma14>;
  r:component <#lemma15>;
  r:component <#lemma16>;
  r:component <#lemma17>;
  r:component <#lemma18>;
  r:component <#lemma19>;
  r:component <#lemma20>;
  r:component <#lemma21>;
  r:component <#lemma22>;
  r:component <#lemma23>;
  r:component <#lemma24>;
  r:component <#lemma25>;
  r:component <#lemma26>;
  r:component <#lemma27>;
  r:component <#lemma28>;
  r:component <#lemma29>;
  r:component <#lemma30>;
  r:component <#lemma31>;
  r:component <#lemma32>;
  r:component <#lemma33>;
  r:component <#lemma34>;
  r:component <#lemma35>;
  r:component <#lemma36>;
  r:component <#lemma37>;
  r:component <#lemma38>;
  r:component <#lemma39>;
  r:component <#lemma40>;
  r:component <#lemma41>;
  r:component <#lemma42>;
  r:component <#lemma43>;
  r:component <#lemma44>;
  r:component <#lemma45>;
  r:component <#lemma46>;
  r:component <#lemma47>;
  r:component <#lemma48>;
  r:component <#lemma49>;
  r:component <#lemma50>;
  r:component <#lemma51>;
  r:component <#lemma52>;
  r:component <#lemma53>;
  r:component <#lemma54>;
  r:component <#lemma55>;
  r:component <#lemma56>;
  r:component <#lemma57>;
  r:component <#lemma58>;
  r:component <#lemma59>;
  r:component <#lemma60>;
  r:component <#lemma61>;
  r:component <#lemma62>;
  r:component <#lemma63>;
  r:component <#lemma64>;
  r:component <#lemma65>;
  r:component <#lemma66>;
  r:component <#lemma67>;
  r:component <#lemma68>;
  r:component <#lemma69>;
  r:component <#lemma70>;
  r:component <#lemma71>;
  r:component <#lemma72>;
  r:component <#lemma73>;
  r:component <#lemma74>;
  r:component <#lemma75>;
  r:component <#lemma76>;
  r:component <#lemma77>;
  r:component <#lemma78>;
  r:component <#lemma79>;
  r:component <#lemma80>;
  r:component <#lemma81>;
  r:component <#lemma82>;
  r:component <#lemma83>;
  r:component <#lemma84>;
  r:component <#lemma85>;
  r:component <#lemma86>;
  r:component <#lemma87>;
  r:component <#lemma88>;
  r:component <#lemma89>;
  r:component <#lemma90>;
  r:component <#lemma91>;
  r:component <#lemma92>;
  r:gives {
    8 queens:solve (1 5 8 6 3 7 2 4).
    8 queens:solve (1 6 8 3 7 4 2 5).
    8 queens:solve (1 7 4 6 8 2 5 3).
    8 queens:solve (1 7 5 8 2 4 6 3).
    8 queens:solve (2 4 6 8 3 1 7 5).
    8 queens:solve (2 5 7 1 3 8 6 4).
    8 queens:solve (2 5 7 4 1 8 6 3).
    8 queens:solve (2 6 1 7 4 8 3 5).
    8 queens:solve (2 6 8 3 1 4 7 5).
    8 queens:solve (2 7 3 6 8 5 1 4).
    8 queens:solve (2 7 5 8 1 4 6 3).
    8 queens:solve (2 8 6 1 3 5 7 4).
    8 queens:solve (3 1 7 5 8 2 4 6).
    8 queens:solve (3 5 2 8 1 7 4 6).
    8 queens:solve (3 5 2 8 6 4 7 1).
    8 queens:solve (3 5 7 1 4 2 8 6).
    8 queens:solve (3 5 8 4 1 7 2 6).
    8 queens:solve (3 6 2 5 8 1 7 4).
    8 queens:solve (3 6 2 7 1 4 8 5).
    8 queens:solve (3 6 2 7 5 1 8 4).
    8 queens:solve (3 6 4 1 8 5 7 2).
    8 queens:solve (3 6 4 2 8 5 7 1).
    8 queens:solve (3 6 8 1 4 7 5 2).
    8 queens:solve (3 6 8 1 5 7 2 4).
    8 queens:solve (3 6 8 2 4 1 7 5).
    8 queens:solve (3 7 2 8 5 1 4 6).
    8 queens:solve (3 7 2 8 6 4 1 5).
    8 queens:solve (3 8 4 7 1 6 2 5).
    8 queens:solve (4 1 5 8 2 7 3 6).
    8 queens:solve (4 1 5 8 6 3 7 2).
    8 queens:solve (4 2 5 8 6 1 3 7).
    8 queens:solve (4 2 7 3 6 8 1 5).
    8 queens:solve (4 2 7 3 6 8 5 1).
    8 queens:solve (4 2 7 5 1 8 6 3).
    8 queens:solve (4 2 8 5 7 1 3 6).
    8 queens:solve (4 2 8 6 1 3 5 7).
    8 queens:solve (4 6 1 5 2 8 3 7).
    8 queens:solve (4 6 8 2 7 1 3 5).
    8 queens:solve (4 6 8 3 1 7 5 2).
    8 queens:solve (4 7 1 8 5 2 6 3).
    8 queens:solve (4 7 3 8 2 5 1 6).
    8 queens:solve (4 7 5 2 6 1 3 8).
    8 queens:solve (4 7 5 3 1 6 8 2).
    8 queens:solve (4 8 1 3 6 2 7 5).
    8 queens:solve (4 8 1 5 7 2 6 3).
    8 queens:solve (4 8 5 3 1 7 2 6).
    8 queens:solve (5 1 4 6 8 2 7 3).
    8 queens:solve (5 1 8 4 2 7 3 6).
    8 queens:solve (5 1 8 6 3 7 2 4).
    8 queens:solve (5 2 4 6 8 3 1 7).
    8 queens:solve (5 2 4 7 3 8 6 1).
    8 queens:solve (5 2 6 1 7 4 8 3).
    8 queens:solve (5 2 8 1 4 7 3 6).
    8 queens:solve (5 3 1 6 8 2 4 7).
    8 queens:solve (5 3 1 7 2 8 6 4).
    8 queens:solve (5 3 8 4 7 1 6 2).
    8 queens:solve (5 7 1 3 8 6 4 2).
    8 queens:solve (5 7 1 4 2 8 6 3).
    8 queens:solve (5 7 2 4 8 1 3 6).
    8 queens:solve (5 7 2 6 3 1 4 8).
    8 queens:solve (5 7 2 6 3 1 8 4).
    8 queens:solve (5 7 4 1 3 8 6 2).
    8 queens:solve (5 8 4 1 3 6 2 7).
    8 queens:solve (5 8 4 1 7 2 6 3).
    8 queens:solve (6 1 5 2 8 3 7 4).
    8 queens:solve (6 2 7 1 3 5 8 4).
    8 queens:solve (6 2 7 1 4 8 5 3).
    8 queens:solve (6 3 1 7 5 8 2 4).
    8 queens:solve (6 3 1 8 4 2 7 5).
    8 queens:solve (6 3 1 8 5 2 4 7).
    8 queens:solve (6 3 5 7 1 4 2 8).
    8 queens:solve (6 3 5 8 1 4 2 7).
    8 queens:solve (6 3 7 2 4 8 1 5).
    8 queens:solve (6 3 7 2 8 5 1 4).
    8 queens:solve (6 3 7 4 1 8 2 5).
    8 queens:solve (6 4 1 5 8 2 7 3).
    8 queens:solve (6 4 2 8 5 7 1 3).
    8 queens:solve (6 4 7 1 3 5 2 8).
    8 queens:solve (6 4 7 1 8 2 5 3).
    8 queens:solve (6 8 2 4 1 7 5 3).
    8 queens:solve (7 1 3 8 6 4 2 5).
    8 queens:solve (7 2 4 1 8 5 3 6).
    8 queens:solve (7 2 6 3 1 4 8 5).
    8 queens:solve (7 3 1 6 8 5 2 4).
    8 queens:solve (7 3 8 2 5 1 6 4).
    8 queens:solve (7 4 2 5 8 1 3 6).
    8 queens:solve (7 4 2 8 6 1 3 5).
    8 queens:solve (7 5 3 1 6 8 2 4).
    8 queens:solve (8 2 4 1 7 5 3 6).
    8 queens:solve (8 2 5 3 1 7 4 6).
    8 queens:solve (8 3 1 6 2 5 7 4).
    8 queens:solve (8 4 1 3 6 2 7 5).
  }.

<#lemma1> a r:Inference;
  r:gives {
    8 queens:solve (1 5 8 6 3 7 2 4).
  };
  r:evidence (
    <#lemma93>
  );
  r:rule <#lemma94>.

<#lemma2> a r:Inference;
  r:gives {
    8 queens:solve (1 6 8 3 7 4 2 5).
  };
  r:evidence (
    <#lemma95>
  );
  r:rule <#lemma94>.

<#lemma3> a r:Inference;
  r:gives {
    8 queens:solve (1 7 4 6 8 2 5 3).
  };
  r:evidence (
    <#lemma96>
  );
  r:rule <#lemma94>.

<#lemma4> a r:Inference;
  r:gives {
    8 queens:solve (1 7 5 8 2 4 6 3).
  };
  r:evidence (
    <#lemma97>
  );
  r:rule <#lemma94>.

<#lemma5> a r:Inference;
  r:gives {
    8 queens:solve (2 4 6 8 3 1 7 5).
  };
  r:evidence (
    <#lemma98>
  );
  r:rule <#lemma94>.

<#lemma6> a r:Inference;
  r:gives {
    8 queens:solve (2 5 7 1 3 8 6 4).
  };
  r:evidence (
    <#lemma99>
  );
  r:rule <#lemma94>.

<#lemma7> a r:Inference;
  r:gives {
    8 queens:solve (2 5 7 4 1 8 6 3).
  };
  r:evidence (
    <#lemma100>
  );
  r:rule <#lemma94>.

<#lemma8> a r:Inference;
  r:gives {
    8 queens:solve (2 6 1 7 4 8 3 5).
  };
  r:evidence (
    <#lemma101>
  );
  r:rule <#lemma94>.

<#lemma9> a r:Inference;
  r:gives {
    8 queens:solve (2 6 8 3 1 4 7 5).
  };
  r:evidence (
    <#lemma102>
  );
  r:rule <#lemma94>.

<#lemma10> a r:Inference;
  r:gives {
    8 queens:solve (2 7 3 6 8 5 1 4).
  };
  r:evidence (
    <#lemma103>
  );
  r:rule <#lemma94>.

<#lemma11> a r:Inference;
  r:gives {
    8 queens:solve (2 7 5 8 1 4 6 3).
  };
  r:evidence (
    <#lemma104>
  );
  r:rule <#lemma94>.

<#lemma12> a r:Inference;
  r:gives {
    8 queens:solve (2 8 6 1 3 5 7 4).
  };
  r:evidence (
    <#lemma105>
  );
  r:rule <#lemma94>.

<#lemma13> a r:Inference;
  r:gives {
    8 queens:solve (3 1 7 5 8 2 4 6).
  };
  r:evidence (
    <#lemma106>
  );
  r:rule <#lemma94>.

<#lemma14> a r:Inference;
  r:gives {
    8 queens:solve (3 5 2 8 1 7 4 6).
  };
  r:evidence (
    <#lemma107>
  );
  r:rule <#lemma94>.

<#lemma15> a r:Inference;
  r:gives {
    8 queens:solve (3 5 2 8 6 4 7 1).
  };
  r:evidence (
    <#lemma108>
  );
  r:rule <#lemma94>.

<#lemma16> a r:Inference;
  r:gives {
    8 queens:solve (3 5 7 1 4 2 8 6).
  };
  r:evidence (
    <#lemma109>
  );
  r:rule <#lemma94>.

<#lemma17> a r:Inference;
  r:gives {
    8 queens:solve (3 5 8 4 1 7 2 6).
  };
  r:evidence (
    <#lemma110>
  );
  r:rule <#lemma94>.

<#lemma18> a r:Inference;
  r:gives {
    8 queens:solve (3 6 2 5 8 1 7 4).
  };
  r:evidence (
    <#lemma111>
  );
  r:rule <#lemma94>.

<#lemma19> a r:Inference;
  r:gives {
    8 queens:solve (3 6 2 7 1 4 8 5).
  };
  r:evidence (
    <#lemma112>
  );
  r:rule <#lemma94>.

<#lemma20> a r:Inference;
  r:gives {
    8 queens:solve (3 6 2 7 5 1 8 4).
  };
  r:evidence (
    <#lemma113>
  );
  r:rule <#lemma94>.

<#lemma21> a r:Inference;
  r:gives {
    8 queens:solve (3 6 4 1 8 5 7 2).
  };
  r:evidence (
    <#lemma114>
  );
  r:rule <#lemma94>.

<#lemma22> a r:Inference;
  r:gives {
    8 queens:solve (3 6 4 2 8 5 7 1).
  };
  r:evidence (
    <#lemma115>
  );
  r:rule <#lemma94>.

<#lemma23> a r:Inference;
  r:gives {
    8 queens:solve (3 6 8 1 4 7 5 2).
  };
  r:evidence (
    <#lemma116>
  );
  r:rule <#lemma94>.

<#lemma24> a r:Inference;
  r:gives {
    8 queens:solve (3 6 8 1 5 7 2 4).
  };
  r:evidence (
    <#lemma117>
  );
  r:rule <#lemma94>.

<#lemma25> a r:Inference;
  r:gives {
    8 queens:solve (3 6 8 2 4 1 7 5).
  };
  r:evidence (
    <#lemma118>
  );
  r:rule <#lemma94>.

<#lemma26> a r:Inference;
  r:gives {
    8 queens:solve (3 7 2 8 5 1 4 6).
  };
  r:evidence (
    <#lemma119>
  );
  r:rule <#lemma94>.

<#lemma27> a r:Inference;
  r:gives {
    8 queens:solve (3 7 2 8 6 4 1 5).
  };
  r:evidence (
    <#lemma120>
  );
  r:rule <#lemma94>.

<#lemma28> a r:Inference;
  r:gives {
    8 queens:solve (3 8 4 7 1 6 2 5).
  };
  r:evidence (
    <#lemma121>
  );
  r:rule <#lemma94>.

<#lemma29> a r:Inference;
  r:gives {
    8 queens:solve (4 1 5 8 2 7 3 6).
  };
  r:evidence (
    <#lemma122>
  );
  r:rule <#lemma94>.

<#lemma30> a r:Inference;
  r:gives {
    8 queens:solve (4 1 5 8 6 3 7 2).
  };
  r:evidence (
    <#lemma123>
  );
  r:rule <#lemma94>.

<#lemma31> a r:Inference;
  r:gives {
    8 queens:solve (4 2 5 8 6 1 3 7).
  };
  r:evidence (
    <#lemma124>
  );
  r:rule <#lemma94>.

<#lemma32> a r:Inference;
  r:gives {
    8 queens:solve (4 2 7 3 6 8 1 5).
  };
  r:evidence (
    <#lemma125>
  );
  r:rule <#lemma94>.

<#lemma33> a r:Inference;
  r:gives {
    8 queens:solve (4 2 7 3 6 8 5 1).
  };
  r:evidence (
    <#lemma126>
  );
  r:rule <#lemma94>.

<#lemma34> a r:Inference;
  r:gives {
    8 queens:solve (4 2 7 5 1 8 6 3).
  };
  r:evidence (
    <#lemma127>
  );
  r:rule <#lemma94>.

<#lemma35> a r:Inference;
  r:gives {
    8 queens:solve (4 2 8 5 7 1 3 6).
  };
  r:evidence (
    <#lemma128>
  );
  r:rule <#lemma94>.

<#lemma36> a r:Inference;
  r:gives {
    8 queens:solve (4 2 8 6 1 3 5 7).
  };
  r:evidence (
    <#lemma129>
  );
  r:rule <#lemma94>.

<#lemma37> a r:Inference;
  r:gives {
    8 queens:solve (4 6 1 5 2 8 3 7).
  };
  r:evidence (
    <#lemma130>
  );
  r:rule <#lemma94>.

<#lemma38> a r:Inference;
  r:gives {
    8 queens:solve (4 6 8 2 7 1 3 5).
  };
  r:evidence (
    <#lemma131>
  );
  r:rule <#lemma94>.

<#lemma39> a r:Inference;
  r:gives {
    8 queens:solve (4 6 8 3 1 7 5 2).
  };
  r:evidence (
    <#lemma132>
  );
  r:rule <#lemma94>.

<#lemma40> a r:Inference;
  r:gives {
    8 queens:solve (4 7 1 8 5 2 6 3).
  };
  r:evidence (
    <#lemma133>
  );
  r:rule <#lemma94>.

<#lemma41> a r:Inference;
  r:gives {
    8 queens:solve (4 7 3 8 2 5 1 6).
  };
  r:evidence (
    <#lemma134>
  );
  r:rule <#lemma94>.

<#lemma42> a r:Inference;
  r:gives {
    8 queens:solve (4 7 5 2 6 1 3 8).
  };
  r:evidence (
    <#lemma135>
  );
  r:rule <#lemma94>.

<#lemma43> a r:Inference;
  r:gives {
    8 queens:solve (4 7 5 3 1 6 8 2).
  };
  r:evidence (
    <#lemma136>
  );
  r:rule <#lemma94>.

<#lemma44> a r:Inference;
  r:gives {
    8 queens:solve (4 8 1 3 6 2 7 5).
  };
  r:evidence (
    <#lemma137>
  );
  r:rule <#lemma94>.

<#lemma45> a r:Inference;
  r:gives {
    8 queens:solve (4 8 1 5 7 2 6 3).
  };
  r:evidence (
    <#lemma138>
  );
  r:rule <#lemma94>.

<#lemma46> a r:Inference;
  r:gives {
    8 queens:solve (4 8 5 3 1 7 2 6).
  };
  r:evidence (
    <#lemma139>
  );
  r:rule <#lemma94>.

<#lemma47> a r:Inference;
  r:gives {
    8 queens:solve (5 1 4 6 8 2 7 3).
  };
  r:evidence (
    <#lemma140>
  );
  r:rule <#lemma94>.

<#lemma48> a r:Inference;
  r:gives {
    8 queens:solve (5 1 8 4 2 7 3 6).
  };
  r:evidence (
    <#lemma141>
  );
  r:rule <#lemma94>.

<#lemma49> a r:Inference;
  r:gives {
    8 queens:solve (5 1 8 6 3 7 2 4).
  };
  r:evidence (
    <#lemma142>
  );
  r:rule <#lemma94>.

<#lemma50> a r:Inference;
  r:gives {
    8 queens:solve (5 2 4 6 8 3 1 7).
  };
  r:evidence (
    <#lemma143>
  );
  r:rule <#lemma94>.

<#lemma51> a r:Inference;
  r:gives {
    8 queens:solve (5 2 4 7 3 8 6 1).
  };
  r:evidence (
    <#lemma144>
  );
  r:rule <#lemma94>.

<#lemma52> a r:Inference;
  r:gives {
    8 queens:solve (5 2 6 1 7 4 8 3).
  };
  r:evidence (
    <#lemma145>
  );
  r:rule <#lemma94>.

<#lemma53> a r:Inference;
  r:gives {
    8 queens:solve (5 2 8 1 4 7 3 6).
  };
  r:evidence (
    <#lemma146>
  );
  r:rule <#lemma94>.

<#lemma54> a r:Inference;
  r:gives {
    8 queens:solve (5 3 1 6 8 2 4 7).
  };
  r:evidence (
    <#lemma147>
  );
  r:rule <#lemma94>.

<#lemma55> a r:Inference;
  r:gives {
    8 queens:solve (5 3 1 7 2 8 6 4).
  };
  r:evidence (
    <#lemma148>
  );
  r:rule <#lemma94>.

<#lemma56> a r:Inference;
  r:gives {
    8 queens:solve (5 3 8 4 7 1 6 2).
  };
  r:evidence (
    <#lemma149>
  );
  r:rule <#lemma94>.

<#lemma57> a r:Inference;
  r:gives {
    8 queens:solve (5 7 1 3 8 6 4 2).
  };
  r:evidence (
    <#lemma150>
  );
  r:rule <#lemma94>.

<#lemma58> a r:Inference;
  r:gives {
    8 queens:solve (5 7 1 4 2 8 6 3).
  };
  r:evidence (
    <#lemma151>
  );
  r:rule <#lemma94>.

<#lemma59> a r:Inference;
  r:gives {
    8 queens:solve (5 7 2 4 8 1 3 6).
  };
  r:evidence (
    <#lemma152>
  );
  r:rule <#lemma94>.

<#lemma60> a r:Inference;
  r:gives {
    8 queens:solve (5 7 2 6 3 1 4 8).
  };
  r:evidence (
    <#lemma153>
  );
  r:rule <#lemma94>.

<#lemma61> a r:Inference;
  r:gives {
    8 queens:solve (5 7 2 6 3 1 8 4).
  };
  r:evidence (
    <#lemma154>
  );
  r:rule <#lemma94>.

<#lemma62> a r:Inference;
  r:gives {
    8 queens:solve (5 7 4 1 3 8 6 2).
  };
  r:evidence (
    <#lemma155>
  );
  r:rule <#lemma94>.

<#lemma63> a r:Inference;
  r:gives {
    8 queens:solve (5 8 4 1 3 6 2 7).
  };
  r:evidence (
    <#lemma156>
  );
  r:rule <#lemma94>.

<#lemma64> a r:Inference;
  r:gives {
    8 queens:solve (5 8 4 1 7 2 6 3).
  };
  r:evidence (
    <#lemma157>
  );
  r:rule <#lemma94>.

<#lemma65> a r:Inference;
  r:gives {
    8 queens:solve (6 1 5 2 8 3 7 4).
  };
  r:evidence (
    <#lemma158>
  );
  r:rule <#lemma94>.

<#lemma66> a r:Inference;
  r:gives {
    8 queens:solve (6 2 7 1 3 5 8 4).
  };
  r:evidence (
    <#lemma159>
  );
  r:rule <#lemma94>.

<#lemma67> a r:Inference;
  r:gives {
    8 queens:solve (6 2 7 1 4 8 5 3).
  };
  r:evidence (
    <#lemma160>
  );
  r:rule <#lemma94>.

<#lemma68> a r:Inference;
  r:gives {
    8 queens:solve (6 3 1 7 5 8 2 4).
  };
  r:evidence (
    <#lemma161>
  );
  r:rule <#lemma94>.

<#lemma69> a r:Inference;
  r:gives {
    8 queens:solve (6 3 1 8 4 2 7 5).
  };
  r:evidence (
    <#lemma162>
  );
  r:rule <#lemma94>.

<#lemma70> a r:Inference;
  r:gives {
    8 queens:solve (6 3 1 8 5 2 4 7).
  };
  r:evidence (
    <#lemma163>
  );
  r:rule <#lemma94>.

<#lemma71> a r:Inference;
  r:gives {
    8 queens:solve (6 3 5 7 1 4 2 8).
  };
  r:evidence (
    <#lemma164>
  );
  r:rule <#lemma94>.

<#lemma72> a r:Inference;
  r:gives {
    8 queens:solve (6 3 5 8 1 4 2 7).
  };
  r:evidence (
    <#lemma165>
  );
  r:rule <#lemma94>.

<#lemma73> a r:Inference;
  r:gives {
    8 queens:solve (6 3 7 2 4 8 1 5).
  };
  r:evidence (
    <#lemma166>
  );
  r:rule <#lemma94>.

<#lemma74> a r:Inference;
  r:gives {
    8 queens:solve (6 3 7 2 8 5 1 4).
  };
  r:evidence (
    <#lemma167>
  );
  r:rule <#lemma94>.

<#lemma75> a r:Inference;
  r:gives {
    8 queens:solve (6 3 7 4 1 8 2 5).
  };
  r:evidence (
    <#lemma168>
  );
  r:rule <#lemma94>.

<#lemma76> a r:Inference;
  r:gives {
    8 queens:solve (6 4 1 5 8 2 7 3).
  };
  r:evidence (
    <#lemma169>
  );
  r:rule <#lemma94>.

<#lemma77> a r:Inference;
  r:gives {
    8 queens:solve (6 4 2 8 5 7 1 3).
  };
  r:evidence (
    <#lemma170>
  );
  r:rule <#lemma94>.

<#lemma78> a r:Inference;
  r:gives {
    8 queens:solve (6 4 7 1 3 5 2 8).
  };
  r:evidence (
    <#lemma171>
  );
  r:rule <#lemma94>.

<#lemma79> a r:Inference;
  r:gives {
    8 queens:solve (6 4 7 1 8 2 5 3).
  };
  r:evidence (
    <#lemma172>
  );
  r:rule <#lemma94>.

<#lemma80> a r:Inference;
  r:gives {
    8 queens:solve (6 8 2 4 1 7 5 3).
  };
  r:evidence (
    <#lemma173>
  );
  r:rule <#lemma94>.

<#lemma81> a r:Inference;
  r:gives {
    8 queens:solve (7 1 3 8 6 4 2 5).
  };
  r:evidence (
    <#lemma174>
  );
  r:rule <#lemma94>.

<#lemma82> a r:Inference;
  r:gives {
    8 queens:solve (7 2 4 1 8 5 3 6).
  };
  r:evidence (
    <#lemma175>
  );
  r:rule <#lemma94>.

<#lemma83> a r:Inference;
  r:gives {
    8 queens:solve (7 2 6 3 1 4 8 5).
  };
  r:evidence (
    <#lemma176>
  );
  r:rule <#lemma94>.

<#lemma84> a r:Inference;
  r:gives {
    8 queens:solve (7 3 1 6 8 5 2 4).
  };
  r:evidence (
    <#lemma177>
  );
  r:rule <#lemma94>.

<#lemma85> a r:Inference;
  r:gives {
    8 queens:solve (7 3 8 2 5 1 6 4).
  };
  r:evidence (
    <#lemma178>
  );
  r:rule <#lemma94>.

<#lemma86> a r:Inference;
  r:gives {
    8 queens:solve (7 4 2 5 8 1 3 6).
  };
  r:evidence (
    <#lemma179>
  );
  r:rule <#lemma94>.

<#lemma87> a r:Inference;
  r:gives {
    8 queens:solve (7 4 2 8 6 1 3 5).
  };
  r:evidence (
    <#lemma180>
  );
  r:rule <#lemma94>.

<#lemma88> a r:Inference;
  r:gives {
    8 queens:solve (7 5 3 1 6 8 2 4).
  };
  r:evidence (
    <#lemma181>
  );
  r:rule <#lemma94>.

<#lemma89> a r:Inference;
  r:gives {
    8 queens:solve (8 2 4 1 7 5 3 6).
  };
  r:evidence (
    <#lemma182>
  );
  r:rule <#lemma94>.

<#lemma90> a r:Inference;
  r:gives {
    8 queens:solve (8 2 5 3 1 7 4 6).
  };
  r:evidence (
    <#lemma183>
  );
  r:rule <#lemma94>.

<#lemma91> a r:Inference;
  r:gives {
    8 queens:solve (8 3 1 6 2 5 7 4).
  };
  r:evidence (
    <#lemma184>
  );
  r:rule <#lemma94>.

<#lemma92> a r:Inference;
  r:gives {
    8 queens:solve (8 4 1 3 6 2 7 5).
  };
  r:evidence (
    <#lemma185>
  );
  r:rule <#lemma94>.

<#lemma93> a r:Inference;
  r:gives {
    8 queens:solve (1 5 8 6 3 7 2 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([1,5,8,6,3,7,2,4],8)"}]
    <#lemma186>
    <#lemma187>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_1 queens:solve _:x_0_1} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma94> a r:Extraction;
  r:gives {
    {8 queens:solve ?x_0_2} => {8 queens:solve ?x_0_2}.
  };
  r:because [ a r:Parsing; r:source <http://josd.github.io/eye/reasoning/queens/queens_query.n3>].

<#lemma95> a r:Inference;
  r:gives {
    8 queens:solve (1 6 8 3 7 4 2 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([1,6,8,3,7,4,2,5],8)"}]
    <#lemma188>
    <#lemma189>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_3 queens:solve _:x_0_3} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma96> a r:Inference;
  r:gives {
    8 queens:solve (1 7 4 6 8 2 5 3).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([1,7,4,6,8,2,5,3],8)"}]
    <#lemma190>
    <#lemma191>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_4 queens:solve _:x_0_4} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma97> a r:Inference;
  r:gives {
    8 queens:solve (1 7 5 8 2 4 6 3).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([1,7,5,8,2,4,6,3],8)"}]
    <#lemma192>
    <#lemma193>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_5 queens:solve _:x_0_5} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma98> a r:Inference;
  r:gives {
    8 queens:solve (2 4 6 8 3 1 7 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([2,4,6,8,3,1,7,5],8)"}]
    <#lemma194>
    <#lemma195>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_6 queens:solve _:x_0_6} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma99> a r:Inference;
  r:gives {
    8 queens:solve (2 5 7 1 3 8 6 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([2,5,7,1,3,8,6,4],8)"}]
    <#lemma196>
    <#lemma197>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_7 queens:solve _:x_0_7} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma100> a r:Inference;
  r:gives {
    8 queens:solve (2 5 7 4 1 8 6 3).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([2,5,7,4,1,8,6,3],8)"}]
    <#lemma198>
    <#lemma199>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_8 queens:solve _:x_0_8} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma101> a r:Inference;
  r:gives {
    8 queens:solve (2 6 1 7 4 8 3 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([2,6,1,7,4,8,3,5],8)"}]
    <#lemma200>
    <#lemma201>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_9 queens:solve _:x_0_9} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma102> a r:Inference;
  r:gives {
    8 queens:solve (2 6 8 3 1 4 7 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([2,6,8,3,1,4,7,5],8)"}]
    <#lemma202>
    <#lemma203>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_10 queens:solve _:x_0_10} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma103> a r:Inference;
  r:gives {
    8 queens:solve (2 7 3 6 8 5 1 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([2,7,3,6,8,5,1,4],8)"}]
    <#lemma204>
    <#lemma205>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_11 queens:solve _:x_0_11} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma104> a r:Inference;
  r:gives {
    8 queens:solve (2 7 5 8 1 4 6 3).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([2,7,5,8,1,4,6,3],8)"}]
    <#lemma206>
    <#lemma207>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_12 queens:solve _:x_0_12} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma105> a r:Inference;
  r:gives {
    8 queens:solve (2 8 6 1 3 5 7 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([2,8,6,1,3,5,7,4],8)"}]
    <#lemma208>
    <#lemma209>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_13 queens:solve _:x_0_13} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma106> a r:Inference;
  r:gives {
    8 queens:solve (3 1 7 5 8 2 4 6).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([3,1,7,5,8,2,4,6],8)"}]
    <#lemma210>
    <#lemma211>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_14 queens:solve _:x_0_14} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma107> a r:Inference;
  r:gives {
    8 queens:solve (3 5 2 8 1 7 4 6).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([3,5,2,8,1,7,4,6],8)"}]
    <#lemma212>
    <#lemma213>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_15 queens:solve _:x_0_15} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma108> a r:Inference;
  r:gives {
    8 queens:solve (3 5 2 8 6 4 7 1).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([3,5,2,8,6,4,7,1],8)"}]
    <#lemma214>
    <#lemma215>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_16 queens:solve _:x_0_16} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma109> a r:Inference;
  r:gives {
    8 queens:solve (3 5 7 1 4 2 8 6).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([3,5,7,1,4,2,8,6],8)"}]
    <#lemma216>
    <#lemma217>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_17 queens:solve _:x_0_17} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma110> a r:Inference;
  r:gives {
    8 queens:solve (3 5 8 4 1 7 2 6).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([3,5,8,4,1,7,2,6],8)"}]
    <#lemma218>
    <#lemma219>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_18 queens:solve _:x_0_18} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma111> a r:Inference;
  r:gives {
    8 queens:solve (3 6 2 5 8 1 7 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([3,6,2,5,8,1,7,4],8)"}]
    <#lemma220>
    <#lemma221>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_19 queens:solve _:x_0_19} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma112> a r:Inference;
  r:gives {
    8 queens:solve (3 6 2 7 1 4 8 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([3,6,2,7,1,4,8,5],8)"}]
    <#lemma222>
    <#lemma223>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_20 queens:solve _:x_0_20} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma113> a r:Inference;
  r:gives {
    8 queens:solve (3 6 2 7 5 1 8 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([3,6,2,7,5,1,8,4],8)"}]
    <#lemma224>
    <#lemma225>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_21 queens:solve _:x_0_21} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma114> a r:Inference;
  r:gives {
    8 queens:solve (3 6 4 1 8 5 7 2).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([3,6,4,1,8,5,7,2],8)"}]
    <#lemma226>
    <#lemma227>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_22 queens:solve _:x_0_22} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma115> a r:Inference;
  r:gives {
    8 queens:solve (3 6 4 2 8 5 7 1).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([3,6,4,2,8,5,7,1],8)"}]
    <#lemma228>
    <#lemma229>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_23 queens:solve _:x_0_23} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma116> a r:Inference;
  r:gives {
    8 queens:solve (3 6 8 1 4 7 5 2).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([3,6,8,1,4,7,5,2],8)"}]
    <#lemma230>
    <#lemma231>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_24 queens:solve _:x_0_24} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma117> a r:Inference;
  r:gives {
    8 queens:solve (3 6 8 1 5 7 2 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([3,6,8,1,5,7,2,4],8)"}]
    <#lemma232>
    <#lemma233>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_25 queens:solve _:x_0_25} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma118> a r:Inference;
  r:gives {
    8 queens:solve (3 6 8 2 4 1 7 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([3,6,8,2,4,1,7,5],8)"}]
    <#lemma234>
    <#lemma235>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_26 queens:solve _:x_0_26} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma119> a r:Inference;
  r:gives {
    8 queens:solve (3 7 2 8 5 1 4 6).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([3,7,2,8,5,1,4,6],8)"}]
    <#lemma236>
    <#lemma237>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_27 queens:solve _:x_0_27} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma120> a r:Inference;
  r:gives {
    8 queens:solve (3 7 2 8 6 4 1 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([3,7,2,8,6,4,1,5],8)"}]
    <#lemma238>
    <#lemma239>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_28 queens:solve _:x_0_28} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma121> a r:Inference;
  r:gives {
    8 queens:solve (3 8 4 7 1 6 2 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([3,8,4,7,1,6,2,5],8)"}]
    <#lemma240>
    <#lemma241>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_29 queens:solve _:x_0_29} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma122> a r:Inference;
  r:gives {
    8 queens:solve (4 1 5 8 2 7 3 6).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,1,5,8,2,7,3,6],8)"}]
    <#lemma242>
    <#lemma243>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_30 queens:solve _:x_0_30} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma123> a r:Inference;
  r:gives {
    8 queens:solve (4 1 5 8 6 3 7 2).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,1,5,8,6,3,7,2],8)"}]
    <#lemma244>
    <#lemma245>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_31 queens:solve _:x_0_31} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma124> a r:Inference;
  r:gives {
    8 queens:solve (4 2 5 8 6 1 3 7).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,2,5,8,6,1,3,7],8)"}]
    <#lemma246>
    <#lemma247>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_32 queens:solve _:x_0_32} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma125> a r:Inference;
  r:gives {
    8 queens:solve (4 2 7 3 6 8 1 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,2,7,3,6,8,1,5],8)"}]
    <#lemma248>
    <#lemma249>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_33 queens:solve _:x_0_33} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma126> a r:Inference;
  r:gives {
    8 queens:solve (4 2 7 3 6 8 5 1).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,2,7,3,6,8,5,1],8)"}]
    <#lemma250>
    <#lemma251>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_34 queens:solve _:x_0_34} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma127> a r:Inference;
  r:gives {
    8 queens:solve (4 2 7 5 1 8 6 3).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,2,7,5,1,8,6,3],8)"}]
    <#lemma252>
    <#lemma253>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_35 queens:solve _:x_0_35} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma128> a r:Inference;
  r:gives {
    8 queens:solve (4 2 8 5 7 1 3 6).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,2,8,5,7,1,3,6],8)"}]
    <#lemma254>
    <#lemma255>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_36 queens:solve _:x_0_36} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma129> a r:Inference;
  r:gives {
    8 queens:solve (4 2 8 6 1 3 5 7).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,2,8,6,1,3,5,7],8)"}]
    <#lemma256>
    <#lemma257>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_37 queens:solve _:x_0_37} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma130> a r:Inference;
  r:gives {
    8 queens:solve (4 6 1 5 2 8 3 7).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,6,1,5,2,8,3,7],8)"}]
    <#lemma258>
    <#lemma259>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_38 queens:solve _:x_0_38} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma131> a r:Inference;
  r:gives {
    8 queens:solve (4 6 8 2 7 1 3 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,6,8,2,7,1,3,5],8)"}]
    <#lemma260>
    <#lemma261>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_39 queens:solve _:x_0_39} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma132> a r:Inference;
  r:gives {
    8 queens:solve (4 6 8 3 1 7 5 2).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,6,8,3,1,7,5,2],8)"}]
    <#lemma262>
    <#lemma263>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_40 queens:solve _:x_0_40} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma133> a r:Inference;
  r:gives {
    8 queens:solve (4 7 1 8 5 2 6 3).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,7,1,8,5,2,6,3],8)"}]
    <#lemma264>
    <#lemma265>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_41 queens:solve _:x_0_41} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma134> a r:Inference;
  r:gives {
    8 queens:solve (4 7 3 8 2 5 1 6).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,7,3,8,2,5,1,6],8)"}]
    <#lemma266>
    <#lemma267>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_42 queens:solve _:x_0_42} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma135> a r:Inference;
  r:gives {
    8 queens:solve (4 7 5 2 6 1 3 8).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,7,5,2,6,1,3,8],8)"}]
    <#lemma268>
    <#lemma269>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_43 queens:solve _:x_0_43} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma136> a r:Inference;
  r:gives {
    8 queens:solve (4 7 5 3 1 6 8 2).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,7,5,3,1,6,8,2],8)"}]
    <#lemma270>
    <#lemma271>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_44 queens:solve _:x_0_44} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma137> a r:Inference;
  r:gives {
    8 queens:solve (4 8 1 3 6 2 7 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,8,1,3,6,2,7,5],8)"}]
    <#lemma272>
    <#lemma273>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_45 queens:solve _:x_0_45} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma138> a r:Inference;
  r:gives {
    8 queens:solve (4 8 1 5 7 2 6 3).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,8,1,5,7,2,6,3],8)"}]
    <#lemma274>
    <#lemma275>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_46 queens:solve _:x_0_46} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma139> a r:Inference;
  r:gives {
    8 queens:solve (4 8 5 3 1 7 2 6).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([4,8,5,3,1,7,2,6],8)"}]
    <#lemma276>
    <#lemma277>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_47 queens:solve _:x_0_47} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma140> a r:Inference;
  r:gives {
    8 queens:solve (5 1 4 6 8 2 7 3).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,1,4,6,8,2,7,3],8)"}]
    <#lemma278>
    <#lemma279>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_48 queens:solve _:x_0_48} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma141> a r:Inference;
  r:gives {
    8 queens:solve (5 1 8 4 2 7 3 6).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,1,8,4,2,7,3,6],8)"}]
    <#lemma280>
    <#lemma281>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_49 queens:solve _:x_0_49} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma142> a r:Inference;
  r:gives {
    8 queens:solve (5 1 8 6 3 7 2 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,1,8,6,3,7,2,4],8)"}]
    <#lemma282>
    <#lemma283>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_50 queens:solve _:x_0_50} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma143> a r:Inference;
  r:gives {
    8 queens:solve (5 2 4 6 8 3 1 7).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,2,4,6,8,3,1,7],8)"}]
    <#lemma284>
    <#lemma285>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_51 queens:solve _:x_0_51} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma144> a r:Inference;
  r:gives {
    8 queens:solve (5 2 4 7 3 8 6 1).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,2,4,7,3,8,6,1],8)"}]
    <#lemma286>
    <#lemma287>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_52 queens:solve _:x_0_52} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma145> a r:Inference;
  r:gives {
    8 queens:solve (5 2 6 1 7 4 8 3).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,2,6,1,7,4,8,3],8)"}]
    <#lemma288>
    <#lemma289>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_53 queens:solve _:x_0_53} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma146> a r:Inference;
  r:gives {
    8 queens:solve (5 2 8 1 4 7 3 6).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,2,8,1,4,7,3,6],8)"}]
    <#lemma290>
    <#lemma291>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_54 queens:solve _:x_0_54} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma147> a r:Inference;
  r:gives {
    8 queens:solve (5 3 1 6 8 2 4 7).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,3,1,6,8,2,4,7],8)"}]
    <#lemma292>
    <#lemma293>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_55 queens:solve _:x_0_55} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma148> a r:Inference;
  r:gives {
    8 queens:solve (5 3 1 7 2 8 6 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,3,1,7,2,8,6,4],8)"}]
    <#lemma294>
    <#lemma295>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_56 queens:solve _:x_0_56} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma149> a r:Inference;
  r:gives {
    8 queens:solve (5 3 8 4 7 1 6 2).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,3,8,4,7,1,6,2],8)"}]
    <#lemma296>
    <#lemma297>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_57 queens:solve _:x_0_57} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma150> a r:Inference;
  r:gives {
    8 queens:solve (5 7 1 3 8 6 4 2).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,7,1,3,8,6,4,2],8)"}]
    <#lemma298>
    <#lemma299>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_58 queens:solve _:x_0_58} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma151> a r:Inference;
  r:gives {
    8 queens:solve (5 7 1 4 2 8 6 3).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,7,1,4,2,8,6,3],8)"}]
    <#lemma300>
    <#lemma301>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_59 queens:solve _:x_0_59} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma152> a r:Inference;
  r:gives {
    8 queens:solve (5 7 2 4 8 1 3 6).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,7,2,4,8,1,3,6],8)"}]
    <#lemma302>
    <#lemma303>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_60 queens:solve _:x_0_60} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma153> a r:Inference;
  r:gives {
    8 queens:solve (5 7 2 6 3 1 4 8).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,7,2,6,3,1,4,8],8)"}]
    <#lemma304>
    <#lemma305>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_61 queens:solve _:x_0_61} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma154> a r:Inference;
  r:gives {
    8 queens:solve (5 7 2 6 3 1 8 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,7,2,6,3,1,8,4],8)"}]
    <#lemma306>
    <#lemma307>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_62 queens:solve _:x_0_62} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma155> a r:Inference;
  r:gives {
    8 queens:solve (5 7 4 1 3 8 6 2).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,7,4,1,3,8,6,2],8)"}]
    <#lemma308>
    <#lemma309>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_63 queens:solve _:x_0_63} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma156> a r:Inference;
  r:gives {
    8 queens:solve (5 8 4 1 3 6 2 7).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,8,4,1,3,6,2,7],8)"}]
    <#lemma310>
    <#lemma311>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_64 queens:solve _:x_0_64} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma157> a r:Inference;
  r:gives {
    8 queens:solve (5 8 4 1 7 2 6 3).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([5,8,4,1,7,2,6,3],8)"}]
    <#lemma312>
    <#lemma313>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_65 queens:solve _:x_0_65} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma158> a r:Inference;
  r:gives {
    8 queens:solve (6 1 5 2 8 3 7 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([6,1,5,2,8,3,7,4],8)"}]
    <#lemma314>
    <#lemma315>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_66 queens:solve _:x_0_66} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma159> a r:Inference;
  r:gives {
    8 queens:solve (6 2 7 1 3 5 8 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([6,2,7,1,3,5,8,4],8)"}]
    <#lemma316>
    <#lemma317>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_67 queens:solve _:x_0_67} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma160> a r:Inference;
  r:gives {
    8 queens:solve (6 2 7 1 4 8 5 3).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([6,2,7,1,4,8,5,3],8)"}]
    <#lemma318>
    <#lemma319>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_68 queens:solve _:x_0_68} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma161> a r:Inference;
  r:gives {
    8 queens:solve (6 3 1 7 5 8 2 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([6,3,1,7,5,8,2,4],8)"}]
    <#lemma320>
    <#lemma321>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_69 queens:solve _:x_0_69} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma162> a r:Inference;
  r:gives {
    8 queens:solve (6 3 1 8 4 2 7 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([6,3,1,8,4,2,7,5],8)"}]
    <#lemma322>
    <#lemma323>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_70 queens:solve _:x_0_70} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma163> a r:Inference;
  r:gives {
    8 queens:solve (6 3 1 8 5 2 4 7).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([6,3,1,8,5,2,4,7],8)"}]
    <#lemma324>
    <#lemma325>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_71 queens:solve _:x_0_71} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma164> a r:Inference;
  r:gives {
    8 queens:solve (6 3 5 7 1 4 2 8).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([6,3,5,7,1,4,2,8],8)"}]
    <#lemma326>
    <#lemma327>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_72 queens:solve _:x_0_72} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma165> a r:Inference;
  r:gives {
    8 queens:solve (6 3 5 8 1 4 2 7).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([6,3,5,8,1,4,2,7],8)"}]
    <#lemma328>
    <#lemma329>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_73 queens:solve _:x_0_73} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma166> a r:Inference;
  r:gives {
    8 queens:solve (6 3 7 2 4 8 1 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([6,3,7,2,4,8,1,5],8)"}]
    <#lemma330>
    <#lemma331>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_74 queens:solve _:x_0_74} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma167> a r:Inference;
  r:gives {
    8 queens:solve (6 3 7 2 8 5 1 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([6,3,7,2,8,5,1,4],8)"}]
    <#lemma332>
    <#lemma333>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_75 queens:solve _:x_0_75} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma168> a r:Inference;
  r:gives {
    8 queens:solve (6 3 7 4 1 8 2 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([6,3,7,4,1,8,2,5],8)"}]
    <#lemma334>
    <#lemma335>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_76 queens:solve _:x_0_76} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma169> a r:Inference;
  r:gives {
    8 queens:solve (6 4 1 5 8 2 7 3).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([6,4,1,5,8,2,7,3],8)"}]
    <#lemma336>
    <#lemma337>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_77 queens:solve _:x_0_77} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma170> a r:Inference;
  r:gives {
    8 queens:solve (6 4 2 8 5 7 1 3).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([6,4,2,8,5,7,1,3],8)"}]
    <#lemma338>
    <#lemma339>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_78 queens:solve _:x_0_78} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma171> a r:Inference;
  r:gives {
    8 queens:solve (6 4 7 1 3 5 2 8).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([6,4,7,1,3,5,2,8],8)"}]
    <#lemma340>
    <#lemma341>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_79 queens:solve _:x_0_79} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma172> a r:Inference;
  r:gives {
    8 queens:solve (6 4 7 1 8 2 5 3).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([6,4,7,1,8,2,5,3],8)"}]
    <#lemma342>
    <#lemma343>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_80 queens:solve _:x_0_80} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma173> a r:Inference;
  r:gives {
    8 queens:solve (6 8 2 4 1 7 5 3).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([6,8,2,4,1,7,5,3],8)"}]
    <#lemma344>
    <#lemma345>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_81 queens:solve _:x_0_81} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma174> a r:Inference;
  r:gives {
    8 queens:solve (7 1 3 8 6 4 2 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([7,1,3,8,6,4,2,5],8)"}]
    <#lemma346>
    <#lemma347>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_82 queens:solve _:x_0_82} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma175> a r:Inference;
  r:gives {
    8 queens:solve (7 2 4 1 8 5 3 6).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([7,2,4,1,8,5,3,6],8)"}]
    <#lemma348>
    <#lemma349>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_83 queens:solve _:x_0_83} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma176> a r:Inference;
  r:gives {
    8 queens:solve (7 2 6 3 1 4 8 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([7,2,6,3,1,4,8,5],8)"}]
    <#lemma350>
    <#lemma351>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_84 queens:solve _:x_0_84} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma177> a r:Inference;
  r:gives {
    8 queens:solve (7 3 1 6 8 5 2 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([7,3,1,6,8,5,2,4],8)"}]
    <#lemma352>
    <#lemma353>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_85 queens:solve _:x_0_85} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma178> a r:Inference;
  r:gives {
    8 queens:solve (7 3 8 2 5 1 6 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([7,3,8,2,5,1,6,4],8)"}]
    <#lemma354>
    <#lemma355>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_86 queens:solve _:x_0_86} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma179> a r:Inference;
  r:gives {
    8 queens:solve (7 4 2 5 8 1 3 6).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([7,4,2,5,8,1,3,6],8)"}]
    <#lemma356>
    <#lemma357>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_87 queens:solve _:x_0_87} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma180> a r:Inference;
  r:gives {
    8 queens:solve (7 4 2 8 6 1 3 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([7,4,2,8,6,1,3,5],8)"}]
    <#lemma358>
    <#lemma359>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_88 queens:solve _:x_0_88} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma181> a r:Inference;
  r:gives {
    8 queens:solve (7 5 3 1 6 8 2 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([7,5,3,1,6,8,2,4],8)"}]
    <#lemma360>
    <#lemma361>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_89 queens:solve _:x_0_89} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma182> a r:Inference;
  r:gives {
    8 queens:solve (8 2 4 1 7 5 3 6).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([8,2,4,1,7,5,3,6],8)"}]
    <#lemma362>
    <#lemma363>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_90 queens:solve _:x_0_90} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma183> a r:Inference;
  r:gives {
    8 queens:solve (8 2 5 3 1 7 4 6).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([8,2,5,3,1,7,4,6],8)"}]
    <#lemma364>
    <#lemma365>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_91 queens:solve _:x_0_91} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma184> a r:Inference;
  r:gives {
    8 queens:solve (8 3 1 6 2 5 7 4).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([8,3,1,6,2,5,7,4],8)"}]
    <#lemma366>
    <#lemma367>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_92 queens:solve _:x_0_92} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma185> a r:Inference;
  r:gives {
    8 queens:solve (8 4 1 3 6 2 7 5).
  };
  r:evidence (
    [ a r:Fact; r:gives {"length([8,4,1,3,6,2,7,5],8)"}]
    <#lemma368>
    <#lemma369>
  );
  r:rule [ a r:Fact; r:gives {{_:x_1_93 queens:solve _:x_0_93} <= {"length(avar0,avar1)".
    "board(avar0,avar2,0,avar1,avar3,avar4)".
    "queens(avar2,0,avar0)"}}].

<#lemma186> a r:Inference;
  r:gives {
    "board([1,5,8,6,3,7,2,4],[1-f(1-1,some0-some1,5-some2,some3-some4,8-some5,7-2,some6-5,some7-7),2-f(6-some1,1-some2,some0-some4,5-some5,some3-2,8-5,7-7,some6-4),3-f(4-some2,6-some4,1-some5,some0-2,5-5,some3-7,8-4,7-3),4-f(2-some4,4-some5,6-2,1-5,some0-7,5-4,some3-3,8-8),5-f(some8-some5,2-2,4-5,6-7,1-4,some0-3,5-8,some3-6),6-f(3-2,some8-5,2-7,4-4,6-3,1-8,some0-6,5-some9),7-f(some10-5,3-7,some8-4,2-3,4-8,6-6,1-some9,some0-some11),8-f(some12-7,some10-4,3-3,some8-8,2-6,4-some9,6-some11,1-some13)],0,8,[some14,some7,some6,7,8,some3,5,some0,1,6,4,2,some8,3,some10,some12|some15],[7,5,2,some5,some4,some2,some1,1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_94 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_94.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma187> a r:Inference;
  r:gives {
    "queens([1-f(1-1,some0-some1,5-some2,some3-some4,8-some5,7-2,some6-5,some7-7),2-f(6-some1,1-some2,some0-some4,5-some5,some3-2,8-5,7-7,some6-4),3-f(4-some2,6-some4,1-some5,some0-2,5-5,some3-7,8-4,7-3),4-f(2-some4,4-some5,6-2,1-5,some0-7,5-4,some3-3,8-8),5-f(some8-some5,2-2,4-5,6-7,1-4,some0-3,5-8,some3-6),6-f(3-2,some8-5,2-7,4-4,6-3,1-8,some0-6,5-some9),7-f(some10-5,3-7,some8-4,2-3,4-8,6-6,1-some9,some0-some11),8-f(some12-7,some10-4,3-3,some8-8,2-6,4-some9,6-some11,1-some13)],0,[1,5,8,6,3,7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(1-f(1-1,some0-some1,5-some2,some3-some4,8-some5,7-2,some6-5,some7-7),[1-f(1-1,some0-some1,5-some2,some3-some4,8-some5,7-2,some6-5,some7-7),2-f(6-some1,1-some2,some0-some4,5-some5,some3-2,8-5,7-7,some6-4),3-f(4-some2,6-some4,1-some5,some0-2,5-5,some3-7,8-4,7-3),4-f(2-some4,4-some5,6-2,1-5,some0-7,5-4,some3-3,8-8),5-f(some8-some5,2-2,4-5,6-7,1-4,some0-3,5-8,some3-6),6-f(3-2,some8-5,2-7,4-4,6-3,1-8,some0-6,5-some9),7-f(some10-5,3-7,some8-4,2-3,4-8,6-6,1-some9,some0-some11),8-f(some12-7,some10-4,3-3,some8-8,2-6,4-some9,6-some11,1-some13)],[2-f(6-some1,1-some2,some0-some4,5-some5,some3-2,8-5,7-7,some6-4),3-f(4-some2,6-some4,1-some5,some0-2,5-5,some3-7,8-4,7-3),4-f(2-some4,4-some5,6-2,1-5,some0-7,5-4,some3-3,8-8),5-f(some8-some5,2-2,4-5,6-7,1-4,some0-3,5-8,some3-6),6-f(3-2,some8-5,2-7,4-4,6-3,1-8,some0-6,5-some9),7-f(some10-5,3-7,some8-4,2-3,4-8,6-6,1-some9,some0-some11),8-f(some12-7,some10-4,3-3,some8-8,2-6,4-some9,6-some11,1-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-some1,5-some2,some3-some4,8-some5,7-2,some6-5,some7-7),1-1)"}]
    <#lemma372>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_95 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_95.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma188> a r:Inference;
  r:gives {
    "board([1,6,8,3,7,4,2,5],[1-f(1-1,4-some0,6-some1,8-some2,some3-some4,7-4,some5-2,some6-7),2-f(some7-some0,1-some1,4-some2,6-some4,8-4,some3-2,7-7,some5-6),3-f(5-some1,some7-some2,1-some4,4-4,6-2,8-7,some3-6,7-3),4-f(some8-some2,5-some4,some7-4,1-2,4-7,6-6,8-3,some3-5),5-f(2-some4,some8-4,5-2,some7-7,1-6,4-3,6-5,8-8),6-f(3-4,2-2,some8-7,5-6,some7-3,1-5,4-8,6-some9),7-f(some10-2,3-7,2-6,some8-3,5-5,some7-8,1-some9,4-some11),8-f(some12-7,some10-6,3-3,2-5,some8-8,5-some9,some7-some11,1-some13)],0,8,[some14,some6,some5,7,some3,8,6,4,1,some7,5,some8,2,3,some10,some12|some15],[7,2,4,some4,some2,some1,some0,1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_96 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_96.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma189> a r:Inference;
  r:gives {
    "queens([1-f(1-1,4-some0,6-some1,8-some2,some3-some4,7-4,some5-2,some6-7),2-f(some7-some0,1-some1,4-some2,6-some4,8-4,some3-2,7-7,some5-6),3-f(5-some1,some7-some2,1-some4,4-4,6-2,8-7,some3-6,7-3),4-f(some8-some2,5-some4,some7-4,1-2,4-7,6-6,8-3,some3-5),5-f(2-some4,some8-4,5-2,some7-7,1-6,4-3,6-5,8-8),6-f(3-4,2-2,some8-7,5-6,some7-3,1-5,4-8,6-some9),7-f(some10-2,3-7,2-6,some8-3,5-5,some7-8,1-some9,4-some11),8-f(some12-7,some10-6,3-3,2-5,some8-8,5-some9,some7-some11,1-some13)],0,[1,6,8,3,7,4,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(1-f(1-1,4-some0,6-some1,8-some2,some3-some4,7-4,some5-2,some6-7),[1-f(1-1,4-some0,6-some1,8-some2,some3-some4,7-4,some5-2,some6-7),2-f(some7-some0,1-some1,4-some2,6-some4,8-4,some3-2,7-7,some5-6),3-f(5-some1,some7-some2,1-some4,4-4,6-2,8-7,some3-6,7-3),4-f(some8-some2,5-some4,some7-4,1-2,4-7,6-6,8-3,some3-5),5-f(2-some4,some8-4,5-2,some7-7,1-6,4-3,6-5,8-8),6-f(3-4,2-2,some8-7,5-6,some7-3,1-5,4-8,6-some9),7-f(some10-2,3-7,2-6,some8-3,5-5,some7-8,1-some9,4-some11),8-f(some12-7,some10-6,3-3,2-5,some8-8,5-some9,some7-some11,1-some13)],[2-f(some7-some0,1-some1,4-some2,6-some4,8-4,some3-2,7-7,some5-6),3-f(5-some1,some7-some2,1-some4,4-4,6-2,8-7,some3-6,7-3),4-f(some8-some2,5-some4,some7-4,1-2,4-7,6-6,8-3,some3-5),5-f(2-some4,some8-4,5-2,some7-7,1-6,4-3,6-5,8-8),6-f(3-4,2-2,some8-7,5-6,some7-3,1-5,4-8,6-some9),7-f(some10-2,3-7,2-6,some8-3,5-5,some7-8,1-some9,4-some11),8-f(some12-7,some10-6,3-3,2-5,some8-8,5-some9,some7-some11,1-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,4-some0,6-some1,8-some2,some3-some4,7-4,some5-2,some6-7),1-1)"}]
    <#lemma373>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_97 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_97.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma190> a r:Inference;
  r:gives {
    "board([1,7,4,6,8,2,5,3],[1-f(1-1,some0-some1,7-some2,some3-some4,6-some5,8-3,some6-6,some7-2),2-f(3-some1,1-some2,some0-some4,7-some5,some3-3,6-6,8-2,some6-4),3-f(4-some2,3-some4,1-some5,some0-3,7-6,some3-2,6-4,8-8),4-f(5-some4,4-some5,3-3,1-6,some0-2,7-4,some3-8,6-7),5-f(some8-some5,5-3,4-6,3-2,1-4,some0-8,7-7,some3-5),6-f(2-3,some8-6,5-2,4-4,3-8,1-7,some0-5,7-some9),7-f(some10-6,2-2,some8-4,5-8,4-7,3-5,1-some9,some0-some11),8-f(some12-2,some10-4,2-8,some8-7,5-5,4-some9,3-some11,1-some13)],0,8,[some14,some7,some6,8,6,some3,7,some0,1,3,4,5,some8,2,some10,some12|some15],[2,6,3,some5,some4,some2,some1,1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_98 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_98.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma191> a r:Inference;
  r:gives {
    "queens([1-f(1-1,some0-some1,7-some2,some3-some4,6-some5,8-3,some6-6,some7-2),2-f(3-some1,1-some2,some0-some4,7-some5,some3-3,6-6,8-2,some6-4),3-f(4-some2,3-some4,1-some5,some0-3,7-6,some3-2,6-4,8-8),4-f(5-some4,4-some5,3-3,1-6,some0-2,7-4,some3-8,6-7),5-f(some8-some5,5-3,4-6,3-2,1-4,some0-8,7-7,some3-5),6-f(2-3,some8-6,5-2,4-4,3-8,1-7,some0-5,7-some9),7-f(some10-6,2-2,some8-4,5-8,4-7,3-5,1-some9,some0-some11),8-f(some12-2,some10-4,2-8,some8-7,5-5,4-some9,3-some11,1-some13)],0,[1,7,4,6,8,2,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(1-f(1-1,some0-some1,7-some2,some3-some4,6-some5,8-3,some6-6,some7-2),[1-f(1-1,some0-some1,7-some2,some3-some4,6-some5,8-3,some6-6,some7-2),2-f(3-some1,1-some2,some0-some4,7-some5,some3-3,6-6,8-2,some6-4),3-f(4-some2,3-some4,1-some5,some0-3,7-6,some3-2,6-4,8-8),4-f(5-some4,4-some5,3-3,1-6,some0-2,7-4,some3-8,6-7),5-f(some8-some5,5-3,4-6,3-2,1-4,some0-8,7-7,some3-5),6-f(2-3,some8-6,5-2,4-4,3-8,1-7,some0-5,7-some9),7-f(some10-6,2-2,some8-4,5-8,4-7,3-5,1-some9,some0-some11),8-f(some12-2,some10-4,2-8,some8-7,5-5,4-some9,3-some11,1-some13)],[2-f(3-some1,1-some2,some0-some4,7-some5,some3-3,6-6,8-2,some6-4),3-f(4-some2,3-some4,1-some5,some0-3,7-6,some3-2,6-4,8-8),4-f(5-some4,4-some5,3-3,1-6,some0-2,7-4,some3-8,6-7),5-f(some8-some5,5-3,4-6,3-2,1-4,some0-8,7-7,some3-5),6-f(2-3,some8-6,5-2,4-4,3-8,1-7,some0-5,7-some9),7-f(some10-6,2-2,some8-4,5-8,4-7,3-5,1-some9,some0-some11),8-f(some12-2,some10-4,2-8,some8-7,5-5,4-some9,3-some11,1-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-some1,7-some2,some3-some4,6-some5,8-3,some6-6,some7-2),1-1)"}]
    <#lemma374>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_99 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_99.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma192> a r:Inference;
  r:gives {
    "board([1,7,5,8,2,4,6,3],[1-f(1-1,7-some0,6-some1,5-some2,some3-some4,8-5,some5-3,some6-2),2-f(some7-some0,1-some1,7-some2,6-some4,5-5,some3-3,8-2,some5-6),3-f(3-some1,some7-some2,1-some4,7-5,6-3,5-2,some3-6,8-8),4-f(some8-some2,3-some4,some7-5,1-3,7-2,6-6,5-8,some3-4),5-f(4-some4,some8-5,3-3,some7-2,1-6,7-8,6-4,5-7),6-f(2-5,4-3,some8-2,3-6,some7-8,1-4,7-7,6-some9),7-f(some10-3,2-2,4-6,some8-8,3-4,some7-7,1-some9,7-some11),8-f(some12-2,some10-6,2-8,4-4,some8-7,3-some9,some7-some11,1-some13)],0,8,[some14,some6,some5,8,some3,5,6,7,1,some7,3,some8,4,2,some10,some12|some15],[2,3,5,some4,some2,some1,some0,1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_100 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_100.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma193> a r:Inference;
  r:gives {
    "queens([1-f(1-1,7-some0,6-some1,5-some2,some3-some4,8-5,some5-3,some6-2),2-f(some7-some0,1-some1,7-some2,6-some4,5-5,some3-3,8-2,some5-6),3-f(3-some1,some7-some2,1-some4,7-5,6-3,5-2,some3-6,8-8),4-f(some8-some2,3-some4,some7-5,1-3,7-2,6-6,5-8,some3-4),5-f(4-some4,some8-5,3-3,some7-2,1-6,7-8,6-4,5-7),6-f(2-5,4-3,some8-2,3-6,some7-8,1-4,7-7,6-some9),7-f(some10-3,2-2,4-6,some8-8,3-4,some7-7,1-some9,7-some11),8-f(some12-2,some10-6,2-8,4-4,some8-7,3-some9,some7-some11,1-some13)],0,[1,7,5,8,2,4,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(1-f(1-1,7-some0,6-some1,5-some2,some3-some4,8-5,some5-3,some6-2),[1-f(1-1,7-some0,6-some1,5-some2,some3-some4,8-5,some5-3,some6-2),2-f(some7-some0,1-some1,7-some2,6-some4,5-5,some3-3,8-2,some5-6),3-f(3-some1,some7-some2,1-some4,7-5,6-3,5-2,some3-6,8-8),4-f(some8-some2,3-some4,some7-5,1-3,7-2,6-6,5-8,some3-4),5-f(4-some4,some8-5,3-3,some7-2,1-6,7-8,6-4,5-7),6-f(2-5,4-3,some8-2,3-6,some7-8,1-4,7-7,6-some9),7-f(some10-3,2-2,4-6,some8-8,3-4,some7-7,1-some9,7-some11),8-f(some12-2,some10-6,2-8,4-4,some8-7,3-some9,some7-some11,1-some13)],[2-f(some7-some0,1-some1,7-some2,6-some4,5-5,some3-3,8-2,some5-6),3-f(3-some1,some7-some2,1-some4,7-5,6-3,5-2,some3-6,8-8),4-f(some8-some2,3-some4,some7-5,1-3,7-2,6-6,5-8,some3-4),5-f(4-some4,some8-5,3-3,some7-2,1-6,7-8,6-4,5-7),6-f(2-5,4-3,some8-2,3-6,some7-8,1-4,7-7,6-some9),7-f(some10-3,2-2,4-6,some8-8,3-4,some7-7,1-some9,7-some11),8-f(some12-2,some10-6,2-8,4-4,some8-7,3-some9,some7-some11,1-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,7-some0,6-some1,5-some2,some3-some4,8-5,some5-3,some6-2),1-1)"}]
    <#lemma375>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_101 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_101.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma194> a r:Inference;
  r:gives {
    "board([2,4,6,8,3,1,7,5],[1-f(7-some0,some1-1,5-some2,8-some3,some4-2,6-6,some5-5,some6-3),2-f(1-1,7-some2,some1-some3,5-2,8-6,some4-5,6-3,some5-some7),3-f(2-some2,1-some3,7-2,some1-6,5-5,8-3,some4-some7,6-some8),4-f(3-some3,2-2,1-6,7-5,some1-3,5-some7,8-some8,some4-4),5-f(4-2,3-6,2-5,1-3,7-some7,some1-some8,5-4,8-8),6-f(some9-6,4-5,3-3,2-some7,1-some8,7-4,some1-8,5-7),7-f(some10-5,some9-3,4-some7,3-some8,2-4,1-8,7-7,some1-some11),8-f(some12-3,some10-some7,some9-some8,4-4,3-8,2-7,1-some11,7-some13)],0,8,[some14,some6,some5,6,some4,8,5,some1,7,1,2,3,4,some9,some10,some12|some15],[3,5,6,2,some3,some2,1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_102 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_102.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma195> a r:Inference;
  r:gives {
    "queens([1-f(7-some0,some1-1,5-some2,8-some3,some4-2,6-6,some5-5,some6-3),2-f(1-1,7-some2,some1-some3,5-2,8-6,some4-5,6-3,some5-some7),3-f(2-some2,1-some3,7-2,some1-6,5-5,8-3,some4-some7,6-some8),4-f(3-some3,2-2,1-6,7-5,some1-3,5-some7,8-some8,some4-4),5-f(4-2,3-6,2-5,1-3,7-some7,some1-some8,5-4,8-8),6-f(some9-6,4-5,3-3,2-some7,1-some8,7-4,some1-8,5-7),7-f(some10-5,some9-3,4-some7,3-some8,2-4,1-8,7-7,some1-some11),8-f(some12-3,some10-some7,some9-some8,4-4,3-8,2-7,1-some11,7-some13)],0,[2,4,6,8,3,1,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(2-f(1-1,7-some0,some1-some2,5-2,8-6,some3-5,6-3,some4-some5),[1-f(7-some6,some1-1,5-some0,8-some2,some3-2,6-6,some4-5,some7-3),2-f(1-1,7-some0,some1-some2,5-2,8-6,some3-5,6-3,some4-some5),3-f(2-some0,1-some2,7-2,some1-6,5-5,8-3,some3-some5,6-some8),4-f(3-some2,2-2,1-6,7-5,some1-3,5-some5,8-some8,some3-4),5-f(4-2,3-6,2-5,1-3,7-some5,some1-some8,5-4,8-8),6-f(some9-6,4-5,3-3,2-some5,1-some8,7-4,some1-8,5-7),7-f(some10-5,some9-3,4-some5,3-some8,2-4,1-8,7-7,some1-some11),8-f(some12-3,some10-some5,some9-some8,4-4,3-8,2-7,1-some11,7-some13)],[1-f(7-some6,some1-1,5-some0,8-some2,some3-2,6-6,some4-5,some7-3),3-f(2-some0,1-some2,7-2,some1-6,5-5,8-3,some3-some5,6-some8),4-f(3-some2,2-2,1-6,7-5,some1-3,5-some5,8-some8,some3-4),5-f(4-2,3-6,2-5,1-3,7-some5,some1-some8,5-4,8-8),6-f(some9-6,4-5,3-3,2-some5,1-some8,7-4,some1-8,5-7),7-f(some10-5,some9-3,4-some5,3-some8,2-4,1-8,7-7,some1-some11),8-f(some12-3,some10-some5,some9-some8,4-4,3-8,2-7,1-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,7-some0,some1-some2,5-2,8-6,some3-5,6-3,some4-some5),1-1)"}]
    <#lemma376>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_103 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_103.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma196> a r:Inference;
  r:gives {
    "board([2,5,7,1,3,8,6,4],[1-f(some0-some1,7-1,5-some2,4-4,8-some3,some4-2,some5-5,some6-some7),2-f(1-1,some0-some2,7-4,5-some3,4-2,8-5,some4-some7,some5-3),3-f(6-some2,1-4,some0-some3,7-2,5-5,4-some7,8-3,some4-some8),4-f(2-4,6-some3,1-2,some0-5,7-some7,5-3,4-some8,8-8),5-f(3-some3,2-2,6-5,1-some7,some0-3,7-some8,5-8,4-7),6-f(some9-2,3-5,2-some7,6-3,1-some8,some0-8,7-7,5-6),7-f(some10-5,some9-some7,3-3,2-some8,6-8,1-7,some0-6,7-some11),8-f(some12-some7,some10-3,some9-some8,3-8,2-7,6-6,1-some11,some0-some13)],0,8,[some14,some6,some5,some4,8,4,5,7,some0,1,6,2,3,some9,some10,some12|some15],[some7,5,2,some3,4,some2,1,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_104 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_104.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma197> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,7-1,5-some2,4-4,8-some3,some4-2,some5-5,some6-some7),2-f(1-1,some0-some2,7-4,5-some3,4-2,8-5,some4-some7,some5-3),3-f(6-some2,1-4,some0-some3,7-2,5-5,4-some7,8-3,some4-some8),4-f(2-4,6-some3,1-2,some0-5,7-some7,5-3,4-some8,8-8),5-f(3-some3,2-2,6-5,1-some7,some0-3,7-some8,5-8,4-7),6-f(some9-2,3-5,2-some7,6-3,1-some8,some0-8,7-7,5-6),7-f(some10-5,some9-some7,3-3,2-some8,6-8,1-7,some0-6,7-some11),8-f(some12-some7,some10-3,some9-some8,3-8,2-7,6-6,1-some11,some0-some13)],0,[2,5,7,1,3,8,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(2-f(1-1,some0-some1,7-4,5-some2,4-2,8-5,some3-some4,some5-3),[1-f(some0-some6,7-1,5-some1,4-4,8-some2,some3-2,some5-5,some7-some4),2-f(1-1,some0-some1,7-4,5-some2,4-2,8-5,some3-some4,some5-3),3-f(6-some1,1-4,some0-some2,7-2,5-5,4-some4,8-3,some3-some8),4-f(2-4,6-some2,1-2,some0-5,7-some4,5-3,4-some8,8-8),5-f(3-some2,2-2,6-5,1-some4,some0-3,7-some8,5-8,4-7),6-f(some9-2,3-5,2-some4,6-3,1-some8,some0-8,7-7,5-6),7-f(some10-5,some9-some4,3-3,2-some8,6-8,1-7,some0-6,7-some11),8-f(some12-some4,some10-3,some9-some8,3-8,2-7,6-6,1-some11,some0-some13)],[1-f(some0-some6,7-1,5-some1,4-4,8-some2,some3-2,some5-5,some7-some4),3-f(6-some1,1-4,some0-some2,7-2,5-5,4-some4,8-3,some3-some8),4-f(2-4,6-some2,1-2,some0-5,7-some4,5-3,4-some8,8-8),5-f(3-some2,2-2,6-5,1-some4,some0-3,7-some8,5-8,4-7),6-f(some9-2,3-5,2-some4,6-3,1-some8,some0-8,7-7,5-6),7-f(some10-5,some9-some4,3-3,2-some8,6-8,1-7,some0-6,7-some11),8-f(some12-some4,some10-3,some9-some8,3-8,2-7,6-6,1-some11,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-some1,7-4,5-some2,4-2,8-5,some3-some4,some5-3),1-1)"}]
    <#lemma377>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_105 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_105.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma198> a r:Inference;
  r:gives {
    "board([2,5,7,4,1,8,6,3],[1-f(4-some0,7-1,some1-some2,some3-some4,5-5,8-2,some5-4,some6-some7),2-f(1-1,4-some2,7-some4,some1-5,some3-2,5-4,8-some7,some5-3),3-f(6-some2,1-some4,4-5,7-2,some1-4,some3-some7,5-3,8-8),4-f(2-some4,6-5,1-2,4-4,7-some7,some1-3,some3-8,5-some8),5-f(3-5,2-2,6-4,1-some7,4-3,7-8,some1-some8,some3-7),6-f(some9-2,3-4,2-some7,6-3,1-8,4-some8,7-7,some1-6),7-f(some10-4,some9-some7,3-3,2-8,6-some8,1-7,4-6,7-some11),8-f(some12-some7,some10-3,some9-8,3-some8,2-7,6-6,1-some11,4-some13)],0,8,[some14,some6,some5,8,5,some3,some1,7,4,1,6,2,3,some9,some10,some12|some15],[some7,4,2,5,some4,some2,1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_106 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_106.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma199> a r:Inference;
  r:gives {
    "queens([1-f(4-some0,7-1,some1-some2,some3-some4,5-5,8-2,some5-4,some6-some7),2-f(1-1,4-some2,7-some4,some1-5,some3-2,5-4,8-some7,some5-3),3-f(6-some2,1-some4,4-5,7-2,some1-4,some3-some7,5-3,8-8),4-f(2-some4,6-5,1-2,4-4,7-some7,some1-3,some3-8,5-some8),5-f(3-5,2-2,6-4,1-some7,4-3,7-8,some1-some8,some3-7),6-f(some9-2,3-4,2-some7,6-3,1-8,4-some8,7-7,some1-6),7-f(some10-4,some9-some7,3-3,2-8,6-some8,1-7,4-6,7-some11),8-f(some12-some7,some10-3,some9-8,3-some8,2-7,6-6,1-some11,4-some13)],0,[2,5,7,4,1,8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(2-f(1-1,4-some0,7-some1,some2-5,some3-2,5-4,8-some4,some5-3),[1-f(4-some6,7-1,some2-some0,some3-some1,5-5,8-2,some5-4,some7-some4),2-f(1-1,4-some0,7-some1,some2-5,some3-2,5-4,8-some4,some5-3),3-f(6-some0,1-some1,4-5,7-2,some2-4,some3-some4,5-3,8-8),4-f(2-some1,6-5,1-2,4-4,7-some4,some2-3,some3-8,5-some8),5-f(3-5,2-2,6-4,1-some4,4-3,7-8,some2-some8,some3-7),6-f(some9-2,3-4,2-some4,6-3,1-8,4-some8,7-7,some2-6),7-f(some10-4,some9-some4,3-3,2-8,6-some8,1-7,4-6,7-some11),8-f(some12-some4,some10-3,some9-8,3-some8,2-7,6-6,1-some11,4-some13)],[1-f(4-some6,7-1,some2-some0,some3-some1,5-5,8-2,some5-4,some7-some4),3-f(6-some0,1-some1,4-5,7-2,some2-4,some3-some4,5-3,8-8),4-f(2-some1,6-5,1-2,4-4,7-some4,some2-3,some3-8,5-some8),5-f(3-5,2-2,6-4,1-some4,4-3,7-8,some2-some8,some3-7),6-f(some9-2,3-4,2-some4,6-3,1-8,4-some8,7-7,some2-6),7-f(some10-4,some9-some4,3-3,2-8,6-some8,1-7,4-6,7-some11),8-f(some12-some4,some10-3,some9-8,3-some8,2-7,6-6,1-some11,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,4-some0,7-some1,some2-5,some3-2,5-4,8-some4,some5-3),1-1)"}]
    <#lemma378>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_107 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_107.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma200> a r:Inference;
  r:gives {
    "board([2,6,1,7,4,8,3,5],[1-f(some0-some1,5-1,3-3,8-some2,7-some3,some4-some5,some6-2,some7-5),2-f(1-1,some0-3,5-some2,3-some3,8-some5,7-2,some4-5,some6-7),3-f(6-3,1-some2,some0-some3,5-some5,3-2,8-5,7-7,some4-4),4-f(4-some2,6-some3,1-some5,some0-2,5-5,3-7,8-4,7-some8),5-f(2-some3,4-some5,6-2,1-5,some0-7,5-4,3-some8,8-8),6-f(some9-some5,2-2,4-5,6-7,1-4,some0-some8,5-8,3-6),7-f(some10-2,some9-5,2-7,4-4,6-some8,1-8,some0-6,5-some11),8-f(some12-5,some10-7,some9-4,2-some8,4-8,6-6,1-some11,some0-some13)],0,8,[some14,some7,some6,some4,7,8,3,5,some0,1,6,4,2,some9,some10,some12|some15],[5,2,some5,some3,some2,3,1,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_108 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_108.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma201> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,5-1,3-3,8-some2,7-some3,some4-some5,some6-2,some7-5),2-f(1-1,some0-3,5-some2,3-some3,8-some5,7-2,some4-5,some6-7),3-f(6-3,1-some2,some0-some3,5-some5,3-2,8-5,7-7,some4-4),4-f(4-some2,6-some3,1-some5,some0-2,5-5,3-7,8-4,7-some8),5-f(2-some3,4-some5,6-2,1-5,some0-7,5-4,3-some8,8-8),6-f(some9-some5,2-2,4-5,6-7,1-4,some0-some8,5-8,3-6),7-f(some10-2,some9-5,2-7,4-4,6-some8,1-8,some0-6,5-some11),8-f(some12-5,some10-7,some9-4,2-some8,4-8,6-6,1-some11,some0-some13)],0,[2,6,1,7,4,8,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(2-f(1-1,some0-3,5-some1,3-some2,8-some3,7-2,some4-5,some5-7),[1-f(some0-some6,5-1,3-3,8-some1,7-some2,some4-some3,some5-2,some7-5),2-f(1-1,some0-3,5-some1,3-some2,8-some3,7-2,some4-5,some5-7),3-f(6-3,1-some1,some0-some2,5-some3,3-2,8-5,7-7,some4-4),4-f(4-some1,6-some2,1-some3,some0-2,5-5,3-7,8-4,7-some8),5-f(2-some2,4-some3,6-2,1-5,some0-7,5-4,3-some8,8-8),6-f(some9-some3,2-2,4-5,6-7,1-4,some0-some8,5-8,3-6),7-f(some10-2,some9-5,2-7,4-4,6-some8,1-8,some0-6,5-some11),8-f(some12-5,some10-7,some9-4,2-some8,4-8,6-6,1-some11,some0-some13)],[1-f(some0-some6,5-1,3-3,8-some1,7-some2,some4-some3,some5-2,some7-5),3-f(6-3,1-some1,some0-some2,5-some3,3-2,8-5,7-7,some4-4),4-f(4-some1,6-some2,1-some3,some0-2,5-5,3-7,8-4,7-some8),5-f(2-some2,4-some3,6-2,1-5,some0-7,5-4,3-some8,8-8),6-f(some9-some3,2-2,4-5,6-7,1-4,some0-some8,5-8,3-6),7-f(some10-2,some9-5,2-7,4-4,6-some8,1-8,some0-6,5-some11),8-f(some12-5,some10-7,some9-4,2-some8,4-8,6-6,1-some11,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-3,5-some1,3-some2,8-some3,7-2,some4-5,some5-7),1-1)"}]
    <#lemma379>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_109 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_109.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma202> a r:Inference;
  r:gives {
    "board([2,6,8,3,1,4,7,5],[1-f(7-some0,4-1,6-some1,8-some2,5-5,some3-4,some4-2,some5-some6),2-f(1-1,7-some1,4-some2,6-5,8-4,5-2,some3-some6,some4-6),3-f(some7-some1,1-some2,7-5,4-4,6-2,8-some6,5-6,some3-3),4-f(some8-some2,some7-5,1-4,7-2,4-some6,6-6,8-3,5-some9),5-f(2-5,some8-4,some7-2,1-some6,7-6,4-3,6-some9,8-8),6-f(3-4,2-2,some8-some6,some7-6,1-3,7-some9,4-8,6-7),7-f(some10-2,3-some6,2-6,some8-3,some7-some9,1-8,7-7,4-some11),8-f(some12-some6,some10-6,3-3,2-some9,some8-8,some7-7,1-some11,7-some13)],0,8,[some14,some5,some4,some3,5,8,6,4,7,1,some7,some8,2,3,some10,some12|some15],[some6,2,4,5,some2,some1,1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_110 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_110.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma203> a r:Inference;
  r:gives {
    "queens([1-f(7-some0,4-1,6-some1,8-some2,5-5,some3-4,some4-2,some5-some6),2-f(1-1,7-some1,4-some2,6-5,8-4,5-2,some3-some6,some4-6),3-f(some7-some1,1-some2,7-5,4-4,6-2,8-some6,5-6,some3-3),4-f(some8-some2,some7-5,1-4,7-2,4-some6,6-6,8-3,5-some9),5-f(2-5,some8-4,some7-2,1-some6,7-6,4-3,6-some9,8-8),6-f(3-4,2-2,some8-some6,some7-6,1-3,7-some9,4-8,6-7),7-f(some10-2,3-some6,2-6,some8-3,some7-some9,1-8,7-7,4-some11),8-f(some12-some6,some10-6,3-3,2-some9,some8-8,some7-7,1-some11,7-some13)],0,[2,6,8,3,1,4,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(2-f(1-1,7-some0,4-some1,6-5,8-4,5-2,some2-some3,some4-6),[1-f(7-some5,4-1,6-some0,8-some1,5-5,some2-4,some4-2,some6-some3),2-f(1-1,7-some0,4-some1,6-5,8-4,5-2,some2-some3,some4-6),3-f(some7-some0,1-some1,7-5,4-4,6-2,8-some3,5-6,some2-3),4-f(some8-some1,some7-5,1-4,7-2,4-some3,6-6,8-3,5-some9),5-f(2-5,some8-4,some7-2,1-some3,7-6,4-3,6-some9,8-8),6-f(3-4,2-2,some8-some3,some7-6,1-3,7-some9,4-8,6-7),7-f(some10-2,3-some3,2-6,some8-3,some7-some9,1-8,7-7,4-some11),8-f(some12-some3,some10-6,3-3,2-some9,some8-8,some7-7,1-some11,7-some13)],[1-f(7-some5,4-1,6-some0,8-some1,5-5,some2-4,some4-2,some6-some3),3-f(some7-some0,1-some1,7-5,4-4,6-2,8-some3,5-6,some2-3),4-f(some8-some1,some7-5,1-4,7-2,4-some3,6-6,8-3,5-some9),5-f(2-5,some8-4,some7-2,1-some3,7-6,4-3,6-some9,8-8),6-f(3-4,2-2,some8-some3,some7-6,1-3,7-some9,4-8,6-7),7-f(some10-2,3-some3,2-6,some8-3,some7-some9,1-8,7-7,4-some11),8-f(some12-some3,some10-6,3-3,2-some9,some8-8,some7-7,1-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,7-some0,4-some1,6-5,8-4,5-2,some2-some3,some4-6),1-1)"}]
    <#lemma380>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_111 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_111.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma204> a r:Inference;
  r:gives {
    "board([2,7,3,6,8,5,1,4],[1-f(3-some0,6-1,some1-some2,some3-some4,8-3,some5-some6,7-7,some7-2),2-f(1-1,3-some2,6-some4,some1-3,some3-some6,8-7,some5-2,7-4),3-f(4-some2,1-some4,3-3,6-some6,some1-7,some3-2,8-4,some5-6),4-f(5-some4,4-3,1-some6,3-7,6-2,some1-4,some3-6,8-8),5-f(some8-3,5-some6,4-7,1-2,3-4,6-6,some1-8,some3-5),6-f(2-some6,some8-7,5-2,4-4,1-6,3-8,6-5,some1-some9),7-f(some10-7,2-2,some8-4,5-6,4-8,1-5,3-some9,6-some11),8-f(some12-2,some10-4,2-6,some8-8,5-5,4-some9,1-some11,3-some13)],0,8,[some14,some7,7,some5,8,some3,some1,6,3,1,4,5,some8,2,some10,some12|some15],[2,7,some6,3,some4,some2,1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_112 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_112.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma205> a r:Inference;
  r:gives {
    "queens([1-f(3-some0,6-1,some1-some2,some3-some4,8-3,some5-some6,7-7,some7-2),2-f(1-1,3-some2,6-some4,some1-3,some3-some6,8-7,some5-2,7-4),3-f(4-some2,1-some4,3-3,6-some6,some1-7,some3-2,8-4,some5-6),4-f(5-some4,4-3,1-some6,3-7,6-2,some1-4,some3-6,8-8),5-f(some8-3,5-some6,4-7,1-2,3-4,6-6,some1-8,some3-5),6-f(2-some6,some8-7,5-2,4-4,1-6,3-8,6-5,some1-some9),7-f(some10-7,2-2,some8-4,5-6,4-8,1-5,3-some9,6-some11),8-f(some12-2,some10-4,2-6,some8-8,5-5,4-some9,1-some11,3-some13)],0,[2,7,3,6,8,5,1,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(2-f(1-1,3-some0,6-some1,some2-3,some3-some4,8-7,some5-2,7-4),[1-f(3-some6,6-1,some2-some0,some3-some1,8-3,some5-some4,7-7,some7-2),2-f(1-1,3-some0,6-some1,some2-3,some3-some4,8-7,some5-2,7-4),3-f(4-some0,1-some1,3-3,6-some4,some2-7,some3-2,8-4,some5-6),4-f(5-some1,4-3,1-some4,3-7,6-2,some2-4,some3-6,8-8),5-f(some8-3,5-some4,4-7,1-2,3-4,6-6,some2-8,some3-5),6-f(2-some4,some8-7,5-2,4-4,1-6,3-8,6-5,some2-some9),7-f(some10-7,2-2,some8-4,5-6,4-8,1-5,3-some9,6-some11),8-f(some12-2,some10-4,2-6,some8-8,5-5,4-some9,1-some11,3-some13)],[1-f(3-some6,6-1,some2-some0,some3-some1,8-3,some5-some4,7-7,some7-2),3-f(4-some0,1-some1,3-3,6-some4,some2-7,some3-2,8-4,some5-6),4-f(5-some1,4-3,1-some4,3-7,6-2,some2-4,some3-6,8-8),5-f(some8-3,5-some4,4-7,1-2,3-4,6-6,some2-8,some3-5),6-f(2-some4,some8-7,5-2,4-4,1-6,3-8,6-5,some2-some9),7-f(some10-7,2-2,some8-4,5-6,4-8,1-5,3-some9,6-some11),8-f(some12-2,some10-4,2-6,some8-8,5-5,4-some9,1-some11,3-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-some0,6-some1,some2-3,some3-some4,8-7,some5-2,7-4),1-1)"}]
    <#lemma381>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_113 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_113.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma206> a r:Inference;
  r:gives {
    "board([2,7,5,8,1,4,6,3],[1-f(some0-some1,7-1,6-some2,some3-some4,5-5,8-some5,some6-3,some7-2),2-f(1-1,some0-some2,7-some4,6-5,some3-some5,5-3,8-2,some6-6),3-f(3-some2,1-some4,some0-5,7-some5,6-3,some3-2,5-6,8-8),4-f(some8-some4,3-5,1-some5,some0-3,7-2,6-6,some3-8,5-4),5-f(4-5,some8-some5,3-3,1-2,some0-6,7-8,6-4,some3-7),6-f(2-some5,4-3,some8-2,3-6,1-8,some0-4,7-7,6-some9),7-f(some10-3,2-2,4-6,some8-8,3-4,1-7,some0-some9,7-some11),8-f(some12-2,some10-6,2-8,4-4,some8-7,3-some9,1-some11,some0-some13)],0,8,[some14,some7,some6,8,5,some3,6,7,some0,1,3,some8,4,2,some10,some12|some15],[2,3,some5,5,some4,some2,1,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_114 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_114.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma207> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,7-1,6-some2,some3-some4,5-5,8-some5,some6-3,some7-2),2-f(1-1,some0-some2,7-some4,6-5,some3-some5,5-3,8-2,some6-6),3-f(3-some2,1-some4,some0-5,7-some5,6-3,some3-2,5-6,8-8),4-f(some8-some4,3-5,1-some5,some0-3,7-2,6-6,some3-8,5-4),5-f(4-5,some8-some5,3-3,1-2,some0-6,7-8,6-4,some3-7),6-f(2-some5,4-3,some8-2,3-6,1-8,some0-4,7-7,6-some9),7-f(some10-3,2-2,4-6,some8-8,3-4,1-7,some0-some9,7-some11),8-f(some12-2,some10-6,2-8,4-4,some8-7,3-some9,1-some11,some0-some13)],0,[2,7,5,8,1,4,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(2-f(1-1,some0-some1,7-some2,6-5,some3-some4,5-3,8-2,some5-6),[1-f(some0-some6,7-1,6-some1,some3-some2,5-5,8-some4,some5-3,some7-2),2-f(1-1,some0-some1,7-some2,6-5,some3-some4,5-3,8-2,some5-6),3-f(3-some1,1-some2,some0-5,7-some4,6-3,some3-2,5-6,8-8),4-f(some8-some2,3-5,1-some4,some0-3,7-2,6-6,some3-8,5-4),5-f(4-5,some8-some4,3-3,1-2,some0-6,7-8,6-4,some3-7),6-f(2-some4,4-3,some8-2,3-6,1-8,some0-4,7-7,6-some9),7-f(some10-3,2-2,4-6,some8-8,3-4,1-7,some0-some9,7-some11),8-f(some12-2,some10-6,2-8,4-4,some8-7,3-some9,1-some11,some0-some13)],[1-f(some0-some6,7-1,6-some1,some3-some2,5-5,8-some4,some5-3,some7-2),3-f(3-some1,1-some2,some0-5,7-some4,6-3,some3-2,5-6,8-8),4-f(some8-some2,3-5,1-some4,some0-3,7-2,6-6,some3-8,5-4),5-f(4-5,some8-some4,3-3,1-2,some0-6,7-8,6-4,some3-7),6-f(2-some4,4-3,some8-2,3-6,1-8,some0-4,7-7,6-some9),7-f(some10-3,2-2,4-6,some8-8,3-4,1-7,some0-some9,7-some11),8-f(some12-2,some10-6,2-8,4-4,some8-7,3-some9,1-some11,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-some1,7-some2,6-5,some3-some4,5-3,8-2,some5-6),1-1)"}]
    <#lemma382>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_115 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_115.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma208> a r:Inference;
  r:gives {
    "board([2,8,6,1,3,5,7,4],[1-f(7-some0,6-1,5-some1,4-4,8-some2,some3-some4,some5-5,some6-3),2-f(1-1,7-some1,6-4,5-some2,4-some4,8-5,some3-3,some5-2),3-f(some7-some1,1-4,7-some2,6-some4,5-5,4-3,8-2,some3-6),4-f(3-4,some7-some2,1-some4,7-5,6-3,5-2,4-6,8-8),5-f(some8-some2,3-some4,some7-5,1-3,7-2,6-6,5-8,4-some9),6-f(some10-some4,some8-5,3-3,some7-2,1-6,7-8,6-some9,5-7),7-f(2-5,some10-3,some8-2,3-6,some7-8,1-some9,7-7,6-some11),8-f(some12-3,2-2,some10-6,some8-8,3-some9,some7-7,1-some11,7-some13)],0,8,[some14,some6,some5,some3,8,4,5,6,7,1,some7,3,some8,some10,2,some12|some15],[3,5,some4,some2,4,some1,1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_116 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_116.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma209> a r:Inference;
  r:gives {
    "queens([1-f(7-some0,6-1,5-some1,4-4,8-some2,some3-some4,some5-5,some6-3),2-f(1-1,7-some1,6-4,5-some2,4-some4,8-5,some3-3,some5-2),3-f(some7-some1,1-4,7-some2,6-some4,5-5,4-3,8-2,some3-6),4-f(3-4,some7-some2,1-some4,7-5,6-3,5-2,4-6,8-8),5-f(some8-some2,3-some4,some7-5,1-3,7-2,6-6,5-8,4-some9),6-f(some10-some4,some8-5,3-3,some7-2,1-6,7-8,6-some9,5-7),7-f(2-5,some10-3,some8-2,3-6,some7-8,1-some9,7-7,6-some11),8-f(some12-3,2-2,some10-6,some8-8,3-some9,some7-7,1-some11,7-some13)],0,[2,8,6,1,3,5,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(2-f(1-1,7-some0,6-4,5-some1,4-some2,8-5,some3-3,some4-2),[1-f(7-some5,6-1,5-some0,4-4,8-some1,some3-some2,some4-5,some6-3),2-f(1-1,7-some0,6-4,5-some1,4-some2,8-5,some3-3,some4-2),3-f(some7-some0,1-4,7-some1,6-some2,5-5,4-3,8-2,some3-6),4-f(3-4,some7-some1,1-some2,7-5,6-3,5-2,4-6,8-8),5-f(some8-some1,3-some2,some7-5,1-3,7-2,6-6,5-8,4-some9),6-f(some10-some2,some8-5,3-3,some7-2,1-6,7-8,6-some9,5-7),7-f(2-5,some10-3,some8-2,3-6,some7-8,1-some9,7-7,6-some11),8-f(some12-3,2-2,some10-6,some8-8,3-some9,some7-7,1-some11,7-some13)],[1-f(7-some5,6-1,5-some0,4-4,8-some1,some3-some2,some4-5,some6-3),3-f(some7-some0,1-4,7-some1,6-some2,5-5,4-3,8-2,some3-6),4-f(3-4,some7-some1,1-some2,7-5,6-3,5-2,4-6,8-8),5-f(some8-some1,3-some2,some7-5,1-3,7-2,6-6,5-8,4-some9),6-f(some10-some2,some8-5,3-3,some7-2,1-6,7-8,6-some9,5-7),7-f(2-5,some10-3,some8-2,3-6,some7-8,1-some9,7-7,6-some11),8-f(some12-3,2-2,some10-6,some8-8,3-some9,some7-7,1-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,7-some0,6-4,5-some1,4-some2,8-5,some3-3,some4-2),1-1)"}]
    <#lemma383>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_117 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_117.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma210> a r:Inference;
  r:gives {
    "board([3,1,7,5,8,2,4,6],[1-f(some0-some1,2-2,8-1,7-some2,6-some3,some4-some5,some6-6,some7-4),2-f(4-2,some0-1,2-some2,8-some3,7-some5,6-6,some4-4,some6-3),3-f(1-1,4-some2,some0-some3,2-some5,8-6,7-4,6-3,some4-7),4-f(5-some2,1-some3,4-some5,some0-6,2-4,8-3,7-7,6-some8),5-f(3-some3,5-some5,1-6,4-4,some0-3,2-7,8-some8,7-5),6-f(some9-some5,3-6,5-4,1-3,4-7,some0-some8,2-5,8-8),7-f(some10-6,some9-4,3-3,5-7,1-some8,4-5,some0-8,2-some11),8-f(some12-4,some10-3,some9-7,3-some8,5-5,1-8,4-some11,some0-some13)],0,8,[some14,some7,some6,some4,6,7,8,2,some0,4,1,5,3,some9,some10,some12|some15],[4,6,some5,some3,some2,1,2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_118 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_118.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma211> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,2-2,8-1,7-some2,6-some3,some4-some5,some6-6,some7-4),2-f(4-2,some0-1,2-some2,8-some3,7-some5,6-6,some4-4,some6-3),3-f(1-1,4-some2,some0-some3,2-some5,8-6,7-4,6-3,some4-7),4-f(5-some2,1-some3,4-some5,some0-6,2-4,8-3,7-7,6-some8),5-f(3-some3,5-some5,1-6,4-4,some0-3,2-7,8-some8,7-5),6-f(some9-some5,3-6,5-4,1-3,4-7,some0-some8,2-5,8-8),7-f(some10-6,some9-4,3-3,5-7,1-some8,4-5,some0-8,2-some11),8-f(some12-4,some10-3,some9-7,3-some8,5-5,1-8,4-some11,some0-some13)],0,[3,1,7,5,8,2,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(3-f(1-1,4-some0,some1-some2,2-some3,8-6,7-4,6-3,some4-7),[1-f(some1-some5,2-2,8-1,7-some0,6-some2,some4-some3,some6-6,some7-4),2-f(4-2,some1-1,2-some0,8-some2,7-some3,6-6,some4-4,some6-3),3-f(1-1,4-some0,some1-some2,2-some3,8-6,7-4,6-3,some4-7),4-f(5-some0,1-some2,4-some3,some1-6,2-4,8-3,7-7,6-some8),5-f(3-some2,5-some3,1-6,4-4,some1-3,2-7,8-some8,7-5),6-f(some9-some3,3-6,5-4,1-3,4-7,some1-some8,2-5,8-8),7-f(some10-6,some9-4,3-3,5-7,1-some8,4-5,some1-8,2-some11),8-f(some12-4,some10-3,some9-7,3-some8,5-5,1-8,4-some11,some1-some13)],[1-f(some1-some5,2-2,8-1,7-some0,6-some2,some4-some3,some6-6,some7-4),2-f(4-2,some1-1,2-some0,8-some2,7-some3,6-6,some4-4,some6-3),4-f(5-some0,1-some2,4-some3,some1-6,2-4,8-3,7-7,6-some8),5-f(3-some2,5-some3,1-6,4-4,some1-3,2-7,8-some8,7-5),6-f(some9-some3,3-6,5-4,1-3,4-7,some1-some8,2-5,8-8),7-f(some10-6,some9-4,3-3,5-7,1-some8,4-5,some1-8,2-some11),8-f(some12-4,some10-3,some9-7,3-some8,5-5,1-8,4-some11,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,4-some0,some1-some2,2-some3,8-6,7-4,6-3,some4-7),1-1)"}]
    <#lemma384>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_119 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_119.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma212> a r:Inference;
  r:gives {
    "board([3,5,2,8,1,7,4,6],[1-f(some0-some1,3-some2,8-1,7-3,5-5,some3-2,some4-some5,some6-some7),2-f(6-some2,some0-1,3-3,8-5,7-2,5-some5,some3-some7,some4-some8),3-f(1-1,6-3,some0-5,3-2,8-some5,7-some7,5-some8,some3-7),4-f(2-3,1-5,6-2,some0-some5,3-some7,8-some8,7-7,5-4),5-f(4-5,2-2,1-some5,6-some7,some0-some8,3-7,8-4,7-6),6-f(some9-2,4-some5,2-some7,1-some8,6-7,some0-4,3-6,8-8),7-f(some10-some5,some9-some7,4-some8,2-7,1-4,6-6,some0-8,3-some11),8-f(some12-some7,some10-some8,some9-7,4-4,2-6,1-8,6-some11,some0-some13)],0,8,[some14,some6,some4,some3,5,7,8,3,some0,6,1,2,4,some9,some10,some12|some15],[some7,some5,2,5,3,1,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_120 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_120.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma213> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,3-some2,8-1,7-3,5-5,some3-2,some4-some5,some6-some7),2-f(6-some2,some0-1,3-3,8-5,7-2,5-some5,some3-some7,some4-some8),3-f(1-1,6-3,some0-5,3-2,8-some5,7-some7,5-some8,some3-7),4-f(2-3,1-5,6-2,some0-some5,3-some7,8-some8,7-7,5-4),5-f(4-5,2-2,1-some5,6-some7,some0-some8,3-7,8-4,7-6),6-f(some9-2,4-some5,2-some7,1-some8,6-7,some0-4,3-6,8-8),7-f(some10-some5,some9-some7,4-some8,2-7,1-4,6-6,some0-8,3-some11),8-f(some12-some7,some10-some8,some9-7,4-4,2-6,1-8,6-some11,some0-some13)],0,[3,5,2,8,1,7,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(3-f(1-1,6-3,some0-5,3-2,8-some1,7-some2,5-some3,some4-7),[1-f(some0-some5,3-some6,8-1,7-3,5-5,some4-2,some7-some1,some8-some2),2-f(6-some6,some0-1,3-3,8-5,7-2,5-some1,some4-some2,some7-some3),3-f(1-1,6-3,some0-5,3-2,8-some1,7-some2,5-some3,some4-7),4-f(2-3,1-5,6-2,some0-some1,3-some2,8-some3,7-7,5-4),5-f(4-5,2-2,1-some1,6-some2,some0-some3,3-7,8-4,7-6),6-f(some9-2,4-some1,2-some2,1-some3,6-7,some0-4,3-6,8-8),7-f(some10-some1,some9-some2,4-some3,2-7,1-4,6-6,some0-8,3-some11),8-f(some12-some2,some10-some3,some9-7,4-4,2-6,1-8,6-some11,some0-some13)],[1-f(some0-some5,3-some6,8-1,7-3,5-5,some4-2,some7-some1,some8-some2),2-f(6-some6,some0-1,3-3,8-5,7-2,5-some1,some4-some2,some7-some3),4-f(2-3,1-5,6-2,some0-some1,3-some2,8-some3,7-7,5-4),5-f(4-5,2-2,1-some1,6-some2,some0-some3,3-7,8-4,7-6),6-f(some9-2,4-some1,2-some2,1-some3,6-7,some0-4,3-6,8-8),7-f(some10-some1,some9-some2,4-some3,2-7,1-4,6-6,some0-8,3-some11),8-f(some12-some2,some10-some3,some9-7,4-4,2-6,1-8,6-some11,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,6-3,some0-5,3-2,8-some1,7-some2,5-some3,some4-7),1-1)"}]
    <#lemma385>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_121 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_121.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma214> a r:Inference;
  r:gives {
    "board([3,5,2,8,6,4,7,1],[1-f(7-some0,3-some1,6-1,some2-3,some3-some4,some5-2,some6-some7,8-8),2-f(5-some1,7-1,3-3,6-some4,some2-2,some3-some7,some5-8,some6-6),3-f(1-1,5-3,7-some4,3-2,6-some7,some2-8,some3-6,some5-5),4-f(2-3,1-some4,5-2,7-some7,3-8,6-6,some2-5,some3-4),5-f(4-some4,2-2,1-some7,5-8,7-6,3-5,6-4,some2-some8),6-f(some9-2,4-some7,2-8,1-6,5-5,7-4,3-some8,6-7),7-f(some10-some7,some9-8,4-6,2-5,1-4,5-some8,7-7,3-some11),8-f(some12-8,some10-6,some9-5,4-4,2-some8,1-7,5-some11,7-some13)],0,8,[some14,8,some6,some5,some3,some2,6,3,7,5,1,2,4,some9,some10,some12|some15],[8,some7,2,some4,3,1,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_122 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_122.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma215> a r:Inference;
  r:gives {
    "queens([1-f(7-some0,3-some1,6-1,some2-3,some3-some4,some5-2,some6-some7,8-8),2-f(5-some1,7-1,3-3,6-some4,some2-2,some3-some7,some5-8,some6-6),3-f(1-1,5-3,7-some4,3-2,6-some7,some2-8,some3-6,some5-5),4-f(2-3,1-some4,5-2,7-some7,3-8,6-6,some2-5,some3-4),5-f(4-some4,2-2,1-some7,5-8,7-6,3-5,6-4,some2-some8),6-f(some9-2,4-some7,2-8,1-6,5-5,7-4,3-some8,6-7),7-f(some10-some7,some9-8,4-6,2-5,1-4,5-some8,7-7,3-some11),8-f(some12-8,some10-6,some9-5,4-4,2-some8,1-7,5-some11,7-some13)],0,[3,5,2,8,6,4,7,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(3-f(1-1,5-3,7-some0,3-2,6-some1,some2-8,some3-6,some4-5),[1-f(7-some5,3-some6,6-1,some2-3,some3-some0,some4-2,some7-some1,8-8),2-f(5-some6,7-1,3-3,6-some0,some2-2,some3-some1,some4-8,some7-6),3-f(1-1,5-3,7-some0,3-2,6-some1,some2-8,some3-6,some4-5),4-f(2-3,1-some0,5-2,7-some1,3-8,6-6,some2-5,some3-4),5-f(4-some0,2-2,1-some1,5-8,7-6,3-5,6-4,some2-some8),6-f(some9-2,4-some1,2-8,1-6,5-5,7-4,3-some8,6-7),7-f(some10-some1,some9-8,4-6,2-5,1-4,5-some8,7-7,3-some11),8-f(some12-8,some10-6,some9-5,4-4,2-some8,1-7,5-some11,7-some13)],[1-f(7-some5,3-some6,6-1,some2-3,some3-some0,some4-2,some7-some1,8-8),2-f(5-some6,7-1,3-3,6-some0,some2-2,some3-some1,some4-8,some7-6),4-f(2-3,1-some0,5-2,7-some1,3-8,6-6,some2-5,some3-4),5-f(4-some0,2-2,1-some1,5-8,7-6,3-5,6-4,some2-some8),6-f(some9-2,4-some1,2-8,1-6,5-5,7-4,3-some8,6-7),7-f(some10-some1,some9-8,4-6,2-5,1-4,5-some8,7-7,3-some11),8-f(some12-8,some10-6,some9-5,4-4,2-some8,1-7,5-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,5-3,7-some0,3-2,6-some1,some2-8,some3-6,some4-5),1-1)"}]
    <#lemma386>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_123 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_123.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma216> a r:Inference;
  r:gives {
    "board([3,5,7,1,4,2,8,6],[1-f(some0-some1,5-some2,8-1,4-4,6-some3,some4-2,some5-6,some6-5),2-f(7-some2,some0-1,5-4,8-some3,4-2,6-6,some4-5,some5-3),3-f(1-1,7-4,some0-some3,5-2,8-6,4-5,6-3,some4-some7),4-f(2-4,1-some3,7-2,some0-6,5-5,8-3,4-some7,6-some8),5-f(3-some3,2-2,1-6,7-5,some0-3,5-some7,8-some8,4-some9),6-f(some10-2,3-6,2-5,1-3,7-some7,some0-some8,5-some9,8-8),7-f(some11-6,some10-5,3-3,2-some7,1-some8,7-some9,some0-8,5-7),8-f(some12-5,some11-3,some10-some7,3-some8,2-some9,1-8,7-7,some0-some13)],0,8,[some14,some6,some5,some4,6,4,8,5,some0,7,1,2,3,some10,some11,some12|some15],[5,6,2,some3,4,1,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_124 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_124.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma217> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,5-some2,8-1,4-4,6-some3,some4-2,some5-6,some6-5),2-f(7-some2,some0-1,5-4,8-some3,4-2,6-6,some4-5,some5-3),3-f(1-1,7-4,some0-some3,5-2,8-6,4-5,6-3,some4-some7),4-f(2-4,1-some3,7-2,some0-6,5-5,8-3,4-some7,6-some8),5-f(3-some3,2-2,1-6,7-5,some0-3,5-some7,8-some8,4-some9),6-f(some10-2,3-6,2-5,1-3,7-some7,some0-some8,5-some9,8-8),7-f(some11-6,some10-5,3-3,2-some7,1-some8,7-some9,some0-8,5-7),8-f(some12-5,some11-3,some10-some7,3-some8,2-some9,1-8,7-7,some0-some13)],0,[3,5,7,1,4,2,8,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(3-f(1-1,7-4,some0-some1,5-2,8-6,4-5,6-3,some2-some3),[1-f(some0-some4,5-some5,8-1,4-4,6-some1,some2-2,some6-6,some7-5),2-f(7-some5,some0-1,5-4,8-some1,4-2,6-6,some2-5,some6-3),3-f(1-1,7-4,some0-some1,5-2,8-6,4-5,6-3,some2-some3),4-f(2-4,1-some1,7-2,some0-6,5-5,8-3,4-some3,6-some8),5-f(3-some1,2-2,1-6,7-5,some0-3,5-some3,8-some8,4-some9),6-f(some10-2,3-6,2-5,1-3,7-some3,some0-some8,5-some9,8-8),7-f(some11-6,some10-5,3-3,2-some3,1-some8,7-some9,some0-8,5-7),8-f(some12-5,some11-3,some10-some3,3-some8,2-some9,1-8,7-7,some0-some13)],[1-f(some0-some4,5-some5,8-1,4-4,6-some1,some2-2,some6-6,some7-5),2-f(7-some5,some0-1,5-4,8-some1,4-2,6-6,some2-5,some6-3),4-f(2-4,1-some1,7-2,some0-6,5-5,8-3,4-some3,6-some8),5-f(3-some1,2-2,1-6,7-5,some0-3,5-some3,8-some8,4-some9),6-f(some10-2,3-6,2-5,1-3,7-some3,some0-some8,5-some9,8-8),7-f(some11-6,some10-5,3-3,2-some3,1-some8,7-some9,some0-8,5-7),8-f(some12-5,some11-3,some10-some3,3-some8,2-some9,1-8,7-7,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,7-4,some0-some1,5-2,8-6,4-5,6-3,some2-some3),1-1)"}]
    <#lemma387>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_125 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_125.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma218> a r:Inference;
  r:gives {
    "board([3,5,8,4,1,7,2,6],[1-f(4-some0,some1-some2,8-1,some3-some4,5-5,7-2,some5-4,some6-7),2-f(6-some2,4-1,some1-some4,8-5,some3-2,5-4,7-7,some5-some7),3-f(1-1,6-some4,4-5,some1-2,8-4,some3-7,5-some7,7-3),4-f(2-some4,1-5,6-2,4-4,some1-7,8-some7,some3-3,5-some8),5-f(some9-5,2-2,1-4,6-7,4-some7,some1-3,8-some8,some3-6),6-f(3-2,some9-4,2-7,1-some7,6-3,4-some8,some1-6,8-8),7-f(some10-4,3-7,some9-some7,2-3,1-some8,6-6,4-8,some1-some11),8-f(some12-7,some10-some7,3-3,some9-some8,2-6,1-8,6-some11,4-some13)],0,8,[some14,some6,some5,7,5,some3,8,some1,4,6,1,2,some9,3,some10,some12|some15],[7,4,2,5,some4,1,some2,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_126 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_126.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma219> a r:Inference;
  r:gives {
    "queens([1-f(4-some0,some1-some2,8-1,some3-some4,5-5,7-2,some5-4,some6-7),2-f(6-some2,4-1,some1-some4,8-5,some3-2,5-4,7-7,some5-some7),3-f(1-1,6-some4,4-5,some1-2,8-4,some3-7,5-some7,7-3),4-f(2-some4,1-5,6-2,4-4,some1-7,8-some7,some3-3,5-some8),5-f(some9-5,2-2,1-4,6-7,4-some7,some1-3,8-some8,some3-6),6-f(3-2,some9-4,2-7,1-some7,6-3,4-some8,some1-6,8-8),7-f(some10-4,3-7,some9-some7,2-3,1-some8,6-6,4-8,some1-some11),8-f(some12-7,some10-some7,3-3,some9-some8,2-6,1-8,6-some11,4-some13)],0,[3,5,8,4,1,7,2,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(3-f(1-1,6-some0,4-5,some1-2,8-4,some2-7,5-some3,7-3),[1-f(4-some4,some1-some5,8-1,some2-some0,5-5,7-2,some6-4,some7-7),2-f(6-some5,4-1,some1-some0,8-5,some2-2,5-4,7-7,some6-some3),3-f(1-1,6-some0,4-5,some1-2,8-4,some2-7,5-some3,7-3),4-f(2-some0,1-5,6-2,4-4,some1-7,8-some3,some2-3,5-some8),5-f(some9-5,2-2,1-4,6-7,4-some3,some1-3,8-some8,some2-6),6-f(3-2,some9-4,2-7,1-some3,6-3,4-some8,some1-6,8-8),7-f(some10-4,3-7,some9-some3,2-3,1-some8,6-6,4-8,some1-some11),8-f(some12-7,some10-some3,3-3,some9-some8,2-6,1-8,6-some11,4-some13)],[1-f(4-some4,some1-some5,8-1,some2-some0,5-5,7-2,some6-4,some7-7),2-f(6-some5,4-1,some1-some0,8-5,some2-2,5-4,7-7,some6-some3),4-f(2-some0,1-5,6-2,4-4,some1-7,8-some3,some2-3,5-some8),5-f(some9-5,2-2,1-4,6-7,4-some3,some1-3,8-some8,some2-6),6-f(3-2,some9-4,2-7,1-some3,6-3,4-some8,some1-6,8-8),7-f(some10-4,3-7,some9-some3,2-3,1-some8,6-6,4-8,some1-some11),8-f(some12-7,some10-some3,3-3,some9-some8,2-6,1-8,6-some11,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,6-some0,4-5,some1-2,8-4,some2-7,5-some3,7-3),1-1)"}]
    <#lemma388>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_127 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_127.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma220> a r:Inference;
  r:gives {
    "board([3,6,2,5,8,1,7,4],[1-f(7-some0,3-some1,some2-1,some3-3,8-some4,6-6,some5-2,some6-4),2-f(4-some1,7-1,3-3,some2-some4,some3-6,8-2,6-4,some5-some7),3-f(1-1,4-3,7-some4,3-6,some2-2,some3-4,8-some7,6-some8),4-f(5-3,1-some4,4-6,7-2,3-4,some2-some7,some3-some8,8-8),5-f(2-some4,5-6,1-2,4-4,7-some7,3-some8,some2-8,some3-5),6-f(some9-6,2-2,5-4,1-some7,4-some8,7-8,3-5,some2-7),7-f(some10-2,some9-4,2-some7,5-some8,1-8,4-5,7-7,3-some11),8-f(some12-4,some10-some7,some9-some8,2-8,5-5,1-7,4-some11,7-some13)],0,8,[some14,some6,some5,6,8,some3,some2,3,7,4,1,5,2,some9,some10,some12|some15],[4,2,6,some4,3,1,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_128 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_128.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma221> a r:Inference;
  r:gives {
    "queens([1-f(7-some0,3-some1,some2-1,some3-3,8-some4,6-6,some5-2,some6-4),2-f(4-some1,7-1,3-3,some2-some4,some3-6,8-2,6-4,some5-some7),3-f(1-1,4-3,7-some4,3-6,some2-2,some3-4,8-some7,6-some8),4-f(5-3,1-some4,4-6,7-2,3-4,some2-some7,some3-some8,8-8),5-f(2-some4,5-6,1-2,4-4,7-some7,3-some8,some2-8,some3-5),6-f(some9-6,2-2,5-4,1-some7,4-some8,7-8,3-5,some2-7),7-f(some10-2,some9-4,2-some7,5-some8,1-8,4-5,7-7,3-some11),8-f(some12-4,some10-some7,some9-some8,2-8,5-5,1-7,4-some11,7-some13)],0,[3,6,2,5,8,1,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(3-f(1-1,4-3,7-some0,3-6,some1-2,some2-4,8-some3,6-some4),[1-f(7-some5,3-some6,some1-1,some2-3,8-some0,6-6,some7-2,some8-4),2-f(4-some6,7-1,3-3,some1-some0,some2-6,8-2,6-4,some7-some3),3-f(1-1,4-3,7-some0,3-6,some1-2,some2-4,8-some3,6-some4),4-f(5-3,1-some0,4-6,7-2,3-4,some1-some3,some2-some4,8-8),5-f(2-some0,5-6,1-2,4-4,7-some3,3-some4,some1-8,some2-5),6-f(some9-6,2-2,5-4,1-some3,4-some4,7-8,3-5,some1-7),7-f(some10-2,some9-4,2-some3,5-some4,1-8,4-5,7-7,3-some11),8-f(some12-4,some10-some3,some9-some4,2-8,5-5,1-7,4-some11,7-some13)],[1-f(7-some5,3-some6,some1-1,some2-3,8-some0,6-6,some7-2,some8-4),2-f(4-some6,7-1,3-3,some1-some0,some2-6,8-2,6-4,some7-some3),4-f(5-3,1-some0,4-6,7-2,3-4,some1-some3,some2-some4,8-8),5-f(2-some0,5-6,1-2,4-4,7-some3,3-some4,some1-8,some2-5),6-f(some9-6,2-2,5-4,1-some3,4-some4,7-8,3-5,some1-7),7-f(some10-2,some9-4,2-some3,5-some4,1-8,4-5,7-7,3-some11),8-f(some12-4,some10-some3,some9-some4,2-8,5-5,1-7,4-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,4-3,7-some0,3-6,some1-2,some2-4,8-some3,6-some4),1-1)"}]
    <#lemma389>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_129 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_129.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma222> a r:Inference;
  r:gives {
    "board([3,6,2,7,1,4,8,5],[1-f(some0-some1,3-some2,6-1,8-3,5-5,some3-some4,some5-2,some6-some7),2-f(7-some2,some0-1,3-3,6-5,8-some4,5-2,some3-some7,some5-6),3-f(1-1,7-3,some0-5,3-some4,6-2,8-some7,5-6,some3-4),4-f(4-3,1-5,7-some4,some0-2,3-some7,6-6,8-4,5-some8),5-f(2-5,4-some4,1-2,7-some7,some0-6,3-4,6-some8,8-8),6-f(some9-some4,2-2,4-some7,1-6,7-4,some0-some8,3-8,6-some10),7-f(some11-2,some9-some7,2-6,4-4,1-some8,7-8,some0-some10,3-7),8-f(some12-some7,some11-6,some9-4,2-some8,4-8,1-some10,7-7,some0-some13)],0,8,[some14,some6,some5,some3,5,8,6,3,some0,7,1,4,2,some9,some11,some12|some15],[some7,2,some4,5,3,1,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_130 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_130.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma223> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,3-some2,6-1,8-3,5-5,some3-some4,some5-2,some6-some7),2-f(7-some2,some0-1,3-3,6-5,8-some4,5-2,some3-some7,some5-6),3-f(1-1,7-3,some0-5,3-some4,6-2,8-some7,5-6,some3-4),4-f(4-3,1-5,7-some4,some0-2,3-some7,6-6,8-4,5-some8),5-f(2-5,4-some4,1-2,7-some7,some0-6,3-4,6-some8,8-8),6-f(some9-some4,2-2,4-some7,1-6,7-4,some0-some8,3-8,6-some10),7-f(some11-2,some9-some7,2-6,4-4,1-some8,7-8,some0-some10,3-7),8-f(some12-some7,some11-6,some9-4,2-some8,4-8,1-some10,7-7,some0-some13)],0,[3,6,2,7,1,4,8,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(3-f(1-1,7-3,some0-5,3-some1,6-2,8-some2,5-6,some3-4),[1-f(some0-some4,3-some5,6-1,8-3,5-5,some3-some1,some6-2,some7-some2),2-f(7-some5,some0-1,3-3,6-5,8-some1,5-2,some3-some2,some6-6),3-f(1-1,7-3,some0-5,3-some1,6-2,8-some2,5-6,some3-4),4-f(4-3,1-5,7-some1,some0-2,3-some2,6-6,8-4,5-some8),5-f(2-5,4-some1,1-2,7-some2,some0-6,3-4,6-some8,8-8),6-f(some9-some1,2-2,4-some2,1-6,7-4,some0-some8,3-8,6-some10),7-f(some11-2,some9-some2,2-6,4-4,1-some8,7-8,some0-some10,3-7),8-f(some12-some2,some11-6,some9-4,2-some8,4-8,1-some10,7-7,some0-some13)],[1-f(some0-some4,3-some5,6-1,8-3,5-5,some3-some1,some6-2,some7-some2),2-f(7-some5,some0-1,3-3,6-5,8-some1,5-2,some3-some2,some6-6),4-f(4-3,1-5,7-some1,some0-2,3-some2,6-6,8-4,5-some8),5-f(2-5,4-some1,1-2,7-some2,some0-6,3-4,6-some8,8-8),6-f(some9-some1,2-2,4-some2,1-6,7-4,some0-some8,3-8,6-some10),7-f(some11-2,some9-some2,2-6,4-4,1-some8,7-8,some0-some10,3-7),8-f(some12-some2,some11-6,some9-4,2-some8,4-8,1-some10,7-7,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,7-3,some0-5,3-some1,6-2,8-some2,5-6,some3-4),1-1)"}]
    <#lemma390>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_131 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_131.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma224> a r:Inference;
  r:gives {
    "board([3,6,2,7,5,1,8,4],[1-f(5-some0,3-some1,some2-1,some3-3,8-some4,6-6,some5-2,some6-some7),2-f(7-some1,5-1,3-3,some2-some4,some3-6,8-2,6-some7,some5-5),3-f(1-1,7-3,5-some4,3-6,some2-2,some3-some7,8-5,6-4),4-f(4-3,1-some4,7-6,5-2,3-some7,some2-5,some3-4,8-8),5-f(2-some4,4-6,1-2,7-some7,5-5,3-4,some2-8,some3-some8),6-f(some9-6,2-2,4-some7,1-5,7-4,5-8,3-some8,some2-some10),7-f(some11-2,some9-some7,2-5,4-4,1-8,7-some8,5-some10,3-7),8-f(some12-some7,some11-5,some9-4,2-8,4-some8,1-some10,7-7,5-some13)],0,8,[some14,some6,some5,6,8,some3,some2,3,5,7,1,4,2,some9,some11,some12|some15],[some7,2,6,some4,3,1,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_132 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_132.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma225> a r:Inference;
  r:gives {
    "queens([1-f(5-some0,3-some1,some2-1,some3-3,8-some4,6-6,some5-2,some6-some7),2-f(7-some1,5-1,3-3,some2-some4,some3-6,8-2,6-some7,some5-5),3-f(1-1,7-3,5-some4,3-6,some2-2,some3-some7,8-5,6-4),4-f(4-3,1-some4,7-6,5-2,3-some7,some2-5,some3-4,8-8),5-f(2-some4,4-6,1-2,7-some7,5-5,3-4,some2-8,some3-some8),6-f(some9-6,2-2,4-some7,1-5,7-4,5-8,3-some8,some2-some10),7-f(some11-2,some9-some7,2-5,4-4,1-8,7-some8,5-some10,3-7),8-f(some12-some7,some11-5,some9-4,2-8,4-some8,1-some10,7-7,5-some13)],0,[3,6,2,7,5,1,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(3-f(1-1,7-3,5-some0,3-6,some1-2,some2-some3,8-5,6-4),[1-f(5-some4,3-some5,some1-1,some2-3,8-some0,6-6,some6-2,some7-some3),2-f(7-some5,5-1,3-3,some1-some0,some2-6,8-2,6-some3,some6-5),3-f(1-1,7-3,5-some0,3-6,some1-2,some2-some3,8-5,6-4),4-f(4-3,1-some0,7-6,5-2,3-some3,some1-5,some2-4,8-8),5-f(2-some0,4-6,1-2,7-some3,5-5,3-4,some1-8,some2-some8),6-f(some9-6,2-2,4-some3,1-5,7-4,5-8,3-some8,some1-some10),7-f(some11-2,some9-some3,2-5,4-4,1-8,7-some8,5-some10,3-7),8-f(some12-some3,some11-5,some9-4,2-8,4-some8,1-some10,7-7,5-some13)],[1-f(5-some4,3-some5,some1-1,some2-3,8-some0,6-6,some6-2,some7-some3),2-f(7-some5,5-1,3-3,some1-some0,some2-6,8-2,6-some3,some6-5),4-f(4-3,1-some0,7-6,5-2,3-some3,some1-5,some2-4,8-8),5-f(2-some0,4-6,1-2,7-some3,5-5,3-4,some1-8,some2-some8),6-f(some9-6,2-2,4-some3,1-5,7-4,5-8,3-some8,some1-some10),7-f(some11-2,some9-some3,2-5,4-4,1-8,7-some8,5-some10,3-7),8-f(some12-some3,some11-5,some9-4,2-8,4-some8,1-some10,7-7,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,7-3,5-some0,3-6,some1-2,some2-some3,8-5,6-4),1-1)"}]
    <#lemma391>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_133 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_133.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma226> a r:Inference;
  r:gives {
    "board([3,6,4,1,8,5,7,2],[1-f(7-some0,6-some1,some2-1,4-4,some3-some4,some5-3,8-2,some6-some7),2-f(3-some1,7-1,6-4,some2-some4,4-3,some3-2,some5-some7,8-8),3-f(1-1,3-4,7-some4,6-3,some2-2,4-some7,some3-8,some5-6),4-f(5-4,1-some4,3-3,7-2,6-some7,some2-8,4-6,some3-some8),5-f(2-some4,5-3,1-2,3-some7,7-8,6-6,some2-some8,4-5),6-f(some9-3,2-2,5-some7,1-8,3-6,7-some8,6-5,some2-7),7-f(some10-2,some9-some7,2-8,5-6,1-some8,3-5,7-7,6-some11),8-f(some12-some7,some10-8,some9-6,2-some8,5-5,1-7,3-some11,7-some13)],0,8,[some14,some6,8,some5,some3,4,some2,6,7,3,1,5,2,some9,some10,some12|some15],[some7,2,3,some4,4,1,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_134 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_134.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma227> a r:Inference;
  r:gives {
    "queens([1-f(7-some0,6-some1,some2-1,4-4,some3-some4,some5-3,8-2,some6-some7),2-f(3-some1,7-1,6-4,some2-some4,4-3,some3-2,some5-some7,8-8),3-f(1-1,3-4,7-some4,6-3,some2-2,4-some7,some3-8,some5-6),4-f(5-4,1-some4,3-3,7-2,6-some7,some2-8,4-6,some3-some8),5-f(2-some4,5-3,1-2,3-some7,7-8,6-6,some2-some8,4-5),6-f(some9-3,2-2,5-some7,1-8,3-6,7-some8,6-5,some2-7),7-f(some10-2,some9-some7,2-8,5-6,1-some8,3-5,7-7,6-some11),8-f(some12-some7,some10-8,some9-6,2-some8,5-5,1-7,3-some11,7-some13)],0,[3,6,4,1,8,5,7,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(3-f(1-1,3-4,7-some0,6-3,some1-2,4-some2,some3-8,some4-6),[1-f(7-some5,6-some6,some1-1,4-4,some3-some0,some4-3,8-2,some7-some2),2-f(3-some6,7-1,6-4,some1-some0,4-3,some3-2,some4-some2,8-8),3-f(1-1,3-4,7-some0,6-3,some1-2,4-some2,some3-8,some4-6),4-f(5-4,1-some0,3-3,7-2,6-some2,some1-8,4-6,some3-some8),5-f(2-some0,5-3,1-2,3-some2,7-8,6-6,some1-some8,4-5),6-f(some9-3,2-2,5-some2,1-8,3-6,7-some8,6-5,some1-7),7-f(some10-2,some9-some2,2-8,5-6,1-some8,3-5,7-7,6-some11),8-f(some12-some2,some10-8,some9-6,2-some8,5-5,1-7,3-some11,7-some13)],[1-f(7-some5,6-some6,some1-1,4-4,some3-some0,some4-3,8-2,some7-some2),2-f(3-some6,7-1,6-4,some1-some0,4-3,some3-2,some4-some2,8-8),4-f(5-4,1-some0,3-3,7-2,6-some2,some1-8,4-6,some3-some8),5-f(2-some0,5-3,1-2,3-some2,7-8,6-6,some1-some8,4-5),6-f(some9-3,2-2,5-some2,1-8,3-6,7-some8,6-5,some1-7),7-f(some10-2,some9-some2,2-8,5-6,1-some8,3-5,7-7,6-some11),8-f(some12-some2,some10-8,some9-6,2-some8,5-5,1-7,3-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-4,7-some0,6-3,some1-2,4-some2,some3-8,some4-6),1-1)"}]
    <#lemma392>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_135 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_135.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma228> a r:Inference;
  r:gives {
    "board([3,6,4,2,8,5,7,1],[1-f(7-some0,6-some1,4-1,some2-some3,some4-4,some5-3,some6-2,8-8),2-f(3-some1,7-1,6-some3,4-4,some2-3,some4-2,some5-8,some6-some7),3-f(1-1,3-some3,7-4,6-3,4-2,some2-8,some4-some7,some5-6),4-f(5-some3,1-4,3-3,7-2,6-8,4-some7,some2-6,some4-some8),5-f(2-4,5-3,1-2,3-8,7-some7,6-6,4-some8,some2-5),6-f(some9-3,2-2,5-8,1-some7,3-6,7-some8,6-5,4-7),7-f(some10-2,some9-8,2-some7,5-6,1-some8,3-5,7-7,6-some11),8-f(some12-8,some10-some7,some9-6,2-some8,5-5,1-7,3-some11,7-some13)],0,8,[some14,8,some6,some5,some4,some2,4,6,7,3,1,5,2,some9,some10,some12|some15],[8,2,3,4,some3,1,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_136 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_136.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma229> a r:Inference;
  r:gives {
    "queens([1-f(7-some0,6-some1,4-1,some2-some3,some4-4,some5-3,some6-2,8-8),2-f(3-some1,7-1,6-some3,4-4,some2-3,some4-2,some5-8,some6-some7),3-f(1-1,3-some3,7-4,6-3,4-2,some2-8,some4-some7,some5-6),4-f(5-some3,1-4,3-3,7-2,6-8,4-some7,some2-6,some4-some8),5-f(2-4,5-3,1-2,3-8,7-some7,6-6,4-some8,some2-5),6-f(some9-3,2-2,5-8,1-some7,3-6,7-some8,6-5,4-7),7-f(some10-2,some9-8,2-some7,5-6,1-some8,3-5,7-7,6-some11),8-f(some12-8,some10-some7,some9-6,2-some8,5-5,1-7,3-some11,7-some13)],0,[3,6,4,2,8,5,7,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(3-f(1-1,3-some0,7-4,6-3,4-2,some1-8,some2-some3,some4-6),[1-f(7-some5,6-some6,4-1,some1-some0,some2-4,some4-3,some7-2,8-8),2-f(3-some6,7-1,6-some0,4-4,some1-3,some2-2,some4-8,some7-some3),3-f(1-1,3-some0,7-4,6-3,4-2,some1-8,some2-some3,some4-6),4-f(5-some0,1-4,3-3,7-2,6-8,4-some3,some1-6,some2-some8),5-f(2-4,5-3,1-2,3-8,7-some3,6-6,4-some8,some1-5),6-f(some9-3,2-2,5-8,1-some3,3-6,7-some8,6-5,4-7),7-f(some10-2,some9-8,2-some3,5-6,1-some8,3-5,7-7,6-some11),8-f(some12-8,some10-some3,some9-6,2-some8,5-5,1-7,3-some11,7-some13)],[1-f(7-some5,6-some6,4-1,some1-some0,some2-4,some4-3,some7-2,8-8),2-f(3-some6,7-1,6-some0,4-4,some1-3,some2-2,some4-8,some7-some3),4-f(5-some0,1-4,3-3,7-2,6-8,4-some3,some1-6,some2-some8),5-f(2-4,5-3,1-2,3-8,7-some3,6-6,4-some8,some1-5),6-f(some9-3,2-2,5-8,1-some3,3-6,7-some8,6-5,4-7),7-f(some10-2,some9-8,2-some3,5-6,1-some8,3-5,7-7,6-some11),8-f(some12-8,some10-some3,some9-6,2-some8,5-5,1-7,3-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-some0,7-4,6-3,4-2,some1-8,some2-some3,some4-6),1-1)"}]
    <#lemma393>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_137 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_137.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma230> a r:Inference;
  r:gives {
    "board([3,6,8,1,4,7,5,2],[1-f(some0-some1,5-some2,7-1,4-4,some3-some4,some5-some6,8-2,some7-5),2-f(6-some2,some0-1,5-4,7-some4,4-some6,some3-2,some5-5,8-8),3-f(1-1,6-4,some0-some4,5-some6,7-2,4-5,some3-8,some5-3),4-f(some8-4,1-some4,6-some6,some0-2,5-5,7-8,4-3,some3-7),5-f(2-some4,some8-some6,1-2,6-5,some0-8,5-3,7-7,4-6),6-f(3-some6,2-2,some8-5,1-8,6-3,some0-7,5-6,7-some9),7-f(some10-2,3-5,2-8,some8-3,1-7,6-6,some0-some9,5-some11),8-f(some12-5,some10-8,3-3,2-7,some8-6,1-some9,6-some11,some0-some13)],0,8,[some14,some7,8,some5,some3,4,7,5,some0,6,1,some8,2,3,some10,some12|some15],[5,2,some6,some4,4,1,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_138 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_138.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma231> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,5-some2,7-1,4-4,some3-some4,some5-some6,8-2,some7-5),2-f(6-some2,some0-1,5-4,7-some4,4-some6,some3-2,some5-5,8-8),3-f(1-1,6-4,some0-some4,5-some6,7-2,4-5,some3-8,some5-3),4-f(some8-4,1-some4,6-some6,some0-2,5-5,7-8,4-3,some3-7),5-f(2-some4,some8-some6,1-2,6-5,some0-8,5-3,7-7,4-6),6-f(3-some6,2-2,some8-5,1-8,6-3,some0-7,5-6,7-some9),7-f(some10-2,3-5,2-8,some8-3,1-7,6-6,some0-some9,5-some11),8-f(some12-5,some10-8,3-3,2-7,some8-6,1-some9,6-some11,some0-some13)],0,[3,6,8,1,4,7,5,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(3-f(1-1,6-4,some0-some1,5-some2,7-2,4-5,some3-8,some4-3),[1-f(some0-some5,5-some6,7-1,4-4,some3-some1,some4-some2,8-2,some7-5),2-f(6-some6,some0-1,5-4,7-some1,4-some2,some3-2,some4-5,8-8),3-f(1-1,6-4,some0-some1,5-some2,7-2,4-5,some3-8,some4-3),4-f(some8-4,1-some1,6-some2,some0-2,5-5,7-8,4-3,some3-7),5-f(2-some1,some8-some2,1-2,6-5,some0-8,5-3,7-7,4-6),6-f(3-some2,2-2,some8-5,1-8,6-3,some0-7,5-6,7-some9),7-f(some10-2,3-5,2-8,some8-3,1-7,6-6,some0-some9,5-some11),8-f(some12-5,some10-8,3-3,2-7,some8-6,1-some9,6-some11,some0-some13)],[1-f(some0-some5,5-some6,7-1,4-4,some3-some1,some4-some2,8-2,some7-5),2-f(6-some6,some0-1,5-4,7-some1,4-some2,some3-2,some4-5,8-8),4-f(some8-4,1-some1,6-some2,some0-2,5-5,7-8,4-3,some3-7),5-f(2-some1,some8-some2,1-2,6-5,some0-8,5-3,7-7,4-6),6-f(3-some2,2-2,some8-5,1-8,6-3,some0-7,5-6,7-some9),7-f(some10-2,3-5,2-8,some8-3,1-7,6-6,some0-some9,5-some11),8-f(some12-5,some10-8,3-3,2-7,some8-6,1-some9,6-some11,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,6-4,some0-some1,5-some2,7-2,4-5,some3-8,some4-3),1-1)"}]
    <#lemma394>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_139 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_139.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma232> a r:Inference;
  r:gives {
    "board([3,6,8,1,5,7,2,4],[1-f(5-some0,some1-some2,some3-1,4-4,8-some4,7-some5,some6-2,some7-7),2-f(6-some2,5-1,some1-4,some3-some4,4-some5,8-2,7-7,some6-5),3-f(1-1,6-4,5-some4,some1-some5,some3-2,4-7,8-5,7-3),4-f(some8-4,1-some4,6-some5,5-2,some1-7,some3-5,4-3,8-8),5-f(2-some4,some8-some5,1-2,6-7,5-5,some1-3,some3-8,4-6),6-f(3-some5,2-2,some8-7,1-5,6-3,5-8,some1-6,some3-some9),7-f(some10-2,3-7,2-5,some8-3,1-8,6-6,5-some9,some1-some11),8-f(some12-7,some10-5,3-3,2-8,some8-6,1-some9,6-some11,5-some13)],0,8,[some14,some7,some6,7,8,4,some3,some1,5,6,1,some8,2,3,some10,some12|some15],[7,2,some5,some4,4,1,some2,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_140 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_140.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma233> a r:Inference;
  r:gives {
    "queens([1-f(5-some0,some1-some2,some3-1,4-4,8-some4,7-some5,some6-2,some7-7),2-f(6-some2,5-1,some1-4,some3-some4,4-some5,8-2,7-7,some6-5),3-f(1-1,6-4,5-some4,some1-some5,some3-2,4-7,8-5,7-3),4-f(some8-4,1-some4,6-some5,5-2,some1-7,some3-5,4-3,8-8),5-f(2-some4,some8-some5,1-2,6-7,5-5,some1-3,some3-8,4-6),6-f(3-some5,2-2,some8-7,1-5,6-3,5-8,some1-6,some3-some9),7-f(some10-2,3-7,2-5,some8-3,1-8,6-6,5-some9,some1-some11),8-f(some12-7,some10-5,3-3,2-8,some8-6,1-some9,6-some11,5-some13)],0,[3,6,8,1,5,7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(3-f(1-1,6-4,5-some0,some1-some2,some3-2,4-7,8-5,7-3),[1-f(5-some4,some1-some5,some3-1,4-4,8-some0,7-some2,some6-2,some7-7),2-f(6-some5,5-1,some1-4,some3-some0,4-some2,8-2,7-7,some6-5),3-f(1-1,6-4,5-some0,some1-some2,some3-2,4-7,8-5,7-3),4-f(some8-4,1-some0,6-some2,5-2,some1-7,some3-5,4-3,8-8),5-f(2-some0,some8-some2,1-2,6-7,5-5,some1-3,some3-8,4-6),6-f(3-some2,2-2,some8-7,1-5,6-3,5-8,some1-6,some3-some9),7-f(some10-2,3-7,2-5,some8-3,1-8,6-6,5-some9,some1-some11),8-f(some12-7,some10-5,3-3,2-8,some8-6,1-some9,6-some11,5-some13)],[1-f(5-some4,some1-some5,some3-1,4-4,8-some0,7-some2,some6-2,some7-7),2-f(6-some5,5-1,some1-4,some3-some0,4-some2,8-2,7-7,some6-5),4-f(some8-4,1-some0,6-some2,5-2,some1-7,some3-5,4-3,8-8),5-f(2-some0,some8-some2,1-2,6-7,5-5,some1-3,some3-8,4-6),6-f(3-some2,2-2,some8-7,1-5,6-3,5-8,some1-6,some3-some9),7-f(some10-2,3-7,2-5,some8-3,1-8,6-6,5-some9,some1-some11),8-f(some12-7,some10-5,3-3,2-8,some8-6,1-some9,6-some11,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,6-4,5-some0,some1-some2,some3-2,4-7,8-5,7-3),1-1)"}]
    <#lemma395>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_141 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_141.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma234> a r:Inference;
  r:gives {
    "board([3,6,8,2,4,1,7,5],[1-f(7-some0,5-some1,4-1,8-some2,some3-4,6-6,some4-2,some5-5),2-f(some6-some1,7-1,5-some2,4-4,8-6,some3-2,6-5,some4-some7),3-f(1-1,some6-some2,7-4,5-6,4-2,8-5,some3-some7,6-3),4-f(some8-some2,1-4,some6-6,7-2,5-5,4-some7,8-3,some3-some9),5-f(2-4,some8-6,1-2,some6-5,7-some7,5-3,4-some9,8-8),6-f(3-6,2-2,some8-5,1-some7,some6-3,7-some9,5-8,4-7),7-f(some10-2,3-5,2-some7,some8-3,1-some9,some6-8,7-7,5-some11),8-f(some12-5,some10-some7,3-3,2-some9,some8-8,1-7,some6-some11,7-some13)],0,8,[some14,some5,some4,6,some3,8,4,5,7,some6,1,some8,2,3,some10,some12|some15],[5,2,6,4,some2,1,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_142 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_142.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma235> a r:Inference;
  r:gives {
    "queens([1-f(7-some0,5-some1,4-1,8-some2,some3-4,6-6,some4-2,some5-5),2-f(some6-some1,7-1,5-some2,4-4,8-6,some3-2,6-5,some4-some7),3-f(1-1,some6-some2,7-4,5-6,4-2,8-5,some3-some7,6-3),4-f(some8-some2,1-4,some6-6,7-2,5-5,4-some7,8-3,some3-some9),5-f(2-4,some8-6,1-2,some6-5,7-some7,5-3,4-some9,8-8),6-f(3-6,2-2,some8-5,1-some7,some6-3,7-some9,5-8,4-7),7-f(some10-2,3-5,2-some7,some8-3,1-some9,some6-8,7-7,5-some11),8-f(some12-5,some10-some7,3-3,2-some9,some8-8,1-7,some6-some11,7-some13)],0,[3,6,8,2,4,1,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(3-f(1-1,some0-some1,7-4,5-6,4-2,8-5,some2-some3,6-3),[1-f(7-some4,5-some5,4-1,8-some1,some2-4,6-6,some6-2,some7-5),2-f(some0-some5,7-1,5-some1,4-4,8-6,some2-2,6-5,some6-some3),3-f(1-1,some0-some1,7-4,5-6,4-2,8-5,some2-some3,6-3),4-f(some8-some1,1-4,some0-6,7-2,5-5,4-some3,8-3,some2-some9),5-f(2-4,some8-6,1-2,some0-5,7-some3,5-3,4-some9,8-8),6-f(3-6,2-2,some8-5,1-some3,some0-3,7-some9,5-8,4-7),7-f(some10-2,3-5,2-some3,some8-3,1-some9,some0-8,7-7,5-some11),8-f(some12-5,some10-some3,3-3,2-some9,some8-8,1-7,some0-some11,7-some13)],[1-f(7-some4,5-some5,4-1,8-some1,some2-4,6-6,some6-2,some7-5),2-f(some0-some5,7-1,5-some1,4-4,8-6,some2-2,6-5,some6-some3),4-f(some8-some1,1-4,some0-6,7-2,5-5,4-some3,8-3,some2-some9),5-f(2-4,some8-6,1-2,some0-5,7-some3,5-3,4-some9,8-8),6-f(3-6,2-2,some8-5,1-some3,some0-3,7-some9,5-8,4-7),7-f(some10-2,3-5,2-some3,some8-3,1-some9,some0-8,7-7,5-some11),8-f(some12-5,some10-some3,3-3,2-some9,some8-8,1-7,some0-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-some1,7-4,5-6,4-2,8-5,some2-some3,6-3),1-1)"}]
    <#lemma396>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_143 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_143.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma236> a r:Inference;
  r:gives {
    "board([3,7,2,8,5,1,4,6],[1-f(5-some0,3-some1,8-1,7-3,some2-some3,6-6,some4-some5,some6-2),2-f(some7-some1,5-1,3-3,8-some3,7-6,some2-some5,6-2,some4-5),3-f(1-1,some7-3,5-some3,3-6,8-some5,7-2,some2-5,6-7),4-f(some8-3,1-some3,some7-6,5-some5,3-2,8-5,7-7,some2-4),5-f(4-some3,some8-6,1-some5,some7-2,5-5,3-7,8-4,7-some9),6-f(2-6,4-some5,some8-2,1-5,some7-7,5-4,3-some9,8-8),7-f(some10-some5,2-2,4-5,some8-7,1-4,some7-some9,5-8,3-some11),8-f(some12-2,some10-5,2-7,4-4,some8-some9,1-8,some7-some11,5-some13)],0,8,[some14,some6,some4,6,some2,7,8,3,5,some7,1,some8,4,2,some10,some12|some15],[2,some5,6,some3,3,1,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_144 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_144.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma237> a r:Inference;
  r:gives {
    "queens([1-f(5-some0,3-some1,8-1,7-3,some2-some3,6-6,some4-some5,some6-2),2-f(some7-some1,5-1,3-3,8-some3,7-6,some2-some5,6-2,some4-5),3-f(1-1,some7-3,5-some3,3-6,8-some5,7-2,some2-5,6-7),4-f(some8-3,1-some3,some7-6,5-some5,3-2,8-5,7-7,some2-4),5-f(4-some3,some8-6,1-some5,some7-2,5-5,3-7,8-4,7-some9),6-f(2-6,4-some5,some8-2,1-5,some7-7,5-4,3-some9,8-8),7-f(some10-some5,2-2,4-5,some8-7,1-4,some7-some9,5-8,3-some11),8-f(some12-2,some10-5,2-7,4-4,some8-some9,1-8,some7-some11,5-some13)],0,[3,7,2,8,5,1,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(3-f(1-1,some0-3,5-some1,3-6,8-some2,7-2,some3-5,6-7),[1-f(5-some4,3-some5,8-1,7-3,some3-some1,6-6,some6-some2,some7-2),2-f(some0-some5,5-1,3-3,8-some1,7-6,some3-some2,6-2,some6-5),3-f(1-1,some0-3,5-some1,3-6,8-some2,7-2,some3-5,6-7),4-f(some8-3,1-some1,some0-6,5-some2,3-2,8-5,7-7,some3-4),5-f(4-some1,some8-6,1-some2,some0-2,5-5,3-7,8-4,7-some9),6-f(2-6,4-some2,some8-2,1-5,some0-7,5-4,3-some9,8-8),7-f(some10-some2,2-2,4-5,some8-7,1-4,some0-some9,5-8,3-some11),8-f(some12-2,some10-5,2-7,4-4,some8-some9,1-8,some0-some11,5-some13)],[1-f(5-some4,3-some5,8-1,7-3,some3-some1,6-6,some6-some2,some7-2),2-f(some0-some5,5-1,3-3,8-some1,7-6,some3-some2,6-2,some6-5),4-f(some8-3,1-some1,some0-6,5-some2,3-2,8-5,7-7,some3-4),5-f(4-some1,some8-6,1-some2,some0-2,5-5,3-7,8-4,7-some9),6-f(2-6,4-some2,some8-2,1-5,some0-7,5-4,3-some9,8-8),7-f(some10-some2,2-2,4-5,some8-7,1-4,some0-some9,5-8,3-some11),8-f(some12-2,some10-5,2-7,4-4,some8-some9,1-8,some0-some11,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-3,5-some1,3-6,8-some2,7-2,some3-5,6-7),1-1)"}]
    <#lemma397>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_145 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_145.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma238> a r:Inference;
  r:gives {
    "board([3,7,2,8,6,4,1,5],[1-f(some0-some1,3-some2,6-1,8-3,some3-some4,some5-some6,7-7,some7-2),2-f(5-some2,some0-1,3-3,6-some4,8-some6,some3-7,some5-2,7-6),3-f(1-1,5-3,some0-some4,3-some6,6-7,8-2,some3-6,some5-5),4-f(some8-3,1-some4,5-some6,some0-7,3-2,6-6,8-5,some3-4),5-f(4-some4,some8-some6,1-7,5-2,some0-6,3-5,6-4,8-8),6-f(2-some6,4-7,some8-2,1-6,5-5,some0-4,3-8,6-some9),7-f(some10-7,2-2,4-6,some8-5,1-4,5-8,some0-some9,3-some11),8-f(some12-2,some10-6,2-5,4-4,some8-8,1-some9,5-some11,some0-some13)],0,8,[some14,some7,7,some5,some3,8,6,3,some0,5,1,some8,4,2,some10,some12|some15],[2,7,some6,some4,3,1,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_146 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_146.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma239> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,3-some2,6-1,8-3,some3-some4,some5-some6,7-7,some7-2),2-f(5-some2,some0-1,3-3,6-some4,8-some6,some3-7,some5-2,7-6),3-f(1-1,5-3,some0-some4,3-some6,6-7,8-2,some3-6,some5-5),4-f(some8-3,1-some4,5-some6,some0-7,3-2,6-6,8-5,some3-4),5-f(4-some4,some8-some6,1-7,5-2,some0-6,3-5,6-4,8-8),6-f(2-some6,4-7,some8-2,1-6,5-5,some0-4,3-8,6-some9),7-f(some10-7,2-2,4-6,some8-5,1-4,5-8,some0-some9,3-some11),8-f(some12-2,some10-6,2-5,4-4,some8-8,1-some9,5-some11,some0-some13)],0,[3,7,2,8,6,4,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(3-f(1-1,5-3,some0-some1,3-some2,6-7,8-2,some3-6,some4-5),[1-f(some0-some5,3-some6,6-1,8-3,some3-some1,some4-some2,7-7,some7-2),2-f(5-some6,some0-1,3-3,6-some1,8-some2,some3-7,some4-2,7-6),3-f(1-1,5-3,some0-some1,3-some2,6-7,8-2,some3-6,some4-5),4-f(some8-3,1-some1,5-some2,some0-7,3-2,6-6,8-5,some3-4),5-f(4-some1,some8-some2,1-7,5-2,some0-6,3-5,6-4,8-8),6-f(2-some2,4-7,some8-2,1-6,5-5,some0-4,3-8,6-some9),7-f(some10-7,2-2,4-6,some8-5,1-4,5-8,some0-some9,3-some11),8-f(some12-2,some10-6,2-5,4-4,some8-8,1-some9,5-some11,some0-some13)],[1-f(some0-some5,3-some6,6-1,8-3,some3-some1,some4-some2,7-7,some7-2),2-f(5-some6,some0-1,3-3,6-some1,8-some2,some3-7,some4-2,7-6),4-f(some8-3,1-some1,5-some2,some0-7,3-2,6-6,8-5,some3-4),5-f(4-some1,some8-some2,1-7,5-2,some0-6,3-5,6-4,8-8),6-f(2-some2,4-7,some8-2,1-6,5-5,some0-4,3-8,6-some9),7-f(some10-7,2-2,4-6,some8-5,1-4,5-8,some0-some9,3-some11),8-f(some12-2,some10-6,2-5,4-4,some8-8,1-some9,5-some11,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,5-3,some0-some1,3-some2,6-7,8-2,some3-6,some4-5),1-1)"}]
    <#lemma398>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_147 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_147.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma240> a r:Inference;
  r:gives {
    "board([3,8,4,7,1,6,2,5],[1-f(6-some0,some1-some2,some3-1,8-some4,5-5,7-3,some5-some6,some7-7),2-f(3-some2,6-1,some1-some4,some3-5,8-3,5-some6,7-7,some5-2),3-f(1-1,3-some4,6-5,some1-3,some3-some6,8-7,5-2,7-4),4-f(4-some4,1-5,3-3,6-some6,some1-7,some3-2,8-4,5-6),5-f(some8-5,4-3,1-some6,3-7,6-2,some1-4,some3-6,8-8),6-f(some9-3,some8-some6,4-7,1-2,3-4,6-6,some1-8,some3-some10),7-f(2-some6,some9-7,some8-2,4-4,1-6,3-8,6-some10,some1-some11),8-f(some12-7,2-2,some9-4,some8-6,4-8,1-some10,3-some11,6-some13)],0,8,[some14,some7,some5,7,5,8,some3,some1,6,3,1,4,some8,some9,2,some12|some15],[7,some6,3,5,some4,1,some2,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_148 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_148.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma241> a r:Inference;
  r:gives {
    "queens([1-f(6-some0,some1-some2,some3-1,8-some4,5-5,7-3,some5-some6,some7-7),2-f(3-some2,6-1,some1-some4,some3-5,8-3,5-some6,7-7,some5-2),3-f(1-1,3-some4,6-5,some1-3,some3-some6,8-7,5-2,7-4),4-f(4-some4,1-5,3-3,6-some6,some1-7,some3-2,8-4,5-6),5-f(some8-5,4-3,1-some6,3-7,6-2,some1-4,some3-6,8-8),6-f(some9-3,some8-some6,4-7,1-2,3-4,6-6,some1-8,some3-some10),7-f(2-some6,some9-7,some8-2,4-4,1-6,3-8,6-some10,some1-some11),8-f(some12-7,2-2,some9-4,some8-6,4-8,1-some10,3-some11,6-some13)],0,[3,8,4,7,1,6,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(3-f(1-1,3-some0,6-5,some1-3,some2-some3,8-7,5-2,7-4),[1-f(6-some4,some1-some5,some2-1,8-some0,5-5,7-3,some6-some3,some7-7),2-f(3-some5,6-1,some1-some0,some2-5,8-3,5-some3,7-7,some6-2),3-f(1-1,3-some0,6-5,some1-3,some2-some3,8-7,5-2,7-4),4-f(4-some0,1-5,3-3,6-some3,some1-7,some2-2,8-4,5-6),5-f(some8-5,4-3,1-some3,3-7,6-2,some1-4,some2-6,8-8),6-f(some9-3,some8-some3,4-7,1-2,3-4,6-6,some1-8,some2-some10),7-f(2-some3,some9-7,some8-2,4-4,1-6,3-8,6-some10,some1-some11),8-f(some12-7,2-2,some9-4,some8-6,4-8,1-some10,3-some11,6-some13)],[1-f(6-some4,some1-some5,some2-1,8-some0,5-5,7-3,some6-some3,some7-7),2-f(3-some5,6-1,some1-some0,some2-5,8-3,5-some3,7-7,some6-2),4-f(4-some0,1-5,3-3,6-some3,some1-7,some2-2,8-4,5-6),5-f(some8-5,4-3,1-some3,3-7,6-2,some1-4,some2-6,8-8),6-f(some9-3,some8-some3,4-7,1-2,3-4,6-6,some1-8,some2-some10),7-f(2-some3,some9-7,some8-2,4-4,1-6,3-8,6-some10,some1-some11),8-f(some12-7,2-2,some9-4,some8-6,4-8,1-some10,3-some11,6-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-some0,6-5,some1-3,some2-some3,8-7,5-2,7-4),1-1)"}]
    <#lemma399>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_149 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_149.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma242> a r:Inference;
  r:gives {
    "board([4,1,5,8,2,7,3,6],[1-f(some0-some1,2-2,8-some2,5-1,7-some3,some4-5,some5-3,some6-some7),2-f(6-2,some0-some2,2-1,8-some3,5-5,7-3,some4-some7,some5-7),3-f(3-some2,6-1,some0-some3,2-5,8-3,5-some7,7-7,some4-some8),4-f(1-1,3-some3,6-5,some0-3,2-some7,8-7,5-some8,7-4),5-f(4-some3,1-5,3-3,6-some7,some0-7,2-some8,8-4,5-6),6-f(some9-5,4-3,1-some7,3-7,6-some8,some0-4,2-6,8-8),7-f(some10-3,some9-some7,4-7,1-some8,3-4,6-6,some0-8,2-some11),8-f(some12-some7,some10-7,some9-some8,4-4,1-6,3-8,6-some11,some0-some13)],0,8,[some14,some6,some5,some4,7,5,8,2,some0,6,3,1,4,some9,some10,some12|some15],[some7,3,5,some3,1,some2,2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_150 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_150.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma243> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,2-2,8-some2,5-1,7-some3,some4-5,some5-3,some6-some7),2-f(6-2,some0-some2,2-1,8-some3,5-5,7-3,some4-some7,some5-7),3-f(3-some2,6-1,some0-some3,2-5,8-3,5-some7,7-7,some4-some8),4-f(1-1,3-some3,6-5,some0-3,2-some7,8-7,5-some8,7-4),5-f(4-some3,1-5,3-3,6-some7,some0-7,2-some8,8-4,5-6),6-f(some9-5,4-3,1-some7,3-7,6-some8,some0-4,2-6,8-8),7-f(some10-3,some9-some7,4-7,1-some8,3-4,6-6,some0-8,2-some11),8-f(some12-some7,some10-7,some9-some8,4-4,1-6,3-8,6-some11,some0-some13)],0,[4,1,5,8,2,7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,3-some0,6-5,some1-3,2-some2,8-7,5-some3,7-4),[1-f(some1-some4,2-2,8-some5,5-1,7-some0,some6-5,some7-3,some8-some2),2-f(6-2,some1-some5,2-1,8-some0,5-5,7-3,some6-some2,some7-7),3-f(3-some5,6-1,some1-some0,2-5,8-3,5-some2,7-7,some6-some3),4-f(1-1,3-some0,6-5,some1-3,2-some2,8-7,5-some3,7-4),5-f(4-some0,1-5,3-3,6-some2,some1-7,2-some3,8-4,5-6),6-f(some9-5,4-3,1-some2,3-7,6-some3,some1-4,2-6,8-8),7-f(some10-3,some9-some2,4-7,1-some3,3-4,6-6,some1-8,2-some11),8-f(some12-some2,some10-7,some9-some3,4-4,1-6,3-8,6-some11,some1-some13)],[1-f(some1-some4,2-2,8-some5,5-1,7-some0,some6-5,some7-3,some8-some2),2-f(6-2,some1-some5,2-1,8-some0,5-5,7-3,some6-some2,some7-7),3-f(3-some5,6-1,some1-some0,2-5,8-3,5-some2,7-7,some6-some3),5-f(4-some0,1-5,3-3,6-some2,some1-7,2-some3,8-4,5-6),6-f(some9-5,4-3,1-some2,3-7,6-some3,some1-4,2-6,8-8),7-f(some10-3,some9-some2,4-7,1-some3,3-4,6-6,some1-8,2-some11),8-f(some12-some2,some10-7,some9-some3,4-4,1-6,3-8,6-some11,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-some0,6-5,some1-3,2-some2,8-7,5-some3,7-4),1-1)"}]
    <#lemma400>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_151 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_151.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma244> a r:Inference;
  r:gives {
    "board([4,1,5,8,6,3,7,2],[1-f(7-some0,2-2,some1-some2,6-1,some3-some4,some5-some6,8-3,some7-6),2-f(5-2,7-some2,2-1,some1-some4,6-some6,some3-3,some5-6,8-8),3-f(3-some2,5-1,7-some4,2-some6,some1-3,6-6,some3-8,some5-5),4-f(1-1,3-some4,5-some6,7-3,2-6,some1-8,6-5,some3-4),5-f(4-some4,1-some6,3-3,5-6,7-8,2-5,some1-4,6-some8),6-f(some9-some6,4-3,1-6,3-8,5-5,7-4,2-some8,some1-7),7-f(some10-3,some9-6,4-8,1-5,3-4,5-some8,7-7,2-some11),8-f(some12-6,some10-8,some9-5,4-4,1-some8,3-7,5-some11,7-some13)],0,8,[some14,some7,8,some5,some3,6,some1,2,7,5,3,1,4,some9,some10,some12|some15],[6,3,some6,some4,1,some2,2,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_152 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_152.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma245> a r:Inference;
  r:gives {
    "queens([1-f(7-some0,2-2,some1-some2,6-1,some3-some4,some5-some6,8-3,some7-6),2-f(5-2,7-some2,2-1,some1-some4,6-some6,some3-3,some5-6,8-8),3-f(3-some2,5-1,7-some4,2-some6,some1-3,6-6,some3-8,some5-5),4-f(1-1,3-some4,5-some6,7-3,2-6,some1-8,6-5,some3-4),5-f(4-some4,1-some6,3-3,5-6,7-8,2-5,some1-4,6-some8),6-f(some9-some6,4-3,1-6,3-8,5-5,7-4,2-some8,some1-7),7-f(some10-3,some9-6,4-8,1-5,3-4,5-some8,7-7,2-some11),8-f(some12-6,some10-8,some9-5,4-4,1-some8,3-7,5-some11,7-some13)],0,[4,1,5,8,6,3,7,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,3-some0,5-some1,7-3,2-6,some2-8,6-5,some3-4),[1-f(7-some4,2-2,some2-some5,6-1,some3-some0,some6-some1,8-3,some7-6),2-f(5-2,7-some5,2-1,some2-some0,6-some1,some3-3,some6-6,8-8),3-f(3-some5,5-1,7-some0,2-some1,some2-3,6-6,some3-8,some6-5),4-f(1-1,3-some0,5-some1,7-3,2-6,some2-8,6-5,some3-4),5-f(4-some0,1-some1,3-3,5-6,7-8,2-5,some2-4,6-some8),6-f(some9-some1,4-3,1-6,3-8,5-5,7-4,2-some8,some2-7),7-f(some10-3,some9-6,4-8,1-5,3-4,5-some8,7-7,2-some11),8-f(some12-6,some10-8,some9-5,4-4,1-some8,3-7,5-some11,7-some13)],[1-f(7-some4,2-2,some2-some5,6-1,some3-some0,some6-some1,8-3,some7-6),2-f(5-2,7-some5,2-1,some2-some0,6-some1,some3-3,some6-6,8-8),3-f(3-some5,5-1,7-some0,2-some1,some2-3,6-6,some3-8,some6-5),5-f(4-some0,1-some1,3-3,5-6,7-8,2-5,some2-4,6-some8),6-f(some9-some1,4-3,1-6,3-8,5-5,7-4,2-some8,some2-7),7-f(some10-3,some9-6,4-8,1-5,3-4,5-some8,7-7,2-some11),8-f(some12-6,some10-8,some9-5,4-4,1-some8,3-7,5-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-some0,5-some1,7-3,2-6,some2-8,6-5,some3-4),1-1)"}]
    <#lemma401>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_153 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_153.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma246> a r:Inference;
  r:gives {
    "board([4,2,5,8,6,1,3,7],[1-f(2-some0,8-some1,some2-2,some3-1,7-some4,6-6,some5-3,some6-some7),2-f(5-some1,2-2,8-1,some2-some4,some3-6,7-3,6-some7,some5-7),3-f(3-2,5-1,2-some4,8-6,some2-3,some3-some7,7-7,6-5),4-f(1-1,3-some4,5-6,2-3,8-some7,some2-7,some3-5,7-4),5-f(4-some4,1-6,3-3,5-some7,2-7,8-5,some2-4,some3-some8),6-f(some9-6,4-3,1-some7,3-7,5-5,2-4,8-some8,some2-some10),7-f(some11-3,some9-some7,4-7,1-5,3-4,5-some8,2-some10,8-8),8-f(some12-some7,some11-7,some9-5,4-4,1-some8,3-some10,5-8,2-some13)],0,8,[some14,some6,some5,6,7,some3,some2,8,2,5,3,1,4,some9,some11,some12|some15],[some7,3,6,some4,1,2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_154 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_154.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma247> a r:Inference;
  r:gives {
    "queens([1-f(2-some0,8-some1,some2-2,some3-1,7-some4,6-6,some5-3,some6-some7),2-f(5-some1,2-2,8-1,some2-some4,some3-6,7-3,6-some7,some5-7),3-f(3-2,5-1,2-some4,8-6,some2-3,some3-some7,7-7,6-5),4-f(1-1,3-some4,5-6,2-3,8-some7,some2-7,some3-5,7-4),5-f(4-some4,1-6,3-3,5-some7,2-7,8-5,some2-4,some3-some8),6-f(some9-6,4-3,1-some7,3-7,5-5,2-4,8-some8,some2-some10),7-f(some11-3,some9-some7,4-7,1-5,3-4,5-some8,2-some10,8-8),8-f(some12-some7,some11-7,some9-5,4-4,1-some8,3-some10,5-8,2-some13)],0,[4,2,5,8,6,1,3,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,3-some0,5-6,2-3,8-some1,some2-7,some3-5,7-4),[1-f(2-some4,8-some5,some2-2,some3-1,7-some0,6-6,some6-3,some7-some1),2-f(5-some5,2-2,8-1,some2-some0,some3-6,7-3,6-some1,some6-7),3-f(3-2,5-1,2-some0,8-6,some2-3,some3-some1,7-7,6-5),4-f(1-1,3-some0,5-6,2-3,8-some1,some2-7,some3-5,7-4),5-f(4-some0,1-6,3-3,5-some1,2-7,8-5,some2-4,some3-some8),6-f(some9-6,4-3,1-some1,3-7,5-5,2-4,8-some8,some2-some10),7-f(some11-3,some9-some1,4-7,1-5,3-4,5-some8,2-some10,8-8),8-f(some12-some1,some11-7,some9-5,4-4,1-some8,3-some10,5-8,2-some13)],[1-f(2-some4,8-some5,some2-2,some3-1,7-some0,6-6,some6-3,some7-some1),2-f(5-some5,2-2,8-1,some2-some0,some3-6,7-3,6-some1,some6-7),3-f(3-2,5-1,2-some0,8-6,some2-3,some3-some1,7-7,6-5),5-f(4-some0,1-6,3-3,5-some1,2-7,8-5,some2-4,some3-some8),6-f(some9-6,4-3,1-some1,3-7,5-5,2-4,8-some8,some2-some10),7-f(some11-3,some9-some1,4-7,1-5,3-4,5-some8,2-some10,8-8),8-f(some12-some1,some11-7,some9-5,4-4,1-some8,3-some10,5-8,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-some0,5-6,2-3,8-some1,some2-7,some3-5,7-4),1-1)"}]
    <#lemma402>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_155 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_155.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma248> a r:Inference;
  r:gives {
    "board([4,2,7,3,6,8,1,5],[1-f(2-some0,4-some1,some2-2,8-1,some3-some4,some5-4,7-7,some6-some7),2-f(5-some1,2-2,4-1,some2-some4,8-4,some3-7,some5-some7,7-3),3-f(6-2,5-1,2-some4,4-4,some2-7,8-some7,some3-3,some5-5),4-f(1-1,6-some4,5-4,2-7,4-some7,some2-3,8-5,some3-some8),5-f(3-some4,1-4,6-7,5-some7,2-3,4-5,some2-some8,8-8),6-f(some9-4,3-7,1-some7,6-3,5-5,2-some8,4-8,some2-6),7-f(some10-7,some9-some7,3-3,1-5,6-some8,5-8,2-6,4-some11),8-f(some12-some7,some10-3,some9-5,3-some8,1-8,6-6,5-some11,2-some13)],0,8,[some14,some6,7,some5,some3,8,some2,4,2,5,6,1,3,some9,some10,some12|some15],[some7,7,4,some4,1,2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_156 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_156.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma249> a r:Inference;
  r:gives {
    "queens([1-f(2-some0,4-some1,some2-2,8-1,some3-some4,some5-4,7-7,some6-some7),2-f(5-some1,2-2,4-1,some2-some4,8-4,some3-7,some5-some7,7-3),3-f(6-2,5-1,2-some4,4-4,some2-7,8-some7,some3-3,some5-5),4-f(1-1,6-some4,5-4,2-7,4-some7,some2-3,8-5,some3-some8),5-f(3-some4,1-4,6-7,5-some7,2-3,4-5,some2-some8,8-8),6-f(some9-4,3-7,1-some7,6-3,5-5,2-some8,4-8,some2-6),7-f(some10-7,some9-some7,3-3,1-5,6-some8,5-8,2-6,4-some11),8-f(some12-some7,some10-3,some9-5,3-some8,1-8,6-6,5-some11,2-some13)],0,[4,2,7,3,6,8,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,6-some0,5-4,2-7,4-some1,some2-3,8-5,some3-some4),[1-f(2-some5,4-some6,some2-2,8-1,some3-some0,some7-4,7-7,some8-some1),2-f(5-some6,2-2,4-1,some2-some0,8-4,some3-7,some7-some1,7-3),3-f(6-2,5-1,2-some0,4-4,some2-7,8-some1,some3-3,some7-5),4-f(1-1,6-some0,5-4,2-7,4-some1,some2-3,8-5,some3-some4),5-f(3-some0,1-4,6-7,5-some1,2-3,4-5,some2-some4,8-8),6-f(some9-4,3-7,1-some1,6-3,5-5,2-some4,4-8,some2-6),7-f(some10-7,some9-some1,3-3,1-5,6-some4,5-8,2-6,4-some11),8-f(some12-some1,some10-3,some9-5,3-some4,1-8,6-6,5-some11,2-some13)],[1-f(2-some5,4-some6,some2-2,8-1,some3-some0,some7-4,7-7,some8-some1),2-f(5-some6,2-2,4-1,some2-some0,8-4,some3-7,some7-some1,7-3),3-f(6-2,5-1,2-some0,4-4,some2-7,8-some1,some3-3,some7-5),5-f(3-some0,1-4,6-7,5-some1,2-3,4-5,some2-some4,8-8),6-f(some9-4,3-7,1-some1,6-3,5-5,2-some4,4-8,some2-6),7-f(some10-7,some9-some1,3-3,1-5,6-some4,5-8,2-6,4-some11),8-f(some12-some1,some10-3,some9-5,3-some4,1-8,6-6,5-some11,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,6-some0,5-4,2-7,4-some1,some2-3,8-5,some3-some4),1-1)"}]
    <#lemma403>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_157 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_157.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma250> a r:Inference;
  r:gives {
    "board([4,2,7,3,6,8,5,1],[1-f(2-some0,4-some1,7-2,some2-1,some3-some4,some5-4,some6-some7,8-8),2-f(5-some1,2-2,4-1,7-some4,some2-4,some3-some7,some5-8,some6-3),3-f(6-2,5-1,2-some4,4-4,7-some7,some2-8,some3-3,some5-5),4-f(1-1,6-some4,5-4,2-some7,4-8,7-3,some2-5,some3-7),5-f(3-some4,1-4,6-some7,5-8,2-3,4-5,7-7,some2-some8),6-f(some9-4,3-some7,1-8,6-3,5-5,2-7,4-some8,7-6),7-f(some10-some7,some9-8,3-3,1-5,6-7,5-some8,2-6,4-some11),8-f(some12-8,some10-3,some9-5,3-7,1-some8,6-6,5-some11,2-some13)],0,8,[some14,8,some6,some5,some3,some2,7,4,2,5,6,1,3,some9,some10,some12|some15],[8,some7,4,some4,1,2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_158 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_158.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma251> a r:Inference;
  r:gives {
    "queens([1-f(2-some0,4-some1,7-2,some2-1,some3-some4,some5-4,some6-some7,8-8),2-f(5-some1,2-2,4-1,7-some4,some2-4,some3-some7,some5-8,some6-3),3-f(6-2,5-1,2-some4,4-4,7-some7,some2-8,some3-3,some5-5),4-f(1-1,6-some4,5-4,2-some7,4-8,7-3,some2-5,some3-7),5-f(3-some4,1-4,6-some7,5-8,2-3,4-5,7-7,some2-some8),6-f(some9-4,3-some7,1-8,6-3,5-5,2-7,4-some8,7-6),7-f(some10-some7,some9-8,3-3,1-5,6-7,5-some8,2-6,4-some11),8-f(some12-8,some10-3,some9-5,3-7,1-some8,6-6,5-some11,2-some13)],0,[4,2,7,3,6,8,5,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,6-some0,5-4,2-some1,4-8,7-3,some2-5,some3-7),[1-f(2-some4,4-some5,7-2,some2-1,some3-some0,some6-4,some7-some1,8-8),2-f(5-some5,2-2,4-1,7-some0,some2-4,some3-some1,some6-8,some7-3),3-f(6-2,5-1,2-some0,4-4,7-some1,some2-8,some3-3,some6-5),4-f(1-1,6-some0,5-4,2-some1,4-8,7-3,some2-5,some3-7),5-f(3-some0,1-4,6-some1,5-8,2-3,4-5,7-7,some2-some8),6-f(some9-4,3-some1,1-8,6-3,5-5,2-7,4-some8,7-6),7-f(some10-some1,some9-8,3-3,1-5,6-7,5-some8,2-6,4-some11),8-f(some12-8,some10-3,some9-5,3-7,1-some8,6-6,5-some11,2-some13)],[1-f(2-some4,4-some5,7-2,some2-1,some3-some0,some6-4,some7-some1,8-8),2-f(5-some5,2-2,4-1,7-some0,some2-4,some3-some1,some6-8,some7-3),3-f(6-2,5-1,2-some0,4-4,7-some1,some2-8,some3-3,some6-5),5-f(3-some0,1-4,6-some1,5-8,2-3,4-5,7-7,some2-some8),6-f(some9-4,3-some1,1-8,6-3,5-5,2-7,4-some8,7-6),7-f(some10-some1,some9-8,3-3,1-5,6-7,5-some8,2-6,4-some11),8-f(some12-8,some10-3,some9-5,3-7,1-some8,6-6,5-some11,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,6-some0,5-4,2-some1,4-8,7-3,some2-5,some3-7),1-1)"}]
    <#lemma404>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_159 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_159.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma252> a r:Inference;
  r:gives {
    "board([4,2,7,5,1,8,6,3],[1-f(2-some0,7-some1,some2-2,some3-1,5-5,8-some4,some5-some6,some7-4),2-f(4-some1,2-2,7-1,some2-5,some3-some4,5-some6,8-4,some5-3),3-f(6-2,4-1,2-5,7-some4,some2-some6,some3-4,5-3,8-8),4-f(1-1,6-5,4-some4,2-some6,7-4,some2-3,some3-8,5-some8),5-f(3-5,1-some4,6-some6,4-4,2-3,7-8,some2-some8,some3-7),6-f(some9-some4,3-some6,1-4,6-3,4-8,2-some8,7-7,some2-6),7-f(some10-some6,some9-4,3-3,1-8,6-some8,4-7,2-6,7-some11),8-f(some12-4,some10-3,some9-8,3-some8,1-7,6-6,4-some11,2-some13)],0,8,[some14,some7,some5,8,5,some3,some2,7,2,4,6,1,3,some9,some10,some12|some15],[4,some6,some4,5,1,2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_160 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_160.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma253> a r:Inference;
  r:gives {
    "queens([1-f(2-some0,7-some1,some2-2,some3-1,5-5,8-some4,some5-some6,some7-4),2-f(4-some1,2-2,7-1,some2-5,some3-some4,5-some6,8-4,some5-3),3-f(6-2,4-1,2-5,7-some4,some2-some6,some3-4,5-3,8-8),4-f(1-1,6-5,4-some4,2-some6,7-4,some2-3,some3-8,5-some8),5-f(3-5,1-some4,6-some6,4-4,2-3,7-8,some2-some8,some3-7),6-f(some9-some4,3-some6,1-4,6-3,4-8,2-some8,7-7,some2-6),7-f(some10-some6,some9-4,3-3,1-8,6-some8,4-7,2-6,7-some11),8-f(some12-4,some10-3,some9-8,3-some8,1-7,6-6,4-some11,2-some13)],0,[4,2,7,5,1,8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,6-5,4-some0,2-some1,7-4,some2-3,some3-8,5-some4),[1-f(2-some5,7-some6,some2-2,some3-1,5-5,8-some0,some7-some1,some8-4),2-f(4-some6,2-2,7-1,some2-5,some3-some0,5-some1,8-4,some7-3),3-f(6-2,4-1,2-5,7-some0,some2-some1,some3-4,5-3,8-8),4-f(1-1,6-5,4-some0,2-some1,7-4,some2-3,some3-8,5-some4),5-f(3-5,1-some0,6-some1,4-4,2-3,7-8,some2-some4,some3-7),6-f(some9-some0,3-some1,1-4,6-3,4-8,2-some4,7-7,some2-6),7-f(some10-some1,some9-4,3-3,1-8,6-some4,4-7,2-6,7-some11),8-f(some12-4,some10-3,some9-8,3-some4,1-7,6-6,4-some11,2-some13)],[1-f(2-some5,7-some6,some2-2,some3-1,5-5,8-some0,some7-some1,some8-4),2-f(4-some6,2-2,7-1,some2-5,some3-some0,5-some1,8-4,some7-3),3-f(6-2,4-1,2-5,7-some0,some2-some1,some3-4,5-3,8-8),5-f(3-5,1-some0,6-some1,4-4,2-3,7-8,some2-some4,some3-7),6-f(some9-some0,3-some1,1-4,6-3,4-8,2-some4,7-7,some2-6),7-f(some10-some1,some9-4,3-3,1-8,6-some4,4-7,2-6,7-some11),8-f(some12-4,some10-3,some9-8,3-some4,1-7,6-6,4-some11,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,6-5,4-some0,2-some1,7-4,some2-3,some3-8,5-some4),1-1)"}]
    <#lemma405>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_161 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_161.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma254> a r:Inference;
  r:gives {
    "board([4,2,8,5,7,1,3,6],[1-f(2-some0,some1-some2,8-2,some3-1,7-some4,6-6,some5-some6,some7-4),2-f(4-some2,2-2,some1-1,8-some4,some3-6,7-some6,6-4,some5-7),3-f(5-2,4-1,2-some4,some1-6,8-some6,some3-4,7-7,6-3),4-f(1-1,5-some4,4-6,2-some6,some1-4,8-7,some3-3,7-5),5-f(some8-some4,1-6,5-some6,4-4,2-7,some1-3,8-5,some3-some9),6-f(3-6,some8-some6,1-4,5-7,4-3,2-5,some1-some9,8-8),7-f(some10-some6,3-4,some8-7,1-3,5-5,4-some9,2-8,some1-some11),8-f(some12-4,some10-7,3-3,some8-5,1-some9,5-8,4-some11,2-some13)],0,8,[some14,some7,some5,6,7,some3,8,some1,2,4,5,1,some8,3,some10,some12|some15],[4,some6,6,some4,1,2,some2,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_162 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_162.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma255> a r:Inference;
  r:gives {
    "queens([1-f(2-some0,some1-some2,8-2,some3-1,7-some4,6-6,some5-some6,some7-4),2-f(4-some2,2-2,some1-1,8-some4,some3-6,7-some6,6-4,some5-7),3-f(5-2,4-1,2-some4,some1-6,8-some6,some3-4,7-7,6-3),4-f(1-1,5-some4,4-6,2-some6,some1-4,8-7,some3-3,7-5),5-f(some8-some4,1-6,5-some6,4-4,2-7,some1-3,8-5,some3-some9),6-f(3-6,some8-some6,1-4,5-7,4-3,2-5,some1-some9,8-8),7-f(some10-some6,3-4,some8-7,1-3,5-5,4-some9,2-8,some1-some11),8-f(some12-4,some10-7,3-3,some8-5,1-some9,5-8,4-some11,2-some13)],0,[4,2,8,5,7,1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,5-some0,4-6,2-some1,some2-4,8-7,some3-3,7-5),[1-f(2-some4,some2-some5,8-2,some3-1,7-some0,6-6,some6-some1,some7-4),2-f(4-some5,2-2,some2-1,8-some0,some3-6,7-some1,6-4,some6-7),3-f(5-2,4-1,2-some0,some2-6,8-some1,some3-4,7-7,6-3),4-f(1-1,5-some0,4-6,2-some1,some2-4,8-7,some3-3,7-5),5-f(some8-some0,1-6,5-some1,4-4,2-7,some2-3,8-5,some3-some9),6-f(3-6,some8-some1,1-4,5-7,4-3,2-5,some2-some9,8-8),7-f(some10-some1,3-4,some8-7,1-3,5-5,4-some9,2-8,some2-some11),8-f(some12-4,some10-7,3-3,some8-5,1-some9,5-8,4-some11,2-some13)],[1-f(2-some4,some2-some5,8-2,some3-1,7-some0,6-6,some6-some1,some7-4),2-f(4-some5,2-2,some2-1,8-some0,some3-6,7-some1,6-4,some6-7),3-f(5-2,4-1,2-some0,some2-6,8-some1,some3-4,7-7,6-3),5-f(some8-some0,1-6,5-some1,4-4,2-7,some2-3,8-5,some3-some9),6-f(3-6,some8-some1,1-4,5-7,4-3,2-5,some2-some9,8-8),7-f(some10-some1,3-4,some8-7,1-3,5-5,4-some9,2-8,some2-some11),8-f(some12-4,some10-7,3-3,some8-5,1-some9,5-8,4-some11,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,5-some0,4-6,2-some1,some2-4,8-7,some3-3,7-5),1-1)"}]
    <#lemma406>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_163 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_163.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma256> a r:Inference;
  r:gives {
    "board([4,2,8,6,1,3,5,7],[1-f(2-some0,8-some1,7-2,6-1,5-5,some2-some3,some4-some5,some6-6),2-f(some7-some1,2-2,8-1,7-5,6-some3,5-some5,some2-6,some4-4),3-f(4-2,some7-1,2-5,8-some3,7-some5,6-6,5-4,some2-3),4-f(1-1,4-5,some7-some3,2-some5,8-6,7-4,6-3,5-7),5-f(some8-5,1-some3,4-some5,some7-6,2-4,8-3,7-7,6-some9),6-f(3-some3,some8-some5,1-6,4-4,some7-3,2-7,8-some9,7-some10),7-f(some11-some5,3-6,some8-4,1-3,4-7,some7-some9,2-some10,8-8),8-f(some12-6,some11-4,3-3,some8-7,1-some9,4-some10,some7-8,2-some13)],0,8,[some14,some6,some4,some2,5,6,7,8,2,some7,4,1,some8,3,some11,some12|some15],[6,some5,some3,5,1,2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_164 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_164.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma257> a r:Inference;
  r:gives {
    "queens([1-f(2-some0,8-some1,7-2,6-1,5-5,some2-some3,some4-some5,some6-6),2-f(some7-some1,2-2,8-1,7-5,6-some3,5-some5,some2-6,some4-4),3-f(4-2,some7-1,2-5,8-some3,7-some5,6-6,5-4,some2-3),4-f(1-1,4-5,some7-some3,2-some5,8-6,7-4,6-3,5-7),5-f(some8-5,1-some3,4-some5,some7-6,2-4,8-3,7-7,6-some9),6-f(3-some3,some8-some5,1-6,4-4,some7-3,2-7,8-some9,7-some10),7-f(some11-some5,3-6,some8-4,1-3,4-7,some7-some9,2-some10,8-8),8-f(some12-6,some11-4,3-3,some8-7,1-some9,4-some10,some7-8,2-some13)],0,[4,2,8,6,1,3,5,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,4-5,some0-some1,2-some2,8-6,7-4,6-3,5-7),[1-f(2-some3,8-some4,7-2,6-1,5-5,some5-some1,some6-some2,some7-6),2-f(some0-some4,2-2,8-1,7-5,6-some1,5-some2,some5-6,some6-4),3-f(4-2,some0-1,2-5,8-some1,7-some2,6-6,5-4,some5-3),4-f(1-1,4-5,some0-some1,2-some2,8-6,7-4,6-3,5-7),5-f(some8-5,1-some1,4-some2,some0-6,2-4,8-3,7-7,6-some9),6-f(3-some1,some8-some2,1-6,4-4,some0-3,2-7,8-some9,7-some10),7-f(some11-some2,3-6,some8-4,1-3,4-7,some0-some9,2-some10,8-8),8-f(some12-6,some11-4,3-3,some8-7,1-some9,4-some10,some0-8,2-some13)],[1-f(2-some3,8-some4,7-2,6-1,5-5,some5-some1,some6-some2,some7-6),2-f(some0-some4,2-2,8-1,7-5,6-some1,5-some2,some5-6,some6-4),3-f(4-2,some0-1,2-5,8-some1,7-some2,6-6,5-4,some5-3),5-f(some8-5,1-some1,4-some2,some0-6,2-4,8-3,7-7,6-some9),6-f(3-some1,some8-some2,1-6,4-4,some0-3,2-7,8-some9,7-some10),7-f(some11-some2,3-6,some8-4,1-3,4-7,some0-some9,2-some10,8-8),8-f(some12-6,some11-4,3-3,some8-7,1-some9,4-some10,some0-8,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,4-5,some0-some1,2-some2,8-6,7-4,6-3,5-7),1-1)"}]
    <#lemma407>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_165 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_165.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma258> a r:Inference;
  r:gives {
    "board([4,6,1,5,2,8,3,7],[1-f(some0-some1,8-some2,3-3,5-1,7-some3,some4-5,some5-2,some6-4),2-f(4-some2,some0-3,8-1,3-some3,5-5,7-2,some4-4,some5-7),3-f(6-3,4-1,some0-some3,8-5,3-2,5-4,7-7,some4-some7),4-f(1-1,6-some3,4-5,some0-2,8-4,3-7,5-some7,7-some8),5-f(2-some3,1-5,6-2,4-4,some0-7,8-some7,3-some8,5-some9),6-f(some10-5,2-2,1-4,6-7,4-some7,some0-some8,8-some9,3-6),7-f(some11-2,some10-4,2-7,1-some7,6-some8,4-some9,some0-6,8-8),8-f(some12-4,some11-7,some10-some7,2-some8,1-some9,6-6,4-8,some0-some13)],0,8,[some14,some6,some5,some4,7,5,3,8,some0,4,6,1,2,some10,some11,some12|some15],[4,2,5,some3,1,3,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_166 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_166.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma259> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,8-some2,3-3,5-1,7-some3,some4-5,some5-2,some6-4),2-f(4-some2,some0-3,8-1,3-some3,5-5,7-2,some4-4,some5-7),3-f(6-3,4-1,some0-some3,8-5,3-2,5-4,7-7,some4-some7),4-f(1-1,6-some3,4-5,some0-2,8-4,3-7,5-some7,7-some8),5-f(2-some3,1-5,6-2,4-4,some0-7,8-some7,3-some8,5-some9),6-f(some10-5,2-2,1-4,6-7,4-some7,some0-some8,8-some9,3-6),7-f(some11-2,some10-4,2-7,1-some7,6-some8,4-some9,some0-6,8-8),8-f(some12-4,some11-7,some10-some7,2-some8,1-some9,6-6,4-8,some0-some13)],0,[4,6,1,5,2,8,3,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,6-some0,4-5,some1-2,8-4,3-7,5-some2,7-some3),[1-f(some1-some4,8-some5,3-3,5-1,7-some0,some6-5,some7-2,some8-4),2-f(4-some5,some1-3,8-1,3-some0,5-5,7-2,some6-4,some7-7),3-f(6-3,4-1,some1-some0,8-5,3-2,5-4,7-7,some6-some2),4-f(1-1,6-some0,4-5,some1-2,8-4,3-7,5-some2,7-some3),5-f(2-some0,1-5,6-2,4-4,some1-7,8-some2,3-some3,5-some9),6-f(some10-5,2-2,1-4,6-7,4-some2,some1-some3,8-some9,3-6),7-f(some11-2,some10-4,2-7,1-some2,6-some3,4-some9,some1-6,8-8),8-f(some12-4,some11-7,some10-some2,2-some3,1-some9,6-6,4-8,some1-some13)],[1-f(some1-some4,8-some5,3-3,5-1,7-some0,some6-5,some7-2,some8-4),2-f(4-some5,some1-3,8-1,3-some0,5-5,7-2,some6-4,some7-7),3-f(6-3,4-1,some1-some0,8-5,3-2,5-4,7-7,some6-some2),5-f(2-some0,1-5,6-2,4-4,some1-7,8-some2,3-some3,5-some9),6-f(some10-5,2-2,1-4,6-7,4-some2,some1-some3,8-some9,3-6),7-f(some11-2,some10-4,2-7,1-some2,6-some3,4-some9,some1-6,8-8),8-f(some12-4,some11-7,some10-some2,2-some3,1-some9,6-6,4-8,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,6-some0,4-5,some1-2,8-4,3-7,5-some2,7-some3),1-1)"}]
    <#lemma408>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_167 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_167.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma260> a r:Inference;
  r:gives {
    "board([4,6,8,2,7,1,3,5],[1-f(some0-some1,some2-some3,4-some4,8-1,7-4,6-6,some5-2,some6-some7),2-f(some8-some3,some0-some4,some2-1,4-4,8-6,7-2,6-some7,some5-7),3-f(5-some4,some8-1,some0-4,some2-6,4-2,8-some7,7-7,6-3),4-f(1-1,5-4,some8-6,some0-2,some2-some7,4-7,8-3,7-5),5-f(2-4,1-6,5-2,some8-some7,some0-7,some2-3,4-5,8-8),6-f(3-6,2-2,1-some7,5-7,some8-3,some0-5,some2-8,4-some9),7-f(some10-2,3-some7,2-7,1-3,5-5,some8-8,some0-some9,some2-some11),8-f(some12-some7,some10-7,3-3,2-5,1-8,5-some9,some8-some11,some0-some13)],0,8,[some14,some6,some5,6,7,8,4,some2,some0,some8,5,1,2,3,some10,some12|some15],[some7,2,6,4,1,some4,some3,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_168 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_168.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma261> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,some2-some3,4-some4,8-1,7-4,6-6,some5-2,some6-some7),2-f(some8-some3,some0-some4,some2-1,4-4,8-6,7-2,6-some7,some5-7),3-f(5-some4,some8-1,some0-4,some2-6,4-2,8-some7,7-7,6-3),4-f(1-1,5-4,some8-6,some0-2,some2-some7,4-7,8-3,7-5),5-f(2-4,1-6,5-2,some8-some7,some0-7,some2-3,4-5,8-8),6-f(3-6,2-2,1-some7,5-7,some8-3,some0-5,some2-8,4-some9),7-f(some10-2,3-some7,2-7,1-3,5-5,some8-8,some0-some9,some2-some11),8-f(some12-some7,some10-7,3-3,2-5,1-8,5-some9,some8-some11,some0-some13)],0,[4,6,8,2,7,1,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,5-4,some0-6,some1-2,some2-some3,4-7,8-3,7-5),[1-f(some1-some4,some2-some5,4-some6,8-1,7-4,6-6,some7-2,some8-some3),2-f(some0-some5,some1-some6,some2-1,4-4,8-6,7-2,6-some3,some7-7),3-f(5-some6,some0-1,some1-4,some2-6,4-2,8-some3,7-7,6-3),4-f(1-1,5-4,some0-6,some1-2,some2-some3,4-7,8-3,7-5),5-f(2-4,1-6,5-2,some0-some3,some1-7,some2-3,4-5,8-8),6-f(3-6,2-2,1-some3,5-7,some0-3,some1-5,some2-8,4-some9),7-f(some10-2,3-some3,2-7,1-3,5-5,some0-8,some1-some9,some2-some11),8-f(some12-some3,some10-7,3-3,2-5,1-8,5-some9,some0-some11,some1-some13)],[1-f(some1-some4,some2-some5,4-some6,8-1,7-4,6-6,some7-2,some8-some3),2-f(some0-some5,some1-some6,some2-1,4-4,8-6,7-2,6-some3,some7-7),3-f(5-some6,some0-1,some1-4,some2-6,4-2,8-some3,7-7,6-3),5-f(2-4,1-6,5-2,some0-some3,some1-7,some2-3,4-5,8-8),6-f(3-6,2-2,1-some3,5-7,some0-3,some1-5,some2-8,4-some9),7-f(some10-2,3-some3,2-7,1-3,5-5,some0-8,some1-some9,some2-some11),8-f(some12-some3,some10-7,3-3,2-5,1-8,5-some9,some0-some11,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,5-4,some0-6,some1-2,some2-some3,4-7,8-3,7-5),1-1)"}]
    <#lemma409>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_169 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_169.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma262> a r:Inference;
  r:gives {
    "board([4,6,8,3,1,7,5,2],[1-f(some0-some1,4-some2,7-some3,some4-1,5-5,some5-4,8-2,some6-some7),2-f(6-some2,some0-some3,4-1,7-5,some4-4,5-2,some5-some7,8-8),3-f(some8-some3,6-1,some0-5,4-4,7-2,some4-some7,5-8,some5-3),4-f(1-1,some8-5,6-4,some0-2,4-some7,7-8,some4-3,5-7),5-f(2-5,1-4,some8-2,6-some7,some0-8,4-3,7-7,some4-6),6-f(3-4,2-2,1-some7,some8-8,6-3,some0-7,4-6,7-some9),7-f(some10-2,3-some7,2-8,1-3,some8-7,6-6,some0-some9,4-some11),8-f(some12-some7,some10-8,3-3,2-7,1-6,some8-some9,6-some11,some0-some13)],0,8,[some14,some6,8,some5,5,some4,7,4,some0,6,some8,1,2,3,some10,some12|some15],[some7,2,4,5,1,some3,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_170 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_170.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma263> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,4-some2,7-some3,some4-1,5-5,some5-4,8-2,some6-some7),2-f(6-some2,some0-some3,4-1,7-5,some4-4,5-2,some5-some7,8-8),3-f(some8-some3,6-1,some0-5,4-4,7-2,some4-some7,5-8,some5-3),4-f(1-1,some8-5,6-4,some0-2,4-some7,7-8,some4-3,5-7),5-f(2-5,1-4,some8-2,6-some7,some0-8,4-3,7-7,some4-6),6-f(3-4,2-2,1-some7,some8-8,6-3,some0-7,4-6,7-some9),7-f(some10-2,3-some7,2-8,1-3,some8-7,6-6,some0-some9,4-some11),8-f(some12-some7,some10-8,3-3,2-7,1-6,some8-some9,6-some11,some0-some13)],0,[4,6,8,3,1,7,5,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,some0-5,6-4,some1-2,4-some2,7-8,some3-3,5-7),[1-f(some1-some4,4-some5,7-some6,some3-1,5-5,some7-4,8-2,some8-some2),2-f(6-some5,some1-some6,4-1,7-5,some3-4,5-2,some7-some2,8-8),3-f(some0-some6,6-1,some1-5,4-4,7-2,some3-some2,5-8,some7-3),4-f(1-1,some0-5,6-4,some1-2,4-some2,7-8,some3-3,5-7),5-f(2-5,1-4,some0-2,6-some2,some1-8,4-3,7-7,some3-6),6-f(3-4,2-2,1-some2,some0-8,6-3,some1-7,4-6,7-some9),7-f(some10-2,3-some2,2-8,1-3,some0-7,6-6,some1-some9,4-some11),8-f(some12-some2,some10-8,3-3,2-7,1-6,some0-some9,6-some11,some1-some13)],[1-f(some1-some4,4-some5,7-some6,some3-1,5-5,some7-4,8-2,some8-some2),2-f(6-some5,some1-some6,4-1,7-5,some3-4,5-2,some7-some2,8-8),3-f(some0-some6,6-1,some1-5,4-4,7-2,some3-some2,5-8,some7-3),5-f(2-5,1-4,some0-2,6-some2,some1-8,4-3,7-7,some3-6),6-f(3-4,2-2,1-some2,some0-8,6-3,some1-7,4-6,7-some9),7-f(some10-2,3-some2,2-8,1-3,some0-7,6-6,some1-some9,4-some11),8-f(some12-some2,some10-8,3-3,2-7,1-6,some0-some9,6-some11,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-5,6-4,some1-2,4-some2,7-8,some3-3,5-7),1-1)"}]
    <#lemma410>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_171 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_171.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma264> a r:Inference;
  r:gives {
    "board([4,7,1,8,5,2,6,3],[1-f(5-some0,7-some1,3-3,some2-1,6-some3,8-some4,some5-6,some6-2),2-f(some7-some1,5-3,7-1,3-some3,some2-some4,6-6,8-2,some5-5),3-f(some8-3,some7-1,5-some3,7-some4,3-6,some2-2,6-5,8-8),4-f(1-1,some8-some3,some7-some4,5-6,7-2,3-5,some2-8,6-4),5-f(4-some3,1-some4,some8-6,some7-2,5-5,7-8,3-4,some2-7),6-f(2-some4,4-6,1-2,some8-5,some7-8,5-4,7-7,3-some9),7-f(some10-6,2-2,4-5,1-8,some8-4,some7-7,5-some9,7-some11),8-f(some12-2,some10-5,2-8,4-4,1-7,some8-some9,some7-some11,5-some13)],0,8,[some14,some6,some5,8,6,some2,3,7,5,some7,some8,1,4,2,some10,some12|some15],[2,6,some4,some3,1,3,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_172 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_172.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma265> a r:Inference;
  r:gives {
    "queens([1-f(5-some0,7-some1,3-3,some2-1,6-some3,8-some4,some5-6,some6-2),2-f(some7-some1,5-3,7-1,3-some3,some2-some4,6-6,8-2,some5-5),3-f(some8-3,some7-1,5-some3,7-some4,3-6,some2-2,6-5,8-8),4-f(1-1,some8-some3,some7-some4,5-6,7-2,3-5,some2-8,6-4),5-f(4-some3,1-some4,some8-6,some7-2,5-5,7-8,3-4,some2-7),6-f(2-some4,4-6,1-2,some8-5,some7-8,5-4,7-7,3-some9),7-f(some10-6,2-2,4-5,1-8,some8-4,some7-7,5-some9,7-some11),8-f(some12-2,some10-5,2-8,4-4,1-7,some8-some9,some7-some11,5-some13)],0,[4,7,1,8,5,2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,some0-some1,some2-some3,5-6,7-2,3-5,some4-8,6-4),[1-f(5-some5,7-some6,3-3,some4-1,6-some1,8-some3,some7-6,some8-2),2-f(some2-some6,5-3,7-1,3-some1,some4-some3,6-6,8-2,some7-5),3-f(some0-3,some2-1,5-some1,7-some3,3-6,some4-2,6-5,8-8),4-f(1-1,some0-some1,some2-some3,5-6,7-2,3-5,some4-8,6-4),5-f(4-some1,1-some3,some0-6,some2-2,5-5,7-8,3-4,some4-7),6-f(2-some3,4-6,1-2,some0-5,some2-8,5-4,7-7,3-some9),7-f(some10-6,2-2,4-5,1-8,some0-4,some2-7,5-some9,7-some11),8-f(some12-2,some10-5,2-8,4-4,1-7,some0-some9,some2-some11,5-some13)],[1-f(5-some5,7-some6,3-3,some4-1,6-some1,8-some3,some7-6,some8-2),2-f(some2-some6,5-3,7-1,3-some1,some4-some3,6-6,8-2,some7-5),3-f(some0-3,some2-1,5-some1,7-some3,3-6,some4-2,6-5,8-8),5-f(4-some1,1-some3,some0-6,some2-2,5-5,7-8,3-4,some4-7),6-f(2-some3,4-6,1-2,some0-5,some2-8,5-4,7-7,3-some9),7-f(some10-6,2-2,4-5,1-8,some0-4,some2-7,5-some9,7-some11),8-f(some12-2,some10-5,2-8,4-4,1-7,some0-some9,some2-some11,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-some1,some2-some3,5-6,7-2,3-5,some4-8,6-4),1-1)"}]
    <#lemma411>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_173 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_173.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma266> a r:Inference;
  r:gives {
    "board([4,7,3,8,2,5,1,6],[1-f(3-some0,6-some1,8-some2,5-1,some3-3,some4-5,7-7,some5-2),2-f(some6-some1,3-some2,6-1,8-3,5-5,some3-7,some4-2,7-some7),3-f(some8-some2,some6-1,3-3,6-5,8-7,5-2,some3-some7,some4-6),4-f(1-1,some8-3,some6-5,3-7,6-2,8-some7,5-6,some3-4),5-f(4-3,1-5,some8-7,some6-2,3-some7,6-6,8-4,5-some9),6-f(2-5,4-7,1-2,some8-some7,some6-6,3-4,6-some9,8-8),7-f(some10-7,2-2,4-some7,1-6,some8-4,some6-some9,3-8,6-some11),8-f(some12-2,some10-some7,2-6,4-4,1-some9,some8-8,some6-some11,3-some13)],0,8,[some14,some5,7,some4,some3,5,8,6,3,some6,some8,1,4,2,some10,some12|some15],[2,7,5,3,1,some2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_174 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_174.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma267> a r:Inference;
  r:gives {
    "queens([1-f(3-some0,6-some1,8-some2,5-1,some3-3,some4-5,7-7,some5-2),2-f(some6-some1,3-some2,6-1,8-3,5-5,some3-7,some4-2,7-some7),3-f(some8-some2,some6-1,3-3,6-5,8-7,5-2,some3-some7,some4-6),4-f(1-1,some8-3,some6-5,3-7,6-2,8-some7,5-6,some3-4),5-f(4-3,1-5,some8-7,some6-2,3-some7,6-6,8-4,5-some9),6-f(2-5,4-7,1-2,some8-some7,some6-6,3-4,6-some9,8-8),7-f(some10-7,2-2,4-some7,1-6,some8-4,some6-some9,3-8,6-some11),8-f(some12-2,some10-some7,2-6,4-4,1-some9,some8-8,some6-some11,3-some13)],0,[4,7,3,8,2,5,1,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,some0-3,some1-5,3-7,6-2,8-some2,5-6,some3-4),[1-f(3-some4,6-some5,8-some6,5-1,some3-3,some7-5,7-7,some8-2),2-f(some1-some5,3-some6,6-1,8-3,5-5,some3-7,some7-2,7-some2),3-f(some0-some6,some1-1,3-3,6-5,8-7,5-2,some3-some2,some7-6),4-f(1-1,some0-3,some1-5,3-7,6-2,8-some2,5-6,some3-4),5-f(4-3,1-5,some0-7,some1-2,3-some2,6-6,8-4,5-some9),6-f(2-5,4-7,1-2,some0-some2,some1-6,3-4,6-some9,8-8),7-f(some10-7,2-2,4-some2,1-6,some0-4,some1-some9,3-8,6-some11),8-f(some12-2,some10-some2,2-6,4-4,1-some9,some0-8,some1-some11,3-some13)],[1-f(3-some4,6-some5,8-some6,5-1,some3-3,some7-5,7-7,some8-2),2-f(some1-some5,3-some6,6-1,8-3,5-5,some3-7,some7-2,7-some2),3-f(some0-some6,some1-1,3-3,6-5,8-7,5-2,some3-some2,some7-6),5-f(4-3,1-5,some0-7,some1-2,3-some2,6-6,8-4,5-some9),6-f(2-5,4-7,1-2,some0-some2,some1-6,3-4,6-some9,8-8),7-f(some10-7,2-2,4-some2,1-6,some0-4,some1-some9,3-8,6-some11),8-f(some12-2,some10-some2,2-6,4-4,1-some9,some0-8,some1-some11,3-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-3,some1-5,3-7,6-2,8-some2,5-6,some3-4),1-1)"}]
    <#lemma412>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_175 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_175.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma268> a r:Inference;
  r:gives {
    "board([4,7,5,2,6,1,3,8],[1-f(8-some0,some1-some2,4-some3,some4-1,7-4,6-6,some5-3,some6-2),2-f(5-some2,8-some3,some1-1,4-4,some4-6,7-3,6-2,some5-7),3-f(3-some3,5-1,8-4,some1-6,4-3,some4-2,7-7,6-5),4-f(1-1,3-4,5-6,8-3,some1-2,4-7,some4-5,7-some7),5-f(some8-4,1-6,3-3,5-2,8-7,some1-5,4-some7,some4-some9),6-f(2-6,some8-3,1-2,3-7,5-5,8-some7,some1-some9,4-some10),7-f(some11-3,2-2,some8-7,1-5,3-some7,5-some9,8-some10,some1-some12),8-f(some13-2,some11-7,2-5,some8-some7,1-some9,3-some10,5-some12,8-8)],0,8,[some14,some6,some5,6,7,some4,4,some1,8,5,3,1,some8,2,some11,some13|some15],[2,3,6,4,1,some3,some2,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_176 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_176.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma269> a r:Inference;
  r:gives {
    "queens([1-f(8-some0,some1-some2,4-some3,some4-1,7-4,6-6,some5-3,some6-2),2-f(5-some2,8-some3,some1-1,4-4,some4-6,7-3,6-2,some5-7),3-f(3-some3,5-1,8-4,some1-6,4-3,some4-2,7-7,6-5),4-f(1-1,3-4,5-6,8-3,some1-2,4-7,some4-5,7-some7),5-f(some8-4,1-6,3-3,5-2,8-7,some1-5,4-some7,some4-some9),6-f(2-6,some8-3,1-2,3-7,5-5,8-some7,some1-some9,4-some10),7-f(some11-3,2-2,some8-7,1-5,3-some7,5-some9,8-some10,some1-some12),8-f(some13-2,some11-7,2-5,some8-some7,1-some9,3-some10,5-some12,8-8)],0,[4,7,5,2,6,1,3,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,3-4,5-6,8-3,some0-2,4-7,some1-5,7-some2),[1-f(8-some3,some0-some4,4-some5,some1-1,7-4,6-6,some6-3,some7-2),2-f(5-some4,8-some5,some0-1,4-4,some1-6,7-3,6-2,some6-7),3-f(3-some5,5-1,8-4,some0-6,4-3,some1-2,7-7,6-5),4-f(1-1,3-4,5-6,8-3,some0-2,4-7,some1-5,7-some2),5-f(some8-4,1-6,3-3,5-2,8-7,some0-5,4-some2,some1-some9),6-f(2-6,some8-3,1-2,3-7,5-5,8-some2,some0-some9,4-some10),7-f(some11-3,2-2,some8-7,1-5,3-some2,5-some9,8-some10,some0-some12),8-f(some13-2,some11-7,2-5,some8-some2,1-some9,3-some10,5-some12,8-8)],[1-f(8-some3,some0-some4,4-some5,some1-1,7-4,6-6,some6-3,some7-2),2-f(5-some4,8-some5,some0-1,4-4,some1-6,7-3,6-2,some6-7),3-f(3-some5,5-1,8-4,some0-6,4-3,some1-2,7-7,6-5),5-f(some8-4,1-6,3-3,5-2,8-7,some0-5,4-some2,some1-some9),6-f(2-6,some8-3,1-2,3-7,5-5,8-some2,some0-some9,4-some10),7-f(some11-3,2-2,some8-7,1-5,3-some2,5-some9,8-some10,some0-some12),8-f(some13-2,some11-7,2-5,some8-some2,1-some9,3-some10,5-some12,8-8)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-4,5-6,8-3,some0-2,4-7,some1-5,7-some2),1-1)"}]
    <#lemma413>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_177 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_177.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma270> a r:Inference;
  r:gives {
    "board([4,7,5,3,1,6,8,2],[1-f(6-some0,4-some1,some2-some3,some4-1,5-5,some5-4,8-3,some6-2),2-f(7-some1,6-some3,4-1,some2-5,some4-4,5-3,some5-2,8-8),3-f(3-some3,7-1,6-5,4-4,some2-3,some4-2,5-8,some5-some7),4-f(1-1,3-5,7-4,6-3,4-2,some2-8,some4-some7,5-6),5-f(some8-5,1-4,3-3,7-2,6-8,4-some7,some2-6,some4-some9),6-f(2-4,some8-3,1-2,3-8,7-some7,6-6,4-some9,some2-some10),7-f(some11-3,2-2,some8-8,1-some7,3-6,7-some9,6-some10,4-7),8-f(some12-2,some11-8,2-some7,some8-6,1-some9,3-some10,7-7,6-some13)],0,8,[some14,some6,8,some5,5,some4,some2,4,6,7,3,1,some8,2,some11,some12|some15],[2,3,4,5,1,some3,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_178 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_178.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma271> a r:Inference;
  r:gives {
    "queens([1-f(6-some0,4-some1,some2-some3,some4-1,5-5,some5-4,8-3,some6-2),2-f(7-some1,6-some3,4-1,some2-5,some4-4,5-3,some5-2,8-8),3-f(3-some3,7-1,6-5,4-4,some2-3,some4-2,5-8,some5-some7),4-f(1-1,3-5,7-4,6-3,4-2,some2-8,some4-some7,5-6),5-f(some8-5,1-4,3-3,7-2,6-8,4-some7,some2-6,some4-some9),6-f(2-4,some8-3,1-2,3-8,7-some7,6-6,4-some9,some2-some10),7-f(some11-3,2-2,some8-8,1-some7,3-6,7-some9,6-some10,4-7),8-f(some12-2,some11-8,2-some7,some8-6,1-some9,3-some10,7-7,6-some13)],0,[4,7,5,3,1,6,8,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,3-5,7-4,6-3,4-2,some0-8,some1-some2,5-6),[1-f(6-some3,4-some4,some0-some5,some1-1,5-5,some6-4,8-3,some7-2),2-f(7-some4,6-some5,4-1,some0-5,some1-4,5-3,some6-2,8-8),3-f(3-some5,7-1,6-5,4-4,some0-3,some1-2,5-8,some6-some2),4-f(1-1,3-5,7-4,6-3,4-2,some0-8,some1-some2,5-6),5-f(some8-5,1-4,3-3,7-2,6-8,4-some2,some0-6,some1-some9),6-f(2-4,some8-3,1-2,3-8,7-some2,6-6,4-some9,some0-some10),7-f(some11-3,2-2,some8-8,1-some2,3-6,7-some9,6-some10,4-7),8-f(some12-2,some11-8,2-some2,some8-6,1-some9,3-some10,7-7,6-some13)],[1-f(6-some3,4-some4,some0-some5,some1-1,5-5,some6-4,8-3,some7-2),2-f(7-some4,6-some5,4-1,some0-5,some1-4,5-3,some6-2,8-8),3-f(3-some5,7-1,6-5,4-4,some0-3,some1-2,5-8,some6-some2),5-f(some8-5,1-4,3-3,7-2,6-8,4-some2,some0-6,some1-some9),6-f(2-4,some8-3,1-2,3-8,7-some2,6-6,4-some9,some0-some10),7-f(some11-3,2-2,some8-8,1-some2,3-6,7-some9,6-some10,4-7),8-f(some12-2,some11-8,2-some2,some8-6,1-some9,3-some10,7-7,6-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-5,7-4,6-3,4-2,some0-8,some1-some2,5-6),1-1)"}]
    <#lemma414>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_179 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_179.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma272> a r:Inference;
  r:gives {
    "board([4,8,1,3,6,2,7,5],[1-f(7-some0,4-some1,3-3,8-1,6-some2,some3-4,some4-6,some5-some6),2-f(5-some1,7-3,4-1,3-some2,8-4,6-6,some3-some6,some4-2),3-f(some7-3,5-1,7-some2,4-4,3-6,8-some6,6-2,some3-5),4-f(1-1,some7-some2,5-4,7-6,4-some6,3-2,8-5,6-some8),5-f(some9-some2,1-4,some7-6,5-some6,7-2,4-5,3-some8,8-8),6-f(some10-4,some9-6,1-some6,some7-2,5-5,7-some8,4-8,3-7),7-f(2-6,some10-some6,some9-2,1-5,some7-some8,5-8,7-7,4-some11),8-f(some12-some6,2-2,some10-5,some9-some8,1-8,some7-7,5-some11,7-some13)],0,8,[some14,some5,some4,some3,6,8,3,4,7,5,some7,1,some9,some10,2,some12|some15],[some6,6,4,some2,1,3,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_180 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_180.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma273> a r:Inference;
  r:gives {
    "queens([1-f(7-some0,4-some1,3-3,8-1,6-some2,some3-4,some4-6,some5-some6),2-f(5-some1,7-3,4-1,3-some2,8-4,6-6,some3-some6,some4-2),3-f(some7-3,5-1,7-some2,4-4,3-6,8-some6,6-2,some3-5),4-f(1-1,some7-some2,5-4,7-6,4-some6,3-2,8-5,6-some8),5-f(some9-some2,1-4,some7-6,5-some6,7-2,4-5,3-some8,8-8),6-f(some10-4,some9-6,1-some6,some7-2,5-5,7-some8,4-8,3-7),7-f(2-6,some10-some6,some9-2,1-5,some7-some8,5-8,7-7,4-some11),8-f(some12-some6,2-2,some10-5,some9-some8,1-8,some7-7,5-some11,7-some13)],0,[4,8,1,3,6,2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,some0-some1,5-4,7-6,4-some2,3-2,8-5,6-some3),[1-f(7-some4,4-some5,3-3,8-1,6-some1,some6-4,some7-6,some8-some2),2-f(5-some5,7-3,4-1,3-some1,8-4,6-6,some6-some2,some7-2),3-f(some0-3,5-1,7-some1,4-4,3-6,8-some2,6-2,some6-5),4-f(1-1,some0-some1,5-4,7-6,4-some2,3-2,8-5,6-some3),5-f(some9-some1,1-4,some0-6,5-some2,7-2,4-5,3-some3,8-8),6-f(some10-4,some9-6,1-some2,some0-2,5-5,7-some3,4-8,3-7),7-f(2-6,some10-some2,some9-2,1-5,some0-some3,5-8,7-7,4-some11),8-f(some12-some2,2-2,some10-5,some9-some3,1-8,some0-7,5-some11,7-some13)],[1-f(7-some4,4-some5,3-3,8-1,6-some1,some6-4,some7-6,some8-some2),2-f(5-some5,7-3,4-1,3-some1,8-4,6-6,some6-some2,some7-2),3-f(some0-3,5-1,7-some1,4-4,3-6,8-some2,6-2,some6-5),5-f(some9-some1,1-4,some0-6,5-some2,7-2,4-5,3-some3,8-8),6-f(some10-4,some9-6,1-some2,some0-2,5-5,7-some3,4-8,3-7),7-f(2-6,some10-some2,some9-2,1-5,some0-some3,5-8,7-7,4-some11),8-f(some12-some2,2-2,some10-5,some9-some3,1-8,some0-7,5-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-some1,5-4,7-6,4-some2,3-2,8-5,6-some3),1-1)"}]
    <#lemma415>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_181 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_181.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma274> a r:Inference;
  r:gives {
    "board([4,8,1,5,7,2,6,3],[1-f(some0-some1,7-some2,3-3,some3-1,6-some4,8-some5,some6-6,some7-4),2-f(4-some2,some0-3,7-1,3-some4,some3-some5,6-6,8-4,some6-2),3-f(5-3,4-1,some0-some4,7-some5,3-6,some3-4,6-2,8-8),4-f(1-1,5-some4,4-some5,some0-6,7-4,3-2,some3-8,6-5),5-f(some8-some4,1-some5,5-6,4-4,some0-2,7-8,3-5,some3-7),6-f(some9-some5,some8-6,1-4,5-2,4-8,some0-5,7-7,3-some10),7-f(2-6,some9-4,some8-2,1-8,5-5,4-7,some0-some10,7-some11),8-f(some12-4,2-2,some9-8,some8-5,1-7,5-some10,4-some11,some0-some13)],0,8,[some14,some7,some6,8,6,some3,3,7,some0,4,5,1,some8,some9,2,some12|some15],[4,6,some5,some4,1,3,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_182 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_182.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma275> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,7-some2,3-3,some3-1,6-some4,8-some5,some6-6,some7-4),2-f(4-some2,some0-3,7-1,3-some4,some3-some5,6-6,8-4,some6-2),3-f(5-3,4-1,some0-some4,7-some5,3-6,some3-4,6-2,8-8),4-f(1-1,5-some4,4-some5,some0-6,7-4,3-2,some3-8,6-5),5-f(some8-some4,1-some5,5-6,4-4,some0-2,7-8,3-5,some3-7),6-f(some9-some5,some8-6,1-4,5-2,4-8,some0-5,7-7,3-some10),7-f(2-6,some9-4,some8-2,1-8,5-5,4-7,some0-some10,7-some11),8-f(some12-4,2-2,some9-8,some8-5,1-7,5-some10,4-some11,some0-some13)],0,[4,8,1,5,7,2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,5-some0,4-some1,some2-6,7-4,3-2,some3-8,6-5),[1-f(some2-some4,7-some5,3-3,some3-1,6-some0,8-some1,some6-6,some7-4),2-f(4-some5,some2-3,7-1,3-some0,some3-some1,6-6,8-4,some6-2),3-f(5-3,4-1,some2-some0,7-some1,3-6,some3-4,6-2,8-8),4-f(1-1,5-some0,4-some1,some2-6,7-4,3-2,some3-8,6-5),5-f(some8-some0,1-some1,5-6,4-4,some2-2,7-8,3-5,some3-7),6-f(some9-some1,some8-6,1-4,5-2,4-8,some2-5,7-7,3-some10),7-f(2-6,some9-4,some8-2,1-8,5-5,4-7,some2-some10,7-some11),8-f(some12-4,2-2,some9-8,some8-5,1-7,5-some10,4-some11,some2-some13)],[1-f(some2-some4,7-some5,3-3,some3-1,6-some0,8-some1,some6-6,some7-4),2-f(4-some5,some2-3,7-1,3-some0,some3-some1,6-6,8-4,some6-2),3-f(5-3,4-1,some2-some0,7-some1,3-6,some3-4,6-2,8-8),5-f(some8-some0,1-some1,5-6,4-4,some2-2,7-8,3-5,some3-7),6-f(some9-some1,some8-6,1-4,5-2,4-8,some2-5,7-7,3-some10),7-f(2-6,some9-4,some8-2,1-8,5-5,4-7,some2-some10,7-some11),8-f(some12-4,2-2,some9-8,some8-5,1-7,5-some10,4-some11,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,5-some0,4-some1,some2-6,7-4,3-2,some3-8,6-5),1-1)"}]
    <#lemma416>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_183 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_183.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma276> a r:Inference;
  r:gives {
    "board([4,8,5,3,1,7,2,6],[1-f(some0-some1,4-some2,8-some3,some4-1,5-5,7-4,some5-3,some6-7),2-f(6-some2,some0-some3,4-1,8-5,some4-4,5-3,7-7,some5-2),3-f(3-some3,6-1,some0-5,4-4,8-3,some4-7,5-2,7-some7),4-f(1-1,3-5,6-4,some0-3,4-7,8-2,some4-some7,5-some8),5-f(some9-5,1-4,3-3,6-7,some0-2,4-some7,8-some8,some4-6),6-f(some10-4,some9-3,1-7,3-2,6-some7,some0-some8,4-6,8-8),7-f(2-3,some10-7,some9-2,1-some7,3-some8,6-6,some0-8,4-some11),8-f(some12-7,2-2,some10-some7,some9-some8,1-6,3-8,6-some11,some0-some13)],0,8,[some14,some6,some5,7,5,some4,8,4,some0,6,3,1,some9,some10,2,some12|some15],[7,3,4,5,1,some3,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_184 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_184.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma277> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,4-some2,8-some3,some4-1,5-5,7-4,some5-3,some6-7),2-f(6-some2,some0-some3,4-1,8-5,some4-4,5-3,7-7,some5-2),3-f(3-some3,6-1,some0-5,4-4,8-3,some4-7,5-2,7-some7),4-f(1-1,3-5,6-4,some0-3,4-7,8-2,some4-some7,5-some8),5-f(some9-5,1-4,3-3,6-7,some0-2,4-some7,8-some8,some4-6),6-f(some10-4,some9-3,1-7,3-2,6-some7,some0-some8,4-6,8-8),7-f(2-3,some10-7,some9-2,1-some7,3-some8,6-6,some0-8,4-some11),8-f(some12-7,2-2,some10-some7,some9-some8,1-6,3-8,6-some11,some0-some13)],0,[4,8,5,3,1,7,2,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(4-f(1-1,3-5,6-4,some0-3,4-7,8-2,some1-some2,5-some3),[1-f(some0-some4,4-some5,8-some6,some1-1,5-5,7-4,some7-3,some8-7),2-f(6-some5,some0-some6,4-1,8-5,some1-4,5-3,7-7,some7-2),3-f(3-some6,6-1,some0-5,4-4,8-3,some1-7,5-2,7-some2),4-f(1-1,3-5,6-4,some0-3,4-7,8-2,some1-some2,5-some3),5-f(some9-5,1-4,3-3,6-7,some0-2,4-some2,8-some3,some1-6),6-f(some10-4,some9-3,1-7,3-2,6-some2,some0-some3,4-6,8-8),7-f(2-3,some10-7,some9-2,1-some2,3-some3,6-6,some0-8,4-some11),8-f(some12-7,2-2,some10-some2,some9-some3,1-6,3-8,6-some11,some0-some13)],[1-f(some0-some4,4-some5,8-some6,some1-1,5-5,7-4,some7-3,some8-7),2-f(6-some5,some0-some6,4-1,8-5,some1-4,5-3,7-7,some7-2),3-f(3-some6,6-1,some0-5,4-4,8-3,some1-7,5-2,7-some2),5-f(some9-5,1-4,3-3,6-7,some0-2,4-some2,8-some3,some1-6),6-f(some10-4,some9-3,1-7,3-2,6-some2,some0-some3,4-6,8-8),7-f(2-3,some10-7,some9-2,1-some2,3-some3,6-6,some0-8,4-some11),8-f(some12-7,2-2,some10-some2,some9-some3,1-6,3-8,6-some11,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-5,6-4,some0-3,4-7,8-2,some1-some2,5-some3),1-1)"}]
    <#lemma417>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_185 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_185.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma278> a r:Inference;
  r:gives {
    "board([5,1,4,6,8,2,7,3],[1-f(7-some0,2-2,some1-some2,some3-some4,6-1,8-3,some5-6,some6-some7),2-f(3-2,7-some2,2-some4,some1-1,some3-3,6-6,8-some7,some5-4),3-f(4-some2,3-some4,7-1,2-3,some1-6,some3-some7,6-4,8-8),4-f(5-some4,4-1,3-3,7-6,2-some7,some1-4,some3-8,6-some8),5-f(1-1,5-3,4-6,3-some7,7-4,2-8,some1-some8,some3-5),6-f(some9-3,1-6,5-some7,4-4,3-8,7-some8,2-5,some1-7),7-f(some10-6,some9-some7,1-4,5-8,4-some8,3-5,7-7,2-some11),8-f(some12-some7,some10-4,some9-8,1-some8,5-5,4-7,3-some11,7-some13)],0,8,[some14,some6,some5,8,6,some3,some1,2,7,3,4,5,1,some9,some10,some12|some15],[some7,6,3,1,some4,some2,2,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_186 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_186.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma279> a r:Inference;
  r:gives {
    "queens([1-f(7-some0,2-2,some1-some2,some3-some4,6-1,8-3,some5-6,some6-some7),2-f(3-2,7-some2,2-some4,some1-1,some3-3,6-6,8-some7,some5-4),3-f(4-some2,3-some4,7-1,2-3,some1-6,some3-some7,6-4,8-8),4-f(5-some4,4-1,3-3,7-6,2-some7,some1-4,some3-8,6-some8),5-f(1-1,5-3,4-6,3-some7,7-4,2-8,some1-some8,some3-5),6-f(some9-3,1-6,5-some7,4-4,3-8,7-some8,2-5,some1-7),7-f(some10-6,some9-some7,1-4,5-8,4-some8,3-5,7-7,2-some11),8-f(some12-some7,some10-4,some9-8,1-some8,5-5,4-7,3-some11,7-some13)],0,[5,1,4,6,8,2,7,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,5-3,4-6,3-some0,7-4,2-8,some1-some2,some3-5),[1-f(7-some4,2-2,some1-some5,some3-some6,6-1,8-3,some7-6,some8-some0),2-f(3-2,7-some5,2-some6,some1-1,some3-3,6-6,8-some0,some7-4),3-f(4-some5,3-some6,7-1,2-3,some1-6,some3-some0,6-4,8-8),4-f(5-some6,4-1,3-3,7-6,2-some0,some1-4,some3-8,6-some2),5-f(1-1,5-3,4-6,3-some0,7-4,2-8,some1-some2,some3-5),6-f(some9-3,1-6,5-some0,4-4,3-8,7-some2,2-5,some1-7),7-f(some10-6,some9-some0,1-4,5-8,4-some2,3-5,7-7,2-some11),8-f(some12-some0,some10-4,some9-8,1-some2,5-5,4-7,3-some11,7-some13)],[1-f(7-some4,2-2,some1-some5,some3-some6,6-1,8-3,some7-6,some8-some0),2-f(3-2,7-some5,2-some6,some1-1,some3-3,6-6,8-some0,some7-4),3-f(4-some5,3-some6,7-1,2-3,some1-6,some3-some0,6-4,8-8),4-f(5-some6,4-1,3-3,7-6,2-some0,some1-4,some3-8,6-some2),6-f(some9-3,1-6,5-some0,4-4,3-8,7-some2,2-5,some1-7),7-f(some10-6,some9-some0,1-4,5-8,4-some2,3-5,7-7,2-some11),8-f(some12-some0,some10-4,some9-8,1-some2,5-5,4-7,3-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,5-3,4-6,3-some0,7-4,2-8,some1-some2,some3-5),1-1)"}]
    <#lemma418>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_187 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_187.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma280> a r:Inference;
  r:gives {
    "board([5,1,8,4,2,7,3,6],[1-f(4-some0,2-2,8-some1,5-some2,7-1,some3-5,some4-4,some5-some6),2-f(6-2,4-some1,2-some2,8-1,5-5,7-4,some3-some6,some4-7),3-f(some7-some1,6-some2,4-1,2-5,8-4,5-some6,7-7,some3-3),4-f(some8-some2,some7-1,6-5,4-4,2-some6,8-7,5-3,7-some9),5-f(1-1,some8-5,some7-4,6-some6,4-7,2-3,8-some9,5-6),6-f(3-5,1-4,some8-some6,some7-7,6-3,4-some9,2-6,8-8),7-f(some10-4,3-some6,1-7,some8-3,some7-some9,6-6,4-8,2-some11),8-f(some12-some6,some10-7,3-3,1-some9,some8-6,some7-8,6-some11,4-some13)],0,8,[some14,some5,some4,some3,7,5,8,2,4,6,some7,some8,1,3,some10,some12|some15],[some6,4,5,1,some2,some1,2,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_188 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_188.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma281> a r:Inference;
  r:gives {
    "queens([1-f(4-some0,2-2,8-some1,5-some2,7-1,some3-5,some4-4,some5-some6),2-f(6-2,4-some1,2-some2,8-1,5-5,7-4,some3-some6,some4-7),3-f(some7-some1,6-some2,4-1,2-5,8-4,5-some6,7-7,some3-3),4-f(some8-some2,some7-1,6-5,4-4,2-some6,8-7,5-3,7-some9),5-f(1-1,some8-5,some7-4,6-some6,4-7,2-3,8-some9,5-6),6-f(3-5,1-4,some8-some6,some7-7,6-3,4-some9,2-6,8-8),7-f(some10-4,3-some6,1-7,some8-3,some7-some9,6-6,4-8,2-some11),8-f(some12-some6,some10-7,3-3,1-some9,some8-6,some7-8,6-some11,4-some13)],0,[5,1,8,4,2,7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,some0-5,some1-4,6-some2,4-7,2-3,8-some3,5-6),[1-f(4-some4,2-2,8-some5,5-some6,7-1,some7-5,some8-4,some9-some2),2-f(6-2,4-some5,2-some6,8-1,5-5,7-4,some7-some2,some8-7),3-f(some1-some5,6-some6,4-1,2-5,8-4,5-some2,7-7,some7-3),4-f(some0-some6,some1-1,6-5,4-4,2-some2,8-7,5-3,7-some3),5-f(1-1,some0-5,some1-4,6-some2,4-7,2-3,8-some3,5-6),6-f(3-5,1-4,some0-some2,some1-7,6-3,4-some3,2-6,8-8),7-f(some10-4,3-some2,1-7,some0-3,some1-some3,6-6,4-8,2-some11),8-f(some12-some2,some10-7,3-3,1-some3,some0-6,some1-8,6-some11,4-some13)],[1-f(4-some4,2-2,8-some5,5-some6,7-1,some7-5,some8-4,some9-some2),2-f(6-2,4-some5,2-some6,8-1,5-5,7-4,some7-some2,some8-7),3-f(some1-some5,6-some6,4-1,2-5,8-4,5-some2,7-7,some7-3),4-f(some0-some6,some1-1,6-5,4-4,2-some2,8-7,5-3,7-some3),6-f(3-5,1-4,some0-some2,some1-7,6-3,4-some3,2-6,8-8),7-f(some10-4,3-some2,1-7,some0-3,some1-some3,6-6,4-8,2-some11),8-f(some12-some2,some10-7,3-3,1-some3,some0-6,some1-8,6-some11,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-5,some1-4,6-some2,4-7,2-3,8-some3,5-6),1-1)"}]
    <#lemma419>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_189 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_189.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma282> a r:Inference;
  r:gives {
    "board([5,1,8,6,3,7,2,4],[1-f(some0-some1,2-2,5-some2,some3-some4,8-1,7-some5,some6-5,some7-7),2-f(6-2,some0-some2,2-some4,5-1,some3-some5,8-5,7-7,some6-4),3-f(4-some2,6-some4,some0-1,2-some5,5-5,some3-7,8-4,7-3),4-f(some8-some4,4-1,6-some5,some0-5,2-7,5-4,some3-3,8-8),5-f(1-1,some8-some5,4-5,6-7,some0-4,2-3,5-8,some3-6),6-f(3-some5,1-5,some8-7,4-4,6-3,some0-8,2-6,5-some9),7-f(some10-5,3-7,1-4,some8-3,4-8,6-6,some0-some9,2-some11),8-f(some12-7,some10-4,3-3,1-8,some8-6,4-some9,6-some11,some0-some13)],0,8,[some14,some7,some6,7,8,some3,5,2,some0,6,4,some8,1,3,some10,some12|some15],[7,5,some5,1,some4,some2,2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_190 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_190.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma283> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,2-2,5-some2,some3-some4,8-1,7-some5,some6-5,some7-7),2-f(6-2,some0-some2,2-some4,5-1,some3-some5,8-5,7-7,some6-4),3-f(4-some2,6-some4,some0-1,2-some5,5-5,some3-7,8-4,7-3),4-f(some8-some4,4-1,6-some5,some0-5,2-7,5-4,some3-3,8-8),5-f(1-1,some8-some5,4-5,6-7,some0-4,2-3,5-8,some3-6),6-f(3-some5,1-5,some8-7,4-4,6-3,some0-8,2-6,5-some9),7-f(some10-5,3-7,1-4,some8-3,4-8,6-6,some0-some9,2-some11),8-f(some12-7,some10-4,3-3,1-8,some8-6,4-some9,6-some11,some0-some13)],0,[5,1,8,6,3,7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,some0-some1,4-5,6-7,some2-4,2-3,5-8,some3-6),[1-f(some2-some4,2-2,5-some5,some3-some6,8-1,7-some1,some7-5,some8-7),2-f(6-2,some2-some5,2-some6,5-1,some3-some1,8-5,7-7,some7-4),3-f(4-some5,6-some6,some2-1,2-some1,5-5,some3-7,8-4,7-3),4-f(some0-some6,4-1,6-some1,some2-5,2-7,5-4,some3-3,8-8),5-f(1-1,some0-some1,4-5,6-7,some2-4,2-3,5-8,some3-6),6-f(3-some1,1-5,some0-7,4-4,6-3,some2-8,2-6,5-some9),7-f(some10-5,3-7,1-4,some0-3,4-8,6-6,some2-some9,2-some11),8-f(some12-7,some10-4,3-3,1-8,some0-6,4-some9,6-some11,some2-some13)],[1-f(some2-some4,2-2,5-some5,some3-some6,8-1,7-some1,some7-5,some8-7),2-f(6-2,some2-some5,2-some6,5-1,some3-some1,8-5,7-7,some7-4),3-f(4-some5,6-some6,some2-1,2-some1,5-5,some3-7,8-4,7-3),4-f(some0-some6,4-1,6-some1,some2-5,2-7,5-4,some3-3,8-8),6-f(3-some1,1-5,some0-7,4-4,6-3,some2-8,2-6,5-some9),7-f(some10-5,3-7,1-4,some0-3,4-8,6-6,some2-some9,2-some11),8-f(some12-7,some10-4,3-3,1-8,some0-6,4-some9,6-some11,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-some1,4-5,6-7,some2-4,2-3,5-8,some3-6),1-1)"}]
    <#lemma420>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_191 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_191.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma284> a r:Inference;
  r:gives {
    "board([5,2,4,6,8,3,1,7],[1-f(2-some0,8-some1,some2-2,6-some3,some4-1,some5-3,7-7,some6-6),2-f(3-some1,2-2,8-some3,some2-1,6-3,some4-7,some5-6,7-4),3-f(4-2,3-some3,2-1,8-3,some2-7,6-6,some4-4,some5-some7),4-f(5-some3,4-1,3-3,2-7,8-6,some2-4,6-some7,some4-some8),5-f(1-1,5-3,4-7,3-6,2-4,8-some7,some2-some8,6-5),6-f(some9-3,1-7,5-6,4-4,3-some7,2-some8,8-5,some2-some10),7-f(some11-7,some9-6,1-4,5-some7,4-some8,3-5,2-some10,8-8),8-f(some12-6,some11-4,some9-some7,1-some8,5-5,4-some10,3-8,2-some13)],0,8,[some14,some6,7,some5,some4,6,some2,8,2,3,4,5,1,some9,some11,some12|some15],[6,7,3,1,some3,2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_192 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_192.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma285> a r:Inference;
  r:gives {
    "queens([1-f(2-some0,8-some1,some2-2,6-some3,some4-1,some5-3,7-7,some6-6),2-f(3-some1,2-2,8-some3,some2-1,6-3,some4-7,some5-6,7-4),3-f(4-2,3-some3,2-1,8-3,some2-7,6-6,some4-4,some5-some7),4-f(5-some3,4-1,3-3,2-7,8-6,some2-4,6-some7,some4-some8),5-f(1-1,5-3,4-7,3-6,2-4,8-some7,some2-some8,6-5),6-f(some9-3,1-7,5-6,4-4,3-some7,2-some8,8-5,some2-some10),7-f(some11-7,some9-6,1-4,5-some7,4-some8,3-5,2-some10,8-8),8-f(some12-6,some11-4,some9-some7,1-some8,5-5,4-some10,3-8,2-some13)],0,[5,2,4,6,8,3,1,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,5-3,4-7,3-6,2-4,8-some0,some1-some2,6-5),[1-f(2-some3,8-some4,some1-2,6-some5,some6-1,some7-3,7-7,some8-6),2-f(3-some4,2-2,8-some5,some1-1,6-3,some6-7,some7-6,7-4),3-f(4-2,3-some5,2-1,8-3,some1-7,6-6,some6-4,some7-some0),4-f(5-some5,4-1,3-3,2-7,8-6,some1-4,6-some0,some6-some2),5-f(1-1,5-3,4-7,3-6,2-4,8-some0,some1-some2,6-5),6-f(some9-3,1-7,5-6,4-4,3-some0,2-some2,8-5,some1-some10),7-f(some11-7,some9-6,1-4,5-some0,4-some2,3-5,2-some10,8-8),8-f(some12-6,some11-4,some9-some0,1-some2,5-5,4-some10,3-8,2-some13)],[1-f(2-some3,8-some4,some1-2,6-some5,some6-1,some7-3,7-7,some8-6),2-f(3-some4,2-2,8-some5,some1-1,6-3,some6-7,some7-6,7-4),3-f(4-2,3-some5,2-1,8-3,some1-7,6-6,some6-4,some7-some0),4-f(5-some5,4-1,3-3,2-7,8-6,some1-4,6-some0,some6-some2),6-f(some9-3,1-7,5-6,4-4,3-some0,2-some2,8-5,some1-some10),7-f(some11-7,some9-6,1-4,5-some0,4-some2,3-5,2-some10,8-8),8-f(some12-6,some11-4,some9-some0,1-some2,5-5,4-some10,3-8,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,5-3,4-7,3-6,2-4,8-some0,some1-some2,6-5),1-1)"}]
    <#lemma421>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_193 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_193.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma286> a r:Inference;
  r:gives {
    "board([5,2,4,7,3,8,6,1],[1-f(2-some0,7-some1,5-2,some2-some3,some4-1,some5-3,some6-5,8-8),2-f(3-some1,2-2,7-some3,5-1,some2-3,some4-5,some5-8,some6-some7),3-f(6-2,3-some3,2-1,7-3,5-5,some2-8,some4-some7,some5-4),4-f(4-some3,6-1,3-3,2-5,7-8,5-some7,some2-4,some4-some8),5-f(1-1,4-3,6-5,3-8,2-some7,7-4,5-some8,some2-7),6-f(some9-3,1-5,4-8,6-some7,3-4,2-some8,7-7,5-6),7-f(some10-5,some9-8,1-some7,4-4,6-some8,3-7,2-6,7-some11),8-f(some12-8,some10-some7,some9-4,1-some8,4-7,6-6,3-some11,2-some13)],0,8,[some14,8,some6,some5,some4,some2,5,7,2,3,6,4,1,some9,some10,some12|some15],[8,5,3,1,some3,2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_194 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_194.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma287> a r:Inference;
  r:gives {
    "queens([1-f(2-some0,7-some1,5-2,some2-some3,some4-1,some5-3,some6-5,8-8),2-f(3-some1,2-2,7-some3,5-1,some2-3,some4-5,some5-8,some6-some7),3-f(6-2,3-some3,2-1,7-3,5-5,some2-8,some4-some7,some5-4),4-f(4-some3,6-1,3-3,2-5,7-8,5-some7,some2-4,some4-some8),5-f(1-1,4-3,6-5,3-8,2-some7,7-4,5-some8,some2-7),6-f(some9-3,1-5,4-8,6-some7,3-4,2-some8,7-7,5-6),7-f(some10-5,some9-8,1-some7,4-4,6-some8,3-7,2-6,7-some11),8-f(some12-8,some10-some7,some9-4,1-some8,4-7,6-6,3-some11,2-some13)],0,[5,2,4,7,3,8,6,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,4-3,6-5,3-8,2-some0,7-4,5-some1,some2-7),[1-f(2-some3,7-some4,5-2,some2-some5,some6-1,some7-3,some8-5,8-8),2-f(3-some4,2-2,7-some5,5-1,some2-3,some6-5,some7-8,some8-some0),3-f(6-2,3-some5,2-1,7-3,5-5,some2-8,some6-some0,some7-4),4-f(4-some5,6-1,3-3,2-5,7-8,5-some0,some2-4,some6-some1),5-f(1-1,4-3,6-5,3-8,2-some0,7-4,5-some1,some2-7),6-f(some9-3,1-5,4-8,6-some0,3-4,2-some1,7-7,5-6),7-f(some10-5,some9-8,1-some0,4-4,6-some1,3-7,2-6,7-some11),8-f(some12-8,some10-some0,some9-4,1-some1,4-7,6-6,3-some11,2-some13)],[1-f(2-some3,7-some4,5-2,some2-some5,some6-1,some7-3,some8-5,8-8),2-f(3-some4,2-2,7-some5,5-1,some2-3,some6-5,some7-8,some8-some0),3-f(6-2,3-some5,2-1,7-3,5-5,some2-8,some6-some0,some7-4),4-f(4-some5,6-1,3-3,2-5,7-8,5-some0,some2-4,some6-some1),6-f(some9-3,1-5,4-8,6-some0,3-4,2-some1,7-7,5-6),7-f(some10-5,some9-8,1-some0,4-4,6-some1,3-7,2-6,7-some11),8-f(some12-8,some10-some0,some9-4,1-some1,4-7,6-6,3-some11,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,4-3,6-5,3-8,2-some0,7-4,5-some1,some2-7),1-1)"}]
    <#lemma422>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_195 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_195.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma288> a r:Inference;
  r:gives {
    "board([5,2,6,1,7,4,8,3],[1-f(2-some0,some1-some2,6-2,4-4,some3-1,8-some4,some5-some6,some7-3),2-f(7-some2,2-2,some1-4,6-1,4-some4,some3-some6,8-3,some5-6),3-f(5-2,7-4,2-1,some1-some4,6-some6,4-3,some3-6,8-8),4-f(3-4,5-1,7-some4,2-some6,some1-3,6-6,4-8,some3-5),5-f(1-1,3-some4,5-some6,7-3,2-6,some1-8,6-5,4-some8),6-f(some9-some4,1-some6,3-3,5-6,7-8,2-5,some1-some8,6-some10),7-f(some11-some6,some9-3,1-6,3-8,5-5,7-some8,2-some10,some1-7),8-f(some12-3,some11-6,some9-8,1-5,3-some8,5-some10,7-7,2-some13)],0,8,[some14,some7,some5,8,some3,4,6,some1,2,7,5,3,1,some9,some11,some12|some15],[3,some6,some4,1,4,2,some2,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_196 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_196.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma289> a r:Inference;
  r:gives {
    "queens([1-f(2-some0,some1-some2,6-2,4-4,some3-1,8-some4,some5-some6,some7-3),2-f(7-some2,2-2,some1-4,6-1,4-some4,some3-some6,8-3,some5-6),3-f(5-2,7-4,2-1,some1-some4,6-some6,4-3,some3-6,8-8),4-f(3-4,5-1,7-some4,2-some6,some1-3,6-6,4-8,some3-5),5-f(1-1,3-some4,5-some6,7-3,2-6,some1-8,6-5,4-some8),6-f(some9-some4,1-some6,3-3,5-6,7-8,2-5,some1-some8,6-some10),7-f(some11-some6,some9-3,1-6,3-8,5-5,7-some8,2-some10,some1-7),8-f(some12-3,some11-6,some9-8,1-5,3-some8,5-some10,7-7,2-some13)],0,[5,2,6,1,7,4,8,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,3-some0,5-some1,7-3,2-6,some2-8,6-5,4-some3),[1-f(2-some4,some2-some5,6-2,4-4,some6-1,8-some0,some7-some1,some8-3),2-f(7-some5,2-2,some2-4,6-1,4-some0,some6-some1,8-3,some7-6),3-f(5-2,7-4,2-1,some2-some0,6-some1,4-3,some6-6,8-8),4-f(3-4,5-1,7-some0,2-some1,some2-3,6-6,4-8,some6-5),5-f(1-1,3-some0,5-some1,7-3,2-6,some2-8,6-5,4-some3),6-f(some9-some0,1-some1,3-3,5-6,7-8,2-5,some2-some3,6-some10),7-f(some11-some1,some9-3,1-6,3-8,5-5,7-some3,2-some10,some2-7),8-f(some12-3,some11-6,some9-8,1-5,3-some3,5-some10,7-7,2-some13)],[1-f(2-some4,some2-some5,6-2,4-4,some6-1,8-some0,some7-some1,some8-3),2-f(7-some5,2-2,some2-4,6-1,4-some0,some6-some1,8-3,some7-6),3-f(5-2,7-4,2-1,some2-some0,6-some1,4-3,some6-6,8-8),4-f(3-4,5-1,7-some0,2-some1,some2-3,6-6,4-8,some6-5),6-f(some9-some0,1-some1,3-3,5-6,7-8,2-5,some2-some3,6-some10),7-f(some11-some1,some9-3,1-6,3-8,5-5,7-some3,2-some10,some2-7),8-f(some12-3,some11-6,some9-8,1-5,3-some3,5-some10,7-7,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-some0,5-some1,7-3,2-6,some2-8,6-5,4-some3),1-1)"}]
    <#lemma423>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_197 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_197.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma290> a r:Inference;
  r:gives {
    "board([5,2,8,1,4,7,3,6],[1-f(2-some0,5-some1,8-2,4-4,7-1,some2-some3,some4-some5,some6-5),2-f(6-some1,2-2,5-4,8-1,4-some3,7-some5,some2-5,some4-7),3-f(some7-2,6-4,2-1,5-some3,8-some5,4-5,7-7,some2-3),4-f(some8-4,some7-1,6-some3,2-some5,5-5,8-7,4-3,7-some9),5-f(1-1,some8-some3,some7-some5,6-5,2-7,5-3,8-some9,4-6),6-f(3-some3,1-some5,some8-5,some7-7,6-3,2-some9,5-6,8-8),7-f(some10-some5,3-5,1-7,some8-3,some7-some9,6-6,2-8,5-some11),8-f(some12-5,some10-7,3-3,1-some9,some8-6,some7-8,6-some11,2-some13)],0,8,[some14,some6,some4,some2,7,4,8,5,2,6,some7,some8,1,3,some10,some12|some15],[5,some5,some3,1,4,2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_198 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_198.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma291> a r:Inference;
  r:gives {
    "queens([1-f(2-some0,5-some1,8-2,4-4,7-1,some2-some3,some4-some5,some6-5),2-f(6-some1,2-2,5-4,8-1,4-some3,7-some5,some2-5,some4-7),3-f(some7-2,6-4,2-1,5-some3,8-some5,4-5,7-7,some2-3),4-f(some8-4,some7-1,6-some3,2-some5,5-5,8-7,4-3,7-some9),5-f(1-1,some8-some3,some7-some5,6-5,2-7,5-3,8-some9,4-6),6-f(3-some3,1-some5,some8-5,some7-7,6-3,2-some9,5-6,8-8),7-f(some10-some5,3-5,1-7,some8-3,some7-some9,6-6,2-8,5-some11),8-f(some12-5,some10-7,3-3,1-some9,some8-6,some7-8,6-some11,2-some13)],0,[5,2,8,1,4,7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,some0-some1,some2-some3,6-5,2-7,5-3,8-some4,4-6),[1-f(2-some5,5-some6,8-2,4-4,7-1,some7-some1,some8-some3,some9-5),2-f(6-some6,2-2,5-4,8-1,4-some1,7-some3,some7-5,some8-7),3-f(some2-2,6-4,2-1,5-some1,8-some3,4-5,7-7,some7-3),4-f(some0-4,some2-1,6-some1,2-some3,5-5,8-7,4-3,7-some4),5-f(1-1,some0-some1,some2-some3,6-5,2-7,5-3,8-some4,4-6),6-f(3-some1,1-some3,some0-5,some2-7,6-3,2-some4,5-6,8-8),7-f(some10-some3,3-5,1-7,some0-3,some2-some4,6-6,2-8,5-some11),8-f(some12-5,some10-7,3-3,1-some4,some0-6,some2-8,6-some11,2-some13)],[1-f(2-some5,5-some6,8-2,4-4,7-1,some7-some1,some8-some3,some9-5),2-f(6-some6,2-2,5-4,8-1,4-some1,7-some3,some7-5,some8-7),3-f(some2-2,6-4,2-1,5-some1,8-some3,4-5,7-7,some7-3),4-f(some0-4,some2-1,6-some1,2-some3,5-5,8-7,4-3,7-some4),6-f(3-some1,1-some3,some0-5,some2-7,6-3,2-some4,5-6,8-8),7-f(some10-some3,3-5,1-7,some0-3,some2-some4,6-6,2-8,5-some11),8-f(some12-5,some10-7,3-3,1-some4,some0-6,some2-8,6-some11,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-some1,some2-some3,6-5,2-7,5-3,8-some4,4-6),1-1)"}]
    <#lemma424>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_199 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_199.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma292> a r:Inference;
  r:gives {
    "board([5,3,1,6,8,2,4,7],[1-f(some0-some1,8-some2,3-3,7-2,6-1,some3-some4,some5-6,some6-some7),2-f(2-some2,some0-3,8-2,3-1,7-some4,6-6,some3-some7,some5-4),3-f(4-3,2-2,some0-1,8-some4,3-6,7-some7,6-4,some3-7),4-f(5-2,4-1,2-some4,some0-6,8-some7,3-4,7-7,6-some8),5-f(1-1,5-some4,4-6,2-some7,some0-4,8-7,3-some8,7-5),6-f(some9-some4,1-6,5-some7,4-4,2-7,some0-some8,8-5,3-some10),7-f(some11-6,some9-some7,1-4,5-7,4-some8,2-5,some0-some10,8-8),8-f(some12-some7,some11-4,some9-7,1-some8,5-5,4-some10,2-8,some0-some13)],0,8,[some14,some6,some5,some3,6,7,3,8,some0,2,4,5,1,some9,some11,some12|some15],[some7,6,some4,1,2,3,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_200 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_200.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma293> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,8-some2,3-3,7-2,6-1,some3-some4,some5-6,some6-some7),2-f(2-some2,some0-3,8-2,3-1,7-some4,6-6,some3-some7,some5-4),3-f(4-3,2-2,some0-1,8-some4,3-6,7-some7,6-4,some3-7),4-f(5-2,4-1,2-some4,some0-6,8-some7,3-4,7-7,6-some8),5-f(1-1,5-some4,4-6,2-some7,some0-4,8-7,3-some8,7-5),6-f(some9-some4,1-6,5-some7,4-4,2-7,some0-some8,8-5,3-some10),7-f(some11-6,some9-some7,1-4,5-7,4-some8,2-5,some0-some10,8-8),8-f(some12-some7,some11-4,some9-7,1-some8,5-5,4-some10,2-8,some0-some13)],0,[5,3,1,6,8,2,4,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,5-some0,4-6,2-some1,some2-4,8-7,3-some3,7-5),[1-f(some2-some4,8-some5,3-3,7-2,6-1,some6-some0,some7-6,some8-some1),2-f(2-some5,some2-3,8-2,3-1,7-some0,6-6,some6-some1,some7-4),3-f(4-3,2-2,some2-1,8-some0,3-6,7-some1,6-4,some6-7),4-f(5-2,4-1,2-some0,some2-6,8-some1,3-4,7-7,6-some3),5-f(1-1,5-some0,4-6,2-some1,some2-4,8-7,3-some3,7-5),6-f(some9-some0,1-6,5-some1,4-4,2-7,some2-some3,8-5,3-some10),7-f(some11-6,some9-some1,1-4,5-7,4-some3,2-5,some2-some10,8-8),8-f(some12-some1,some11-4,some9-7,1-some3,5-5,4-some10,2-8,some2-some13)],[1-f(some2-some4,8-some5,3-3,7-2,6-1,some6-some0,some7-6,some8-some1),2-f(2-some5,some2-3,8-2,3-1,7-some0,6-6,some6-some1,some7-4),3-f(4-3,2-2,some2-1,8-some0,3-6,7-some1,6-4,some6-7),4-f(5-2,4-1,2-some0,some2-6,8-some1,3-4,7-7,6-some3),6-f(some9-some0,1-6,5-some1,4-4,2-7,some2-some3,8-5,3-some10),7-f(some11-6,some9-some1,1-4,5-7,4-some3,2-5,some2-some10,8-8),8-f(some12-some1,some11-4,some9-7,1-some3,5-5,4-some10,2-8,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,5-some0,4-6,2-some1,some2-4,8-7,3-some3,7-5),1-1)"}]
    <#lemma425>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_201 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_201.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma294> a r:Inference;
  r:gives {
    "board([5,3,1,7,2,8,6,4],[1-f(some0-some1,7-some2,3-3,5-2,8-1,some3-5,some4-some5,some6-some7),2-f(2-some2,some0-3,7-2,3-1,5-5,8-some5,some3-some7,some4-some8),3-f(6-3,2-2,some0-1,7-5,3-some5,5-some7,8-some8,some3-4),4-f(4-2,6-1,2-5,some0-some5,7-some7,3-some8,5-4,8-8),5-f(1-1,4-5,6-some5,2-some7,some0-some8,7-4,3-8,5-7),6-f(some9-5,1-some5,4-some7,6-some8,2-4,some0-8,7-7,3-6),7-f(some10-some5,some9-some7,1-some8,4-4,6-8,2-7,some0-6,7-some11),8-f(some12-some7,some10-some8,some9-4,1-8,4-7,6-6,2-some11,some0-some13)],0,8,[some14,some6,some4,some3,8,5,3,7,some0,2,6,4,1,some9,some10,some12|some15],[some7,some5,5,1,2,3,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_202 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_202.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma295> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,7-some2,3-3,5-2,8-1,some3-5,some4-some5,some6-some7),2-f(2-some2,some0-3,7-2,3-1,5-5,8-some5,some3-some7,some4-some8),3-f(6-3,2-2,some0-1,7-5,3-some5,5-some7,8-some8,some3-4),4-f(4-2,6-1,2-5,some0-some5,7-some7,3-some8,5-4,8-8),5-f(1-1,4-5,6-some5,2-some7,some0-some8,7-4,3-8,5-7),6-f(some9-5,1-some5,4-some7,6-some8,2-4,some0-8,7-7,3-6),7-f(some10-some5,some9-some7,1-some8,4-4,6-8,2-7,some0-6,7-some11),8-f(some12-some7,some10-some8,some9-4,1-8,4-7,6-6,2-some11,some0-some13)],0,[5,3,1,7,2,8,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,4-5,6-some0,2-some1,some2-some3,7-4,3-8,5-7),[1-f(some2-some4,7-some5,3-3,5-2,8-1,some6-5,some7-some0,some8-some1),2-f(2-some5,some2-3,7-2,3-1,5-5,8-some0,some6-some1,some7-some3),3-f(6-3,2-2,some2-1,7-5,3-some0,5-some1,8-some3,some6-4),4-f(4-2,6-1,2-5,some2-some0,7-some1,3-some3,5-4,8-8),5-f(1-1,4-5,6-some0,2-some1,some2-some3,7-4,3-8,5-7),6-f(some9-5,1-some0,4-some1,6-some3,2-4,some2-8,7-7,3-6),7-f(some10-some0,some9-some1,1-some3,4-4,6-8,2-7,some2-6,7-some11),8-f(some12-some1,some10-some3,some9-4,1-8,4-7,6-6,2-some11,some2-some13)],[1-f(some2-some4,7-some5,3-3,5-2,8-1,some6-5,some7-some0,some8-some1),2-f(2-some5,some2-3,7-2,3-1,5-5,8-some0,some6-some1,some7-some3),3-f(6-3,2-2,some2-1,7-5,3-some0,5-some1,8-some3,some6-4),4-f(4-2,6-1,2-5,some2-some0,7-some1,3-some3,5-4,8-8),6-f(some9-5,1-some0,4-some1,6-some3,2-4,some2-8,7-7,3-6),7-f(some10-some0,some9-some1,1-some3,4-4,6-8,2-7,some2-6,7-some11),8-f(some12-some1,some10-some3,some9-4,1-8,4-7,6-6,2-some11,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,4-5,6-some0,2-some1,some2-some3,7-4,3-8,5-7),1-1)"}]
    <#lemma426>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_203 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_203.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma296> a r:Inference;
  r:gives {
    "board([5,3,8,4,7,1,6,2],[1-f(4-some0,7-some1,some2-some3,some4-2,some5-1,6-6,8-4,some6-some7),2-f(2-some1,4-some3,7-2,some2-1,some4-6,some5-4,6-some7,8-8),3-f(5-some3,2-2,4-1,7-6,some2-4,some4-some7,some5-8,6-3),4-f(some8-2,5-1,2-6,4-4,7-some7,some2-8,some4-3,some5-5),5-f(1-1,some8-6,5-4,2-some7,4-8,7-3,some2-5,some4-7),6-f(3-6,1-4,some8-some7,5-8,2-3,4-5,7-7,some2-some9),7-f(some10-4,3-some7,1-8,some8-3,5-5,2-7,4-some9,7-some11),8-f(some12-some7,some10-8,3-3,1-5,some8-7,5-some9,2-some11,4-some13)],0,8,[some14,some6,8,6,some5,some4,some2,7,4,2,5,some8,1,3,some10,some12|some15],[some7,4,6,1,2,some3,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_204 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_204.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma297> a r:Inference;
  r:gives {
    "queens([1-f(4-some0,7-some1,some2-some3,some4-2,some5-1,6-6,8-4,some6-some7),2-f(2-some1,4-some3,7-2,some2-1,some4-6,some5-4,6-some7,8-8),3-f(5-some3,2-2,4-1,7-6,some2-4,some4-some7,some5-8,6-3),4-f(some8-2,5-1,2-6,4-4,7-some7,some2-8,some4-3,some5-5),5-f(1-1,some8-6,5-4,2-some7,4-8,7-3,some2-5,some4-7),6-f(3-6,1-4,some8-some7,5-8,2-3,4-5,7-7,some2-some9),7-f(some10-4,3-some7,1-8,some8-3,5-5,2-7,4-some9,7-some11),8-f(some12-some7,some10-8,3-3,1-5,some8-7,5-some9,2-some11,4-some13)],0,[5,3,8,4,7,1,6,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,some0-6,5-4,2-some1,4-8,7-3,some2-5,some3-7),[1-f(4-some4,7-some5,some2-some6,some3-2,some7-1,6-6,8-4,some8-some1),2-f(2-some5,4-some6,7-2,some2-1,some3-6,some7-4,6-some1,8-8),3-f(5-some6,2-2,4-1,7-6,some2-4,some3-some1,some7-8,6-3),4-f(some0-2,5-1,2-6,4-4,7-some1,some2-8,some3-3,some7-5),5-f(1-1,some0-6,5-4,2-some1,4-8,7-3,some2-5,some3-7),6-f(3-6,1-4,some0-some1,5-8,2-3,4-5,7-7,some2-some9),7-f(some10-4,3-some1,1-8,some0-3,5-5,2-7,4-some9,7-some11),8-f(some12-some1,some10-8,3-3,1-5,some0-7,5-some9,2-some11,4-some13)],[1-f(4-some4,7-some5,some2-some6,some3-2,some7-1,6-6,8-4,some8-some1),2-f(2-some5,4-some6,7-2,some2-1,some3-6,some7-4,6-some1,8-8),3-f(5-some6,2-2,4-1,7-6,some2-4,some3-some1,some7-8,6-3),4-f(some0-2,5-1,2-6,4-4,7-some1,some2-8,some3-3,some7-5),6-f(3-6,1-4,some0-some1,5-8,2-3,4-5,7-7,some2-some9),7-f(some10-4,3-some1,1-8,some0-3,5-5,2-7,4-some9,7-some11),8-f(some12-some1,some10-8,3-3,1-5,some0-7,5-some9,2-some11,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-6,5-4,2-some1,4-8,7-3,some2-5,some3-7),1-1)"}]
    <#lemma427>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_205 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_205.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma298> a r:Inference;
  r:gives {
    "board([5,7,1,3,8,6,4,2],[1-f(6-some0,4-some1,3-3,7-some2,some3-1,some4-4,8-some5,some6-2),2-f(some7-some1,6-3,4-some2,3-1,7-4,some3-some5,some4-2,8-8),3-f(some8-3,some7-some2,6-1,4-4,3-some5,7-2,some3-8,some4-7),4-f(5-some2,some8-1,some7-4,6-some5,4-2,3-8,7-7,some3-6),5-f(1-1,5-4,some8-some5,some7-2,6-8,4-7,3-6,7-5),6-f(2-4,1-some5,5-2,some8-8,some7-7,6-6,4-5,3-some9),7-f(some10-some5,2-2,1-8,5-7,some8-6,some7-5,6-some9,4-some11),8-f(some12-2,some10-8,2-7,1-6,5-5,some8-some9,some7-some11,6-some13)],0,8,[some14,some6,8,some4,some3,7,3,4,6,some7,some8,5,1,2,some10,some12|some15],[2,some5,4,1,some2,3,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_206 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_206.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma299> a r:Inference;
  r:gives {
    "queens([1-f(6-some0,4-some1,3-3,7-some2,some3-1,some4-4,8-some5,some6-2),2-f(some7-some1,6-3,4-some2,3-1,7-4,some3-some5,some4-2,8-8),3-f(some8-3,some7-some2,6-1,4-4,3-some5,7-2,some3-8,some4-7),4-f(5-some2,some8-1,some7-4,6-some5,4-2,3-8,7-7,some3-6),5-f(1-1,5-4,some8-some5,some7-2,6-8,4-7,3-6,7-5),6-f(2-4,1-some5,5-2,some8-8,some7-7,6-6,4-5,3-some9),7-f(some10-some5,2-2,1-8,5-7,some8-6,some7-5,6-some9,4-some11),8-f(some12-2,some10-8,2-7,1-6,5-5,some8-some9,some7-some11,6-some13)],0,[5,7,1,3,8,6,4,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,5-4,some0-some1,some2-2,6-8,4-7,3-6,7-5),[1-f(6-some3,4-some4,3-3,7-some5,some6-1,some7-4,8-some1,some8-2),2-f(some2-some4,6-3,4-some5,3-1,7-4,some6-some1,some7-2,8-8),3-f(some0-3,some2-some5,6-1,4-4,3-some1,7-2,some6-8,some7-7),4-f(5-some5,some0-1,some2-4,6-some1,4-2,3-8,7-7,some6-6),5-f(1-1,5-4,some0-some1,some2-2,6-8,4-7,3-6,7-5),6-f(2-4,1-some1,5-2,some0-8,some2-7,6-6,4-5,3-some9),7-f(some10-some1,2-2,1-8,5-7,some0-6,some2-5,6-some9,4-some11),8-f(some12-2,some10-8,2-7,1-6,5-5,some0-some9,some2-some11,6-some13)],[1-f(6-some3,4-some4,3-3,7-some5,some6-1,some7-4,8-some1,some8-2),2-f(some2-some4,6-3,4-some5,3-1,7-4,some6-some1,some7-2,8-8),3-f(some0-3,some2-some5,6-1,4-4,3-some1,7-2,some6-8,some7-7),4-f(5-some5,some0-1,some2-4,6-some1,4-2,3-8,7-7,some6-6),6-f(2-4,1-some1,5-2,some0-8,some2-7,6-6,4-5,3-some9),7-f(some10-some1,2-2,1-8,5-7,some0-6,some2-5,6-some9,4-some11),8-f(some12-2,some10-8,2-7,1-6,5-5,some0-some9,some2-some11,6-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,5-4,some0-some1,some2-2,6-8,4-7,3-6,7-5),1-1)"}]
    <#lemma428>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_207 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_207.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma300> a r:Inference;
  r:gives {
    "board([5,7,1,4,2,8,6,3],[1-f(4-some0,7-some1,3-3,5-some2,some3-1,8-5,some4-4,some5-2),2-f(some6-some1,4-3,7-some2,3-1,5-5,some3-4,8-2,some4-some7),3-f(6-3,some6-some2,4-1,7-5,3-4,5-2,some3-some7,8-8),4-f(some8-some2,6-1,some6-5,4-4,7-2,3-some7,5-8,some3-some9),5-f(1-1,some8-5,6-4,some6-2,4-some7,7-8,3-some9,5-7),6-f(2-5,1-4,some8-2,6-some7,some6-8,4-some9,7-7,3-6),7-f(some10-4,2-2,1-some7,some8-8,6-some9,some6-7,4-6,7-some11),8-f(some12-2,some10-some7,2-8,1-some9,some8-7,6-6,some6-some11,4-some13)],0,8,[some14,some5,some4,8,some3,5,3,7,4,some6,6,some8,1,2,some10,some12|some15],[2,4,5,1,some2,3,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_208 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_208.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma301> a r:Inference;
  r:gives {
    "queens([1-f(4-some0,7-some1,3-3,5-some2,some3-1,8-5,some4-4,some5-2),2-f(some6-some1,4-3,7-some2,3-1,5-5,some3-4,8-2,some4-some7),3-f(6-3,some6-some2,4-1,7-5,3-4,5-2,some3-some7,8-8),4-f(some8-some2,6-1,some6-5,4-4,7-2,3-some7,5-8,some3-some9),5-f(1-1,some8-5,6-4,some6-2,4-some7,7-8,3-some9,5-7),6-f(2-5,1-4,some8-2,6-some7,some6-8,4-some9,7-7,3-6),7-f(some10-4,2-2,1-some7,some8-8,6-some9,some6-7,4-6,7-some11),8-f(some12-2,some10-some7,2-8,1-some9,some8-7,6-6,some6-some11,4-some13)],0,[5,7,1,4,2,8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,some0-5,6-4,some1-2,4-some2,7-8,3-some3,5-7),[1-f(4-some4,7-some5,3-3,5-some6,some7-1,8-5,some8-4,some9-2),2-f(some1-some5,4-3,7-some6,3-1,5-5,some7-4,8-2,some8-some2),3-f(6-3,some1-some6,4-1,7-5,3-4,5-2,some7-some2,8-8),4-f(some0-some6,6-1,some1-5,4-4,7-2,3-some2,5-8,some7-some3),5-f(1-1,some0-5,6-4,some1-2,4-some2,7-8,3-some3,5-7),6-f(2-5,1-4,some0-2,6-some2,some1-8,4-some3,7-7,3-6),7-f(some10-4,2-2,1-some2,some0-8,6-some3,some1-7,4-6,7-some11),8-f(some12-2,some10-some2,2-8,1-some3,some0-7,6-6,some1-some11,4-some13)],[1-f(4-some4,7-some5,3-3,5-some6,some7-1,8-5,some8-4,some9-2),2-f(some1-some5,4-3,7-some6,3-1,5-5,some7-4,8-2,some8-some2),3-f(6-3,some1-some6,4-1,7-5,3-4,5-2,some7-some2,8-8),4-f(some0-some6,6-1,some1-5,4-4,7-2,3-some2,5-8,some7-some3),6-f(2-5,1-4,some0-2,6-some2,some1-8,4-some3,7-7,3-6),7-f(some10-4,2-2,1-some2,some0-8,6-some3,some1-7,4-6,7-some11),8-f(some12-2,some10-some2,2-8,1-some3,some0-7,6-6,some1-some11,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-5,6-4,some1-2,4-some2,7-8,3-some3,5-7),1-1)"}]
    <#lemma429>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_209 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_209.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma302> a r:Inference;
  r:gives {
    "board([5,7,2,4,8,1,3,6],[1-f(4-some0,3-some1,8-some2,some3-3,7-1,6-6,some4-4,some5-2),2-f(some6-some1,4-some2,3-3,8-1,some3-6,7-4,6-2,some4-7),3-f(some7-some2,some6-3,4-1,3-6,8-4,some3-2,7-7,6-some8),4-f(5-3,some7-1,some6-6,4-4,3-2,8-7,some3-some8,7-some9),5-f(1-1,5-6,some7-4,some6-2,4-7,3-some8,8-some9,some3-5),6-f(2-6,1-4,5-2,some7-7,some6-some8,4-some9,3-5,8-8),7-f(some10-4,2-2,1-7,5-some8,some7-some9,some6-5,4-8,3-some11),8-f(some12-2,some10-7,2-some8,1-some9,5-5,some7-8,some6-some11,4-some13)],0,8,[some14,some5,some4,6,7,some3,8,3,4,some6,some7,5,1,2,some10,some12|some15],[2,4,6,1,3,some2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_210 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_210.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma303> a r:Inference;
  r:gives {
    "queens([1-f(4-some0,3-some1,8-some2,some3-3,7-1,6-6,some4-4,some5-2),2-f(some6-some1,4-some2,3-3,8-1,some3-6,7-4,6-2,some4-7),3-f(some7-some2,some6-3,4-1,3-6,8-4,some3-2,7-7,6-some8),4-f(5-3,some7-1,some6-6,4-4,3-2,8-7,some3-some8,7-some9),5-f(1-1,5-6,some7-4,some6-2,4-7,3-some8,8-some9,some3-5),6-f(2-6,1-4,5-2,some7-7,some6-some8,4-some9,3-5,8-8),7-f(some10-4,2-2,1-7,5-some8,some7-some9,some6-5,4-8,3-some11),8-f(some12-2,some10-7,2-some8,1-some9,5-5,some7-8,some6-some11,4-some13)],0,[5,7,2,4,8,1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,5-6,some0-4,some1-2,4-7,3-some2,8-some3,some4-5),[1-f(4-some5,3-some6,8-some7,some4-3,7-1,6-6,some8-4,some9-2),2-f(some1-some6,4-some7,3-3,8-1,some4-6,7-4,6-2,some8-7),3-f(some0-some7,some1-3,4-1,3-6,8-4,some4-2,7-7,6-some2),4-f(5-3,some0-1,some1-6,4-4,3-2,8-7,some4-some2,7-some3),5-f(1-1,5-6,some0-4,some1-2,4-7,3-some2,8-some3,some4-5),6-f(2-6,1-4,5-2,some0-7,some1-some2,4-some3,3-5,8-8),7-f(some10-4,2-2,1-7,5-some2,some0-some3,some1-5,4-8,3-some11),8-f(some12-2,some10-7,2-some2,1-some3,5-5,some0-8,some1-some11,4-some13)],[1-f(4-some5,3-some6,8-some7,some4-3,7-1,6-6,some8-4,some9-2),2-f(some1-some6,4-some7,3-3,8-1,some4-6,7-4,6-2,some8-7),3-f(some0-some7,some1-3,4-1,3-6,8-4,some4-2,7-7,6-some2),4-f(5-3,some0-1,some1-6,4-4,3-2,8-7,some4-some2,7-some3),6-f(2-6,1-4,5-2,some0-7,some1-some2,4-some3,3-5,8-8),7-f(some10-4,2-2,1-7,5-some2,some0-some3,some1-5,4-8,3-some11),8-f(some12-2,some10-7,2-some2,1-some3,5-5,some0-8,some1-some11,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,5-6,some0-4,some1-2,4-7,3-some2,8-some3,some4-5),1-1)"}]
    <#lemma430>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_211 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_211.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma304> a r:Inference;
  r:gives {
    "board([5,7,2,6,3,1,4,8],[1-f(8-some0,3-some1,5-some2,7-3,some3-1,6-6,some4-5,some5-2),2-f(some6-some1,8-some2,3-3,5-1,7-6,some3-5,6-2,some4-4),3-f(4-some2,some6-3,8-1,3-6,5-5,7-2,some3-4,6-7),4-f(some7-3,4-1,some6-6,8-5,3-2,5-4,7-7,some3-some8),5-f(1-1,some7-6,4-5,some6-2,8-4,3-7,5-some8,7-some9),6-f(2-6,1-5,some7-2,4-4,some6-7,8-some8,3-some9,5-some10),7-f(some11-5,2-2,1-4,some7-7,4-some8,some6-some9,8-some10,3-some12),8-f(some13-2,some11-4,2-7,1-some8,some7-some9,4-some10,some6-some12,8-8)],0,8,[some14,some5,some4,6,some3,7,5,3,8,some6,4,some7,1,2,some11,some13|some15],[2,5,6,1,3,some2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_212 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_212.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma305> a r:Inference;
  r:gives {
    "queens([1-f(8-some0,3-some1,5-some2,7-3,some3-1,6-6,some4-5,some5-2),2-f(some6-some1,8-some2,3-3,5-1,7-6,some3-5,6-2,some4-4),3-f(4-some2,some6-3,8-1,3-6,5-5,7-2,some3-4,6-7),4-f(some7-3,4-1,some6-6,8-5,3-2,5-4,7-7,some3-some8),5-f(1-1,some7-6,4-5,some6-2,8-4,3-7,5-some8,7-some9),6-f(2-6,1-5,some7-2,4-4,some6-7,8-some8,3-some9,5-some10),7-f(some11-5,2-2,1-4,some7-7,4-some8,some6-some9,8-some10,3-some12),8-f(some13-2,some11-4,2-7,1-some8,some7-some9,4-some10,some6-some12,8-8)],0,[5,7,2,6,3,1,4,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,some0-6,4-5,some1-2,8-4,3-7,5-some2,7-some3),[1-f(8-some4,3-some5,5-some6,7-3,some7-1,6-6,some8-5,some9-2),2-f(some1-some5,8-some6,3-3,5-1,7-6,some7-5,6-2,some8-4),3-f(4-some6,some1-3,8-1,3-6,5-5,7-2,some7-4,6-7),4-f(some0-3,4-1,some1-6,8-5,3-2,5-4,7-7,some7-some2),5-f(1-1,some0-6,4-5,some1-2,8-4,3-7,5-some2,7-some3),6-f(2-6,1-5,some0-2,4-4,some1-7,8-some2,3-some3,5-some10),7-f(some11-5,2-2,1-4,some0-7,4-some2,some1-some3,8-some10,3-some12),8-f(some13-2,some11-4,2-7,1-some2,some0-some3,4-some10,some1-some12,8-8)],[1-f(8-some4,3-some5,5-some6,7-3,some7-1,6-6,some8-5,some9-2),2-f(some1-some5,8-some6,3-3,5-1,7-6,some7-5,6-2,some8-4),3-f(4-some6,some1-3,8-1,3-6,5-5,7-2,some7-4,6-7),4-f(some0-3,4-1,some1-6,8-5,3-2,5-4,7-7,some7-some2),6-f(2-6,1-5,some0-2,4-4,some1-7,8-some2,3-some3,5-some10),7-f(some11-5,2-2,1-4,some0-7,4-some2,some1-some3,8-some10,3-some12),8-f(some13-2,some11-4,2-7,1-some2,some0-some3,4-some10,some1-some12,8-8)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-6,4-5,some1-2,8-4,3-7,5-some2,7-some3),1-1)"}]
    <#lemma431>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_213 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_213.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma306> a r:Inference;
  r:gives {
    "board([5,7,2,6,3,1,8,4],[1-f(some0-some1,3-some2,5-some3,some4-3,8-1,6-6,some5-5,some6-2),2-f(7-some2,some0-some3,3-3,5-1,some4-6,8-5,6-2,some5-4),3-f(4-some3,7-3,some0-1,3-6,5-5,some4-2,8-4,6-some7),4-f(some8-3,4-1,7-6,some0-5,3-2,5-4,some4-some7,8-8),5-f(1-1,some8-6,4-5,7-2,some0-4,3-some7,5-8,some4-some9),6-f(2-6,1-5,some8-2,4-4,7-some7,some0-8,3-some9,5-some10),7-f(some11-5,2-2,1-4,some8-some7,4-8,7-some9,some0-some10,3-7),8-f(some12-2,some11-4,2-some7,1-8,some8-some9,4-some10,7-7,some0-some13)],0,8,[some14,some6,some5,6,8,some4,5,3,some0,7,4,some8,1,2,some11,some12|some15],[2,5,6,1,3,some3,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_214 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_214.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma307> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,3-some2,5-some3,some4-3,8-1,6-6,some5-5,some6-2),2-f(7-some2,some0-some3,3-3,5-1,some4-6,8-5,6-2,some5-4),3-f(4-some3,7-3,some0-1,3-6,5-5,some4-2,8-4,6-some7),4-f(some8-3,4-1,7-6,some0-5,3-2,5-4,some4-some7,8-8),5-f(1-1,some8-6,4-5,7-2,some0-4,3-some7,5-8,some4-some9),6-f(2-6,1-5,some8-2,4-4,7-some7,some0-8,3-some9,5-some10),7-f(some11-5,2-2,1-4,some8-some7,4-8,7-some9,some0-some10,3-7),8-f(some12-2,some11-4,2-some7,1-8,some8-some9,4-some10,7-7,some0-some13)],0,[5,7,2,6,3,1,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,some0-6,4-5,7-2,some1-4,3-some2,5-8,some3-some4),[1-f(some1-some5,3-some6,5-some7,some3-3,8-1,6-6,some8-5,some9-2),2-f(7-some6,some1-some7,3-3,5-1,some3-6,8-5,6-2,some8-4),3-f(4-some7,7-3,some1-1,3-6,5-5,some3-2,8-4,6-some2),4-f(some0-3,4-1,7-6,some1-5,3-2,5-4,some3-some2,8-8),5-f(1-1,some0-6,4-5,7-2,some1-4,3-some2,5-8,some3-some4),6-f(2-6,1-5,some0-2,4-4,7-some2,some1-8,3-some4,5-some10),7-f(some11-5,2-2,1-4,some0-some2,4-8,7-some4,some1-some10,3-7),8-f(some12-2,some11-4,2-some2,1-8,some0-some4,4-some10,7-7,some1-some13)],[1-f(some1-some5,3-some6,5-some7,some3-3,8-1,6-6,some8-5,some9-2),2-f(7-some6,some1-some7,3-3,5-1,some3-6,8-5,6-2,some8-4),3-f(4-some7,7-3,some1-1,3-6,5-5,some3-2,8-4,6-some2),4-f(some0-3,4-1,7-6,some1-5,3-2,5-4,some3-some2,8-8),6-f(2-6,1-5,some0-2,4-4,7-some2,some1-8,3-some4,5-some10),7-f(some11-5,2-2,1-4,some0-some2,4-8,7-some4,some1-some10,3-7),8-f(some12-2,some11-4,2-some2,1-8,some0-some4,4-some10,7-7,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-6,4-5,7-2,some1-4,3-some2,5-8,some3-some4),1-1)"}]
    <#lemma432>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_215 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_215.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma308> a r:Inference;
  r:gives {
    "board([5,7,4,1,3,8,6,2],[1-f(some0-some1,7-some2,5-some3,4-4,some4-1,some5-3,8-5,some6-2),2-f(3-some2,some0-some3,7-4,5-1,4-3,some4-5,some5-2,8-8),3-f(6-some3,3-4,some0-1,7-3,5-5,4-2,some4-8,some5-some7),4-f(some8-4,6-1,3-3,some0-5,7-2,5-8,4-some7,some4-some9),5-f(1-1,some8-3,6-5,3-2,some0-8,7-some7,5-some9,4-7),6-f(2-3,1-5,some8-2,6-8,3-some7,some0-some9,7-7,5-6),7-f(some10-5,2-2,1-8,some8-some7,6-some9,3-7,some0-6,7-some11),8-f(some12-2,some10-8,2-some7,1-some9,some8-7,6-6,3-some11,some0-some13)],0,8,[some14,some6,8,some5,some4,4,5,7,some0,3,6,some8,1,2,some10,some12|some15],[2,5,3,1,4,some3,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_216 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_216.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma309> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,7-some2,5-some3,4-4,some4-1,some5-3,8-5,some6-2),2-f(3-some2,some0-some3,7-4,5-1,4-3,some4-5,some5-2,8-8),3-f(6-some3,3-4,some0-1,7-3,5-5,4-2,some4-8,some5-some7),4-f(some8-4,6-1,3-3,some0-5,7-2,5-8,4-some7,some4-some9),5-f(1-1,some8-3,6-5,3-2,some0-8,7-some7,5-some9,4-7),6-f(2-3,1-5,some8-2,6-8,3-some7,some0-some9,7-7,5-6),7-f(some10-5,2-2,1-8,some8-some7,6-some9,3-7,some0-6,7-some11),8-f(some12-2,some10-8,2-some7,1-some9,some8-7,6-6,3-some11,some0-some13)],0,[5,7,4,1,3,8,6,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,some0-3,6-5,3-2,some1-8,7-some2,5-some3,4-7),[1-f(some1-some4,7-some5,5-some6,4-4,some7-1,some8-3,8-5,some9-2),2-f(3-some5,some1-some6,7-4,5-1,4-3,some7-5,some8-2,8-8),3-f(6-some6,3-4,some1-1,7-3,5-5,4-2,some7-8,some8-some2),4-f(some0-4,6-1,3-3,some1-5,7-2,5-8,4-some2,some7-some3),5-f(1-1,some0-3,6-5,3-2,some1-8,7-some2,5-some3,4-7),6-f(2-3,1-5,some0-2,6-8,3-some2,some1-some3,7-7,5-6),7-f(some10-5,2-2,1-8,some0-some2,6-some3,3-7,some1-6,7-some11),8-f(some12-2,some10-8,2-some2,1-some3,some0-7,6-6,3-some11,some1-some13)],[1-f(some1-some4,7-some5,5-some6,4-4,some7-1,some8-3,8-5,some9-2),2-f(3-some5,some1-some6,7-4,5-1,4-3,some7-5,some8-2,8-8),3-f(6-some6,3-4,some1-1,7-3,5-5,4-2,some7-8,some8-some2),4-f(some0-4,6-1,3-3,some1-5,7-2,5-8,4-some2,some7-some3),6-f(2-3,1-5,some0-2,6-8,3-some2,some1-some3,7-7,5-6),7-f(some10-5,2-2,1-8,some0-some2,6-some3,3-7,some1-6,7-some11),8-f(some12-2,some10-8,2-some2,1-some3,some0-7,6-6,3-some11,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-3,6-5,3-2,some1-8,7-some2,5-some3,4-7),1-1)"}]
    <#lemma433>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_217 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_217.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma310> a r:Inference;
  r:gives {
    "board([5,8,4,1,3,6,2,7],[1-f(6-some0,8-some1,5-some2,4-4,some3-1,7-3,some4-5,some5-7),2-f(3-some1,6-some2,8-4,5-1,4-3,some3-5,7-7,some4-2),3-f(some6-some2,3-4,6-1,8-3,5-5,4-7,some3-2,7-some7),4-f(some8-4,some6-1,3-3,6-5,8-7,5-2,4-some7,some3-6),5-f(1-1,some8-3,some6-5,3-7,6-2,8-some7,5-6,4-some9),6-f(some10-3,1-5,some8-7,some6-2,3-some7,6-6,8-some9,5-some11),7-f(2-5,some10-7,1-2,some8-some7,some6-6,3-some9,6-some11,8-8),8-f(some12-7,2-2,some10-some7,1-6,some8-some9,some6-some11,3-8,6-some13)],0,8,[some14,some5,some4,7,some3,4,5,8,6,3,some6,some8,1,some10,2,some12|some15],[7,5,3,1,4,some2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_218 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_218.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma311> a r:Inference;
  r:gives {
    "queens([1-f(6-some0,8-some1,5-some2,4-4,some3-1,7-3,some4-5,some5-7),2-f(3-some1,6-some2,8-4,5-1,4-3,some3-5,7-7,some4-2),3-f(some6-some2,3-4,6-1,8-3,5-5,4-7,some3-2,7-some7),4-f(some8-4,some6-1,3-3,6-5,8-7,5-2,4-some7,some3-6),5-f(1-1,some8-3,some6-5,3-7,6-2,8-some7,5-6,4-some9),6-f(some10-3,1-5,some8-7,some6-2,3-some7,6-6,8-some9,5-some11),7-f(2-5,some10-7,1-2,some8-some7,some6-6,3-some9,6-some11,8-8),8-f(some12-7,2-2,some10-some7,1-6,some8-some9,some6-some11,3-8,6-some13)],0,[5,8,4,1,3,6,2,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,some0-3,some1-5,3-7,6-2,8-some2,5-6,4-some3),[1-f(6-some4,8-some5,5-some6,4-4,some7-1,7-3,some8-5,some9-7),2-f(3-some5,6-some6,8-4,5-1,4-3,some7-5,7-7,some8-2),3-f(some1-some6,3-4,6-1,8-3,5-5,4-7,some7-2,7-some2),4-f(some0-4,some1-1,3-3,6-5,8-7,5-2,4-some2,some7-6),5-f(1-1,some0-3,some1-5,3-7,6-2,8-some2,5-6,4-some3),6-f(some10-3,1-5,some0-7,some1-2,3-some2,6-6,8-some3,5-some11),7-f(2-5,some10-7,1-2,some0-some2,some1-6,3-some3,6-some11,8-8),8-f(some12-7,2-2,some10-some2,1-6,some0-some3,some1-some11,3-8,6-some13)],[1-f(6-some4,8-some5,5-some6,4-4,some7-1,7-3,some8-5,some9-7),2-f(3-some5,6-some6,8-4,5-1,4-3,some7-5,7-7,some8-2),3-f(some1-some6,3-4,6-1,8-3,5-5,4-7,some7-2,7-some2),4-f(some0-4,some1-1,3-3,6-5,8-7,5-2,4-some2,some7-6),6-f(some10-3,1-5,some0-7,some1-2,3-some2,6-6,8-some3,5-some11),7-f(2-5,some10-7,1-2,some0-some2,some1-6,3-some3,6-some11,8-8),8-f(some12-7,2-2,some10-some2,1-6,some0-some3,some1-some11,3-8,6-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-3,some1-5,3-7,6-2,8-some2,5-6,4-some3),1-1)"}]
    <#lemma434>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_219 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_219.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma312> a r:Inference;
  r:gives {
    "board([5,8,4,1,7,2,6,3],[1-f(some0-some1,7-some2,some3-some4,4-4,6-1,8-3,some5-6,some6-some7),2-f(3-some2,some0-some4,7-4,some3-1,4-3,6-6,8-some7,some5-2),3-f(5-some4,3-4,some0-1,7-3,some3-6,4-some7,6-2,8-8),4-f(some8-4,5-1,3-3,some0-6,7-some7,some3-2,4-8,6-5),5-f(1-1,some8-3,5-6,3-some7,some0-2,7-8,some3-5,4-7),6-f(some9-3,1-6,some8-some7,5-2,3-8,some0-5,7-7,some3-some10),7-f(2-6,some9-some7,1-2,some8-8,5-5,3-7,some0-some10,7-some11),8-f(some12-some7,2-2,some9-8,1-5,some8-7,5-some10,3-some11,some0-some13)],0,8,[some14,some6,some5,8,6,4,some3,7,some0,3,5,some8,1,some9,2,some12|some15],[some7,6,3,1,4,some4,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_220 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_220.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma313> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,7-some2,some3-some4,4-4,6-1,8-3,some5-6,some6-some7),2-f(3-some2,some0-some4,7-4,some3-1,4-3,6-6,8-some7,some5-2),3-f(5-some4,3-4,some0-1,7-3,some3-6,4-some7,6-2,8-8),4-f(some8-4,5-1,3-3,some0-6,7-some7,some3-2,4-8,6-5),5-f(1-1,some8-3,5-6,3-some7,some0-2,7-8,some3-5,4-7),6-f(some9-3,1-6,some8-some7,5-2,3-8,some0-5,7-7,some3-some10),7-f(2-6,some9-some7,1-2,some8-8,5-5,3-7,some0-some10,7-some11),8-f(some12-some7,2-2,some9-8,1-5,some8-7,5-some10,3-some11,some0-some13)],0,[5,8,4,1,7,2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(5-f(1-1,some0-3,5-6,3-some1,some2-2,7-8,some3-5,4-7),[1-f(some2-some4,7-some5,some3-some6,4-4,6-1,8-3,some7-6,some8-some1),2-f(3-some5,some2-some6,7-4,some3-1,4-3,6-6,8-some1,some7-2),3-f(5-some6,3-4,some2-1,7-3,some3-6,4-some1,6-2,8-8),4-f(some0-4,5-1,3-3,some2-6,7-some1,some3-2,4-8,6-5),5-f(1-1,some0-3,5-6,3-some1,some2-2,7-8,some3-5,4-7),6-f(some9-3,1-6,some0-some1,5-2,3-8,some2-5,7-7,some3-some10),7-f(2-6,some9-some1,1-2,some0-8,5-5,3-7,some2-some10,7-some11),8-f(some12-some1,2-2,some9-8,1-5,some0-7,5-some10,3-some11,some2-some13)],[1-f(some2-some4,7-some5,some3-some6,4-4,6-1,8-3,some7-6,some8-some1),2-f(3-some5,some2-some6,7-4,some3-1,4-3,6-6,8-some1,some7-2),3-f(5-some6,3-4,some2-1,7-3,some3-6,4-some1,6-2,8-8),4-f(some0-4,5-1,3-3,some2-6,7-some1,some3-2,4-8,6-5),6-f(some9-3,1-6,some0-some1,5-2,3-8,some2-5,7-7,some3-some10),7-f(2-6,some9-some1,1-2,some0-8,5-5,3-7,some2-some10,7-some11),8-f(some12-some1,2-2,some9-8,1-5,some0-7,5-some10,3-some11,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-3,5-6,3-some1,some2-2,7-8,some3-5,4-7),1-1)"}]
    <#lemma435>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_221 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_221.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma314> a r:Inference;
  r:gives {
    "board([6,1,5,2,8,3,7,4],[1-f(7-some0,2-2,4-some1,6-some2,8-4,some3-1,some4-3,some5-6),2-f(some6-2,7-some1,2-some2,4-4,6-1,8-3,some3-6,some4-some7),3-f(3-some1,some6-some2,7-4,2-1,4-3,6-6,8-some7,some3-some8),4-f(5-some2,3-4,some6-1,7-3,2-6,4-some7,6-some8,8-8),5-f(some9-4,5-1,3-3,some6-6,7-some7,2-some8,4-8,6-5),6-f(1-1,some9-3,5-6,3-some7,some6-some8,7-8,2-5,4-7),7-f(some10-3,1-6,some9-some7,5-some8,3-8,some6-5,7-7,2-some11),8-f(some12-6,some10-some7,1-some8,some9-8,5-5,3-7,some6-some11,7-some13)],0,8,[some14,some5,some4,some3,8,6,4,2,7,some6,3,5,some9,1,some10,some12|some15],[6,3,1,4,some2,some1,2,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_222 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_222.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma315> a r:Inference;
  r:gives {
    "queens([1-f(7-some0,2-2,4-some1,6-some2,8-4,some3-1,some4-3,some5-6),2-f(some6-2,7-some1,2-some2,4-4,6-1,8-3,some3-6,some4-some7),3-f(3-some1,some6-some2,7-4,2-1,4-3,6-6,8-some7,some3-some8),4-f(5-some2,3-4,some6-1,7-3,2-6,4-some7,6-some8,8-8),5-f(some9-4,5-1,3-3,some6-6,7-some7,2-some8,4-8,6-5),6-f(1-1,some9-3,5-6,3-some7,some6-some8,7-8,2-5,4-7),7-f(some10-3,1-6,some9-some7,5-some8,3-8,some6-5,7-7,2-some11),8-f(some12-6,some10-some7,1-some8,some9-8,5-5,3-7,some6-some11,7-some13)],0,[6,1,5,2,8,3,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(6-f(1-1,some0-3,5-6,3-some1,some2-some3,7-8,2-5,4-7),[1-f(7-some4,2-2,4-some5,6-some6,8-4,some7-1,some8-3,some9-6),2-f(some2-2,7-some5,2-some6,4-4,6-1,8-3,some7-6,some8-some1),3-f(3-some5,some2-some6,7-4,2-1,4-3,6-6,8-some1,some7-some3),4-f(5-some6,3-4,some2-1,7-3,2-6,4-some1,6-some3,8-8),5-f(some0-4,5-1,3-3,some2-6,7-some1,2-some3,4-8,6-5),6-f(1-1,some0-3,5-6,3-some1,some2-some3,7-8,2-5,4-7),7-f(some10-3,1-6,some0-some1,5-some3,3-8,some2-5,7-7,2-some11),8-f(some12-6,some10-some1,1-some3,some0-8,5-5,3-7,some2-some11,7-some13)],[1-f(7-some4,2-2,4-some5,6-some6,8-4,some7-1,some8-3,some9-6),2-f(some2-2,7-some5,2-some6,4-4,6-1,8-3,some7-6,some8-some1),3-f(3-some5,some2-some6,7-4,2-1,4-3,6-6,8-some1,some7-some3),4-f(5-some6,3-4,some2-1,7-3,2-6,4-some1,6-some3,8-8),5-f(some0-4,5-1,3-3,some2-6,7-some1,2-some3,4-8,6-5),7-f(some10-3,1-6,some0-some1,5-some3,3-8,some2-5,7-7,2-some11),8-f(some12-6,some10-some1,1-some3,some0-8,5-5,3-7,some2-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-3,5-6,3-some1,some2-some3,7-8,2-5,4-7),1-1)"}]
    <#lemma436>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_223 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_223.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma316> a r:Inference;
  r:gives {
    "board([6,2,7,1,3,5,8,4],[1-f(2-some0,6-some1,5-2,4-4,8-some2,some3-1,some4-5,some5-some6),2-f(7-some1,2-2,6-4,5-some2,4-1,8-5,some3-some6,some4-3),3-f(some7-2,7-4,2-some2,6-1,5-5,4-some6,8-3,some3-6),4-f(some8-4,some7-some2,7-1,2-5,6-some6,5-3,4-6,8-8),5-f(3-some2,some8-1,some7-5,7-some6,2-3,6-6,5-8,4-some9),6-f(1-1,3-5,some8-some6,some7-3,7-6,2-8,6-some9,5-some10),7-f(some11-5,1-some6,3-3,some8-6,some7-8,7-some9,2-some10,6-7),8-f(some12-some6,some11-3,1-6,3-8,some8-some9,some7-some10,7-7,2-some13)],0,8,[some14,some5,some4,some3,8,4,5,6,2,7,some7,some8,3,1,some11,some12|some15],[some6,5,1,some2,4,2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_224 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_224.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma317> a r:Inference;
  r:gives {
    "queens([1-f(2-some0,6-some1,5-2,4-4,8-some2,some3-1,some4-5,some5-some6),2-f(7-some1,2-2,6-4,5-some2,4-1,8-5,some3-some6,some4-3),3-f(some7-2,7-4,2-some2,6-1,5-5,4-some6,8-3,some3-6),4-f(some8-4,some7-some2,7-1,2-5,6-some6,5-3,4-6,8-8),5-f(3-some2,some8-1,some7-5,7-some6,2-3,6-6,5-8,4-some9),6-f(1-1,3-5,some8-some6,some7-3,7-6,2-8,6-some9,5-some10),7-f(some11-5,1-some6,3-3,some8-6,some7-8,7-some9,2-some10,6-7),8-f(some12-some6,some11-3,1-6,3-8,some8-some9,some7-some10,7-7,2-some13)],0,[6,2,7,1,3,5,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(6-f(1-1,3-5,some0-some1,some2-3,7-6,2-8,6-some3,5-some4),[1-f(2-some5,6-some6,5-2,4-4,8-some7,some8-1,some9-5,some10-some1),2-f(7-some6,2-2,6-4,5-some7,4-1,8-5,some8-some1,some9-3),3-f(some2-2,7-4,2-some7,6-1,5-5,4-some1,8-3,some8-6),4-f(some0-4,some2-some7,7-1,2-5,6-some1,5-3,4-6,8-8),5-f(3-some7,some0-1,some2-5,7-some1,2-3,6-6,5-8,4-some3),6-f(1-1,3-5,some0-some1,some2-3,7-6,2-8,6-some3,5-some4),7-f(some11-5,1-some1,3-3,some0-6,some2-8,7-some3,2-some4,6-7),8-f(some12-some1,some11-3,1-6,3-8,some0-some3,some2-some4,7-7,2-some13)],[1-f(2-some5,6-some6,5-2,4-4,8-some7,some8-1,some9-5,some10-some1),2-f(7-some6,2-2,6-4,5-some7,4-1,8-5,some8-some1,some9-3),3-f(some2-2,7-4,2-some7,6-1,5-5,4-some1,8-3,some8-6),4-f(some0-4,some2-some7,7-1,2-5,6-some1,5-3,4-6,8-8),5-f(3-some7,some0-1,some2-5,7-some1,2-3,6-6,5-8,4-some3),7-f(some11-5,1-some1,3-3,some0-6,some2-8,7-some3,2-some4,6-7),8-f(some12-some1,some11-3,1-6,3-8,some0-some3,some2-some4,7-7,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-5,some0-some1,some2-3,7-6,2-8,6-some3,5-some4),1-1)"}]
    <#lemma437>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_225 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_225.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma318> a r:Inference;
  r:gives {
    "board([6,2,7,1,4,8,5,3],[1-f(2-some0,5-some1,7-2,4-4,some2-some3,8-1,some4-some5,some6-5),2-f(some7-some1,2-2,5-4,7-some3,4-1,some2-some5,8-5,some4-3),3-f(6-2,some7-4,2-some3,5-1,7-some5,4-5,some2-3,8-8),4-f(some8-4,6-some3,some7-1,2-some5,5-5,7-3,4-8,some2-7),5-f(3-some3,some8-1,6-some5,some7-5,2-3,5-8,7-7,4-some9),6-f(1-1,3-some5,some8-5,6-3,some7-8,2-7,5-some9,7-6),7-f(some10-some5,1-5,3-3,some8-8,6-7,some7-some9,2-6,5-some11),8-f(some12-5,some10-3,1-8,3-7,some8-some9,6-6,some7-some11,2-some13)],0,8,[some14,some6,some4,8,some2,4,7,5,2,some7,6,some8,3,1,some10,some12|some15],[5,some5,1,some3,4,2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_226 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_226.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma319> a r:Inference;
  r:gives {
    "queens([1-f(2-some0,5-some1,7-2,4-4,some2-some3,8-1,some4-some5,some6-5),2-f(some7-some1,2-2,5-4,7-some3,4-1,some2-some5,8-5,some4-3),3-f(6-2,some7-4,2-some3,5-1,7-some5,4-5,some2-3,8-8),4-f(some8-4,6-some3,some7-1,2-some5,5-5,7-3,4-8,some2-7),5-f(3-some3,some8-1,6-some5,some7-5,2-3,5-8,7-7,4-some9),6-f(1-1,3-some5,some8-5,6-3,some7-8,2-7,5-some9,7-6),7-f(some10-some5,1-5,3-3,some8-8,6-7,some7-some9,2-6,5-some11),8-f(some12-5,some10-3,1-8,3-7,some8-some9,6-6,some7-some11,2-some13)],0,[6,2,7,1,4,8,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(6-f(1-1,3-some0,some1-5,6-3,some2-8,2-7,5-some3,7-6),[1-f(2-some4,5-some5,7-2,4-4,some6-some7,8-1,some8-some0,some9-5),2-f(some2-some5,2-2,5-4,7-some7,4-1,some6-some0,8-5,some8-3),3-f(6-2,some2-4,2-some7,5-1,7-some0,4-5,some6-3,8-8),4-f(some1-4,6-some7,some2-1,2-some0,5-5,7-3,4-8,some6-7),5-f(3-some7,some1-1,6-some0,some2-5,2-3,5-8,7-7,4-some3),6-f(1-1,3-some0,some1-5,6-3,some2-8,2-7,5-some3,7-6),7-f(some10-some0,1-5,3-3,some1-8,6-7,some2-some3,2-6,5-some11),8-f(some12-5,some10-3,1-8,3-7,some1-some3,6-6,some2-some11,2-some13)],[1-f(2-some4,5-some5,7-2,4-4,some6-some7,8-1,some8-some0,some9-5),2-f(some2-some5,2-2,5-4,7-some7,4-1,some6-some0,8-5,some8-3),3-f(6-2,some2-4,2-some7,5-1,7-some0,4-5,some6-3,8-8),4-f(some1-4,6-some7,some2-1,2-some0,5-5,7-3,4-8,some6-7),5-f(3-some7,some1-1,6-some0,some2-5,2-3,5-8,7-7,4-some3),7-f(some10-some0,1-5,3-3,some1-8,6-7,some2-some3,2-6,5-some11),8-f(some12-5,some10-3,1-8,3-7,some1-some3,6-6,some2-some11,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-some0,some1-5,6-3,some2-8,2-7,5-some3,7-6),1-1)"}]
    <#lemma438>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_227 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_227.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma320> a r:Inference;
  r:gives {
    "board([6,3,1,7,5,8,2,4],[1-f(5-some0,some1-some2,3-3,some3-2,8-some4,7-1,some5-some6,some7-7),2-f(2-some2,5-3,some1-2,3-some4,some3-1,8-some6,7-7,some5-5),3-f(6-3,2-2,5-some4,some1-1,3-some6,some3-7,8-5,7-4),4-f(4-2,6-some4,2-1,5-some6,some1-7,3-5,some3-4,8-8),5-f(some8-some4,4-1,6-some6,2-7,5-5,some1-4,3-8,some3-some9),6-f(1-1,some8-some6,4-7,6-5,2-4,5-8,some1-some9,3-6),7-f(some10-some6,1-7,some8-5,4-4,6-8,2-some9,5-6,some1-some11),8-f(some12-7,some10-5,1-4,some8-8,4-some9,6-6,2-some11,5-some13)],0,8,[some14,some7,some5,7,8,some3,3,some1,5,2,6,4,some8,1,some10,some12|some15],[7,some6,1,some4,2,3,some2,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_228 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_228.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma321> a r:Inference;
  r:gives {
    "queens([1-f(5-some0,some1-some2,3-3,some3-2,8-some4,7-1,some5-some6,some7-7),2-f(2-some2,5-3,some1-2,3-some4,some3-1,8-some6,7-7,some5-5),3-f(6-3,2-2,5-some4,some1-1,3-some6,some3-7,8-5,7-4),4-f(4-2,6-some4,2-1,5-some6,some1-7,3-5,some3-4,8-8),5-f(some8-some4,4-1,6-some6,2-7,5-5,some1-4,3-8,some3-some9),6-f(1-1,some8-some6,4-7,6-5,2-4,5-8,some1-some9,3-6),7-f(some10-some6,1-7,some8-5,4-4,6-8,2-some9,5-6,some1-some11),8-f(some12-7,some10-5,1-4,some8-8,4-some9,6-6,2-some11,5-some13)],0,[6,3,1,7,5,8,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(6-f(1-1,some0-some1,4-7,6-5,2-4,5-8,some2-some3,3-6),[1-f(5-some4,some2-some5,3-3,some6-2,8-some7,7-1,some8-some1,some9-7),2-f(2-some5,5-3,some2-2,3-some7,some6-1,8-some1,7-7,some8-5),3-f(6-3,2-2,5-some7,some2-1,3-some1,some6-7,8-5,7-4),4-f(4-2,6-some7,2-1,5-some1,some2-7,3-5,some6-4,8-8),5-f(some0-some7,4-1,6-some1,2-7,5-5,some2-4,3-8,some6-some3),6-f(1-1,some0-some1,4-7,6-5,2-4,5-8,some2-some3,3-6),7-f(some10-some1,1-7,some0-5,4-4,6-8,2-some3,5-6,some2-some11),8-f(some12-7,some10-5,1-4,some0-8,4-some3,6-6,2-some11,5-some13)],[1-f(5-some4,some2-some5,3-3,some6-2,8-some7,7-1,some8-some1,some9-7),2-f(2-some5,5-3,some2-2,3-some7,some6-1,8-some1,7-7,some8-5),3-f(6-3,2-2,5-some7,some2-1,3-some1,some6-7,8-5,7-4),4-f(4-2,6-some7,2-1,5-some1,some2-7,3-5,some6-4,8-8),5-f(some0-some7,4-1,6-some1,2-7,5-5,some2-4,3-8,some6-some3),7-f(some10-some1,1-7,some0-5,4-4,6-8,2-some3,5-6,some2-some11),8-f(some12-7,some10-5,1-4,some0-8,4-some3,6-6,2-some11,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-some1,4-7,6-5,2-4,5-8,some2-some3,3-6),1-1)"}]
    <#lemma439>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_229 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_229.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma322> a r:Inference;
  r:gives {
    "board([6,3,1,8,4,2,7,5],[1-f(7-some0,5-some1,3-3,8-2,6-some2,some3-1,some4-6,some5-5),2-f(2-some1,7-3,5-2,3-some2,8-1,6-6,some3-5,some4-some6),3-f(some7-3,2-2,7-some2,5-1,3-6,8-5,6-some6,some3-some8),4-f(some9-2,some7-some2,2-1,7-6,5-5,3-some6,8-some8,6-4),5-f(4-some2,some9-1,some7-6,2-5,7-some6,5-some8,3-4,8-8),6-f(1-1,4-6,some9-5,some7-some6,2-some8,7-4,5-8,3-7),7-f(some10-6,1-5,4-some6,some9-some8,some7-4,2-8,7-7,5-some11),8-f(some12-5,some10-some6,1-some8,4-4,some9-8,some7-7,2-some11,7-some13)],0,8,[some14,some5,some4,some3,6,8,3,5,7,2,some7,some9,4,1,some10,some12|some15],[5,6,1,some2,2,3,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_230 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_230.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma323> a r:Inference;
  r:gives {
    "queens([1-f(7-some0,5-some1,3-3,8-2,6-some2,some3-1,some4-6,some5-5),2-f(2-some1,7-3,5-2,3-some2,8-1,6-6,some3-5,some4-some6),3-f(some7-3,2-2,7-some2,5-1,3-6,8-5,6-some6,some3-some8),4-f(some9-2,some7-some2,2-1,7-6,5-5,3-some6,8-some8,6-4),5-f(4-some2,some9-1,some7-6,2-5,7-some6,5-some8,3-4,8-8),6-f(1-1,4-6,some9-5,some7-some6,2-some8,7-4,5-8,3-7),7-f(some10-6,1-5,4-some6,some9-some8,some7-4,2-8,7-7,5-some11),8-f(some12-5,some10-some6,1-some8,4-4,some9-8,some7-7,2-some11,7-some13)],0,[6,3,1,8,4,2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(6-f(1-1,4-6,some0-5,some1-some2,2-some3,7-4,5-8,3-7),[1-f(7-some4,5-some5,3-3,8-2,6-some6,some7-1,some8-6,some9-5),2-f(2-some5,7-3,5-2,3-some6,8-1,6-6,some7-5,some8-some2),3-f(some1-3,2-2,7-some6,5-1,3-6,8-5,6-some2,some7-some3),4-f(some0-2,some1-some6,2-1,7-6,5-5,3-some2,8-some3,6-4),5-f(4-some6,some0-1,some1-6,2-5,7-some2,5-some3,3-4,8-8),6-f(1-1,4-6,some0-5,some1-some2,2-some3,7-4,5-8,3-7),7-f(some10-6,1-5,4-some2,some0-some3,some1-4,2-8,7-7,5-some11),8-f(some12-5,some10-some2,1-some3,4-4,some0-8,some1-7,2-some11,7-some13)],[1-f(7-some4,5-some5,3-3,8-2,6-some6,some7-1,some8-6,some9-5),2-f(2-some5,7-3,5-2,3-some6,8-1,6-6,some7-5,some8-some2),3-f(some1-3,2-2,7-some6,5-1,3-6,8-5,6-some2,some7-some3),4-f(some0-2,some1-some6,2-1,7-6,5-5,3-some2,8-some3,6-4),5-f(4-some6,some0-1,some1-6,2-5,7-some2,5-some3,3-4,8-8),7-f(some10-6,1-5,4-some2,some0-some3,some1-4,2-8,7-7,5-some11),8-f(some12-5,some10-some2,1-some3,4-4,some0-8,some1-7,2-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,4-6,some0-5,some1-some2,2-some3,7-4,5-8,3-7),1-1)"}]
    <#lemma440>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_231 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_231.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma324> a r:Inference;
  r:gives {
    "board([6,3,1,8,5,2,4,7],[1-f(5-some0,8-some1,3-3,7-2,6-some2,some3-1,some4-6,some5-some6),2-f(2-some1,5-3,8-2,3-some2,7-1,6-6,some3-some6,some4-5),3-f(some7-3,2-2,5-some2,8-1,3-6,7-some6,6-5,some3-7),4-f(some8-2,some7-some2,2-1,5-6,8-some6,3-5,7-7,6-4),5-f(4-some2,some8-1,some7-6,2-some6,5-5,8-7,3-4,7-some9),6-f(1-1,4-6,some8-some6,some7-5,2-7,5-4,8-some9,3-some10),7-f(some11-6,1-some6,4-5,some8-7,some7-4,2-some9,5-some10,8-8),8-f(some12-some6,some11-5,1-7,4-4,some8-some9,some7-some10,2-8,5-some13)],0,8,[some14,some5,some4,some3,6,7,3,8,5,2,some7,some8,4,1,some11,some12|some15],[some6,6,1,some2,2,3,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_232 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_232.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma325> a r:Inference;
  r:gives {
    "queens([1-f(5-some0,8-some1,3-3,7-2,6-some2,some3-1,some4-6,some5-some6),2-f(2-some1,5-3,8-2,3-some2,7-1,6-6,some3-some6,some4-5),3-f(some7-3,2-2,5-some2,8-1,3-6,7-some6,6-5,some3-7),4-f(some8-2,some7-some2,2-1,5-6,8-some6,3-5,7-7,6-4),5-f(4-some2,some8-1,some7-6,2-some6,5-5,8-7,3-4,7-some9),6-f(1-1,4-6,some8-some6,some7-5,2-7,5-4,8-some9,3-some10),7-f(some11-6,1-some6,4-5,some8-7,some7-4,2-some9,5-some10,8-8),8-f(some12-some6,some11-5,1-7,4-4,some8-some9,some7-some10,2-8,5-some13)],0,[6,3,1,8,5,2,4,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(6-f(1-1,4-6,some0-some1,some2-5,2-7,5-4,8-some3,3-some4),[1-f(5-some5,8-some6,3-3,7-2,6-some7,some8-1,some9-6,some10-some1),2-f(2-some6,5-3,8-2,3-some7,7-1,6-6,some8-some1,some9-5),3-f(some2-3,2-2,5-some7,8-1,3-6,7-some1,6-5,some8-7),4-f(some0-2,some2-some7,2-1,5-6,8-some1,3-5,7-7,6-4),5-f(4-some7,some0-1,some2-6,2-some1,5-5,8-7,3-4,7-some3),6-f(1-1,4-6,some0-some1,some2-5,2-7,5-4,8-some3,3-some4),7-f(some11-6,1-some1,4-5,some0-7,some2-4,2-some3,5-some4,8-8),8-f(some12-some1,some11-5,1-7,4-4,some0-some3,some2-some4,2-8,5-some13)],[1-f(5-some5,8-some6,3-3,7-2,6-some7,some8-1,some9-6,some10-some1),2-f(2-some6,5-3,8-2,3-some7,7-1,6-6,some8-some1,some9-5),3-f(some2-3,2-2,5-some7,8-1,3-6,7-some1,6-5,some8-7),4-f(some0-2,some2-some7,2-1,5-6,8-some1,3-5,7-7,6-4),5-f(4-some7,some0-1,some2-6,2-some1,5-5,8-7,3-4,7-some3),7-f(some11-6,1-some1,4-5,some0-7,some2-4,2-some3,5-some4,8-8),8-f(some12-some1,some11-5,1-7,4-4,some0-some3,some2-some4,2-8,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,4-6,some0-some1,some2-5,2-7,5-4,8-some3,3-some4),1-1)"}]
    <#lemma441>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_233 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_233.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma326> a r:Inference;
  r:gives {
    "board([6,3,5,7,1,4,2,8],[1-f(8-some0,some1-some2,6-some3,some4-2,5-5,7-1,some5-3,some6-7),2-f(2-some2,8-some3,some1-2,6-5,some4-1,5-3,7-7,some5-6),3-f(3-some3,2-2,8-5,some1-1,6-3,some4-7,5-6,7-4),4-f(4-2,3-5,2-1,8-3,some1-7,6-6,some4-4,5-some7),5-f(some8-5,4-1,3-3,2-7,8-6,some1-4,6-some7,some4-some9),6-f(1-1,some8-3,4-7,3-6,2-4,8-some7,some1-some9,6-some10),7-f(some11-3,1-7,some8-6,4-4,3-some7,2-some9,8-some10,some1-some12),8-f(some13-7,some11-6,1-4,some8-some7,4-some9,3-some10,2-some12,8-8)],0,8,[some14,some6,some5,7,5,some4,6,some1,8,2,3,4,some8,1,some11,some13|some15],[7,3,1,5,2,some3,some2,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_234 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_234.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma327> a r:Inference;
  r:gives {
    "queens([1-f(8-some0,some1-some2,6-some3,some4-2,5-5,7-1,some5-3,some6-7),2-f(2-some2,8-some3,some1-2,6-5,some4-1,5-3,7-7,some5-6),3-f(3-some3,2-2,8-5,some1-1,6-3,some4-7,5-6,7-4),4-f(4-2,3-5,2-1,8-3,some1-7,6-6,some4-4,5-some7),5-f(some8-5,4-1,3-3,2-7,8-6,some1-4,6-some7,some4-some9),6-f(1-1,some8-3,4-7,3-6,2-4,8-some7,some1-some9,6-some10),7-f(some11-3,1-7,some8-6,4-4,3-some7,2-some9,8-some10,some1-some12),8-f(some13-7,some11-6,1-4,some8-some7,4-some9,3-some10,2-some12,8-8)],0,[6,3,5,7,1,4,2,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(6-f(1-1,some0-3,4-7,3-6,2-4,8-some1,some2-some3,6-some4),[1-f(8-some5,some2-some6,6-some7,some8-2,5-5,7-1,some9-3,some10-7),2-f(2-some6,8-some7,some2-2,6-5,some8-1,5-3,7-7,some9-6),3-f(3-some7,2-2,8-5,some2-1,6-3,some8-7,5-6,7-4),4-f(4-2,3-5,2-1,8-3,some2-7,6-6,some8-4,5-some1),5-f(some0-5,4-1,3-3,2-7,8-6,some2-4,6-some1,some8-some3),6-f(1-1,some0-3,4-7,3-6,2-4,8-some1,some2-some3,6-some4),7-f(some11-3,1-7,some0-6,4-4,3-some1,2-some3,8-some4,some2-some12),8-f(some13-7,some11-6,1-4,some0-some1,4-some3,3-some4,2-some12,8-8)],[1-f(8-some5,some2-some6,6-some7,some8-2,5-5,7-1,some9-3,some10-7),2-f(2-some6,8-some7,some2-2,6-5,some8-1,5-3,7-7,some9-6),3-f(3-some7,2-2,8-5,some2-1,6-3,some8-7,5-6,7-4),4-f(4-2,3-5,2-1,8-3,some2-7,6-6,some8-4,5-some1),5-f(some0-5,4-1,3-3,2-7,8-6,some2-4,6-some1,some8-some3),7-f(some11-3,1-7,some0-6,4-4,3-some1,2-some3,8-some4,some2-some12),8-f(some13-7,some11-6,1-4,some0-some1,4-some3,3-some4,2-some12,8-8)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-3,4-7,3-6,2-4,8-some1,some2-some3,6-some4),1-1)"}]
    <#lemma442>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_235 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_235.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma328> a r:Inference;
  r:gives {
    "board([6,3,5,8,1,4,2,7],[1-f(some0-some1,8-some2,6-some3,some4-2,5-5,7-1,some5-3,some6-7),2-f(2-some2,some0-some3,8-2,6-5,some4-1,5-3,7-7,some5-6),3-f(3-some3,2-2,some0-5,8-1,6-3,some4-7,5-6,7-some7),4-f(some8-2,3-5,2-1,some0-3,8-7,6-6,some4-some7,5-4),5-f(4-5,some8-1,3-3,2-7,some0-6,8-some7,6-4,some4-some9),6-f(1-1,4-3,some8-7,3-6,2-some7,some0-4,8-some9,6-some10),7-f(some11-3,1-7,4-6,some8-some7,3-4,2-some9,some0-some10,8-8),8-f(some12-7,some11-6,1-some7,4-4,some8-some9,3-some10,2-8,some0-some13)],0,8,[some14,some6,some5,7,5,some4,6,8,some0,2,3,some8,4,1,some11,some12|some15],[7,3,1,5,2,some3,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_236 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_236.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma329> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,8-some2,6-some3,some4-2,5-5,7-1,some5-3,some6-7),2-f(2-some2,some0-some3,8-2,6-5,some4-1,5-3,7-7,some5-6),3-f(3-some3,2-2,some0-5,8-1,6-3,some4-7,5-6,7-some7),4-f(some8-2,3-5,2-1,some0-3,8-7,6-6,some4-some7,5-4),5-f(4-5,some8-1,3-3,2-7,some0-6,8-some7,6-4,some4-some9),6-f(1-1,4-3,some8-7,3-6,2-some7,some0-4,8-some9,6-some10),7-f(some11-3,1-7,4-6,some8-some7,3-4,2-some9,some0-some10,8-8),8-f(some12-7,some11-6,1-some7,4-4,some8-some9,3-some10,2-8,some0-some13)],0,[6,3,5,8,1,4,2,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(6-f(1-1,4-3,some0-7,3-6,2-some1,some2-4,8-some3,6-some4),[1-f(some2-some5,8-some6,6-some7,some8-2,5-5,7-1,some9-3,some10-7),2-f(2-some6,some2-some7,8-2,6-5,some8-1,5-3,7-7,some9-6),3-f(3-some7,2-2,some2-5,8-1,6-3,some8-7,5-6,7-some1),4-f(some0-2,3-5,2-1,some2-3,8-7,6-6,some8-some1,5-4),5-f(4-5,some0-1,3-3,2-7,some2-6,8-some1,6-4,some8-some3),6-f(1-1,4-3,some0-7,3-6,2-some1,some2-4,8-some3,6-some4),7-f(some11-3,1-7,4-6,some0-some1,3-4,2-some3,some2-some4,8-8),8-f(some12-7,some11-6,1-some1,4-4,some0-some3,3-some4,2-8,some2-some13)],[1-f(some2-some5,8-some6,6-some7,some8-2,5-5,7-1,some9-3,some10-7),2-f(2-some6,some2-some7,8-2,6-5,some8-1,5-3,7-7,some9-6),3-f(3-some7,2-2,some2-5,8-1,6-3,some8-7,5-6,7-some1),4-f(some0-2,3-5,2-1,some2-3,8-7,6-6,some8-some1,5-4),5-f(4-5,some0-1,3-3,2-7,some2-6,8-some1,6-4,some8-some3),7-f(some11-3,1-7,4-6,some0-some1,3-4,2-some3,some2-some4,8-8),8-f(some12-7,some11-6,1-some1,4-4,some0-some3,3-some4,2-8,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,4-3,some0-7,3-6,2-some1,some2-4,8-some3,6-some4),1-1)"}]
    <#lemma443>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_237 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_237.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma330> a r:Inference;
  r:gives {
    "board([6,3,7,2,4,8,1,5],[1-f(some0-some1,5-some2,4-some3,8-2,some4-4,some5-1,7-7,some6-5),2-f(2-some2,some0-some3,5-2,4-4,8-1,some4-7,some5-5,7-3),3-f(6-some3,2-2,some0-4,5-1,4-7,8-5,some4-3,some5-some7),4-f(some8-2,6-4,2-1,some0-7,5-5,4-3,8-some7,some4-some9),5-f(3-4,some8-1,6-7,2-5,some0-3,5-some7,4-some9,8-8),6-f(1-1,3-7,some8-5,6-3,2-some7,some0-some9,5-8,4-6),7-f(some10-7,1-5,3-3,some8-some7,6-some9,2-8,some0-6,5-some11),8-f(some12-5,some10-3,1-some7,3-some9,some8-8,6-6,2-some11,some0-some13)],0,8,[some14,some6,7,some5,some4,8,4,5,some0,2,6,some8,3,1,some10,some12|some15],[5,7,1,4,2,some3,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_238 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_238.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma331> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,5-some2,4-some3,8-2,some4-4,some5-1,7-7,some6-5),2-f(2-some2,some0-some3,5-2,4-4,8-1,some4-7,some5-5,7-3),3-f(6-some3,2-2,some0-4,5-1,4-7,8-5,some4-3,some5-some7),4-f(some8-2,6-4,2-1,some0-7,5-5,4-3,8-some7,some4-some9),5-f(3-4,some8-1,6-7,2-5,some0-3,5-some7,4-some9,8-8),6-f(1-1,3-7,some8-5,6-3,2-some7,some0-some9,5-8,4-6),7-f(some10-7,1-5,3-3,some8-some7,6-some9,2-8,some0-6,5-some11),8-f(some12-5,some10-3,1-some7,3-some9,some8-8,6-6,2-some11,some0-some13)],0,[6,3,7,2,4,8,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(6-f(1-1,3-7,some0-5,6-3,2-some1,some2-some3,5-8,4-6),[1-f(some2-some4,5-some5,4-some6,8-2,some7-4,some8-1,7-7,some9-5),2-f(2-some5,some2-some6,5-2,4-4,8-1,some7-7,some8-5,7-3),3-f(6-some6,2-2,some2-4,5-1,4-7,8-5,some7-3,some8-some1),4-f(some0-2,6-4,2-1,some2-7,5-5,4-3,8-some1,some7-some3),5-f(3-4,some0-1,6-7,2-5,some2-3,5-some1,4-some3,8-8),6-f(1-1,3-7,some0-5,6-3,2-some1,some2-some3,5-8,4-6),7-f(some10-7,1-5,3-3,some0-some1,6-some3,2-8,some2-6,5-some11),8-f(some12-5,some10-3,1-some1,3-some3,some0-8,6-6,2-some11,some2-some13)],[1-f(some2-some4,5-some5,4-some6,8-2,some7-4,some8-1,7-7,some9-5),2-f(2-some5,some2-some6,5-2,4-4,8-1,some7-7,some8-5,7-3),3-f(6-some6,2-2,some2-4,5-1,4-7,8-5,some7-3,some8-some1),4-f(some0-2,6-4,2-1,some2-7,5-5,4-3,8-some1,some7-some3),5-f(3-4,some0-1,6-7,2-5,some2-3,5-some1,4-some3,8-8),7-f(some10-7,1-5,3-3,some0-some1,6-some3,2-8,some2-6,5-some11),8-f(some12-5,some10-3,1-some1,3-some3,some0-8,6-6,2-some11,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-7,some0-5,6-3,2-some1,some2-some3,5-8,4-6),1-1)"}]
    <#lemma444>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_239 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_239.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma332> a r:Inference;
  r:gives {
    "board([6,3,7,2,8,5,1,4],[1-f(some0-some1,6-some2,4-some3,some4-2,8-4,some5-1,7-7,some6-some7),2-f(2-some2,some0-some3,6-2,4-4,some4-1,8-7,some5-some7,7-3),3-f(some8-some3,2-2,some0-4,6-1,4-7,some4-some7,8-3,some5-6),4-f(5-2,some8-4,2-1,some0-7,6-some7,4-3,some4-6,8-8),5-f(3-4,5-1,some8-7,2-some7,some0-3,6-6,4-8,some4-5),6-f(1-1,3-7,5-some7,some8-3,2-6,some0-8,6-5,4-some9),7-f(some10-7,1-some7,3-3,5-6,some8-8,2-5,some0-some9,6-some11),8-f(some12-some7,some10-3,1-6,3-8,5-5,some8-some9,2-some11,some0-some13)],0,8,[some14,some6,7,some5,8,some4,4,6,some0,2,some8,5,3,1,some10,some12|some15],[some7,7,1,4,2,some3,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_240 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_240.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma333> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,6-some2,4-some3,some4-2,8-4,some5-1,7-7,some6-some7),2-f(2-some2,some0-some3,6-2,4-4,some4-1,8-7,some5-some7,7-3),3-f(some8-some3,2-2,some0-4,6-1,4-7,some4-some7,8-3,some5-6),4-f(5-2,some8-4,2-1,some0-7,6-some7,4-3,some4-6,8-8),5-f(3-4,5-1,some8-7,2-some7,some0-3,6-6,4-8,some4-5),6-f(1-1,3-7,5-some7,some8-3,2-6,some0-8,6-5,4-some9),7-f(some10-7,1-some7,3-3,5-6,some8-8,2-5,some0-some9,6-some11),8-f(some12-some7,some10-3,1-6,3-8,5-5,some8-some9,2-some11,some0-some13)],0,[6,3,7,2,8,5,1,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(6-f(1-1,3-7,5-some0,some1-3,2-6,some2-8,6-5,4-some3),[1-f(some2-some4,6-some5,4-some6,some7-2,8-4,some8-1,7-7,some9-some0),2-f(2-some5,some2-some6,6-2,4-4,some7-1,8-7,some8-some0,7-3),3-f(some1-some6,2-2,some2-4,6-1,4-7,some7-some0,8-3,some8-6),4-f(5-2,some1-4,2-1,some2-7,6-some0,4-3,some7-6,8-8),5-f(3-4,5-1,some1-7,2-some0,some2-3,6-6,4-8,some7-5),6-f(1-1,3-7,5-some0,some1-3,2-6,some2-8,6-5,4-some3),7-f(some10-7,1-some0,3-3,5-6,some1-8,2-5,some2-some3,6-some11),8-f(some12-some0,some10-3,1-6,3-8,5-5,some1-some3,2-some11,some2-some13)],[1-f(some2-some4,6-some5,4-some6,some7-2,8-4,some8-1,7-7,some9-some0),2-f(2-some5,some2-some6,6-2,4-4,some7-1,8-7,some8-some0,7-3),3-f(some1-some6,2-2,some2-4,6-1,4-7,some7-some0,8-3,some8-6),4-f(5-2,some1-4,2-1,some2-7,6-some0,4-3,some7-6,8-8),5-f(3-4,5-1,some1-7,2-some0,some2-3,6-6,4-8,some7-5),7-f(some10-7,1-some0,3-3,5-6,some1-8,2-5,some2-some3,6-some11),8-f(some12-some0,some10-3,1-6,3-8,5-5,some1-some3,2-some11,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-7,5-some0,some1-3,2-6,some2-8,6-5,4-some3),1-1)"}]
    <#lemma445>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_241 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_241.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma334> a r:Inference;
  r:gives {
    "board([6,3,7,4,1,8,2,5],[1-f(4-some0,some1-some2,some3-some4,8-2,5-5,7-1,some5-4,some6-7),2-f(2-some2,4-some4,some1-2,some3-5,8-1,5-4,7-7,some5-3),3-f(6-some4,2-2,4-5,some1-1,some3-4,8-7,5-3,7-some7),4-f(some8-2,6-5,2-1,4-4,some1-7,some3-3,8-some7,5-some9),5-f(3-5,some8-1,6-4,2-7,4-3,some1-some7,some3-some9,8-8),6-f(1-1,3-4,some8-7,6-3,2-some7,4-some9,some1-8,some3-6),7-f(some10-4,1-7,3-3,some8-some7,6-some9,2-8,4-6,some1-some11),8-f(some12-7,some10-3,1-some7,3-some9,some8-8,6-6,2-some11,4-some13)],0,8,[some14,some6,some5,7,5,8,some3,some1,4,2,6,some8,3,1,some10,some12|some15],[7,4,1,5,2,some4,some2,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_242 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_242.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma335> a r:Inference;
  r:gives {
    "queens([1-f(4-some0,some1-some2,some3-some4,8-2,5-5,7-1,some5-4,some6-7),2-f(2-some2,4-some4,some1-2,some3-5,8-1,5-4,7-7,some5-3),3-f(6-some4,2-2,4-5,some1-1,some3-4,8-7,5-3,7-some7),4-f(some8-2,6-5,2-1,4-4,some1-7,some3-3,8-some7,5-some9),5-f(3-5,some8-1,6-4,2-7,4-3,some1-some7,some3-some9,8-8),6-f(1-1,3-4,some8-7,6-3,2-some7,4-some9,some1-8,some3-6),7-f(some10-4,1-7,3-3,some8-some7,6-some9,2-8,4-6,some1-some11),8-f(some12-7,some10-3,1-some7,3-some9,some8-8,6-6,2-some11,4-some13)],0,[6,3,7,4,1,8,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(6-f(1-1,3-4,some0-7,6-3,2-some1,4-some2,some3-8,some4-6),[1-f(4-some5,some3-some6,some4-some7,8-2,5-5,7-1,some8-4,some9-7),2-f(2-some6,4-some7,some3-2,some4-5,8-1,5-4,7-7,some8-3),3-f(6-some7,2-2,4-5,some3-1,some4-4,8-7,5-3,7-some1),4-f(some0-2,6-5,2-1,4-4,some3-7,some4-3,8-some1,5-some2),5-f(3-5,some0-1,6-4,2-7,4-3,some3-some1,some4-some2,8-8),6-f(1-1,3-4,some0-7,6-3,2-some1,4-some2,some3-8,some4-6),7-f(some10-4,1-7,3-3,some0-some1,6-some2,2-8,4-6,some3-some11),8-f(some12-7,some10-3,1-some1,3-some2,some0-8,6-6,2-some11,4-some13)],[1-f(4-some5,some3-some6,some4-some7,8-2,5-5,7-1,some8-4,some9-7),2-f(2-some6,4-some7,some3-2,some4-5,8-1,5-4,7-7,some8-3),3-f(6-some7,2-2,4-5,some3-1,some4-4,8-7,5-3,7-some1),4-f(some0-2,6-5,2-1,4-4,some3-7,some4-3,8-some1,5-some2),5-f(3-5,some0-1,6-4,2-7,4-3,some3-some1,some4-some2,8-8),7-f(some10-4,1-7,3-3,some0-some1,6-some2,2-8,4-6,some3-some11),8-f(some12-7,some10-3,1-some1,3-some2,some0-8,6-6,2-some11,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-4,some0-7,6-3,2-some1,4-some2,some3-8,some4-6),1-1)"}]
    <#lemma446>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_243 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_243.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma336> a r:Inference;
  r:gives {
    "board([6,4,1,5,8,2,7,3],[1-f(7-some0,some1-some2,3-3,some3-some4,6-2,8-1,some5-6,some6-4),2-f(4-some2,7-3,some1-some4,3-2,some3-1,6-6,8-4,some5-some7),3-f(2-3,4-some4,7-2,some1-1,3-6,some3-4,6-some7,8-8),4-f(5-some4,2-2,4-1,7-6,some1-4,3-some7,some3-8,6-some8),5-f(some9-2,5-1,2-6,4-4,7-some7,some1-8,3-some8,some3-5),6-f(1-1,some9-6,5-4,2-some7,4-8,7-some8,some1-5,3-7),7-f(some10-6,1-4,some9-some7,5-8,2-some8,4-5,7-7,some1-some11),8-f(some12-4,some10-some7,1-8,some9-some8,5-5,2-7,4-some11,7-some13)],0,8,[some14,some6,some5,8,6,some3,3,some1,7,4,2,5,some9,1,some10,some12|some15],[4,6,1,2,some4,3,some2,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_244 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_244.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma337> a r:Inference;
  r:gives {
    "queens([1-f(7-some0,some1-some2,3-3,some3-some4,6-2,8-1,some5-6,some6-4),2-f(4-some2,7-3,some1-some4,3-2,some3-1,6-6,8-4,some5-some7),3-f(2-3,4-some4,7-2,some1-1,3-6,some3-4,6-some7,8-8),4-f(5-some4,2-2,4-1,7-6,some1-4,3-some7,some3-8,6-some8),5-f(some9-2,5-1,2-6,4-4,7-some7,some1-8,3-some8,some3-5),6-f(1-1,some9-6,5-4,2-some7,4-8,7-some8,some1-5,3-7),7-f(some10-6,1-4,some9-some7,5-8,2-some8,4-5,7-7,some1-some11),8-f(some12-4,some10-some7,1-8,some9-some8,5-5,2-7,4-some11,7-some13)],0,[6,4,1,5,8,2,7,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(6-f(1-1,some0-6,5-4,2-some1,4-8,7-some2,some3-5,3-7),[1-f(7-some4,some3-some5,3-3,some6-some7,6-2,8-1,some8-6,some9-4),2-f(4-some5,7-3,some3-some7,3-2,some6-1,6-6,8-4,some8-some1),3-f(2-3,4-some7,7-2,some3-1,3-6,some6-4,6-some1,8-8),4-f(5-some7,2-2,4-1,7-6,some3-4,3-some1,some6-8,6-some2),5-f(some0-2,5-1,2-6,4-4,7-some1,some3-8,3-some2,some6-5),6-f(1-1,some0-6,5-4,2-some1,4-8,7-some2,some3-5,3-7),7-f(some10-6,1-4,some0-some1,5-8,2-some2,4-5,7-7,some3-some11),8-f(some12-4,some10-some1,1-8,some0-some2,5-5,2-7,4-some11,7-some13)],[1-f(7-some4,some3-some5,3-3,some6-some7,6-2,8-1,some8-6,some9-4),2-f(4-some5,7-3,some3-some7,3-2,some6-1,6-6,8-4,some8-some1),3-f(2-3,4-some7,7-2,some3-1,3-6,some6-4,6-some1,8-8),4-f(5-some7,2-2,4-1,7-6,some3-4,3-some1,some6-8,6-some2),5-f(some0-2,5-1,2-6,4-4,7-some1,some3-8,3-some2,some6-5),7-f(some10-6,1-4,some0-some1,5-8,2-some2,4-5,7-7,some3-some11),8-f(some12-4,some10-some1,1-8,some0-some2,5-5,2-7,4-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-6,5-4,2-some1,4-8,7-some2,some3-5,3-7),1-1)"}]
    <#lemma447>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_245 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_245.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma338> a r:Inference;
  r:gives {
    "board([6,4,2,8,5,7,1,3],[1-f(5-some0,3-some1,some2-some3,some4-3,some5-2,8-1,7-7,some6-some7),2-f(6-some1,5-some3,3-3,some2-2,some4-1,some5-7,8-some7,7-5),3-f(2-some3,6-3,5-2,3-1,some2-7,some4-some7,some5-5,8-8),4-f(some8-3,2-2,6-1,5-7,3-some7,some2-5,some4-8,some5-4),5-f(4-2,some8-1,2-7,6-some7,5-5,3-8,some2-4,some4-6),6-f(1-1,4-7,some8-some7,2-5,6-8,5-4,3-6,some2-some9),7-f(some10-7,1-some7,4-5,some8-8,2-4,6-6,5-some9,3-some11),8-f(some12-some7,some10-5,1-8,4-4,some8-6,2-some9,6-some11,5-some13)],0,8,[some14,some6,7,8,some5,some4,some2,3,5,6,2,some8,4,1,some10,some12|some15],[some7,7,1,2,3,some3,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_246 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_246.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma339> a r:Inference;
  r:gives {
    "queens([1-f(5-some0,3-some1,some2-some3,some4-3,some5-2,8-1,7-7,some6-some7),2-f(6-some1,5-some3,3-3,some2-2,some4-1,some5-7,8-some7,7-5),3-f(2-some3,6-3,5-2,3-1,some2-7,some4-some7,some5-5,8-8),4-f(some8-3,2-2,6-1,5-7,3-some7,some2-5,some4-8,some5-4),5-f(4-2,some8-1,2-7,6-some7,5-5,3-8,some2-4,some4-6),6-f(1-1,4-7,some8-some7,2-5,6-8,5-4,3-6,some2-some9),7-f(some10-7,1-some7,4-5,some8-8,2-4,6-6,5-some9,3-some11),8-f(some12-some7,some10-5,1-8,4-4,some8-6,2-some9,6-some11,5-some13)],0,[6,4,2,8,5,7,1,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(6-f(1-1,4-7,some0-some1,2-5,6-8,5-4,3-6,some2-some3),[1-f(5-some4,3-some5,some2-some6,some7-3,some8-2,8-1,7-7,some9-some1),2-f(6-some5,5-some6,3-3,some2-2,some7-1,some8-7,8-some1,7-5),3-f(2-some6,6-3,5-2,3-1,some2-7,some7-some1,some8-5,8-8),4-f(some0-3,2-2,6-1,5-7,3-some1,some2-5,some7-8,some8-4),5-f(4-2,some0-1,2-7,6-some1,5-5,3-8,some2-4,some7-6),6-f(1-1,4-7,some0-some1,2-5,6-8,5-4,3-6,some2-some3),7-f(some10-7,1-some1,4-5,some0-8,2-4,6-6,5-some3,3-some11),8-f(some12-some1,some10-5,1-8,4-4,some0-6,2-some3,6-some11,5-some13)],[1-f(5-some4,3-some5,some2-some6,some7-3,some8-2,8-1,7-7,some9-some1),2-f(6-some5,5-some6,3-3,some2-2,some7-1,some8-7,8-some1,7-5),3-f(2-some6,6-3,5-2,3-1,some2-7,some7-some1,some8-5,8-8),4-f(some0-3,2-2,6-1,5-7,3-some1,some2-5,some7-8,some8-4),5-f(4-2,some0-1,2-7,6-some1,5-5,3-8,some2-4,some7-6),7-f(some10-7,1-some1,4-5,some0-8,2-4,6-6,5-some3,3-some11),8-f(some12-some1,some10-5,1-8,4-4,some0-6,2-some3,6-some11,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,4-7,some0-some1,2-5,6-8,5-4,3-6,some2-some3),1-1)"}]
    <#lemma448>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_247 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_247.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma340> a r:Inference;
  r:gives {
    "board([6,4,7,1,3,5,2,8],[1-f(8-some0,6-some1,5-some2,4-4,some3-2,7-1,some4-5,some5-7),2-f(some6-some1,8-some2,6-4,5-2,4-1,some3-5,7-7,some4-3),3-f(2-some2,some6-4,8-2,6-1,5-5,4-7,some3-3,7-6),4-f(some7-4,2-2,some6-1,8-5,6-7,5-3,4-6,some3-some8),5-f(3-2,some7-1,2-5,some6-7,8-3,6-6,5-some8,4-some9),6-f(1-1,3-5,some7-7,2-3,some6-6,8-some8,6-some9,5-some10),7-f(some11-5,1-7,3-3,some7-6,2-some8,some6-some9,8-some10,6-some12),8-f(some13-7,some11-3,1-6,3-some8,some7-some9,2-some10,some6-some12,8-8)],0,8,[some14,some5,some4,7,some3,4,5,6,8,some6,2,some7,3,1,some11,some13|some15],[7,5,1,2,4,some2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_248 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_248.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma341> a r:Inference;
  r:gives {
    "queens([1-f(8-some0,6-some1,5-some2,4-4,some3-2,7-1,some4-5,some5-7),2-f(some6-some1,8-some2,6-4,5-2,4-1,some3-5,7-7,some4-3),3-f(2-some2,some6-4,8-2,6-1,5-5,4-7,some3-3,7-6),4-f(some7-4,2-2,some6-1,8-5,6-7,5-3,4-6,some3-some8),5-f(3-2,some7-1,2-5,some6-7,8-3,6-6,5-some8,4-some9),6-f(1-1,3-5,some7-7,2-3,some6-6,8-some8,6-some9,5-some10),7-f(some11-5,1-7,3-3,some7-6,2-some8,some6-some9,8-some10,6-some12),8-f(some13-7,some11-3,1-6,3-some8,some7-some9,2-some10,some6-some12,8-8)],0,[6,4,7,1,3,5,2,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(6-f(1-1,3-5,some0-7,2-3,some1-6,8-some2,6-some3,5-some4),[1-f(8-some5,6-some6,5-some7,4-4,some8-2,7-1,some9-5,some10-7),2-f(some1-some6,8-some7,6-4,5-2,4-1,some8-5,7-7,some9-3),3-f(2-some7,some1-4,8-2,6-1,5-5,4-7,some8-3,7-6),4-f(some0-4,2-2,some1-1,8-5,6-7,5-3,4-6,some8-some2),5-f(3-2,some0-1,2-5,some1-7,8-3,6-6,5-some2,4-some3),6-f(1-1,3-5,some0-7,2-3,some1-6,8-some2,6-some3,5-some4),7-f(some11-5,1-7,3-3,some0-6,2-some2,some1-some3,8-some4,6-some12),8-f(some13-7,some11-3,1-6,3-some2,some0-some3,2-some4,some1-some12,8-8)],[1-f(8-some5,6-some6,5-some7,4-4,some8-2,7-1,some9-5,some10-7),2-f(some1-some6,8-some7,6-4,5-2,4-1,some8-5,7-7,some9-3),3-f(2-some7,some1-4,8-2,6-1,5-5,4-7,some8-3,7-6),4-f(some0-4,2-2,some1-1,8-5,6-7,5-3,4-6,some8-some2),5-f(3-2,some0-1,2-5,some1-7,8-3,6-6,5-some2,4-some3),7-f(some11-5,1-7,3-3,some0-6,2-some2,some1-some3,8-some4,6-some12),8-f(some13-7,some11-3,1-6,3-some2,some0-some3,2-some4,some1-some12,8-8)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-5,some0-7,2-3,some1-6,8-some2,6-some3,5-some4),1-1)"}]
    <#lemma449>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_249 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_249.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma342> a r:Inference;
  r:gives {
    "board([6,4,7,1,8,2,5,3],[1-f(some0-some1,some2-some3,7-some4,4-4,6-2,8-1,some5-6,some6-some7),2-f(some8-some3,some0-some4,some2-4,7-2,4-1,6-6,8-some7,some5-3),3-f(2-some4,some8-4,some0-2,some2-1,7-6,4-some7,6-3,8-8),4-f(5-4,2-2,some8-1,some0-6,some2-some7,7-3,4-8,6-7),5-f(3-2,5-1,2-6,some8-some7,some0-3,some2-8,7-7,4-5),6-f(1-1,3-6,5-some7,2-3,some8-8,some0-7,some2-5,7-some9),7-f(some10-6,1-some7,3-3,5-8,2-7,some8-5,some0-some9,some2-some11),8-f(some12-some7,some10-3,1-8,3-7,5-5,2-some9,some8-some11,some0-some13)],0,8,[some14,some6,some5,8,6,4,7,some2,some0,some8,2,5,3,1,some10,some12|some15],[some7,6,1,2,4,some4,some3,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_250 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_250.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma343> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,some2-some3,7-some4,4-4,6-2,8-1,some5-6,some6-some7),2-f(some8-some3,some0-some4,some2-4,7-2,4-1,6-6,8-some7,some5-3),3-f(2-some4,some8-4,some0-2,some2-1,7-6,4-some7,6-3,8-8),4-f(5-4,2-2,some8-1,some0-6,some2-some7,7-3,4-8,6-7),5-f(3-2,5-1,2-6,some8-some7,some0-3,some2-8,7-7,4-5),6-f(1-1,3-6,5-some7,2-3,some8-8,some0-7,some2-5,7-some9),7-f(some10-6,1-some7,3-3,5-8,2-7,some8-5,some0-some9,some2-some11),8-f(some12-some7,some10-3,1-8,3-7,5-5,2-some9,some8-some11,some0-some13)],0,[6,4,7,1,8,2,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(6-f(1-1,3-6,5-some0,2-3,some1-8,some2-7,some3-5,7-some4),[1-f(some2-some5,some3-some6,7-some7,4-4,6-2,8-1,some8-6,some9-some0),2-f(some1-some6,some2-some7,some3-4,7-2,4-1,6-6,8-some0,some8-3),3-f(2-some7,some1-4,some2-2,some3-1,7-6,4-some0,6-3,8-8),4-f(5-4,2-2,some1-1,some2-6,some3-some0,7-3,4-8,6-7),5-f(3-2,5-1,2-6,some1-some0,some2-3,some3-8,7-7,4-5),6-f(1-1,3-6,5-some0,2-3,some1-8,some2-7,some3-5,7-some4),7-f(some10-6,1-some0,3-3,5-8,2-7,some1-5,some2-some4,some3-some11),8-f(some12-some0,some10-3,1-8,3-7,5-5,2-some4,some1-some11,some2-some13)],[1-f(some2-some5,some3-some6,7-some7,4-4,6-2,8-1,some8-6,some9-some0),2-f(some1-some6,some2-some7,some3-4,7-2,4-1,6-6,8-some0,some8-3),3-f(2-some7,some1-4,some2-2,some3-1,7-6,4-some0,6-3,8-8),4-f(5-4,2-2,some1-1,some2-6,some3-some0,7-3,4-8,6-7),5-f(3-2,5-1,2-6,some1-some0,some2-3,some3-8,7-7,4-5),7-f(some10-6,1-some0,3-3,5-8,2-7,some1-5,some2-some4,some3-some11),8-f(some12-some0,some10-3,1-8,3-7,5-5,2-some4,some1-some11,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-6,5-some0,2-3,some1-8,some2-7,some3-5,7-some4),1-1)"}]
    <#lemma450>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_251 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_251.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma344> a r:Inference;
  r:gives {
    "board([6,8,2,4,1,7,5,3],[1-f(4-some0,3-some1,7-some2,some3-3,5-5,8-1,some4-4,some5-some6),2-f(6-some1,4-some2,3-3,7-5,some3-1,5-4,8-some6,some4-2),3-f(some7-some2,6-3,4-5,3-1,7-4,some3-some6,5-2,8-8),4-f(some8-3,some7-5,6-1,4-4,3-some6,7-2,some3-8,5-7),5-f(some9-5,some8-1,some7-4,6-some6,4-2,3-8,7-7,some3-6),6-f(1-1,some9-4,some8-some6,some7-2,6-8,4-7,3-6,7-some10),7-f(2-4,1-some6,some9-2,some8-8,some7-7,6-6,4-some10,3-some11),8-f(some12-some6,2-2,1-8,some9-7,some8-6,some7-some10,6-some11,4-some13)],0,8,[some14,some5,some4,8,5,some3,7,3,4,6,some7,some8,some9,1,2,some12|some15],[some6,4,1,5,3,some2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_252 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_252.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma345> a r:Inference;
  r:gives {
    "queens([1-f(4-some0,3-some1,7-some2,some3-3,5-5,8-1,some4-4,some5-some6),2-f(6-some1,4-some2,3-3,7-5,some3-1,5-4,8-some6,some4-2),3-f(some7-some2,6-3,4-5,3-1,7-4,some3-some6,5-2,8-8),4-f(some8-3,some7-5,6-1,4-4,3-some6,7-2,some3-8,5-7),5-f(some9-5,some8-1,some7-4,6-some6,4-2,3-8,7-7,some3-6),6-f(1-1,some9-4,some8-some6,some7-2,6-8,4-7,3-6,7-some10),7-f(2-4,1-some6,some9-2,some8-8,some7-7,6-6,4-some10,3-some11),8-f(some12-some6,2-2,1-8,some9-7,some8-6,some7-some10,6-some11,4-some13)],0,[6,8,2,4,1,7,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(6-f(1-1,some0-4,some1-some2,some3-2,6-8,4-7,3-6,7-some4),[1-f(4-some5,3-some6,7-some7,some8-3,5-5,8-1,some9-4,some10-some2),2-f(6-some6,4-some7,3-3,7-5,some8-1,5-4,8-some2,some9-2),3-f(some3-some7,6-3,4-5,3-1,7-4,some8-some2,5-2,8-8),4-f(some1-3,some3-5,6-1,4-4,3-some2,7-2,some8-8,5-7),5-f(some0-5,some1-1,some3-4,6-some2,4-2,3-8,7-7,some8-6),6-f(1-1,some0-4,some1-some2,some3-2,6-8,4-7,3-6,7-some4),7-f(2-4,1-some2,some0-2,some1-8,some3-7,6-6,4-some4,3-some11),8-f(some12-some2,2-2,1-8,some0-7,some1-6,some3-some4,6-some11,4-some13)],[1-f(4-some5,3-some6,7-some7,some8-3,5-5,8-1,some9-4,some10-some2),2-f(6-some6,4-some7,3-3,7-5,some8-1,5-4,8-some2,some9-2),3-f(some3-some7,6-3,4-5,3-1,7-4,some8-some2,5-2,8-8),4-f(some1-3,some3-5,6-1,4-4,3-some2,7-2,some8-8,5-7),5-f(some0-5,some1-1,some3-4,6-some2,4-2,3-8,7-7,some8-6),7-f(2-4,1-some2,some0-2,some1-8,some3-7,6-6,4-some4,3-some11),8-f(some12-some2,2-2,1-8,some0-7,some1-6,some3-some4,6-some11,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-4,some1-some2,some3-2,6-8,4-7,3-6,7-some4),1-1)"}]
    <#lemma451>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_253 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_253.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma346> a r:Inference;
  r:gives {
    "board([7,1,3,8,6,4,2,5],[1-f(3-some0,2-2,6-some1,8-some2,some3-3,7-some4,some5-1,some6-7),2-f(5-2,3-some1,2-some2,6-3,8-some4,some3-1,7-7,some5-6),3-f(some7-some1,5-some2,3-3,2-some4,6-1,8-7,some3-6,7-5),4-f(some8-some2,some7-3,5-some4,3-1,2-7,6-6,8-5,some3-4),5-f(4-3,some8-some4,some7-1,5-7,3-6,2-5,6-4,8-8),6-f(some9-some4,4-1,some8-7,some7-6,5-5,3-4,2-8,6-some10),7-f(1-1,some9-7,4-6,some8-5,some7-4,5-8,3-some10,2-some11),8-f(some12-7,1-6,some9-5,4-4,some8-8,some7-some10,5-some11,3-some13)],0,8,[some14,some6,some5,7,some3,8,6,2,3,5,some7,some8,4,some9,1,some12|some15],[7,1,some4,3,some2,some1,2,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_254 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_254.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma347> a r:Inference;
  r:gives {
    "queens([1-f(3-some0,2-2,6-some1,8-some2,some3-3,7-some4,some5-1,some6-7),2-f(5-2,3-some1,2-some2,6-3,8-some4,some3-1,7-7,some5-6),3-f(some7-some1,5-some2,3-3,2-some4,6-1,8-7,some3-6,7-5),4-f(some8-some2,some7-3,5-some4,3-1,2-7,6-6,8-5,some3-4),5-f(4-3,some8-some4,some7-1,5-7,3-6,2-5,6-4,8-8),6-f(some9-some4,4-1,some8-7,some7-6,5-5,3-4,2-8,6-some10),7-f(1-1,some9-7,4-6,some8-5,some7-4,5-8,3-some10,2-some11),8-f(some12-7,1-6,some9-5,4-4,some8-8,some7-some10,5-some11,3-some13)],0,[7,1,3,8,6,4,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(7-f(1-1,some0-7,4-6,some1-5,some2-4,5-8,3-some3,2-some4),[1-f(3-some5,2-2,6-some6,8-some7,some8-3,7-some9,some10-1,some11-7),2-f(5-2,3-some6,2-some7,6-3,8-some9,some8-1,7-7,some10-6),3-f(some2-some6,5-some7,3-3,2-some9,6-1,8-7,some8-6,7-5),4-f(some1-some7,some2-3,5-some9,3-1,2-7,6-6,8-5,some8-4),5-f(4-3,some1-some9,some2-1,5-7,3-6,2-5,6-4,8-8),6-f(some0-some9,4-1,some1-7,some2-6,5-5,3-4,2-8,6-some3),7-f(1-1,some0-7,4-6,some1-5,some2-4,5-8,3-some3,2-some4),8-f(some12-7,1-6,some0-5,4-4,some1-8,some2-some3,5-some4,3-some13)],[1-f(3-some5,2-2,6-some6,8-some7,some8-3,7-some9,some10-1,some11-7),2-f(5-2,3-some6,2-some7,6-3,8-some9,some8-1,7-7,some10-6),3-f(some2-some6,5-some7,3-3,2-some9,6-1,8-7,some8-6,7-5),4-f(some1-some7,some2-3,5-some9,3-1,2-7,6-6,8-5,some8-4),5-f(4-3,some1-some9,some2-1,5-7,3-6,2-5,6-4,8-8),6-f(some0-some9,4-1,some1-7,some2-6,5-5,3-4,2-8,6-some3),8-f(some12-7,1-6,some0-5,4-4,some1-8,some2-some3,5-some4,3-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-7,4-6,some1-5,some2-4,5-8,3-some3,2-some4),1-1)"}]
    <#lemma452>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_255 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_255.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma348> a r:Inference;
  r:gives {
    "board([7,2,4,1,8,5,3,6],[1-f(2-some0,6-some1,8-2,4-4,7-some2,some3-3,some4-1,some5-some6),2-f(3-some1,2-2,6-4,8-some2,4-3,7-1,some3-some6,some4-7),3-f(some7-2,3-4,2-some2,6-3,8-1,4-some6,7-7,some3-6),4-f(5-4,some7-some2,3-3,2-1,6-some6,8-7,4-6,7-some8),5-f(some9-some2,5-3,some7-1,3-some6,2-7,6-6,8-some8,4-5),6-f(some10-3,some9-1,5-some6,some7-7,3-6,2-some8,6-5,8-8),7-f(1-1,some10-some6,some9-7,5-6,some7-some8,3-5,2-8,6-some11),8-f(some12-some6,1-7,some10-6,some9-some8,5-5,some7-8,3-some11,2-some13)],0,8,[some14,some5,some4,some3,7,4,8,6,2,3,some7,5,some9,some10,1,some12|some15],[some6,1,3,some2,4,2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_256 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_256.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma349> a r:Inference;
  r:gives {
    "queens([1-f(2-some0,6-some1,8-2,4-4,7-some2,some3-3,some4-1,some5-some6),2-f(3-some1,2-2,6-4,8-some2,4-3,7-1,some3-some6,some4-7),3-f(some7-2,3-4,2-some2,6-3,8-1,4-some6,7-7,some3-6),4-f(5-4,some7-some2,3-3,2-1,6-some6,8-7,4-6,7-some8),5-f(some9-some2,5-3,some7-1,3-some6,2-7,6-6,8-some8,4-5),6-f(some10-3,some9-1,5-some6,some7-7,3-6,2-some8,6-5,8-8),7-f(1-1,some10-some6,some9-7,5-6,some7-some8,3-5,2-8,6-some11),8-f(some12-some6,1-7,some10-6,some9-some8,5-5,some7-8,3-some11,2-some13)],0,[7,2,4,1,8,5,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(7-f(1-1,some0-some1,some2-7,5-6,some3-some4,3-5,2-8,6-some5),[1-f(2-some6,6-some7,8-2,4-4,7-some8,some9-3,some10-1,some11-some1),2-f(3-some7,2-2,6-4,8-some8,4-3,7-1,some9-some1,some10-7),3-f(some3-2,3-4,2-some8,6-3,8-1,4-some1,7-7,some9-6),4-f(5-4,some3-some8,3-3,2-1,6-some1,8-7,4-6,7-some4),5-f(some2-some8,5-3,some3-1,3-some1,2-7,6-6,8-some4,4-5),6-f(some0-3,some2-1,5-some1,some3-7,3-6,2-some4,6-5,8-8),7-f(1-1,some0-some1,some2-7,5-6,some3-some4,3-5,2-8,6-some5),8-f(some12-some1,1-7,some0-6,some2-some4,5-5,some3-8,3-some5,2-some13)],[1-f(2-some6,6-some7,8-2,4-4,7-some8,some9-3,some10-1,some11-some1),2-f(3-some7,2-2,6-4,8-some8,4-3,7-1,some9-some1,some10-7),3-f(some3-2,3-4,2-some8,6-3,8-1,4-some1,7-7,some9-6),4-f(5-4,some3-some8,3-3,2-1,6-some1,8-7,4-6,7-some4),5-f(some2-some8,5-3,some3-1,3-some1,2-7,6-6,8-some4,4-5),6-f(some0-3,some2-1,5-some1,some3-7,3-6,2-some4,6-5,8-8),8-f(some12-some1,1-7,some0-6,some2-some4,5-5,some3-8,3-some5,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-some1,some2-7,5-6,some3-some4,3-5,2-8,6-some5),1-1)"}]
    <#lemma453>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_257 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_257.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma350> a r:Inference;
  r:gives {
    "board([7,2,6,3,1,4,8,5],[1-f(2-some0,4-some1,6-2,8-some2,5-5,some3-4,some4-1,some5-3),2-f(7-some1,2-2,4-some2,6-5,8-4,5-1,some3-3,some4-6),3-f(some6-2,7-some2,2-5,4-4,6-1,8-3,5-6,some3-some7),4-f(3-some2,some6-5,7-4,2-1,4-3,6-6,8-some7,5-some8),5-f(some9-5,3-4,some6-1,7-3,2-6,4-some7,6-some8,8-8),6-f(some10-4,some9-1,3-3,some6-6,7-some7,2-some8,4-8,6-some11),7-f(1-1,some10-3,some9-6,3-some7,some6-some8,7-8,2-some11,4-7),8-f(some12-3,1-6,some10-some7,some9-some8,3-8,some6-some11,7-7,2-some13)],0,8,[some14,some5,some4,some3,5,8,6,4,2,7,some6,3,some9,some10,1,some12|some15],[3,1,4,5,some2,2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_258 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_258.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma351> a r:Inference;
  r:gives {
    "queens([1-f(2-some0,4-some1,6-2,8-some2,5-5,some3-4,some4-1,some5-3),2-f(7-some1,2-2,4-some2,6-5,8-4,5-1,some3-3,some4-6),3-f(some6-2,7-some2,2-5,4-4,6-1,8-3,5-6,some3-some7),4-f(3-some2,some6-5,7-4,2-1,4-3,6-6,8-some7,5-some8),5-f(some9-5,3-4,some6-1,7-3,2-6,4-some7,6-some8,8-8),6-f(some10-4,some9-1,3-3,some6-6,7-some7,2-some8,4-8,6-some11),7-f(1-1,some10-3,some9-6,3-some7,some6-some8,7-8,2-some11,4-7),8-f(some12-3,1-6,some10-some7,some9-some8,3-8,some6-some11,7-7,2-some13)],0,[7,2,6,3,1,4,8,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(7-f(1-1,some0-3,some1-6,3-some2,some3-some4,7-8,2-some5,4-7),[1-f(2-some6,4-some7,6-2,8-some8,5-5,some9-4,some10-1,some11-3),2-f(7-some7,2-2,4-some8,6-5,8-4,5-1,some9-3,some10-6),3-f(some3-2,7-some8,2-5,4-4,6-1,8-3,5-6,some9-some2),4-f(3-some8,some3-5,7-4,2-1,4-3,6-6,8-some2,5-some4),5-f(some1-5,3-4,some3-1,7-3,2-6,4-some2,6-some4,8-8),6-f(some0-4,some1-1,3-3,some3-6,7-some2,2-some4,4-8,6-some5),7-f(1-1,some0-3,some1-6,3-some2,some3-some4,7-8,2-some5,4-7),8-f(some12-3,1-6,some0-some2,some1-some4,3-8,some3-some5,7-7,2-some13)],[1-f(2-some6,4-some7,6-2,8-some8,5-5,some9-4,some10-1,some11-3),2-f(7-some7,2-2,4-some8,6-5,8-4,5-1,some9-3,some10-6),3-f(some3-2,7-some8,2-5,4-4,6-1,8-3,5-6,some9-some2),4-f(3-some8,some3-5,7-4,2-1,4-3,6-6,8-some2,5-some4),5-f(some1-5,3-4,some3-1,7-3,2-6,4-some2,6-some4,8-8),6-f(some0-4,some1-1,3-3,some3-6,7-some2,2-some4,4-8,6-some5),8-f(some12-3,1-6,some0-some2,some1-some4,3-8,some3-some5,7-7,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-3,some1-6,3-some2,some3-some4,7-8,2-some5,4-7),1-1)"}]
    <#lemma454>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_259 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_259.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma352> a r:Inference;
  r:gives {
    "board([7,3,1,6,8,5,2,4],[1-f(some0-some1,6-some2,3-3,some3-2,8-some4,7-some5,some6-1,some7-7),2-f(2-some2,some0-3,6-2,3-some4,some3-some5,8-1,7-7,some6-4),3-f(4-3,2-2,some0-some4,6-some5,3-1,some3-7,8-4,7-6),4-f(5-2,4-some4,2-some5,some0-1,6-7,3-4,some3-6,8-8),5-f(some8-some4,5-some5,4-1,2-7,some0-4,6-6,3-8,some3-5),6-f(some9-some5,some8-1,5-7,4-4,2-6,some0-8,6-5,3-some10),7-f(1-1,some9-7,some8-4,5-6,4-8,2-5,some0-some10,6-some11),8-f(some12-7,1-4,some9-6,some8-8,5-5,4-some10,2-some11,some0-some13)],0,8,[some14,some7,some6,7,8,some3,3,6,some0,2,4,5,some8,some9,1,some12|some15],[7,1,some5,some4,2,3,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_260 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_260.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma353> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,6-some2,3-3,some3-2,8-some4,7-some5,some6-1,some7-7),2-f(2-some2,some0-3,6-2,3-some4,some3-some5,8-1,7-7,some6-4),3-f(4-3,2-2,some0-some4,6-some5,3-1,some3-7,8-4,7-6),4-f(5-2,4-some4,2-some5,some0-1,6-7,3-4,some3-6,8-8),5-f(some8-some4,5-some5,4-1,2-7,some0-4,6-6,3-8,some3-5),6-f(some9-some5,some8-1,5-7,4-4,2-6,some0-8,6-5,3-some10),7-f(1-1,some9-7,some8-4,5-6,4-8,2-5,some0-some10,6-some11),8-f(some12-7,1-4,some9-6,some8-8,5-5,4-some10,2-some11,some0-some13)],0,[7,3,1,6,8,5,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(7-f(1-1,some0-7,some1-4,5-6,4-8,2-5,some2-some3,6-some4),[1-f(some2-some5,6-some6,3-3,some7-2,8-some8,7-some9,some10-1,some11-7),2-f(2-some6,some2-3,6-2,3-some8,some7-some9,8-1,7-7,some10-4),3-f(4-3,2-2,some2-some8,6-some9,3-1,some7-7,8-4,7-6),4-f(5-2,4-some8,2-some9,some2-1,6-7,3-4,some7-6,8-8),5-f(some1-some8,5-some9,4-1,2-7,some2-4,6-6,3-8,some7-5),6-f(some0-some9,some1-1,5-7,4-4,2-6,some2-8,6-5,3-some3),7-f(1-1,some0-7,some1-4,5-6,4-8,2-5,some2-some3,6-some4),8-f(some12-7,1-4,some0-6,some1-8,5-5,4-some3,2-some4,some2-some13)],[1-f(some2-some5,6-some6,3-3,some7-2,8-some8,7-some9,some10-1,some11-7),2-f(2-some6,some2-3,6-2,3-some8,some7-some9,8-1,7-7,some10-4),3-f(4-3,2-2,some2-some8,6-some9,3-1,some7-7,8-4,7-6),4-f(5-2,4-some8,2-some9,some2-1,6-7,3-4,some7-6,8-8),5-f(some1-some8,5-some9,4-1,2-7,some2-4,6-6,3-8,some7-5),6-f(some0-some9,some1-1,5-7,4-4,2-6,some2-8,6-5,3-some3),8-f(some12-7,1-4,some0-6,some1-8,5-5,4-some3,2-some4,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-7,some1-4,5-6,4-8,2-5,some2-some3,6-some4),1-1)"}]
    <#lemma455>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_261 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_261.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma354> a r:Inference;
  r:gives {
    "board([7,3,8,2,5,1,6,4],[1-f(5-some0,7-some1,4-some2,some3-2,8-4,6-6,some4-1,some5-some6),2-f(2-some1,5-some2,7-2,4-4,some3-6,8-1,6-some6,some4-5),3-f(some7-some2,2-2,5-4,7-6,4-1,some3-some6,8-5,6-3),4-f(some8-2,some7-4,2-6,5-1,7-some6,4-5,some3-3,8-8),5-f(some9-4,some8-6,some7-1,2-some6,5-5,7-3,4-8,some3-7),6-f(3-6,some9-1,some8-some6,some7-5,2-3,5-8,7-7,4-some10),7-f(1-1,3-some6,some9-5,some8-3,some7-8,2-7,5-some10,7-some11),8-f(some12-some6,1-5,3-3,some9-8,some8-7,some7-some10,2-some11,5-some13)],0,8,[some14,some5,some4,6,8,some3,4,7,5,2,some7,some8,some9,3,1,some12|some15],[some6,1,6,4,2,some2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_262 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_262.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma355> a r:Inference;
  r:gives {
    "queens([1-f(5-some0,7-some1,4-some2,some3-2,8-4,6-6,some4-1,some5-some6),2-f(2-some1,5-some2,7-2,4-4,some3-6,8-1,6-some6,some4-5),3-f(some7-some2,2-2,5-4,7-6,4-1,some3-some6,8-5,6-3),4-f(some8-2,some7-4,2-6,5-1,7-some6,4-5,some3-3,8-8),5-f(some9-4,some8-6,some7-1,2-some6,5-5,7-3,4-8,some3-7),6-f(3-6,some9-1,some8-some6,some7-5,2-3,5-8,7-7,4-some10),7-f(1-1,3-some6,some9-5,some8-3,some7-8,2-7,5-some10,7-some11),8-f(some12-some6,1-5,3-3,some9-8,some8-7,some7-some10,2-some11,5-some13)],0,[7,3,8,2,5,1,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(7-f(1-1,3-some0,some1-5,some2-3,some3-8,2-7,5-some4,7-some5),[1-f(5-some6,7-some7,4-some8,some9-2,8-4,6-6,some10-1,some11-some0),2-f(2-some7,5-some8,7-2,4-4,some9-6,8-1,6-some0,some10-5),3-f(some3-some8,2-2,5-4,7-6,4-1,some9-some0,8-5,6-3),4-f(some2-2,some3-4,2-6,5-1,7-some0,4-5,some9-3,8-8),5-f(some1-4,some2-6,some3-1,2-some0,5-5,7-3,4-8,some9-7),6-f(3-6,some1-1,some2-some0,some3-5,2-3,5-8,7-7,4-some4),7-f(1-1,3-some0,some1-5,some2-3,some3-8,2-7,5-some4,7-some5),8-f(some12-some0,1-5,3-3,some1-8,some2-7,some3-some4,2-some5,5-some13)],[1-f(5-some6,7-some7,4-some8,some9-2,8-4,6-6,some10-1,some11-some0),2-f(2-some7,5-some8,7-2,4-4,some9-6,8-1,6-some0,some10-5),3-f(some3-some8,2-2,5-4,7-6,4-1,some9-some0,8-5,6-3),4-f(some2-2,some3-4,2-6,5-1,7-some0,4-5,some9-3,8-8),5-f(some1-4,some2-6,some3-1,2-some0,5-5,7-3,4-8,some9-7),6-f(3-6,some1-1,some2-some0,some3-5,2-3,5-8,7-7,4-some4),8-f(some12-some0,1-5,3-3,some1-8,some2-7,some3-some4,2-some5,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,3-some0,some1-5,some2-3,some3-8,2-7,5-some4,7-some5),1-1)"}]
    <#lemma456>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_263 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_263.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma356> a r:Inference;
  r:gives {
    "board([7,4,2,5,8,1,3,6],[1-f(some0-some1,3-some2,8-some3,some4-3,7-2,6-6,some5-1,some6-4),2-f(4-some2,some0-some3,3-3,8-2,some4-6,7-1,6-4,some5-7),3-f(2-some3,4-3,some0-2,3-6,8-1,some4-4,7-7,6-some7),4-f(5-3,2-2,4-6,some0-1,3-4,8-7,some4-some7,7-some8),5-f(some9-2,5-6,2-1,4-4,some0-7,3-some7,8-some8,some4-5),6-f(some10-6,some9-1,5-4,2-7,4-some7,some0-some8,3-5,8-8),7-f(1-1,some10-4,some9-7,5-some7,2-some8,4-5,some0-8,3-some11),8-f(some12-4,1-7,some10-some7,some9-some8,5-5,2-8,4-some11,some0-some13)],0,8,[some14,some6,some5,6,7,some4,8,3,some0,4,2,5,some9,some10,1,some12|some15],[4,1,6,2,3,some3,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_264 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_264.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma357> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,3-some2,8-some3,some4-3,7-2,6-6,some5-1,some6-4),2-f(4-some2,some0-some3,3-3,8-2,some4-6,7-1,6-4,some5-7),3-f(2-some3,4-3,some0-2,3-6,8-1,some4-4,7-7,6-some7),4-f(5-3,2-2,4-6,some0-1,3-4,8-7,some4-some7,7-some8),5-f(some9-2,5-6,2-1,4-4,some0-7,3-some7,8-some8,some4-5),6-f(some10-6,some9-1,5-4,2-7,4-some7,some0-some8,3-5,8-8),7-f(1-1,some10-4,some9-7,5-some7,2-some8,4-5,some0-8,3-some11),8-f(some12-4,1-7,some10-some7,some9-some8,5-5,2-8,4-some11,some0-some13)],0,[7,4,2,5,8,1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(7-f(1-1,some0-4,some1-7,5-some2,2-some3,4-5,some4-8,3-some5),[1-f(some4-some6,3-some7,8-some8,some9-3,7-2,6-6,some10-1,some11-4),2-f(4-some7,some4-some8,3-3,8-2,some9-6,7-1,6-4,some10-7),3-f(2-some8,4-3,some4-2,3-6,8-1,some9-4,7-7,6-some2),4-f(5-3,2-2,4-6,some4-1,3-4,8-7,some9-some2,7-some3),5-f(some1-2,5-6,2-1,4-4,some4-7,3-some2,8-some3,some9-5),6-f(some0-6,some1-1,5-4,2-7,4-some2,some4-some3,3-5,8-8),7-f(1-1,some0-4,some1-7,5-some2,2-some3,4-5,some4-8,3-some5),8-f(some12-4,1-7,some0-some2,some1-some3,5-5,2-8,4-some5,some4-some13)],[1-f(some4-some6,3-some7,8-some8,some9-3,7-2,6-6,some10-1,some11-4),2-f(4-some7,some4-some8,3-3,8-2,some9-6,7-1,6-4,some10-7),3-f(2-some8,4-3,some4-2,3-6,8-1,some9-4,7-7,6-some2),4-f(5-3,2-2,4-6,some4-1,3-4,8-7,some9-some2,7-some3),5-f(some1-2,5-6,2-1,4-4,some4-7,3-some2,8-some3,some9-5),6-f(some0-6,some1-1,5-4,2-7,4-some2,some4-some3,3-5,8-8),8-f(some12-4,1-7,some0-some2,some1-some3,5-5,2-8,4-some5,some4-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-4,some1-7,5-some2,2-some3,4-5,some4-8,3-some5),1-1)"}]
    <#lemma457>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_265 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_265.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma358> a r:Inference;
  r:gives {
    "board([7,4,2,8,6,1,3,5],[1-f(some0-some1,3-some2,some3-some4,8-3,7-2,6-6,some5-1,some6-some7),2-f(5-some2,some0-some4,3-3,some3-2,8-6,7-1,6-some7,some5-7),3-f(2-some4,5-3,some0-2,3-6,some3-1,8-some7,7-7,6-5),4-f(some8-3,2-2,5-6,some0-1,3-some7,some3-7,8-5,7-4),5-f(4-2,some8-6,2-1,5-some7,some0-7,3-5,some3-4,8-8),6-f(some9-6,4-1,some8-some7,2-7,5-5,some0-4,3-8,some3-some10),7-f(1-1,some9-some7,4-7,some8-5,2-4,5-8,some0-some10,3-some11),8-f(some12-some7,1-7,some9-5,4-4,some8-8,2-some10,5-some11,some0-some13)],0,8,[some14,some6,some5,6,7,8,some3,3,some0,5,2,some8,4,some9,1,some12|some15],[some7,1,6,2,3,some4,some2,some1|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_266 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_266.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma359> a r:Inference;
  r:gives {
    "queens([1-f(some0-some1,3-some2,some3-some4,8-3,7-2,6-6,some5-1,some6-some7),2-f(5-some2,some0-some4,3-3,some3-2,8-6,7-1,6-some7,some5-7),3-f(2-some4,5-3,some0-2,3-6,some3-1,8-some7,7-7,6-5),4-f(some8-3,2-2,5-6,some0-1,3-some7,some3-7,8-5,7-4),5-f(4-2,some8-6,2-1,5-some7,some0-7,3-5,some3-4,8-8),6-f(some9-6,4-1,some8-some7,2-7,5-5,some0-4,3-8,some3-some10),7-f(1-1,some9-some7,4-7,some8-5,2-4,5-8,some0-some10,3-some11),8-f(some12-some7,1-7,some9-5,4-4,some8-8,2-some10,5-some11,some0-some13)],0,[7,4,2,8,6,1,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(7-f(1-1,some0-some1,4-7,some2-5,2-4,5-8,some3-some4,3-some5),[1-f(some3-some6,3-some7,some8-some9,8-3,7-2,6-6,some10-1,some11-some1),2-f(5-some7,some3-some9,3-3,some8-2,8-6,7-1,6-some1,some10-7),3-f(2-some9,5-3,some3-2,3-6,some8-1,8-some1,7-7,6-5),4-f(some2-3,2-2,5-6,some3-1,3-some1,some8-7,8-5,7-4),5-f(4-2,some2-6,2-1,5-some1,some3-7,3-5,some8-4,8-8),6-f(some0-6,4-1,some2-some1,2-7,5-5,some3-4,3-8,some8-some4),7-f(1-1,some0-some1,4-7,some2-5,2-4,5-8,some3-some4,3-some5),8-f(some12-some1,1-7,some0-5,4-4,some2-8,2-some4,5-some5,some3-some13)],[1-f(some3-some6,3-some7,some8-some9,8-3,7-2,6-6,some10-1,some11-some1),2-f(5-some7,some3-some9,3-3,some8-2,8-6,7-1,6-some1,some10-7),3-f(2-some9,5-3,some3-2,3-6,some8-1,8-some1,7-7,6-5),4-f(some2-3,2-2,5-6,some3-1,3-some1,some8-7,8-5,7-4),5-f(4-2,some2-6,2-1,5-some1,some3-7,3-5,some8-4,8-8),6-f(some0-6,4-1,some2-some1,2-7,5-5,some3-4,3-8,some8-some4),8-f(some12-some1,1-7,some0-5,4-4,some2-8,2-some4,5-some5,some3-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-some1,4-7,some2-5,2-4,5-8,some3-some4,3-some5),1-1)"}]
    <#lemma458>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_267 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_267.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma360> a r:Inference;
  r:gives {
    "board([7,5,3,1,6,8,2,4],[1-f(3-some0,some1-some2,some3-some4,4-4,8-3,7-2,some5-1,some6-7),2-f(5-some2,3-some4,some1-4,some3-3,4-2,8-1,7-7,some5-some7),3-f(6-some4,5-4,3-3,some1-2,some3-1,4-7,8-some7,7-5),4-f(2-4,6-3,5-2,3-1,some1-7,some3-some7,4-5,8-8),5-f(some8-3,2-2,6-1,5-7,3-some7,some1-5,some3-8,4-some9),6-f(some10-2,some8-1,2-7,6-some7,5-5,3-8,some1-some9,some3-6),7-f(1-1,some10-7,some8-some7,2-5,6-8,5-some9,3-6,some1-some11),8-f(some12-7,1-some7,some10-5,some8-8,2-some9,6-6,5-some11,3-some13)],0,8,[some14,some6,some5,7,8,4,some3,some1,3,5,6,2,some8,some10,1,some12|some15],[7,1,2,3,4,some4,some2,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_268 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_268.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma361> a r:Inference;
  r:gives {
    "queens([1-f(3-some0,some1-some2,some3-some4,4-4,8-3,7-2,some5-1,some6-7),2-f(5-some2,3-some4,some1-4,some3-3,4-2,8-1,7-7,some5-some7),3-f(6-some4,5-4,3-3,some1-2,some3-1,4-7,8-some7,7-5),4-f(2-4,6-3,5-2,3-1,some1-7,some3-some7,4-5,8-8),5-f(some8-3,2-2,6-1,5-7,3-some7,some1-5,some3-8,4-some9),6-f(some10-2,some8-1,2-7,6-some7,5-5,3-8,some1-some9,some3-6),7-f(1-1,some10-7,some8-some7,2-5,6-8,5-some9,3-6,some1-some11),8-f(some12-7,1-some7,some10-5,some8-8,2-some9,6-6,5-some11,3-some13)],0,[7,5,3,1,6,8,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(7-f(1-1,some0-7,some1-some2,2-5,6-8,5-some3,3-6,some4-some5),[1-f(3-some6,some4-some7,some8-some9,4-4,8-3,7-2,some10-1,some11-7),2-f(5-some7,3-some9,some4-4,some8-3,4-2,8-1,7-7,some10-some2),3-f(6-some9,5-4,3-3,some4-2,some8-1,4-7,8-some2,7-5),4-f(2-4,6-3,5-2,3-1,some4-7,some8-some2,4-5,8-8),5-f(some1-3,2-2,6-1,5-7,3-some2,some4-5,some8-8,4-some3),6-f(some0-2,some1-1,2-7,6-some2,5-5,3-8,some4-some3,some8-6),7-f(1-1,some0-7,some1-some2,2-5,6-8,5-some3,3-6,some4-some5),8-f(some12-7,1-some2,some0-5,some1-8,2-some3,6-6,5-some5,3-some13)],[1-f(3-some6,some4-some7,some8-some9,4-4,8-3,7-2,some10-1,some11-7),2-f(5-some7,3-some9,some4-4,some8-3,4-2,8-1,7-7,some10-some2),3-f(6-some9,5-4,3-3,some4-2,some8-1,4-7,8-some2,7-5),4-f(2-4,6-3,5-2,3-1,some4-7,some8-some2,4-5,8-8),5-f(some1-3,2-2,6-1,5-7,3-some2,some4-5,some8-8,4-some3),6-f(some0-2,some1-1,2-7,6-some2,5-5,3-8,some4-some3,some8-6),8-f(some12-7,1-some2,some0-5,some1-8,2-some3,6-6,5-some5,3-some13)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-7,some1-some2,2-5,6-8,5-some3,3-6,some4-some5),1-1)"}]
    <#lemma459>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_269 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_269.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma362> a r:Inference;
  r:gives {
    "board([8,2,4,1,7,5,3,6],[1-f(2-some0,6-some1,8-2,4-4,7-some2,some3-3,some4-some5,some6-1),2-f(3-some1,2-2,6-4,8-some2,4-3,7-some5,some3-1,some4-7),3-f(5-2,3-4,2-some2,6-3,8-some5,4-1,7-7,some3-6),4-f(some7-4,5-some2,3-3,2-some5,6-1,8-7,4-6,7-5),5-f(some8-some2,some7-3,5-some5,3-1,2-7,6-6,8-5,4-some9),6-f(some10-3,some8-some5,some7-1,5-7,3-6,2-5,6-some9,8-8),7-f(some11-some5,some10-1,some8-7,some7-6,5-5,3-some9,2-8,6-some12),8-f(1-1,some11-7,some10-6,some8-5,some7-some9,5-8,3-some12,2-some13)],0,8,[some14,some6,some4,some3,7,4,8,6,2,3,5,some7,some8,some10,some11,1|some15],[1,some5,3,some2,4,2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_270 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_270.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma363> a r:Inference;
  r:gives {
    "queens([1-f(2-some0,6-some1,8-2,4-4,7-some2,some3-3,some4-some5,some6-1),2-f(3-some1,2-2,6-4,8-some2,4-3,7-some5,some3-1,some4-7),3-f(5-2,3-4,2-some2,6-3,8-some5,4-1,7-7,some3-6),4-f(some7-4,5-some2,3-3,2-some5,6-1,8-7,4-6,7-5),5-f(some8-some2,some7-3,5-some5,3-1,2-7,6-6,8-5,4-some9),6-f(some10-3,some8-some5,some7-1,5-7,3-6,2-5,6-some9,8-8),7-f(some11-some5,some10-1,some8-7,some7-6,5-5,3-some9,2-8,6-some12),8-f(1-1,some11-7,some10-6,some8-5,some7-some9,5-8,3-some12,2-some13)],0,[8,2,4,1,7,5,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(8-f(1-1,some0-7,some1-6,some2-5,some3-some4,5-8,3-some5,2-some6),[1-f(2-some7,6-some8,8-2,4-4,7-some9,some10-3,some11-some12,some13-1),2-f(3-some8,2-2,6-4,8-some9,4-3,7-some12,some10-1,some11-7),3-f(5-2,3-4,2-some9,6-3,8-some12,4-1,7-7,some10-6),4-f(some3-4,5-some9,3-3,2-some12,6-1,8-7,4-6,7-5),5-f(some2-some9,some3-3,5-some12,3-1,2-7,6-6,8-5,4-some4),6-f(some1-3,some2-some12,some3-1,5-7,3-6,2-5,6-some4,8-8),7-f(some0-some12,some1-1,some2-7,some3-6,5-5,3-some4,2-8,6-some5),8-f(1-1,some0-7,some1-6,some2-5,some3-some4,5-8,3-some5,2-some6)],[1-f(2-some7,6-some8,8-2,4-4,7-some9,some10-3,some11-some12,some13-1),2-f(3-some8,2-2,6-4,8-some9,4-3,7-some12,some10-1,some11-7),3-f(5-2,3-4,2-some9,6-3,8-some12,4-1,7-7,some10-6),4-f(some3-4,5-some9,3-3,2-some12,6-1,8-7,4-6,7-5),5-f(some2-some9,some3-3,5-some12,3-1,2-7,6-6,8-5,4-some4),6-f(some1-3,some2-some12,some3-1,5-7,3-6,2-5,6-some4,8-8),7-f(some0-some12,some1-1,some2-7,some3-6,5-5,3-some4,2-8,6-some5)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-7,some1-6,some2-5,some3-some4,5-8,3-some5,2-some6),1-1)"}]
    <#lemma460>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_271 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_271.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma364> a r:Inference;
  r:gives {
    "board([8,2,5,3,1,7,4,6],[1-f(2-some0,4-some1,8-2,7-some2,5-5,some3-4,some4-3,some5-1),2-f(6-some1,2-2,4-some2,8-5,7-4,5-3,some3-1,some4-some6),3-f(3-2,6-some2,2-5,4-4,8-3,7-1,5-some6,some3-7),4-f(some7-some2,3-5,6-4,2-3,4-1,8-some6,7-7,5-some8),5-f(some9-5,some7-4,3-3,6-1,2-some6,4-7,8-some8,7-6),6-f(some10-4,some9-3,some7-1,3-some6,6-7,2-some8,4-6,8-8),7-f(some11-3,some10-1,some9-some6,some7-7,3-some8,6-6,2-8,4-some12),8-f(1-1,some11-some6,some10-7,some9-some8,some7-6,3-8,6-some12,2-some13)],0,8,[some14,some5,some4,some3,5,7,8,4,2,6,3,some7,some9,some10,some11,1|some15],[1,3,4,5,some2,2,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_272 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_272.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma365> a r:Inference;
  r:gives {
    "queens([1-f(2-some0,4-some1,8-2,7-some2,5-5,some3-4,some4-3,some5-1),2-f(6-some1,2-2,4-some2,8-5,7-4,5-3,some3-1,some4-some6),3-f(3-2,6-some2,2-5,4-4,8-3,7-1,5-some6,some3-7),4-f(some7-some2,3-5,6-4,2-3,4-1,8-some6,7-7,5-some8),5-f(some9-5,some7-4,3-3,6-1,2-some6,4-7,8-some8,7-6),6-f(some10-4,some9-3,some7-1,3-some6,6-7,2-some8,4-6,8-8),7-f(some11-3,some10-1,some9-some6,some7-7,3-some8,6-6,2-8,4-some12),8-f(1-1,some11-some6,some10-7,some9-some8,some7-6,3-8,6-some12,2-some13)],0,[8,2,5,3,1,7,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(8-f(1-1,some0-some1,some2-7,some3-some4,some5-6,3-8,6-some6,2-some7),[1-f(2-some8,4-some9,8-2,7-some10,5-5,some11-4,some12-3,some13-1),2-f(6-some9,2-2,4-some10,8-5,7-4,5-3,some11-1,some12-some1),3-f(3-2,6-some10,2-5,4-4,8-3,7-1,5-some1,some11-7),4-f(some5-some10,3-5,6-4,2-3,4-1,8-some1,7-7,5-some4),5-f(some3-5,some5-4,3-3,6-1,2-some1,4-7,8-some4,7-6),6-f(some2-4,some3-3,some5-1,3-some1,6-7,2-some4,4-6,8-8),7-f(some0-3,some2-1,some3-some1,some5-7,3-some4,6-6,2-8,4-some6),8-f(1-1,some0-some1,some2-7,some3-some4,some5-6,3-8,6-some6,2-some7)],[1-f(2-some8,4-some9,8-2,7-some10,5-5,some11-4,some12-3,some13-1),2-f(6-some9,2-2,4-some10,8-5,7-4,5-3,some11-1,some12-some1),3-f(3-2,6-some10,2-5,4-4,8-3,7-1,5-some1,some11-7),4-f(some5-some10,3-5,6-4,2-3,4-1,8-some1,7-7,5-some4),5-f(some3-5,some5-4,3-3,6-1,2-some1,4-7,8-some4,7-6),6-f(some2-4,some3-3,some5-1,3-some1,6-7,2-some4,4-6,8-8),7-f(some0-3,some2-1,some3-some1,some5-7,3-some4,6-6,2-8,4-some6)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-some1,some2-7,some3-some4,some5-6,3-8,6-some6,2-some7),1-1)"}]
    <#lemma461>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_273 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_273.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma366> a r:Inference;
  r:gives {
    "board([8,3,1,6,2,5,7,4],[1-f(7-some0,6-some1,3-3,5-2,8-some2,some3-5,some4-some5,some6-1),2-f(2-some1,7-3,6-2,3-some2,5-5,8-some5,some3-1,some4-4),3-f(4-3,2-2,7-some2,6-5,3-some5,5-1,8-4,some3-6),4-f(some7-2,4-some2,2-5,7-some5,6-1,3-4,5-6,8-8),5-f(some8-some2,some7-5,4-some5,2-1,7-4,6-6,3-8,5-some9),6-f(some10-5,some8-some5,some7-1,4-4,2-6,7-8,6-some9,3-7),7-f(some11-some5,some10-1,some8-4,some7-6,4-8,2-some9,7-7,6-some12),8-f(1-1,some11-4,some10-6,some8-8,some7-some9,4-7,2-some12,7-some13)],0,8,[some14,some6,some4,some3,8,5,3,6,7,2,4,some7,some8,some10,some11,1|some15],[1,some5,5,some2,2,3,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_274 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_274.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma367> a r:Inference;
  r:gives {
    "queens([1-f(7-some0,6-some1,3-3,5-2,8-some2,some3-5,some4-some5,some6-1),2-f(2-some1,7-3,6-2,3-some2,5-5,8-some5,some3-1,some4-4),3-f(4-3,2-2,7-some2,6-5,3-some5,5-1,8-4,some3-6),4-f(some7-2,4-some2,2-5,7-some5,6-1,3-4,5-6,8-8),5-f(some8-some2,some7-5,4-some5,2-1,7-4,6-6,3-8,5-some9),6-f(some10-5,some8-some5,some7-1,4-4,2-6,7-8,6-some9,3-7),7-f(some11-some5,some10-1,some8-4,some7-6,4-8,2-some9,7-7,6-some12),8-f(1-1,some11-4,some10-6,some8-8,some7-some9,4-7,2-some12,7-some13)],0,[8,3,1,6,2,5,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(8-f(1-1,some0-4,some1-6,some2-8,some3-some4,4-7,2-some5,7-some6),[1-f(7-some7,6-some8,3-3,5-2,8-some9,some10-5,some11-some12,some13-1),2-f(2-some8,7-3,6-2,3-some9,5-5,8-some12,some10-1,some11-4),3-f(4-3,2-2,7-some9,6-5,3-some12,5-1,8-4,some10-6),4-f(some3-2,4-some9,2-5,7-some12,6-1,3-4,5-6,8-8),5-f(some2-some9,some3-5,4-some12,2-1,7-4,6-6,3-8,5-some4),6-f(some1-5,some2-some12,some3-1,4-4,2-6,7-8,6-some4,3-7),7-f(some0-some12,some1-1,some2-4,some3-6,4-8,2-some4,7-7,6-some5),8-f(1-1,some0-4,some1-6,some2-8,some3-some4,4-7,2-some5,7-some6)],[1-f(7-some7,6-some8,3-3,5-2,8-some9,some10-5,some11-some12,some13-1),2-f(2-some8,7-3,6-2,3-some9,5-5,8-some12,some10-1,some11-4),3-f(4-3,2-2,7-some9,6-5,3-some12,5-1,8-4,some10-6),4-f(some3-2,4-some9,2-5,7-some12,6-1,3-4,5-6,8-8),5-f(some2-some9,some3-5,4-some12,2-1,7-4,6-6,3-8,5-some4),6-f(some1-5,some2-some12,some3-1,4-4,2-6,7-8,6-some4,3-7),7-f(some0-some12,some1-1,some2-4,some3-6,4-8,2-some4,7-7,6-some5)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-4,some1-6,some2-8,some3-some4,4-7,2-some5,7-some6),1-1)"}]
    <#lemma462>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_275 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_275.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma368> a r:Inference;
  r:gives {
    "board([8,4,1,3,6,2,7,5],[1-f(7-some0,4-some1,3-3,8-some2,6-2,some3-4,some4-6,some5-1),2-f(5-some1,7-3,4-some2,3-2,8-4,6-6,some3-1,some4-some6),3-f(2-3,5-some2,7-2,4-4,3-6,8-1,6-some6,some3-5),4-f(some7-some2,2-2,5-4,7-6,4-1,3-some6,8-5,6-some8),5-f(some9-2,some7-4,2-6,5-1,7-some6,4-5,3-some8,8-8),6-f(some10-4,some9-6,some7-1,2-some6,5-5,7-some8,4-8,3-7),7-f(some11-6,some10-1,some9-some6,some7-5,2-some8,5-8,7-7,4-some12),8-f(1-1,some11-some6,some10-5,some9-some8,some7-8,2-7,5-some12,7-some13)],0,8,[some14,some5,some4,some3,6,8,3,4,7,5,2,some7,some9,some10,some11,1|some15],[1,6,4,2,some2,3,some1,some0|some16])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma370>
    <#lemma371>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_276 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_276.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma369> a r:Inference;
  r:gives {
    "queens([1-f(7-some0,4-some1,3-3,8-some2,6-2,some3-4,some4-6,some5-1),2-f(5-some1,7-3,4-some2,3-2,8-4,6-6,some3-1,some4-some6),3-f(2-3,5-some2,7-2,4-4,3-6,8-1,6-some6,some3-5),4-f(some7-some2,2-2,5-4,7-6,4-1,3-some6,8-5,6-some8),5-f(some9-2,some7-4,2-6,5-1,7-some6,4-5,3-some8,8-8),6-f(some10-4,some9-6,some7-1,2-some6,5-5,7-some8,4-8,3-7),7-f(some11-6,some10-1,some9-some6,some7-5,2-some8,5-8,7-7,4-some12),8-f(1-1,some11-some6,some10-5,some9-some8,some7-8,2-7,5-some12,7-some13)],0,[8,4,1,3,6,2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(0 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 1}]
    [ a r:Fact; r:gives {"select(8-f(1-1,some0-some1,some2-5,some3-some4,some5-8,2-7,5-some6,7-some7),[1-f(7-some8,4-some9,3-3,8-some10,6-2,some11-4,some12-6,some13-1),2-f(5-some9,7-3,4-some10,3-2,8-4,6-6,some11-1,some12-some1),3-f(2-3,5-some10,7-2,4-4,3-6,8-1,6-some1,some11-5),4-f(some5-some10,2-2,5-4,7-6,4-1,3-some1,8-5,6-some4),5-f(some3-2,some5-4,2-6,5-1,7-some1,4-5,3-some4,8-8),6-f(some2-4,some3-6,some5-1,2-some1,5-5,7-some4,4-8,3-7),7-f(some0-6,some2-1,some3-some1,some5-5,2-some4,5-8,7-7,4-some6),8-f(1-1,some0-some1,some2-5,some3-some4,some5-8,2-7,5-some6,7-some7)],[1-f(7-some8,4-some9,3-3,8-some10,6-2,some11-4,some12-6,some13-1),2-f(5-some9,7-3,4-some10,3-2,8-4,6-6,some11-1,some12-some1),3-f(2-3,5-some10,7-2,4-4,3-6,8-1,6-some1,some11-5),4-f(some5-some10,2-2,5-4,7-6,4-1,3-some1,8-5,6-some4),5-f(some3-2,some5-4,2-6,5-1,7-some1,4-5,3-some4,8-8),6-f(some2-4,some3-6,some5-1,2-some1,5-5,7-some4,4-8,3-7),7-f(some0-6,some2-1,some3-some1,some5-5,2-some4,5-8,7-7,4-some6)])"}]
    [ a r:Fact; r:gives {"arg(1,f(1-1,some0-some1,some2-5,some3-some4,some5-8,2-7,5-some6,7-some7),1-1)"}]
    <#lemma463>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_277 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_277.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma370> a r:Inference;
  r:gives {
    "constraints(8,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),[some14,some12,some10,some8,some6,some4,some2,some0,some16,some17,some18,some19,some20,some21,some22|some23],[some15,some13,some11,some9,some7,some5,some3,some1|some24])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"arg(8,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),some14-some15)"}]
    [ a r:Fact; r:gives {(8 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> 7}]
    <#lemma464>
  );
  r:rule [ a r:Fact; r:gives {{"arg(avar0,avar1,avar2-avar3)".
    (_:x_0_278 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> _:x_4_278.
    "constraints(avar4,avar1,avar5,avar6)"} => "constraints(avar0,avar1,[avar2|avar5],[avar3|avar6])"}].

<#lemma371> a r:Inference;
  r:gives {
    "board([some25,some26,some27,some28,some29,some30,some31],[2-f(some16-some3,some0-some5,some2-some7,some4-some9,some6-some11,some8-some13,some10-some15,some12-some32),3-f(some17-some5,some16-some7,some0-some9,some2-some11,some4-some13,some6-some15,some8-some32,some10-some33),4-f(some18-some7,some17-some9,some16-some11,some0-some13,some2-some15,some4-some32,some6-some33,some8-some34),5-f(some19-some9,some18-some11,some17-some13,some16-some15,some0-some32,some2-some33,some4-some34,some6-some35),6-f(some20-some11,some19-some13,some18-some15,some17-some32,some16-some33,some0-some34,some2-some35,some4-some36),7-f(some21-some13,some20-some15,some19-some32,some18-some33,some17-some34,some16-some35,some0-some36,some2-some37),8-f(some22-some15,some21-some32,some20-some33,some19-some34,some18-some35,some17-some36,some16-some37,some0-some38)],1,8,[some14,some12,some10,some8,some6,some4,some2,some0,some16,some17,some18,some19,some20,some21,some22|some23],[some32,some15,some13,some11,some9,some7,some5,some3,some1|some24])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma465>
    <#lemma466>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_279 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_279.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma372> a r:Inference;
  r:gives {
    "queens([2-f(6-some1,1-some2,some0-some4,5-some5,some3-2,8-5,7-7,some6-4),3-f(4-some2,6-some4,1-some5,some0-2,5-5,some3-7,8-4,7-3),4-f(2-some4,4-some5,6-2,1-5,some0-7,5-4,some3-3,8-8),5-f(some8-some5,2-2,4-5,6-7,1-4,some0-3,5-8,some3-6),6-f(3-2,some8-5,2-7,4-4,6-3,1-8,some0-6,5-some9),7-f(some10-5,3-7,some8-4,2-3,4-8,6-6,1-some9,some0-some11),8-f(some12-7,some10-4,3-3,some8-8,2-6,4-some9,6-some11,1-some13)],1,[5,8,6,3,7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(5-f(some0-some1,2-2,4-5,6-7,1-4,some2-3,5-8,some3-6),[2-f(6-some4,1-some5,some2-some6,5-some1,some3-2,8-5,7-7,some7-4),3-f(4-some5,6-some6,1-some1,some2-2,5-5,some3-7,8-4,7-3),4-f(2-some6,4-some1,6-2,1-5,some2-7,5-4,some3-3,8-8),5-f(some0-some1,2-2,4-5,6-7,1-4,some2-3,5-8,some3-6),6-f(3-2,some0-5,2-7,4-4,6-3,1-8,some2-6,5-some8),7-f(some9-5,3-7,some0-4,2-3,4-8,6-6,1-some8,some2-some10),8-f(some11-7,some9-4,3-3,some0-8,2-6,4-some8,6-some10,1-some12)],[2-f(6-some4,1-some5,some2-some6,5-some1,some3-2,8-5,7-7,some7-4),3-f(4-some5,6-some6,1-some1,some2-2,5-5,some3-7,8-4,7-3),4-f(2-some6,4-some1,6-2,1-5,some2-7,5-4,some3-3,8-8),6-f(3-2,some0-5,2-7,4-4,6-3,1-8,some2-6,5-some8),7-f(some9-5,3-7,some0-4,2-3,4-8,6-6,1-some8,some2-some10),8-f(some11-7,some9-4,3-3,some0-8,2-6,4-some8,6-some10,1-some12)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-some1,2-2,4-5,6-7,1-4,some2-3,5-8,some3-6),2-2)"}]
    <#lemma467>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_280 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_280.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma373> a r:Inference;
  r:gives {
    "queens([2-f(some7-some0,1-some1,4-some2,6-some4,8-4,some3-2,7-7,some5-6),3-f(5-some1,some7-some2,1-some4,4-4,6-2,8-7,some3-6,7-3),4-f(some8-some2,5-some4,some7-4,1-2,4-7,6-6,8-3,some3-5),5-f(2-some4,some8-4,5-2,some7-7,1-6,4-3,6-5,8-8),6-f(3-4,2-2,some8-7,5-6,some7-3,1-5,4-8,6-some9),7-f(some10-2,3-7,2-6,some8-3,5-5,some7-8,1-some9,4-some11),8-f(some12-7,some10-6,3-3,2-5,some8-8,5-some9,some7-some11,1-some13)],1,[6,8,3,7,4,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(6-f(3-4,2-2,some0-7,5-6,some1-3,1-5,4-8,6-some2),[2-f(some1-some3,1-some4,4-some5,6-some6,8-4,some7-2,7-7,some8-6),3-f(5-some4,some1-some5,1-some6,4-4,6-2,8-7,some7-6,7-3),4-f(some0-some5,5-some6,some1-4,1-2,4-7,6-6,8-3,some7-5),5-f(2-some6,some0-4,5-2,some1-7,1-6,4-3,6-5,8-8),6-f(3-4,2-2,some0-7,5-6,some1-3,1-5,4-8,6-some2),7-f(some9-2,3-7,2-6,some0-3,5-5,some1-8,1-some2,4-some10),8-f(some11-7,some9-6,3-3,2-5,some0-8,5-some2,some1-some10,1-some12)],[2-f(some1-some3,1-some4,4-some5,6-some6,8-4,some7-2,7-7,some8-6),3-f(5-some4,some1-some5,1-some6,4-4,6-2,8-7,some7-6,7-3),4-f(some0-some5,5-some6,some1-4,1-2,4-7,6-6,8-3,some7-5),5-f(2-some6,some0-4,5-2,some1-7,1-6,4-3,6-5,8-8),7-f(some9-2,3-7,2-6,some0-3,5-5,some1-8,1-some2,4-some10),8-f(some11-7,some9-6,3-3,2-5,some0-8,5-some2,some1-some10,1-some12)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-4,2-2,some0-7,5-6,some1-3,1-5,4-8,6-some2),2-2)"}]
    <#lemma468>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_281 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_281.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma374> a r:Inference;
  r:gives {
    "queens([2-f(3-some1,1-some2,some0-some4,7-some5,some3-3,6-6,8-2,some6-4),3-f(4-some2,3-some4,1-some5,some0-3,7-6,some3-2,6-4,8-8),4-f(5-some4,4-some5,3-3,1-6,some0-2,7-4,some3-8,6-7),5-f(some8-some5,5-3,4-6,3-2,1-4,some0-8,7-7,some3-5),6-f(2-3,some8-6,5-2,4-4,3-8,1-7,some0-5,7-some9),7-f(some10-6,2-2,some8-4,5-8,4-7,3-5,1-some9,some0-some11),8-f(some12-2,some10-4,2-8,some8-7,5-5,4-some9,3-some11,1-some13)],1,[7,4,6,8,2,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(7-f(some0-6,2-2,some1-4,5-8,4-7,3-5,1-some2,some3-some4),[2-f(3-some5,1-some6,some3-some7,7-some8,some9-3,6-6,8-2,some10-4),3-f(4-some6,3-some7,1-some8,some3-3,7-6,some9-2,6-4,8-8),4-f(5-some7,4-some8,3-3,1-6,some3-2,7-4,some9-8,6-7),5-f(some1-some8,5-3,4-6,3-2,1-4,some3-8,7-7,some9-5),6-f(2-3,some1-6,5-2,4-4,3-8,1-7,some3-5,7-some2),7-f(some0-6,2-2,some1-4,5-8,4-7,3-5,1-some2,some3-some4),8-f(some11-2,some0-4,2-8,some1-7,5-5,4-some2,3-some4,1-some12)],[2-f(3-some5,1-some6,some3-some7,7-some8,some9-3,6-6,8-2,some10-4),3-f(4-some6,3-some7,1-some8,some3-3,7-6,some9-2,6-4,8-8),4-f(5-some7,4-some8,3-3,1-6,some3-2,7-4,some9-8,6-7),5-f(some1-some8,5-3,4-6,3-2,1-4,some3-8,7-7,some9-5),6-f(2-3,some1-6,5-2,4-4,3-8,1-7,some3-5,7-some2),8-f(some11-2,some0-4,2-8,some1-7,5-5,4-some2,3-some4,1-some12)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-6,2-2,some1-4,5-8,4-7,3-5,1-some2,some3-some4),2-2)"}]
    <#lemma469>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_282 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_282.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma375> a r:Inference;
  r:gives {
    "queens([2-f(some7-some0,1-some1,7-some2,6-some4,5-5,some3-3,8-2,some5-6),3-f(3-some1,some7-some2,1-some4,7-5,6-3,5-2,some3-6,8-8),4-f(some8-some2,3-some4,some7-5,1-3,7-2,6-6,5-8,some3-4),5-f(4-some4,some8-5,3-3,some7-2,1-6,7-8,6-4,5-7),6-f(2-5,4-3,some8-2,3-6,some7-8,1-4,7-7,6-some9),7-f(some10-3,2-2,4-6,some8-8,3-4,some7-7,1-some9,7-some11),8-f(some12-2,some10-6,2-8,4-4,some8-7,3-some9,some7-some11,1-some13)],1,[7,5,8,2,4,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(7-f(some0-3,2-2,4-6,some1-8,3-4,some2-7,1-some3,7-some4),[2-f(some2-some5,1-some6,7-some7,6-some8,5-5,some9-3,8-2,some10-6),3-f(3-some6,some2-some7,1-some8,7-5,6-3,5-2,some9-6,8-8),4-f(some1-some7,3-some8,some2-5,1-3,7-2,6-6,5-8,some9-4),5-f(4-some8,some1-5,3-3,some2-2,1-6,7-8,6-4,5-7),6-f(2-5,4-3,some1-2,3-6,some2-8,1-4,7-7,6-some3),7-f(some0-3,2-2,4-6,some1-8,3-4,some2-7,1-some3,7-some4),8-f(some11-2,some0-6,2-8,4-4,some1-7,3-some3,some2-some4,1-some12)],[2-f(some2-some5,1-some6,7-some7,6-some8,5-5,some9-3,8-2,some10-6),3-f(3-some6,some2-some7,1-some8,7-5,6-3,5-2,some9-6,8-8),4-f(some1-some7,3-some8,some2-5,1-3,7-2,6-6,5-8,some9-4),5-f(4-some8,some1-5,3-3,some2-2,1-6,7-8,6-4,5-7),6-f(2-5,4-3,some1-2,3-6,some2-8,1-4,7-7,6-some3),8-f(some11-2,some0-6,2-8,4-4,some1-7,3-some3,some2-some4,1-some12)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-3,2-2,4-6,some1-8,3-4,some2-7,1-some3,7-some4),2-2)"}]
    <#lemma470>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_283 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_283.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma376> a r:Inference;
  r:gives {
    "queens([1-f(7-some6,some1-1,5-some0,8-some2,some3-2,6-6,some4-5,some7-3),3-f(2-some0,1-some2,7-2,some1-6,5-5,8-3,some3-some5,6-some8),4-f(3-some2,2-2,1-6,7-5,some1-3,5-some5,8-some8,some3-4),5-f(4-2,3-6,2-5,1-3,7-some5,some1-some8,5-4,8-8),6-f(some9-6,4-5,3-3,2-some5,1-some8,7-4,some1-8,5-7),7-f(some10-5,some9-3,4-some5,3-some8,2-4,1-8,7-7,some1-some11),8-f(some12-3,some10-some5,some9-some8,4-4,3-8,2-7,1-some11,7-some13)],1,[4,6,8,3,1,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(4-f(3-some0,2-2,1-6,7-5,some1-3,5-some2,8-some3,some4-4),[1-f(7-some5,some1-1,5-some6,8-some0,some4-2,6-6,some7-5,some8-3),3-f(2-some6,1-some0,7-2,some1-6,5-5,8-3,some4-some2,6-some3),4-f(3-some0,2-2,1-6,7-5,some1-3,5-some2,8-some3,some4-4),5-f(4-2,3-6,2-5,1-3,7-some2,some1-some3,5-4,8-8),6-f(some9-6,4-5,3-3,2-some2,1-some3,7-4,some1-8,5-7),7-f(some10-5,some9-3,4-some2,3-some3,2-4,1-8,7-7,some1-some11),8-f(some12-3,some10-some2,some9-some3,4-4,3-8,2-7,1-some11,7-some13)],[1-f(7-some5,some1-1,5-some6,8-some0,some4-2,6-6,some7-5,some8-3),3-f(2-some6,1-some0,7-2,some1-6,5-5,8-3,some4-some2,6-some3),5-f(4-2,3-6,2-5,1-3,7-some2,some1-some3,5-4,8-8),6-f(some9-6,4-5,3-3,2-some2,1-some3,7-4,some1-8,5-7),7-f(some10-5,some9-3,4-some2,3-some3,2-4,1-8,7-7,some1-some11),8-f(some12-3,some10-some2,some9-some3,4-4,3-8,2-7,1-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-some0,2-2,1-6,7-5,some1-3,5-some2,8-some3,some4-4),2-2)"}]
    <#lemma471>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_284 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_284.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma377> a r:Inference;
  r:gives {
    "queens([1-f(some0-some6,7-1,5-some1,4-4,8-some2,some3-2,some5-5,some7-some4),3-f(6-some1,1-4,some0-some2,7-2,5-5,4-some4,8-3,some3-some8),4-f(2-4,6-some2,1-2,some0-5,7-some4,5-3,4-some8,8-8),5-f(3-some2,2-2,6-5,1-some4,some0-3,7-some8,5-8,4-7),6-f(some9-2,3-5,2-some4,6-3,1-some8,some0-8,7-7,5-6),7-f(some10-5,some9-some4,3-3,2-some8,6-8,1-7,some0-6,7-some11),8-f(some12-some4,some10-3,some9-some8,3-8,2-7,6-6,1-some11,some0-some13)],1,[5,7,1,3,8,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(5-f(3-some0,2-2,6-5,1-some1,some2-3,7-some3,5-8,4-7),[1-f(some2-some4,7-1,5-some5,4-4,8-some0,some6-2,some7-5,some8-some1),3-f(6-some5,1-4,some2-some0,7-2,5-5,4-some1,8-3,some6-some3),4-f(2-4,6-some0,1-2,some2-5,7-some1,5-3,4-some3,8-8),5-f(3-some0,2-2,6-5,1-some1,some2-3,7-some3,5-8,4-7),6-f(some9-2,3-5,2-some1,6-3,1-some3,some2-8,7-7,5-6),7-f(some10-5,some9-some1,3-3,2-some3,6-8,1-7,some2-6,7-some11),8-f(some12-some1,some10-3,some9-some3,3-8,2-7,6-6,1-some11,some2-some13)],[1-f(some2-some4,7-1,5-some5,4-4,8-some0,some6-2,some7-5,some8-some1),3-f(6-some5,1-4,some2-some0,7-2,5-5,4-some1,8-3,some6-some3),4-f(2-4,6-some0,1-2,some2-5,7-some1,5-3,4-some3,8-8),6-f(some9-2,3-5,2-some1,6-3,1-some3,some2-8,7-7,5-6),7-f(some10-5,some9-some1,3-3,2-some3,6-8,1-7,some2-6,7-some11),8-f(some12-some1,some10-3,some9-some3,3-8,2-7,6-6,1-some11,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-some0,2-2,6-5,1-some1,some2-3,7-some3,5-8,4-7),2-2)"}]
    <#lemma472>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_285 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_285.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma378> a r:Inference;
  r:gives {
    "queens([1-f(4-some6,7-1,some2-some0,some3-some1,5-5,8-2,some5-4,some7-some4),3-f(6-some0,1-some1,4-5,7-2,some2-4,some3-some4,5-3,8-8),4-f(2-some1,6-5,1-2,4-4,7-some4,some2-3,some3-8,5-some8),5-f(3-5,2-2,6-4,1-some4,4-3,7-8,some2-some8,some3-7),6-f(some9-2,3-4,2-some4,6-3,1-8,4-some8,7-7,some2-6),7-f(some10-4,some9-some4,3-3,2-8,6-some8,1-7,4-6,7-some11),8-f(some12-some4,some10-3,some9-8,3-some8,2-7,6-6,1-some11,4-some13)],1,[5,7,4,1,8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(5-f(3-5,2-2,6-4,1-some0,4-3,7-8,some1-some2,some3-7),[1-f(4-some4,7-1,some1-some5,some3-some6,5-5,8-2,some7-4,some8-some0),3-f(6-some5,1-some6,4-5,7-2,some1-4,some3-some0,5-3,8-8),4-f(2-some6,6-5,1-2,4-4,7-some0,some1-3,some3-8,5-some2),5-f(3-5,2-2,6-4,1-some0,4-3,7-8,some1-some2,some3-7),6-f(some9-2,3-4,2-some0,6-3,1-8,4-some2,7-7,some1-6),7-f(some10-4,some9-some0,3-3,2-8,6-some2,1-7,4-6,7-some11),8-f(some12-some0,some10-3,some9-8,3-some2,2-7,6-6,1-some11,4-some13)],[1-f(4-some4,7-1,some1-some5,some3-some6,5-5,8-2,some7-4,some8-some0),3-f(6-some5,1-some6,4-5,7-2,some1-4,some3-some0,5-3,8-8),4-f(2-some6,6-5,1-2,4-4,7-some0,some1-3,some3-8,5-some2),6-f(some9-2,3-4,2-some0,6-3,1-8,4-some2,7-7,some1-6),7-f(some10-4,some9-some0,3-3,2-8,6-some2,1-7,4-6,7-some11),8-f(some12-some0,some10-3,some9-8,3-some2,2-7,6-6,1-some11,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-5,2-2,6-4,1-some0,4-3,7-8,some1-some2,some3-7),2-2)"}]
    <#lemma473>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_286 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_286.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma379> a r:Inference;
  r:gives {
    "queens([1-f(some0-some6,5-1,3-3,8-some1,7-some2,some4-some3,some5-2,some7-5),3-f(6-3,1-some1,some0-some2,5-some3,3-2,8-5,7-7,some4-4),4-f(4-some1,6-some2,1-some3,some0-2,5-5,3-7,8-4,7-some8),5-f(2-some2,4-some3,6-2,1-5,some0-7,5-4,3-some8,8-8),6-f(some9-some3,2-2,4-5,6-7,1-4,some0-some8,5-8,3-6),7-f(some10-2,some9-5,2-7,4-4,6-some8,1-8,some0-6,5-some11),8-f(some12-5,some10-7,some9-4,2-some8,4-8,6-6,1-some11,some0-some13)],1,[6,1,7,4,8,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(6-f(some0-some1,2-2,4-5,6-7,1-4,some2-some3,5-8,3-6),[1-f(some2-some4,5-1,3-3,8-some5,7-some6,some7-some1,some8-2,some9-5),3-f(6-3,1-some5,some2-some6,5-some1,3-2,8-5,7-7,some7-4),4-f(4-some5,6-some6,1-some1,some2-2,5-5,3-7,8-4,7-some3),5-f(2-some6,4-some1,6-2,1-5,some2-7,5-4,3-some3,8-8),6-f(some0-some1,2-2,4-5,6-7,1-4,some2-some3,5-8,3-6),7-f(some10-2,some0-5,2-7,4-4,6-some3,1-8,some2-6,5-some11),8-f(some12-5,some10-7,some0-4,2-some3,4-8,6-6,1-some11,some2-some13)],[1-f(some2-some4,5-1,3-3,8-some5,7-some6,some7-some1,some8-2,some9-5),3-f(6-3,1-some5,some2-some6,5-some1,3-2,8-5,7-7,some7-4),4-f(4-some5,6-some6,1-some1,some2-2,5-5,3-7,8-4,7-some3),5-f(2-some6,4-some1,6-2,1-5,some2-7,5-4,3-some3,8-8),7-f(some10-2,some0-5,2-7,4-4,6-some3,1-8,some2-6,5-some11),8-f(some12-5,some10-7,some0-4,2-some3,4-8,6-6,1-some11,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-some1,2-2,4-5,6-7,1-4,some2-some3,5-8,3-6),2-2)"}]
    <#lemma474>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_287 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_287.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma380> a r:Inference;
  r:gives {
    "queens([1-f(7-some5,4-1,6-some0,8-some1,5-5,some2-4,some4-2,some6-some3),3-f(some7-some0,1-some1,7-5,4-4,6-2,8-some3,5-6,some2-3),4-f(some8-some1,some7-5,1-4,7-2,4-some3,6-6,8-3,5-some9),5-f(2-5,some8-4,some7-2,1-some3,7-6,4-3,6-some9,8-8),6-f(3-4,2-2,some8-some3,some7-6,1-3,7-some9,4-8,6-7),7-f(some10-2,3-some3,2-6,some8-3,some7-some9,1-8,7-7,4-some11),8-f(some12-some3,some10-6,3-3,2-some9,some8-8,some7-7,1-some11,7-some13)],1,[6,8,3,1,4,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(6-f(3-4,2-2,some0-some1,some2-6,1-3,7-some3,4-8,6-7),[1-f(7-some4,4-1,6-some5,8-some6,5-5,some7-4,some8-2,some9-some1),3-f(some2-some5,1-some6,7-5,4-4,6-2,8-some1,5-6,some7-3),4-f(some0-some6,some2-5,1-4,7-2,4-some1,6-6,8-3,5-some3),5-f(2-5,some0-4,some2-2,1-some1,7-6,4-3,6-some3,8-8),6-f(3-4,2-2,some0-some1,some2-6,1-3,7-some3,4-8,6-7),7-f(some10-2,3-some1,2-6,some0-3,some2-some3,1-8,7-7,4-some11),8-f(some12-some1,some10-6,3-3,2-some3,some0-8,some2-7,1-some11,7-some13)],[1-f(7-some4,4-1,6-some5,8-some6,5-5,some7-4,some8-2,some9-some1),3-f(some2-some5,1-some6,7-5,4-4,6-2,8-some1,5-6,some7-3),4-f(some0-some6,some2-5,1-4,7-2,4-some1,6-6,8-3,5-some3),5-f(2-5,some0-4,some2-2,1-some1,7-6,4-3,6-some3,8-8),7-f(some10-2,3-some1,2-6,some0-3,some2-some3,1-8,7-7,4-some11),8-f(some12-some1,some10-6,3-3,2-some3,some0-8,some2-7,1-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-4,2-2,some0-some1,some2-6,1-3,7-some3,4-8,6-7),2-2)"}]
    <#lemma475>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_288 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_288.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma381> a r:Inference;
  r:gives {
    "queens([1-f(3-some6,6-1,some2-some0,some3-some1,8-3,some5-some4,7-7,some7-2),3-f(4-some0,1-some1,3-3,6-some4,some2-7,some3-2,8-4,some5-6),4-f(5-some1,4-3,1-some4,3-7,6-2,some2-4,some3-6,8-8),5-f(some8-3,5-some4,4-7,1-2,3-4,6-6,some2-8,some3-5),6-f(2-some4,some8-7,5-2,4-4,1-6,3-8,6-5,some2-some9),7-f(some10-7,2-2,some8-4,5-6,4-8,1-5,3-some9,6-some11),8-f(some12-2,some10-4,2-6,some8-8,5-5,4-some9,1-some11,3-some13)],1,[7,3,6,8,5,1,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(7-f(some0-7,2-2,some1-4,5-6,4-8,1-5,3-some2,6-some3),[1-f(3-some4,6-1,some5-some6,some7-some8,8-3,some9-some10,7-7,some11-2),3-f(4-some6,1-some8,3-3,6-some10,some5-7,some7-2,8-4,some9-6),4-f(5-some8,4-3,1-some10,3-7,6-2,some5-4,some7-6,8-8),5-f(some1-3,5-some10,4-7,1-2,3-4,6-6,some5-8,some7-5),6-f(2-some10,some1-7,5-2,4-4,1-6,3-8,6-5,some5-some2),7-f(some0-7,2-2,some1-4,5-6,4-8,1-5,3-some2,6-some3),8-f(some12-2,some0-4,2-6,some1-8,5-5,4-some2,1-some3,3-some13)],[1-f(3-some4,6-1,some5-some6,some7-some8,8-3,some9-some10,7-7,some11-2),3-f(4-some6,1-some8,3-3,6-some10,some5-7,some7-2,8-4,some9-6),4-f(5-some8,4-3,1-some10,3-7,6-2,some5-4,some7-6,8-8),5-f(some1-3,5-some10,4-7,1-2,3-4,6-6,some5-8,some7-5),6-f(2-some10,some1-7,5-2,4-4,1-6,3-8,6-5,some5-some2),8-f(some12-2,some0-4,2-6,some1-8,5-5,4-some2,1-some3,3-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-7,2-2,some1-4,5-6,4-8,1-5,3-some2,6-some3),2-2)"}]
    <#lemma476>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_289 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_289.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma382> a r:Inference;
  r:gives {
    "queens([1-f(some0-some6,7-1,6-some1,some3-some2,5-5,8-some4,some5-3,some7-2),3-f(3-some1,1-some2,some0-5,7-some4,6-3,some3-2,5-6,8-8),4-f(some8-some2,3-5,1-some4,some0-3,7-2,6-6,some3-8,5-4),5-f(4-5,some8-some4,3-3,1-2,some0-6,7-8,6-4,some3-7),6-f(2-some4,4-3,some8-2,3-6,1-8,some0-4,7-7,6-some9),7-f(some10-3,2-2,4-6,some8-8,3-4,1-7,some0-some9,7-some11),8-f(some12-2,some10-6,2-8,4-4,some8-7,3-some9,1-some11,some0-some13)],1,[7,5,8,1,4,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(7-f(some0-3,2-2,4-6,some1-8,3-4,1-7,some2-some3,7-some4),[1-f(some2-some5,7-1,6-some6,some7-some8,5-5,8-some9,some10-3,some11-2),3-f(3-some6,1-some8,some2-5,7-some9,6-3,some7-2,5-6,8-8),4-f(some1-some8,3-5,1-some9,some2-3,7-2,6-6,some7-8,5-4),5-f(4-5,some1-some9,3-3,1-2,some2-6,7-8,6-4,some7-7),6-f(2-some9,4-3,some1-2,3-6,1-8,some2-4,7-7,6-some3),7-f(some0-3,2-2,4-6,some1-8,3-4,1-7,some2-some3,7-some4),8-f(some12-2,some0-6,2-8,4-4,some1-7,3-some3,1-some4,some2-some13)],[1-f(some2-some5,7-1,6-some6,some7-some8,5-5,8-some9,some10-3,some11-2),3-f(3-some6,1-some8,some2-5,7-some9,6-3,some7-2,5-6,8-8),4-f(some1-some8,3-5,1-some9,some2-3,7-2,6-6,some7-8,5-4),5-f(4-5,some1-some9,3-3,1-2,some2-6,7-8,6-4,some7-7),6-f(2-some9,4-3,some1-2,3-6,1-8,some2-4,7-7,6-some3),8-f(some12-2,some0-6,2-8,4-4,some1-7,3-some3,1-some4,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-3,2-2,4-6,some1-8,3-4,1-7,some2-some3,7-some4),2-2)"}]
    <#lemma477>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_290 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_290.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma383> a r:Inference;
  r:gives {
    "queens([1-f(7-some5,6-1,5-some0,4-4,8-some1,some3-some2,some4-5,some6-3),3-f(some7-some0,1-4,7-some1,6-some2,5-5,4-3,8-2,some3-6),4-f(3-4,some7-some1,1-some2,7-5,6-3,5-2,4-6,8-8),5-f(some8-some1,3-some2,some7-5,1-3,7-2,6-6,5-8,4-some9),6-f(some10-some2,some8-5,3-3,some7-2,1-6,7-8,6-some9,5-7),7-f(2-5,some10-3,some8-2,3-6,some7-8,1-some9,7-7,6-some11),8-f(some12-3,2-2,some10-6,some8-8,3-some9,some7-7,1-some11,7-some13)],1,[8,6,1,3,5,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(8-f(some0-3,2-2,some1-6,some2-8,3-some3,some4-7,1-some5,7-some6),[1-f(7-some7,6-1,5-some8,4-4,8-some9,some10-some11,some12-5,some13-3),3-f(some4-some8,1-4,7-some9,6-some11,5-5,4-3,8-2,some10-6),4-f(3-4,some4-some9,1-some11,7-5,6-3,5-2,4-6,8-8),5-f(some2-some9,3-some11,some4-5,1-3,7-2,6-6,5-8,4-some3),6-f(some1-some11,some2-5,3-3,some4-2,1-6,7-8,6-some3,5-7),7-f(2-5,some1-3,some2-2,3-6,some4-8,1-some3,7-7,6-some5),8-f(some0-3,2-2,some1-6,some2-8,3-some3,some4-7,1-some5,7-some6)],[1-f(7-some7,6-1,5-some8,4-4,8-some9,some10-some11,some12-5,some13-3),3-f(some4-some8,1-4,7-some9,6-some11,5-5,4-3,8-2,some10-6),4-f(3-4,some4-some9,1-some11,7-5,6-3,5-2,4-6,8-8),5-f(some2-some9,3-some11,some4-5,1-3,7-2,6-6,5-8,4-some3),6-f(some1-some11,some2-5,3-3,some4-2,1-6,7-8,6-some3,5-7),7-f(2-5,some1-3,some2-2,3-6,some4-8,1-some3,7-7,6-some5)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-3,2-2,some1-6,some2-8,3-some3,some4-7,1-some5,7-some6),2-2)"}]
    <#lemma478>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_291 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_291.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma384> a r:Inference;
  r:gives {
    "queens([1-f(some1-some5,2-2,8-1,7-some0,6-some2,some4-some3,some6-6,some7-4),2-f(4-2,some1-1,2-some0,8-some2,7-some3,6-6,some4-4,some6-3),4-f(5-some0,1-some2,4-some3,some1-6,2-4,8-3,7-7,6-some8),5-f(3-some2,5-some3,1-6,4-4,some1-3,2-7,8-some8,7-5),6-f(some9-some3,3-6,5-4,1-3,4-7,some1-some8,2-5,8-8),7-f(some10-6,some9-4,3-3,5-7,1-some8,4-5,some1-8,2-some11),8-f(some12-4,some10-3,some9-7,3-some8,5-5,1-8,4-some11,some1-some13)],1,[1,7,5,8,2,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,2-2,8-1,7-some2,6-some3,some4-some5,some6-6,some7-4),[1-f(some0-some1,2-2,8-1,7-some2,6-some3,some4-some5,some6-6,some7-4),2-f(4-2,some0-1,2-some2,8-some3,7-some5,6-6,some4-4,some6-3),4-f(5-some2,1-some3,4-some5,some0-6,2-4,8-3,7-7,6-some8),5-f(3-some3,5-some5,1-6,4-4,some0-3,2-7,8-some8,7-5),6-f(some9-some5,3-6,5-4,1-3,4-7,some0-some8,2-5,8-8),7-f(some10-6,some9-4,3-3,5-7,1-some8,4-5,some0-8,2-some11),8-f(some12-4,some10-3,some9-7,3-some8,5-5,1-8,4-some11,some0-some13)],[2-f(4-2,some0-1,2-some2,8-some3,7-some5,6-6,some4-4,some6-3),4-f(5-some2,1-some3,4-some5,some0-6,2-4,8-3,7-7,6-some8),5-f(3-some3,5-some5,1-6,4-4,some0-3,2-7,8-some8,7-5),6-f(some9-some5,3-6,5-4,1-3,4-7,some0-some8,2-5,8-8),7-f(some10-6,some9-4,3-3,5-7,1-some8,4-5,some0-8,2-some11),8-f(some12-4,some10-3,some9-7,3-some8,5-5,1-8,4-some11,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-some1,2-2,8-1,7-some2,6-some3,some4-some5,some6-6,some7-4),2-2)"}]
    <#lemma479>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_292 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_292.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma385> a r:Inference;
  r:gives {
    "queens([1-f(some0-some5,3-some6,8-1,7-3,5-5,some4-2,some7-some1,some8-some2),2-f(6-some6,some0-1,3-3,8-5,7-2,5-some1,some4-some2,some7-some3),4-f(2-3,1-5,6-2,some0-some1,3-some2,8-some3,7-7,5-4),5-f(4-5,2-2,1-some1,6-some2,some0-some3,3-7,8-4,7-6),6-f(some9-2,4-some1,2-some2,1-some3,6-7,some0-4,3-6,8-8),7-f(some10-some1,some9-some2,4-some3,2-7,1-4,6-6,some0-8,3-some11),8-f(some12-some2,some10-some3,some9-7,4-4,2-6,1-8,6-some11,some0-some13)],1,[5,2,8,1,7,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(5-f(4-5,2-2,1-some0,6-some1,some2-some3,3-7,8-4,7-6),[1-f(some2-some4,3-some5,8-1,7-3,5-5,some6-2,some7-some0,some8-some1),2-f(6-some5,some2-1,3-3,8-5,7-2,5-some0,some6-some1,some7-some3),4-f(2-3,1-5,6-2,some2-some0,3-some1,8-some3,7-7,5-4),5-f(4-5,2-2,1-some0,6-some1,some2-some3,3-7,8-4,7-6),6-f(some9-2,4-some0,2-some1,1-some3,6-7,some2-4,3-6,8-8),7-f(some10-some0,some9-some1,4-some3,2-7,1-4,6-6,some2-8,3-some11),8-f(some12-some1,some10-some3,some9-7,4-4,2-6,1-8,6-some11,some2-some13)],[1-f(some2-some4,3-some5,8-1,7-3,5-5,some6-2,some7-some0,some8-some1),2-f(6-some5,some2-1,3-3,8-5,7-2,5-some0,some6-some1,some7-some3),4-f(2-3,1-5,6-2,some2-some0,3-some1,8-some3,7-7,5-4),6-f(some9-2,4-some0,2-some1,1-some3,6-7,some2-4,3-6,8-8),7-f(some10-some0,some9-some1,4-some3,2-7,1-4,6-6,some2-8,3-some11),8-f(some12-some1,some10-some3,some9-7,4-4,2-6,1-8,6-some11,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(4-5,2-2,1-some0,6-some1,some2-some3,3-7,8-4,7-6),2-2)"}]
    <#lemma480>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_293 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_293.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma386> a r:Inference;
  r:gives {
    "queens([1-f(7-some5,3-some6,6-1,some2-3,some3-some0,some4-2,some7-some1,8-8),2-f(5-some6,7-1,3-3,6-some0,some2-2,some3-some1,some4-8,some7-6),4-f(2-3,1-some0,5-2,7-some1,3-8,6-6,some2-5,some3-4),5-f(4-some0,2-2,1-some1,5-8,7-6,3-5,6-4,some2-some8),6-f(some9-2,4-some1,2-8,1-6,5-5,7-4,3-some8,6-7),7-f(some10-some1,some9-8,4-6,2-5,1-4,5-some8,7-7,3-some11),8-f(some12-8,some10-6,some9-5,4-4,2-some8,1-7,5-some11,7-some13)],1,[5,2,8,6,4,7,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(5-f(4-some0,2-2,1-some1,5-8,7-6,3-5,6-4,some2-some3),[1-f(7-some4,3-some5,6-1,some2-3,some6-some0,some7-2,some8-some1,8-8),2-f(5-some5,7-1,3-3,6-some0,some2-2,some6-some1,some7-8,some8-6),4-f(2-3,1-some0,5-2,7-some1,3-8,6-6,some2-5,some6-4),5-f(4-some0,2-2,1-some1,5-8,7-6,3-5,6-4,some2-some3),6-f(some9-2,4-some1,2-8,1-6,5-5,7-4,3-some3,6-7),7-f(some10-some1,some9-8,4-6,2-5,1-4,5-some3,7-7,3-some11),8-f(some12-8,some10-6,some9-5,4-4,2-some3,1-7,5-some11,7-some13)],[1-f(7-some4,3-some5,6-1,some2-3,some6-some0,some7-2,some8-some1,8-8),2-f(5-some5,7-1,3-3,6-some0,some2-2,some6-some1,some7-8,some8-6),4-f(2-3,1-some0,5-2,7-some1,3-8,6-6,some2-5,some6-4),6-f(some9-2,4-some1,2-8,1-6,5-5,7-4,3-some3,6-7),7-f(some10-some1,some9-8,4-6,2-5,1-4,5-some3,7-7,3-some11),8-f(some12-8,some10-6,some9-5,4-4,2-some3,1-7,5-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(4-some0,2-2,1-some1,5-8,7-6,3-5,6-4,some2-some3),2-2)"}]
    <#lemma481>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_294 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_294.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma387> a r:Inference;
  r:gives {
    "queens([1-f(some0-some4,5-some5,8-1,4-4,6-some1,some2-2,some6-6,some7-5),2-f(7-some5,some0-1,5-4,8-some1,4-2,6-6,some2-5,some6-3),4-f(2-4,1-some1,7-2,some0-6,5-5,8-3,4-some3,6-some8),5-f(3-some1,2-2,1-6,7-5,some0-3,5-some3,8-some8,4-some9),6-f(some10-2,3-6,2-5,1-3,7-some3,some0-some8,5-some9,8-8),7-f(some11-6,some10-5,3-3,2-some3,1-some8,7-some9,some0-8,5-7),8-f(some12-5,some11-3,some10-some3,3-some8,2-some9,1-8,7-7,some0-some13)],1,[5,7,1,4,2,8,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(5-f(3-some0,2-2,1-6,7-5,some1-3,5-some2,8-some3,4-some4),[1-f(some1-some5,5-some6,8-1,4-4,6-some0,some7-2,some8-6,some9-5),2-f(7-some6,some1-1,5-4,8-some0,4-2,6-6,some7-5,some8-3),4-f(2-4,1-some0,7-2,some1-6,5-5,8-3,4-some2,6-some3),5-f(3-some0,2-2,1-6,7-5,some1-3,5-some2,8-some3,4-some4),6-f(some10-2,3-6,2-5,1-3,7-some2,some1-some3,5-some4,8-8),7-f(some11-6,some10-5,3-3,2-some2,1-some3,7-some4,some1-8,5-7),8-f(some12-5,some11-3,some10-some2,3-some3,2-some4,1-8,7-7,some1-some13)],[1-f(some1-some5,5-some6,8-1,4-4,6-some0,some7-2,some8-6,some9-5),2-f(7-some6,some1-1,5-4,8-some0,4-2,6-6,some7-5,some8-3),4-f(2-4,1-some0,7-2,some1-6,5-5,8-3,4-some2,6-some3),6-f(some10-2,3-6,2-5,1-3,7-some2,some1-some3,5-some4,8-8),7-f(some11-6,some10-5,3-3,2-some2,1-some3,7-some4,some1-8,5-7),8-f(some12-5,some11-3,some10-some2,3-some3,2-some4,1-8,7-7,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-some0,2-2,1-6,7-5,some1-3,5-some2,8-some3,4-some4),2-2)"}]
    <#lemma482>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_295 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_295.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma388> a r:Inference;
  r:gives {
    "queens([1-f(4-some4,some1-some5,8-1,some2-some0,5-5,7-2,some6-4,some7-7),2-f(6-some5,4-1,some1-some0,8-5,some2-2,5-4,7-7,some6-some3),4-f(2-some0,1-5,6-2,4-4,some1-7,8-some3,some2-3,5-some8),5-f(some9-5,2-2,1-4,6-7,4-some3,some1-3,8-some8,some2-6),6-f(3-2,some9-4,2-7,1-some3,6-3,4-some8,some1-6,8-8),7-f(some10-4,3-7,some9-some3,2-3,1-some8,6-6,4-8,some1-some11),8-f(some12-7,some10-some3,3-3,some9-some8,2-6,1-8,6-some11,4-some13)],1,[5,8,4,1,7,2,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(5-f(some0-5,2-2,1-4,6-7,4-some1,some2-3,8-some3,some4-6),[1-f(4-some5,some2-some6,8-1,some4-some7,5-5,7-2,some8-4,some9-7),2-f(6-some6,4-1,some2-some7,8-5,some4-2,5-4,7-7,some8-some1),4-f(2-some7,1-5,6-2,4-4,some2-7,8-some1,some4-3,5-some3),5-f(some0-5,2-2,1-4,6-7,4-some1,some2-3,8-some3,some4-6),6-f(3-2,some0-4,2-7,1-some1,6-3,4-some3,some2-6,8-8),7-f(some10-4,3-7,some0-some1,2-3,1-some3,6-6,4-8,some2-some11),8-f(some12-7,some10-some1,3-3,some0-some3,2-6,1-8,6-some11,4-some13)],[1-f(4-some5,some2-some6,8-1,some4-some7,5-5,7-2,some8-4,some9-7),2-f(6-some6,4-1,some2-some7,8-5,some4-2,5-4,7-7,some8-some1),4-f(2-some7,1-5,6-2,4-4,some2-7,8-some1,some4-3,5-some3),6-f(3-2,some0-4,2-7,1-some1,6-3,4-some3,some2-6,8-8),7-f(some10-4,3-7,some0-some1,2-3,1-some3,6-6,4-8,some2-some11),8-f(some12-7,some10-some1,3-3,some0-some3,2-6,1-8,6-some11,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-5,2-2,1-4,6-7,4-some1,some2-3,8-some3,some4-6),2-2)"}]
    <#lemma483>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_296 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_296.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma389> a r:Inference;
  r:gives {
    "queens([1-f(7-some5,3-some6,some1-1,some2-3,8-some0,6-6,some7-2,some8-4),2-f(4-some6,7-1,3-3,some1-some0,some2-6,8-2,6-4,some7-some3),4-f(5-3,1-some0,4-6,7-2,3-4,some1-some3,some2-some4,8-8),5-f(2-some0,5-6,1-2,4-4,7-some3,3-some4,some1-8,some2-5),6-f(some9-6,2-2,5-4,1-some3,4-some4,7-8,3-5,some1-7),7-f(some10-2,some9-4,2-some3,5-some4,1-8,4-5,7-7,3-some11),8-f(some12-4,some10-some3,some9-some4,2-8,5-5,1-7,4-some11,7-some13)],1,[6,2,5,8,1,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(6-f(some0-6,2-2,5-4,1-some1,4-some2,7-8,3-5,some3-7),[1-f(7-some4,3-some5,some3-1,some6-3,8-some7,6-6,some8-2,some9-4),2-f(4-some5,7-1,3-3,some3-some7,some6-6,8-2,6-4,some8-some1),4-f(5-3,1-some7,4-6,7-2,3-4,some3-some1,some6-some2,8-8),5-f(2-some7,5-6,1-2,4-4,7-some1,3-some2,some3-8,some6-5),6-f(some0-6,2-2,5-4,1-some1,4-some2,7-8,3-5,some3-7),7-f(some10-2,some0-4,2-some1,5-some2,1-8,4-5,7-7,3-some11),8-f(some12-4,some10-some1,some0-some2,2-8,5-5,1-7,4-some11,7-some13)],[1-f(7-some4,3-some5,some3-1,some6-3,8-some7,6-6,some8-2,some9-4),2-f(4-some5,7-1,3-3,some3-some7,some6-6,8-2,6-4,some8-some1),4-f(5-3,1-some7,4-6,7-2,3-4,some3-some1,some6-some2,8-8),5-f(2-some7,5-6,1-2,4-4,7-some1,3-some2,some3-8,some6-5),7-f(some10-2,some0-4,2-some1,5-some2,1-8,4-5,7-7,3-some11),8-f(some12-4,some10-some1,some0-some2,2-8,5-5,1-7,4-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-6,2-2,5-4,1-some1,4-some2,7-8,3-5,some3-7),2-2)"}]
    <#lemma484>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_297 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_297.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma390> a r:Inference;
  r:gives {
    "queens([1-f(some0-some4,3-some5,6-1,8-3,5-5,some3-some1,some6-2,some7-some2),2-f(7-some5,some0-1,3-3,6-5,8-some1,5-2,some3-some2,some6-6),4-f(4-3,1-5,7-some1,some0-2,3-some2,6-6,8-4,5-some8),5-f(2-5,4-some1,1-2,7-some2,some0-6,3-4,6-some8,8-8),6-f(some9-some1,2-2,4-some2,1-6,7-4,some0-some8,3-8,6-some10),7-f(some11-2,some9-some2,2-6,4-4,1-some8,7-8,some0-some10,3-7),8-f(some12-some2,some11-6,some9-4,2-some8,4-8,1-some10,7-7,some0-some13)],1,[6,2,7,1,4,8,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(6-f(some0-some1,2-2,4-some2,1-6,7-4,some3-some4,3-8,6-some5),[1-f(some3-some6,3-some7,6-1,8-3,5-5,some8-some1,some9-2,some10-some2),2-f(7-some7,some3-1,3-3,6-5,8-some1,5-2,some8-some2,some9-6),4-f(4-3,1-5,7-some1,some3-2,3-some2,6-6,8-4,5-some4),5-f(2-5,4-some1,1-2,7-some2,some3-6,3-4,6-some4,8-8),6-f(some0-some1,2-2,4-some2,1-6,7-4,some3-some4,3-8,6-some5),7-f(some11-2,some0-some2,2-6,4-4,1-some4,7-8,some3-some5,3-7),8-f(some12-some2,some11-6,some0-4,2-some4,4-8,1-some5,7-7,some3-some13)],[1-f(some3-some6,3-some7,6-1,8-3,5-5,some8-some1,some9-2,some10-some2),2-f(7-some7,some3-1,3-3,6-5,8-some1,5-2,some8-some2,some9-6),4-f(4-3,1-5,7-some1,some3-2,3-some2,6-6,8-4,5-some4),5-f(2-5,4-some1,1-2,7-some2,some3-6,3-4,6-some4,8-8),7-f(some11-2,some0-some2,2-6,4-4,1-some4,7-8,some3-some5,3-7),8-f(some12-some2,some11-6,some0-4,2-some4,4-8,1-some5,7-7,some3-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-some1,2-2,4-some2,1-6,7-4,some3-some4,3-8,6-some5),2-2)"}]
    <#lemma485>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_298 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_298.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma391> a r:Inference;
  r:gives {
    "queens([1-f(5-some4,3-some5,some1-1,some2-3,8-some0,6-6,some6-2,some7-some3),2-f(7-some5,5-1,3-3,some1-some0,some2-6,8-2,6-some3,some6-5),4-f(4-3,1-some0,7-6,5-2,3-some3,some1-5,some2-4,8-8),5-f(2-some0,4-6,1-2,7-some3,5-5,3-4,some1-8,some2-some8),6-f(some9-6,2-2,4-some3,1-5,7-4,5-8,3-some8,some1-some10),7-f(some11-2,some9-some3,2-5,4-4,1-8,7-some8,5-some10,3-7),8-f(some12-some3,some11-5,some9-4,2-8,4-some8,1-some10,7-7,5-some13)],1,[6,2,7,5,1,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(6-f(some0-6,2-2,4-some1,1-5,7-4,5-8,3-some2,some3-some4),[1-f(5-some5,3-some6,some3-1,some7-3,8-some8,6-6,some9-2,some10-some1),2-f(7-some6,5-1,3-3,some3-some8,some7-6,8-2,6-some1,some9-5),4-f(4-3,1-some8,7-6,5-2,3-some1,some3-5,some7-4,8-8),5-f(2-some8,4-6,1-2,7-some1,5-5,3-4,some3-8,some7-some2),6-f(some0-6,2-2,4-some1,1-5,7-4,5-8,3-some2,some3-some4),7-f(some11-2,some0-some1,2-5,4-4,1-8,7-some2,5-some4,3-7),8-f(some12-some1,some11-5,some0-4,2-8,4-some2,1-some4,7-7,5-some13)],[1-f(5-some5,3-some6,some3-1,some7-3,8-some8,6-6,some9-2,some10-some1),2-f(7-some6,5-1,3-3,some3-some8,some7-6,8-2,6-some1,some9-5),4-f(4-3,1-some8,7-6,5-2,3-some1,some3-5,some7-4,8-8),5-f(2-some8,4-6,1-2,7-some1,5-5,3-4,some3-8,some7-some2),7-f(some11-2,some0-some1,2-5,4-4,1-8,7-some2,5-some4,3-7),8-f(some12-some1,some11-5,some0-4,2-8,4-some2,1-some4,7-7,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-6,2-2,4-some1,1-5,7-4,5-8,3-some2,some3-some4),2-2)"}]
    <#lemma486>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_299 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_299.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma392> a r:Inference;
  r:gives {
    "queens([1-f(7-some5,6-some6,some1-1,4-4,some3-some0,some4-3,8-2,some7-some2),2-f(3-some6,7-1,6-4,some1-some0,4-3,some3-2,some4-some2,8-8),4-f(5-4,1-some0,3-3,7-2,6-some2,some1-8,4-6,some3-some8),5-f(2-some0,5-3,1-2,3-some2,7-8,6-6,some1-some8,4-5),6-f(some9-3,2-2,5-some2,1-8,3-6,7-some8,6-5,some1-7),7-f(some10-2,some9-some2,2-8,5-6,1-some8,3-5,7-7,6-some11),8-f(some12-some2,some10-8,some9-6,2-some8,5-5,1-7,3-some11,7-some13)],1,[6,4,1,8,5,7,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(6-f(some0-3,2-2,5-some1,1-8,3-6,7-some2,6-5,some3-7),[1-f(7-some4,6-some5,some3-1,4-4,some6-some7,some8-3,8-2,some9-some1),2-f(3-some5,7-1,6-4,some3-some7,4-3,some6-2,some8-some1,8-8),4-f(5-4,1-some7,3-3,7-2,6-some1,some3-8,4-6,some6-some2),5-f(2-some7,5-3,1-2,3-some1,7-8,6-6,some3-some2,4-5),6-f(some0-3,2-2,5-some1,1-8,3-6,7-some2,6-5,some3-7),7-f(some10-2,some0-some1,2-8,5-6,1-some2,3-5,7-7,6-some11),8-f(some12-some1,some10-8,some0-6,2-some2,5-5,1-7,3-some11,7-some13)],[1-f(7-some4,6-some5,some3-1,4-4,some6-some7,some8-3,8-2,some9-some1),2-f(3-some5,7-1,6-4,some3-some7,4-3,some6-2,some8-some1,8-8),4-f(5-4,1-some7,3-3,7-2,6-some1,some3-8,4-6,some6-some2),5-f(2-some7,5-3,1-2,3-some1,7-8,6-6,some3-some2,4-5),7-f(some10-2,some0-some1,2-8,5-6,1-some2,3-5,7-7,6-some11),8-f(some12-some1,some10-8,some0-6,2-some2,5-5,1-7,3-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-3,2-2,5-some1,1-8,3-6,7-some2,6-5,some3-7),2-2)"}]
    <#lemma487>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_300 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_300.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma393> a r:Inference;
  r:gives {
    "queens([1-f(7-some5,6-some6,4-1,some1-some0,some2-4,some4-3,some7-2,8-8),2-f(3-some6,7-1,6-some0,4-4,some1-3,some2-2,some4-8,some7-some3),4-f(5-some0,1-4,3-3,7-2,6-8,4-some3,some1-6,some2-some8),5-f(2-4,5-3,1-2,3-8,7-some3,6-6,4-some8,some1-5),6-f(some9-3,2-2,5-8,1-some3,3-6,7-some8,6-5,4-7),7-f(some10-2,some9-8,2-some3,5-6,1-some8,3-5,7-7,6-some11),8-f(some12-8,some10-some3,some9-6,2-some8,5-5,1-7,3-some11,7-some13)],1,[6,4,2,8,5,7,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(6-f(some0-3,2-2,5-8,1-some1,3-6,7-some2,6-5,4-7),[1-f(7-some3,6-some4,4-1,some5-some6,some7-4,some8-3,some9-2,8-8),2-f(3-some4,7-1,6-some6,4-4,some5-3,some7-2,some8-8,some9-some1),4-f(5-some6,1-4,3-3,7-2,6-8,4-some1,some5-6,some7-some2),5-f(2-4,5-3,1-2,3-8,7-some1,6-6,4-some2,some5-5),6-f(some0-3,2-2,5-8,1-some1,3-6,7-some2,6-5,4-7),7-f(some10-2,some0-8,2-some1,5-6,1-some2,3-5,7-7,6-some11),8-f(some12-8,some10-some1,some0-6,2-some2,5-5,1-7,3-some11,7-some13)],[1-f(7-some3,6-some4,4-1,some5-some6,some7-4,some8-3,some9-2,8-8),2-f(3-some4,7-1,6-some6,4-4,some5-3,some7-2,some8-8,some9-some1),4-f(5-some6,1-4,3-3,7-2,6-8,4-some1,some5-6,some7-some2),5-f(2-4,5-3,1-2,3-8,7-some1,6-6,4-some2,some5-5),7-f(some10-2,some0-8,2-some1,5-6,1-some2,3-5,7-7,6-some11),8-f(some12-8,some10-some1,some0-6,2-some2,5-5,1-7,3-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-3,2-2,5-8,1-some1,3-6,7-some2,6-5,4-7),2-2)"}]
    <#lemma488>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_301 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_301.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma394> a r:Inference;
  r:gives {
    "queens([1-f(some0-some5,5-some6,7-1,4-4,some3-some1,some4-some2,8-2,some7-5),2-f(6-some6,some0-1,5-4,7-some1,4-some2,some3-2,some4-5,8-8),4-f(some8-4,1-some1,6-some2,some0-2,5-5,7-8,4-3,some3-7),5-f(2-some1,some8-some2,1-2,6-5,some0-8,5-3,7-7,4-6),6-f(3-some2,2-2,some8-5,1-8,6-3,some0-7,5-6,7-some9),7-f(some10-2,3-5,2-8,some8-3,1-7,6-6,some0-some9,5-some11),8-f(some12-5,some10-8,3-3,2-7,some8-6,1-some9,6-some11,some0-some13)],1,[6,8,1,4,7,5,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(6-f(3-some0,2-2,some1-5,1-8,6-3,some2-7,5-6,7-some3),[1-f(some2-some4,5-some5,7-1,4-4,some6-some7,some8-some0,8-2,some9-5),2-f(6-some5,some2-1,5-4,7-some7,4-some0,some6-2,some8-5,8-8),4-f(some1-4,1-some7,6-some0,some2-2,5-5,7-8,4-3,some6-7),5-f(2-some7,some1-some0,1-2,6-5,some2-8,5-3,7-7,4-6),6-f(3-some0,2-2,some1-5,1-8,6-3,some2-7,5-6,7-some3),7-f(some10-2,3-5,2-8,some1-3,1-7,6-6,some2-some3,5-some11),8-f(some12-5,some10-8,3-3,2-7,some1-6,1-some3,6-some11,some2-some13)],[1-f(some2-some4,5-some5,7-1,4-4,some6-some7,some8-some0,8-2,some9-5),2-f(6-some5,some2-1,5-4,7-some7,4-some0,some6-2,some8-5,8-8),4-f(some1-4,1-some7,6-some0,some2-2,5-5,7-8,4-3,some6-7),5-f(2-some7,some1-some0,1-2,6-5,some2-8,5-3,7-7,4-6),7-f(some10-2,3-5,2-8,some1-3,1-7,6-6,some2-some3,5-some11),8-f(some12-5,some10-8,3-3,2-7,some1-6,1-some3,6-some11,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-some0,2-2,some1-5,1-8,6-3,some2-7,5-6,7-some3),2-2)"}]
    <#lemma489>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_302 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_302.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma395> a r:Inference;
  r:gives {
    "queens([1-f(5-some4,some1-some5,some3-1,4-4,8-some0,7-some2,some6-2,some7-7),2-f(6-some5,5-1,some1-4,some3-some0,4-some2,8-2,7-7,some6-5),4-f(some8-4,1-some0,6-some2,5-2,some1-7,some3-5,4-3,8-8),5-f(2-some0,some8-some2,1-2,6-7,5-5,some1-3,some3-8,4-6),6-f(3-some2,2-2,some8-7,1-5,6-3,5-8,some1-6,some3-some9),7-f(some10-2,3-7,2-5,some8-3,1-8,6-6,5-some9,some1-some11),8-f(some12-7,some10-5,3-3,2-8,some8-6,1-some9,6-some11,5-some13)],1,[6,8,1,5,7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(6-f(3-some0,2-2,some1-7,1-5,6-3,5-8,some2-6,some3-some4),[1-f(5-some5,some2-some6,some3-1,4-4,8-some7,7-some0,some8-2,some9-7),2-f(6-some6,5-1,some2-4,some3-some7,4-some0,8-2,7-7,some8-5),4-f(some1-4,1-some7,6-some0,5-2,some2-7,some3-5,4-3,8-8),5-f(2-some7,some1-some0,1-2,6-7,5-5,some2-3,some3-8,4-6),6-f(3-some0,2-2,some1-7,1-5,6-3,5-8,some2-6,some3-some4),7-f(some10-2,3-7,2-5,some1-3,1-8,6-6,5-some4,some2-some11),8-f(some12-7,some10-5,3-3,2-8,some1-6,1-some4,6-some11,5-some13)],[1-f(5-some5,some2-some6,some3-1,4-4,8-some7,7-some0,some8-2,some9-7),2-f(6-some6,5-1,some2-4,some3-some7,4-some0,8-2,7-7,some8-5),4-f(some1-4,1-some7,6-some0,5-2,some2-7,some3-5,4-3,8-8),5-f(2-some7,some1-some0,1-2,6-7,5-5,some2-3,some3-8,4-6),7-f(some10-2,3-7,2-5,some1-3,1-8,6-6,5-some4,some2-some11),8-f(some12-7,some10-5,3-3,2-8,some1-6,1-some4,6-some11,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-some0,2-2,some1-7,1-5,6-3,5-8,some2-6,some3-some4),2-2)"}]
    <#lemma490>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_303 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_303.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma396> a r:Inference;
  r:gives {
    "queens([1-f(7-some4,5-some5,4-1,8-some1,some2-4,6-6,some6-2,some7-5),2-f(some0-some5,7-1,5-some1,4-4,8-6,some2-2,6-5,some6-some3),4-f(some8-some1,1-4,some0-6,7-2,5-5,4-some3,8-3,some2-some9),5-f(2-4,some8-6,1-2,some0-5,7-some3,5-3,4-some9,8-8),6-f(3-6,2-2,some8-5,1-some3,some0-3,7-some9,5-8,4-7),7-f(some10-2,3-5,2-some3,some8-3,1-some9,some0-8,7-7,5-some11),8-f(some12-5,some10-some3,3-3,2-some9,some8-8,1-7,some0-some11,7-some13)],1,[6,8,2,4,1,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(6-f(3-6,2-2,some0-5,1-some1,some2-3,7-some3,5-8,4-7),[1-f(7-some4,5-some5,4-1,8-some6,some7-4,6-6,some8-2,some9-5),2-f(some2-some5,7-1,5-some6,4-4,8-6,some7-2,6-5,some8-some1),4-f(some0-some6,1-4,some2-6,7-2,5-5,4-some1,8-3,some7-some3),5-f(2-4,some0-6,1-2,some2-5,7-some1,5-3,4-some3,8-8),6-f(3-6,2-2,some0-5,1-some1,some2-3,7-some3,5-8,4-7),7-f(some10-2,3-5,2-some1,some0-3,1-some3,some2-8,7-7,5-some11),8-f(some12-5,some10-some1,3-3,2-some3,some0-8,1-7,some2-some11,7-some13)],[1-f(7-some4,5-some5,4-1,8-some6,some7-4,6-6,some8-2,some9-5),2-f(some2-some5,7-1,5-some6,4-4,8-6,some7-2,6-5,some8-some1),4-f(some0-some6,1-4,some2-6,7-2,5-5,4-some1,8-3,some7-some3),5-f(2-4,some0-6,1-2,some2-5,7-some1,5-3,4-some3,8-8),7-f(some10-2,3-5,2-some1,some0-3,1-some3,some2-8,7-7,5-some11),8-f(some12-5,some10-some1,3-3,2-some3,some0-8,1-7,some2-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-6,2-2,some0-5,1-some1,some2-3,7-some3,5-8,4-7),2-2)"}]
    <#lemma491>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_304 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_304.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma397> a r:Inference;
  r:gives {
    "queens([1-f(5-some4,3-some5,8-1,7-3,some3-some1,6-6,some6-some2,some7-2),2-f(some0-some5,5-1,3-3,8-some1,7-6,some3-some2,6-2,some6-5),4-f(some8-3,1-some1,some0-6,5-some2,3-2,8-5,7-7,some3-4),5-f(4-some1,some8-6,1-some2,some0-2,5-5,3-7,8-4,7-some9),6-f(2-6,4-some2,some8-2,1-5,some0-7,5-4,3-some9,8-8),7-f(some10-some2,2-2,4-5,some8-7,1-4,some0-some9,5-8,3-some11),8-f(some12-2,some10-5,2-7,4-4,some8-some9,1-8,some0-some11,5-some13)],1,[7,2,8,5,1,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(7-f(some0-some1,2-2,4-5,some2-7,1-4,some3-some4,5-8,3-some5),[1-f(5-some6,3-some7,8-1,7-3,some8-some9,6-6,some10-some1,some11-2),2-f(some3-some7,5-1,3-3,8-some9,7-6,some8-some1,6-2,some10-5),4-f(some2-3,1-some9,some3-6,5-some1,3-2,8-5,7-7,some8-4),5-f(4-some9,some2-6,1-some1,some3-2,5-5,3-7,8-4,7-some4),6-f(2-6,4-some1,some2-2,1-5,some3-7,5-4,3-some4,8-8),7-f(some0-some1,2-2,4-5,some2-7,1-4,some3-some4,5-8,3-some5),8-f(some12-2,some0-5,2-7,4-4,some2-some4,1-8,some3-some5,5-some13)],[1-f(5-some6,3-some7,8-1,7-3,some8-some9,6-6,some10-some1,some11-2),2-f(some3-some7,5-1,3-3,8-some9,7-6,some8-some1,6-2,some10-5),4-f(some2-3,1-some9,some3-6,5-some1,3-2,8-5,7-7,some8-4),5-f(4-some9,some2-6,1-some1,some3-2,5-5,3-7,8-4,7-some4),6-f(2-6,4-some1,some2-2,1-5,some3-7,5-4,3-some4,8-8),8-f(some12-2,some0-5,2-7,4-4,some2-some4,1-8,some3-some5,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-some1,2-2,4-5,some2-7,1-4,some3-some4,5-8,3-some5),2-2)"}]
    <#lemma492>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_305 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_305.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma398> a r:Inference;
  r:gives {
    "queens([1-f(some0-some5,3-some6,6-1,8-3,some3-some1,some4-some2,7-7,some7-2),2-f(5-some6,some0-1,3-3,6-some1,8-some2,some3-7,some4-2,7-6),4-f(some8-3,1-some1,5-some2,some0-7,3-2,6-6,8-5,some3-4),5-f(4-some1,some8-some2,1-7,5-2,some0-6,3-5,6-4,8-8),6-f(2-some2,4-7,some8-2,1-6,5-5,some0-4,3-8,6-some9),7-f(some10-7,2-2,4-6,some8-5,1-4,5-8,some0-some9,3-some11),8-f(some12-2,some10-6,2-5,4-4,some8-8,1-some9,5-some11,some0-some13)],1,[7,2,8,6,4,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(7-f(some0-7,2-2,4-6,some1-5,1-4,5-8,some2-some3,3-some4),[1-f(some2-some5,3-some6,6-1,8-3,some7-some8,some9-some10,7-7,some11-2),2-f(5-some6,some2-1,3-3,6-some8,8-some10,some7-7,some9-2,7-6),4-f(some1-3,1-some8,5-some10,some2-7,3-2,6-6,8-5,some7-4),5-f(4-some8,some1-some10,1-7,5-2,some2-6,3-5,6-4,8-8),6-f(2-some10,4-7,some1-2,1-6,5-5,some2-4,3-8,6-some3),7-f(some0-7,2-2,4-6,some1-5,1-4,5-8,some2-some3,3-some4),8-f(some12-2,some0-6,2-5,4-4,some1-8,1-some3,5-some4,some2-some13)],[1-f(some2-some5,3-some6,6-1,8-3,some7-some8,some9-some10,7-7,some11-2),2-f(5-some6,some2-1,3-3,6-some8,8-some10,some7-7,some9-2,7-6),4-f(some1-3,1-some8,5-some10,some2-7,3-2,6-6,8-5,some7-4),5-f(4-some8,some1-some10,1-7,5-2,some2-6,3-5,6-4,8-8),6-f(2-some10,4-7,some1-2,1-6,5-5,some2-4,3-8,6-some3),8-f(some12-2,some0-6,2-5,4-4,some1-8,1-some3,5-some4,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-7,2-2,4-6,some1-5,1-4,5-8,some2-some3,3-some4),2-2)"}]
    <#lemma493>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_306 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_306.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma399> a r:Inference;
  r:gives {
    "queens([1-f(6-some4,some1-some5,some2-1,8-some0,5-5,7-3,some6-some3,some7-7),2-f(3-some5,6-1,some1-some0,some2-5,8-3,5-some3,7-7,some6-2),4-f(4-some0,1-5,3-3,6-some3,some1-7,some2-2,8-4,5-6),5-f(some8-5,4-3,1-some3,3-7,6-2,some1-4,some2-6,8-8),6-f(some9-3,some8-some3,4-7,1-2,3-4,6-6,some1-8,some2-some10),7-f(2-some3,some9-7,some8-2,4-4,1-6,3-8,6-some10,some1-some11),8-f(some12-7,2-2,some9-4,some8-6,4-8,1-some10,3-some11,6-some13)],1,[8,4,7,1,6,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(8-f(some0-7,2-2,some1-4,some2-6,4-8,1-some3,3-some4,6-some5),[1-f(6-some6,some7-some8,some9-1,8-some10,5-5,7-3,some11-some12,some13-7),2-f(3-some8,6-1,some7-some10,some9-5,8-3,5-some12,7-7,some11-2),4-f(4-some10,1-5,3-3,6-some12,some7-7,some9-2,8-4,5-6),5-f(some2-5,4-3,1-some12,3-7,6-2,some7-4,some9-6,8-8),6-f(some1-3,some2-some12,4-7,1-2,3-4,6-6,some7-8,some9-some3),7-f(2-some12,some1-7,some2-2,4-4,1-6,3-8,6-some3,some7-some4),8-f(some0-7,2-2,some1-4,some2-6,4-8,1-some3,3-some4,6-some5)],[1-f(6-some6,some7-some8,some9-1,8-some10,5-5,7-3,some11-some12,some13-7),2-f(3-some8,6-1,some7-some10,some9-5,8-3,5-some12,7-7,some11-2),4-f(4-some10,1-5,3-3,6-some12,some7-7,some9-2,8-4,5-6),5-f(some2-5,4-3,1-some12,3-7,6-2,some7-4,some9-6,8-8),6-f(some1-3,some2-some12,4-7,1-2,3-4,6-6,some7-8,some9-some3),7-f(2-some12,some1-7,some2-2,4-4,1-6,3-8,6-some3,some7-some4)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-7,2-2,some1-4,some2-6,4-8,1-some3,3-some4,6-some5),2-2)"}]
    <#lemma494>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_307 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_307.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma400> a r:Inference;
  r:gives {
    "queens([1-f(some1-some4,2-2,8-some5,5-1,7-some0,some6-5,some7-3,some8-some2),2-f(6-2,some1-some5,2-1,8-some0,5-5,7-3,some6-some2,some7-7),3-f(3-some5,6-1,some1-some0,2-5,8-3,5-some2,7-7,some6-some3),5-f(4-some0,1-5,3-3,6-some2,some1-7,2-some3,8-4,5-6),6-f(some9-5,4-3,1-some2,3-7,6-some3,some1-4,2-6,8-8),7-f(some10-3,some9-some2,4-7,1-some3,3-4,6-6,some1-8,2-some11),8-f(some12-some2,some10-7,some9-some3,4-4,1-6,3-8,6-some11,some1-some13)],1,[1,5,8,2,7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,2-2,8-some2,5-1,7-some3,some4-5,some5-3,some6-some7),[1-f(some0-some1,2-2,8-some2,5-1,7-some3,some4-5,some5-3,some6-some7),2-f(6-2,some0-some2,2-1,8-some3,5-5,7-3,some4-some7,some5-7),3-f(3-some2,6-1,some0-some3,2-5,8-3,5-some7,7-7,some4-some8),5-f(4-some3,1-5,3-3,6-some7,some0-7,2-some8,8-4,5-6),6-f(some9-5,4-3,1-some7,3-7,6-some8,some0-4,2-6,8-8),7-f(some10-3,some9-some7,4-7,1-some8,3-4,6-6,some0-8,2-some11),8-f(some12-some7,some10-7,some9-some8,4-4,1-6,3-8,6-some11,some0-some13)],[2-f(6-2,some0-some2,2-1,8-some3,5-5,7-3,some4-some7,some5-7),3-f(3-some2,6-1,some0-some3,2-5,8-3,5-some7,7-7,some4-some8),5-f(4-some3,1-5,3-3,6-some7,some0-7,2-some8,8-4,5-6),6-f(some9-5,4-3,1-some7,3-7,6-some8,some0-4,2-6,8-8),7-f(some10-3,some9-some7,4-7,1-some8,3-4,6-6,some0-8,2-some11),8-f(some12-some7,some10-7,some9-some8,4-4,1-6,3-8,6-some11,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-some1,2-2,8-some2,5-1,7-some3,some4-5,some5-3,some6-some7),2-2)"}]
    <#lemma495>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_308 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_308.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma401> a r:Inference;
  r:gives {
    "queens([1-f(7-some4,2-2,some2-some5,6-1,some3-some0,some6-some1,8-3,some7-6),2-f(5-2,7-some5,2-1,some2-some0,6-some1,some3-3,some6-6,8-8),3-f(3-some5,5-1,7-some0,2-some1,some2-3,6-6,some3-8,some6-5),5-f(4-some0,1-some1,3-3,5-6,7-8,2-5,some2-4,6-some8),6-f(some9-some1,4-3,1-6,3-8,5-5,7-4,2-some8,some2-7),7-f(some10-3,some9-6,4-8,1-5,3-4,5-some8,7-7,2-some11),8-f(some12-6,some10-8,some9-5,4-4,1-some8,3-7,5-some11,7-some13)],1,[1,5,8,6,3,7,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(1-f(7-some0,2-2,some1-some2,6-1,some3-some4,some5-some6,8-3,some7-6),[1-f(7-some0,2-2,some1-some2,6-1,some3-some4,some5-some6,8-3,some7-6),2-f(5-2,7-some2,2-1,some1-some4,6-some6,some3-3,some5-6,8-8),3-f(3-some2,5-1,7-some4,2-some6,some1-3,6-6,some3-8,some5-5),5-f(4-some4,1-some6,3-3,5-6,7-8,2-5,some1-4,6-some8),6-f(some9-some6,4-3,1-6,3-8,5-5,7-4,2-some8,some1-7),7-f(some10-3,some9-6,4-8,1-5,3-4,5-some8,7-7,2-some11),8-f(some12-6,some10-8,some9-5,4-4,1-some8,3-7,5-some11,7-some13)],[2-f(5-2,7-some2,2-1,some1-some4,6-some6,some3-3,some5-6,8-8),3-f(3-some2,5-1,7-some4,2-some6,some1-3,6-6,some3-8,some5-5),5-f(4-some4,1-some6,3-3,5-6,7-8,2-5,some1-4,6-some8),6-f(some9-some6,4-3,1-6,3-8,5-5,7-4,2-some8,some1-7),7-f(some10-3,some9-6,4-8,1-5,3-4,5-some8,7-7,2-some11),8-f(some12-6,some10-8,some9-5,4-4,1-some8,3-7,5-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(7-some0,2-2,some1-some2,6-1,some3-some4,some5-some6,8-3,some7-6),2-2)"}]
    <#lemma496>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_309 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_309.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma402> a r:Inference;
  r:gives {
    "queens([1-f(2-some4,8-some5,some2-2,some3-1,7-some0,6-6,some6-3,some7-some1),2-f(5-some5,2-2,8-1,some2-some0,some3-6,7-3,6-some1,some6-7),3-f(3-2,5-1,2-some0,8-6,some2-3,some3-some1,7-7,6-5),5-f(4-some0,1-6,3-3,5-some1,2-7,8-5,some2-4,some3-some8),6-f(some9-6,4-3,1-some1,3-7,5-5,2-4,8-some8,some2-some10),7-f(some11-3,some9-some1,4-7,1-5,3-4,5-some8,2-some10,8-8),8-f(some12-some1,some11-7,some9-5,4-4,1-some8,3-some10,5-8,2-some13)],1,[2,5,8,6,1,3,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(2-f(5-some0,2-2,8-1,some1-some2,some3-6,7-3,6-some4,some5-7),[1-f(2-some6,8-some0,some1-2,some3-1,7-some2,6-6,some5-3,some7-some4),2-f(5-some0,2-2,8-1,some1-some2,some3-6,7-3,6-some4,some5-7),3-f(3-2,5-1,2-some2,8-6,some1-3,some3-some4,7-7,6-5),5-f(4-some2,1-6,3-3,5-some4,2-7,8-5,some1-4,some3-some8),6-f(some9-6,4-3,1-some4,3-7,5-5,2-4,8-some8,some1-some10),7-f(some11-3,some9-some4,4-7,1-5,3-4,5-some8,2-some10,8-8),8-f(some12-some4,some11-7,some9-5,4-4,1-some8,3-some10,5-8,2-some13)],[1-f(2-some6,8-some0,some1-2,some3-1,7-some2,6-6,some5-3,some7-some4),3-f(3-2,5-1,2-some2,8-6,some1-3,some3-some4,7-7,6-5),5-f(4-some2,1-6,3-3,5-some4,2-7,8-5,some1-4,some3-some8),6-f(some9-6,4-3,1-some4,3-7,5-5,2-4,8-some8,some1-some10),7-f(some11-3,some9-some4,4-7,1-5,3-4,5-some8,2-some10,8-8),8-f(some12-some4,some11-7,some9-5,4-4,1-some8,3-some10,5-8,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(5-some0,2-2,8-1,some1-some2,some3-6,7-3,6-some4,some5-7),2-2)"}]
    <#lemma497>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_310 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_310.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma403> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,4-some6,some2-2,8-1,some3-some0,some7-4,7-7,some8-some1),2-f(5-some6,2-2,4-1,some2-some0,8-4,some3-7,some7-some1,7-3),3-f(6-2,5-1,2-some0,4-4,some2-7,8-some1,some3-3,some7-5),5-f(3-some0,1-4,6-7,5-some1,2-3,4-5,some2-some4,8-8),6-f(some9-4,3-7,1-some1,6-3,5-5,2-some4,4-8,some2-6),7-f(some10-7,some9-some1,3-3,1-5,6-some4,5-8,2-6,4-some11),8-f(some12-some1,some10-3,some9-5,3-some4,1-8,6-6,5-some11,2-some13)],1,[2,7,3,6,8,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(2-f(5-some0,2-2,4-1,some1-some2,8-4,some3-7,some4-some5,7-3),[1-f(2-some6,4-some0,some1-2,8-1,some3-some2,some4-4,7-7,some7-some5),2-f(5-some0,2-2,4-1,some1-some2,8-4,some3-7,some4-some5,7-3),3-f(6-2,5-1,2-some2,4-4,some1-7,8-some5,some3-3,some4-5),5-f(3-some2,1-4,6-7,5-some5,2-3,4-5,some1-some8,8-8),6-f(some9-4,3-7,1-some5,6-3,5-5,2-some8,4-8,some1-6),7-f(some10-7,some9-some5,3-3,1-5,6-some8,5-8,2-6,4-some11),8-f(some12-some5,some10-3,some9-5,3-some8,1-8,6-6,5-some11,2-some13)],[1-f(2-some6,4-some0,some1-2,8-1,some3-some2,some4-4,7-7,some7-some5),3-f(6-2,5-1,2-some2,4-4,some1-7,8-some5,some3-3,some4-5),5-f(3-some2,1-4,6-7,5-some5,2-3,4-5,some1-some8,8-8),6-f(some9-4,3-7,1-some5,6-3,5-5,2-some8,4-8,some1-6),7-f(some10-7,some9-some5,3-3,1-5,6-some8,5-8,2-6,4-some11),8-f(some12-some5,some10-3,some9-5,3-some8,1-8,6-6,5-some11,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(5-some0,2-2,4-1,some1-some2,8-4,some3-7,some4-some5,7-3),2-2)"}]
    <#lemma498>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_311 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_311.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma404> a r:Inference;
  r:gives {
    "queens([1-f(2-some4,4-some5,7-2,some2-1,some3-some0,some6-4,some7-some1,8-8),2-f(5-some5,2-2,4-1,7-some0,some2-4,some3-some1,some6-8,some7-3),3-f(6-2,5-1,2-some0,4-4,7-some1,some2-8,some3-3,some6-5),5-f(3-some0,1-4,6-some1,5-8,2-3,4-5,7-7,some2-some8),6-f(some9-4,3-some1,1-8,6-3,5-5,2-7,4-some8,7-6),7-f(some10-some1,some9-8,3-3,1-5,6-7,5-some8,2-6,4-some11),8-f(some12-8,some10-3,some9-5,3-7,1-some8,6-6,5-some11,2-some13)],1,[2,7,3,6,8,5,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(2-f(5-some0,2-2,4-1,7-some1,some2-4,some3-some4,some5-8,some6-3),[1-f(2-some7,4-some0,7-2,some2-1,some3-some1,some5-4,some6-some4,8-8),2-f(5-some0,2-2,4-1,7-some1,some2-4,some3-some4,some5-8,some6-3),3-f(6-2,5-1,2-some1,4-4,7-some4,some2-8,some3-3,some5-5),5-f(3-some1,1-4,6-some4,5-8,2-3,4-5,7-7,some2-some8),6-f(some9-4,3-some4,1-8,6-3,5-5,2-7,4-some8,7-6),7-f(some10-some4,some9-8,3-3,1-5,6-7,5-some8,2-6,4-some11),8-f(some12-8,some10-3,some9-5,3-7,1-some8,6-6,5-some11,2-some13)],[1-f(2-some7,4-some0,7-2,some2-1,some3-some1,some5-4,some6-some4,8-8),3-f(6-2,5-1,2-some1,4-4,7-some4,some2-8,some3-3,some5-5),5-f(3-some1,1-4,6-some4,5-8,2-3,4-5,7-7,some2-some8),6-f(some9-4,3-some4,1-8,6-3,5-5,2-7,4-some8,7-6),7-f(some10-some4,some9-8,3-3,1-5,6-7,5-some8,2-6,4-some11),8-f(some12-8,some10-3,some9-5,3-7,1-some8,6-6,5-some11,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(5-some0,2-2,4-1,7-some1,some2-4,some3-some4,some5-8,some6-3),2-2)"}]
    <#lemma499>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_312 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_312.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma405> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,7-some6,some2-2,some3-1,5-5,8-some0,some7-some1,some8-4),2-f(4-some6,2-2,7-1,some2-5,some3-some0,5-some1,8-4,some7-3),3-f(6-2,4-1,2-5,7-some0,some2-some1,some3-4,5-3,8-8),5-f(3-5,1-some0,6-some1,4-4,2-3,7-8,some2-some4,some3-7),6-f(some9-some0,3-some1,1-4,6-3,4-8,2-some4,7-7,some2-6),7-f(some10-some1,some9-4,3-3,1-8,6-some4,4-7,2-6,7-some11),8-f(some12-4,some10-3,some9-8,3-some4,1-7,6-6,4-some11,2-some13)],1,[2,7,5,1,8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(2-f(4-some0,2-2,7-1,some1-5,some2-some3,5-some4,8-4,some5-3),[1-f(2-some6,7-some0,some1-2,some2-1,5-5,8-some3,some5-some4,some7-4),2-f(4-some0,2-2,7-1,some1-5,some2-some3,5-some4,8-4,some5-3),3-f(6-2,4-1,2-5,7-some3,some1-some4,some2-4,5-3,8-8),5-f(3-5,1-some3,6-some4,4-4,2-3,7-8,some1-some8,some2-7),6-f(some9-some3,3-some4,1-4,6-3,4-8,2-some8,7-7,some1-6),7-f(some10-some4,some9-4,3-3,1-8,6-some8,4-7,2-6,7-some11),8-f(some12-4,some10-3,some9-8,3-some8,1-7,6-6,4-some11,2-some13)],[1-f(2-some6,7-some0,some1-2,some2-1,5-5,8-some3,some5-some4,some7-4),3-f(6-2,4-1,2-5,7-some3,some1-some4,some2-4,5-3,8-8),5-f(3-5,1-some3,6-some4,4-4,2-3,7-8,some1-some8,some2-7),6-f(some9-some3,3-some4,1-4,6-3,4-8,2-some8,7-7,some1-6),7-f(some10-some4,some9-4,3-3,1-8,6-some8,4-7,2-6,7-some11),8-f(some12-4,some10-3,some9-8,3-some8,1-7,6-6,4-some11,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(4-some0,2-2,7-1,some1-5,some2-some3,5-some4,8-4,some5-3),2-2)"}]
    <#lemma500>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_313 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_313.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma406> a r:Inference;
  r:gives {
    "queens([1-f(2-some4,some2-some5,8-2,some3-1,7-some0,6-6,some6-some1,some7-4),2-f(4-some5,2-2,some2-1,8-some0,some3-6,7-some1,6-4,some6-7),3-f(5-2,4-1,2-some0,some2-6,8-some1,some3-4,7-7,6-3),5-f(some8-some0,1-6,5-some1,4-4,2-7,some2-3,8-5,some3-some9),6-f(3-6,some8-some1,1-4,5-7,4-3,2-5,some2-some9,8-8),7-f(some10-some1,3-4,some8-7,1-3,5-5,4-some9,2-8,some2-some11),8-f(some12-4,some10-7,3-3,some8-5,1-some9,5-8,4-some11,2-some13)],1,[2,8,5,7,1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(2-f(4-some0,2-2,some1-1,8-some2,some3-6,7-some4,6-4,some5-7),[1-f(2-some6,some1-some0,8-2,some3-1,7-some2,6-6,some5-some4,some7-4),2-f(4-some0,2-2,some1-1,8-some2,some3-6,7-some4,6-4,some5-7),3-f(5-2,4-1,2-some2,some1-6,8-some4,some3-4,7-7,6-3),5-f(some8-some2,1-6,5-some4,4-4,2-7,some1-3,8-5,some3-some9),6-f(3-6,some8-some4,1-4,5-7,4-3,2-5,some1-some9,8-8),7-f(some10-some4,3-4,some8-7,1-3,5-5,4-some9,2-8,some1-some11),8-f(some12-4,some10-7,3-3,some8-5,1-some9,5-8,4-some11,2-some13)],[1-f(2-some6,some1-some0,8-2,some3-1,7-some2,6-6,some5-some4,some7-4),3-f(5-2,4-1,2-some2,some1-6,8-some4,some3-4,7-7,6-3),5-f(some8-some2,1-6,5-some4,4-4,2-7,some1-3,8-5,some3-some9),6-f(3-6,some8-some4,1-4,5-7,4-3,2-5,some1-some9,8-8),7-f(some10-some4,3-4,some8-7,1-3,5-5,4-some9,2-8,some1-some11),8-f(some12-4,some10-7,3-3,some8-5,1-some9,5-8,4-some11,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(4-some0,2-2,some1-1,8-some2,some3-6,7-some4,6-4,some5-7),2-2)"}]
    <#lemma501>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_314 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_314.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma407> a r:Inference;
  r:gives {
    "queens([1-f(2-some3,8-some4,7-2,6-1,5-5,some5-some1,some6-some2,some7-6),2-f(some0-some4,2-2,8-1,7-5,6-some1,5-some2,some5-6,some6-4),3-f(4-2,some0-1,2-5,8-some1,7-some2,6-6,5-4,some5-3),5-f(some8-5,1-some1,4-some2,some0-6,2-4,8-3,7-7,6-some9),6-f(3-some1,some8-some2,1-6,4-4,some0-3,2-7,8-some9,7-some10),7-f(some11-some2,3-6,some8-4,1-3,4-7,some0-some9,2-some10,8-8),8-f(some12-6,some11-4,3-3,some8-7,1-some9,4-some10,some0-8,2-some13)],1,[2,8,6,1,3,5,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(2-f(some0-some1,2-2,8-1,7-5,6-some2,5-some3,some4-6,some5-4),[1-f(2-some6,8-some1,7-2,6-1,5-5,some4-some2,some5-some3,some7-6),2-f(some0-some1,2-2,8-1,7-5,6-some2,5-some3,some4-6,some5-4),3-f(4-2,some0-1,2-5,8-some2,7-some3,6-6,5-4,some4-3),5-f(some8-5,1-some2,4-some3,some0-6,2-4,8-3,7-7,6-some9),6-f(3-some2,some8-some3,1-6,4-4,some0-3,2-7,8-some9,7-some10),7-f(some11-some3,3-6,some8-4,1-3,4-7,some0-some9,2-some10,8-8),8-f(some12-6,some11-4,3-3,some8-7,1-some9,4-some10,some0-8,2-some13)],[1-f(2-some6,8-some1,7-2,6-1,5-5,some4-some2,some5-some3,some7-6),3-f(4-2,some0-1,2-5,8-some2,7-some3,6-6,5-4,some4-3),5-f(some8-5,1-some2,4-some3,some0-6,2-4,8-3,7-7,6-some9),6-f(3-some2,some8-some3,1-6,4-4,some0-3,2-7,8-some9,7-some10),7-f(some11-some3,3-6,some8-4,1-3,4-7,some0-some9,2-some10,8-8),8-f(some12-6,some11-4,3-3,some8-7,1-some9,4-some10,some0-8,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-some1,2-2,8-1,7-5,6-some2,5-some3,some4-6,some5-4),2-2)"}]
    <#lemma502>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_315 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_315.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma408> a r:Inference;
  r:gives {
    "queens([1-f(some1-some4,8-some5,3-3,5-1,7-some0,some6-5,some7-2,some8-4),2-f(4-some5,some1-3,8-1,3-some0,5-5,7-2,some6-4,some7-7),3-f(6-3,4-1,some1-some0,8-5,3-2,5-4,7-7,some6-some2),5-f(2-some0,1-5,6-2,4-4,some1-7,8-some2,3-some3,5-some9),6-f(some10-5,2-2,1-4,6-7,4-some2,some1-some3,8-some9,3-6),7-f(some11-2,some10-4,2-7,1-some2,6-some3,4-some9,some1-6,8-8),8-f(some12-4,some11-7,some10-some2,2-some3,1-some9,6-6,4-8,some1-some13)],1,[6,1,5,2,8,3,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(6-f(some0-5,2-2,1-4,6-7,4-some1,some2-some3,8-some4,3-6),[1-f(some2-some5,8-some6,3-3,5-1,7-some7,some8-5,some9-2,some10-4),2-f(4-some6,some2-3,8-1,3-some7,5-5,7-2,some8-4,some9-7),3-f(6-3,4-1,some2-some7,8-5,3-2,5-4,7-7,some8-some1),5-f(2-some7,1-5,6-2,4-4,some2-7,8-some1,3-some3,5-some4),6-f(some0-5,2-2,1-4,6-7,4-some1,some2-some3,8-some4,3-6),7-f(some11-2,some0-4,2-7,1-some1,6-some3,4-some4,some2-6,8-8),8-f(some12-4,some11-7,some0-some1,2-some3,1-some4,6-6,4-8,some2-some13)],[1-f(some2-some5,8-some6,3-3,5-1,7-some7,some8-5,some9-2,some10-4),2-f(4-some6,some2-3,8-1,3-some7,5-5,7-2,some8-4,some9-7),3-f(6-3,4-1,some2-some7,8-5,3-2,5-4,7-7,some8-some1),5-f(2-some7,1-5,6-2,4-4,some2-7,8-some1,3-some3,5-some4),7-f(some11-2,some0-4,2-7,1-some1,6-some3,4-some4,some2-6,8-8),8-f(some12-4,some11-7,some0-some1,2-some3,1-some4,6-6,4-8,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-5,2-2,1-4,6-7,4-some1,some2-some3,8-some4,3-6),2-2)"}]
    <#lemma503>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_316 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_316.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma409> a r:Inference;
  r:gives {
    "queens([1-f(some1-some4,some2-some5,4-some6,8-1,7-4,6-6,some7-2,some8-some3),2-f(some0-some5,some1-some6,some2-1,4-4,8-6,7-2,6-some3,some7-7),3-f(5-some6,some0-1,some1-4,some2-6,4-2,8-some3,7-7,6-3),5-f(2-4,1-6,5-2,some0-some3,some1-7,some2-3,4-5,8-8),6-f(3-6,2-2,1-some3,5-7,some0-3,some1-5,some2-8,4-some9),7-f(some10-2,3-some3,2-7,1-3,5-5,some0-8,some1-some9,some2-some11),8-f(some12-some3,some10-7,3-3,2-5,1-8,5-some9,some0-some11,some1-some13)],1,[6,8,2,7,1,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(6-f(3-6,2-2,1-some0,5-7,some1-3,some2-5,some3-8,4-some4),[1-f(some2-some5,some3-some6,4-some7,8-1,7-4,6-6,some8-2,some9-some0),2-f(some1-some6,some2-some7,some3-1,4-4,8-6,7-2,6-some0,some8-7),3-f(5-some7,some1-1,some2-4,some3-6,4-2,8-some0,7-7,6-3),5-f(2-4,1-6,5-2,some1-some0,some2-7,some3-3,4-5,8-8),6-f(3-6,2-2,1-some0,5-7,some1-3,some2-5,some3-8,4-some4),7-f(some10-2,3-some0,2-7,1-3,5-5,some1-8,some2-some4,some3-some11),8-f(some12-some0,some10-7,3-3,2-5,1-8,5-some4,some1-some11,some2-some13)],[1-f(some2-some5,some3-some6,4-some7,8-1,7-4,6-6,some8-2,some9-some0),2-f(some1-some6,some2-some7,some3-1,4-4,8-6,7-2,6-some0,some8-7),3-f(5-some7,some1-1,some2-4,some3-6,4-2,8-some0,7-7,6-3),5-f(2-4,1-6,5-2,some1-some0,some2-7,some3-3,4-5,8-8),7-f(some10-2,3-some0,2-7,1-3,5-5,some1-8,some2-some4,some3-some11),8-f(some12-some0,some10-7,3-3,2-5,1-8,5-some4,some1-some11,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-6,2-2,1-some0,5-7,some1-3,some2-5,some3-8,4-some4),2-2)"}]
    <#lemma504>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_317 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_317.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma410> a r:Inference;
  r:gives {
    "queens([1-f(some1-some4,4-some5,7-some6,some3-1,5-5,some7-4,8-2,some8-some2),2-f(6-some5,some1-some6,4-1,7-5,some3-4,5-2,some7-some2,8-8),3-f(some0-some6,6-1,some1-5,4-4,7-2,some3-some2,5-8,some7-3),5-f(2-5,1-4,some0-2,6-some2,some1-8,4-3,7-7,some3-6),6-f(3-4,2-2,1-some2,some0-8,6-3,some1-7,4-6,7-some9),7-f(some10-2,3-some2,2-8,1-3,some0-7,6-6,some1-some9,4-some11),8-f(some12-some2,some10-8,3-3,2-7,1-6,some0-some9,6-some11,some1-some13)],1,[6,8,3,1,7,5,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(6-f(3-4,2-2,1-some0,some1-8,6-3,some2-7,4-6,7-some3),[1-f(some2-some4,4-some5,7-some6,some7-1,5-5,some8-4,8-2,some9-some0),2-f(6-some5,some2-some6,4-1,7-5,some7-4,5-2,some8-some0,8-8),3-f(some1-some6,6-1,some2-5,4-4,7-2,some7-some0,5-8,some8-3),5-f(2-5,1-4,some1-2,6-some0,some2-8,4-3,7-7,some7-6),6-f(3-4,2-2,1-some0,some1-8,6-3,some2-7,4-6,7-some3),7-f(some10-2,3-some0,2-8,1-3,some1-7,6-6,some2-some3,4-some11),8-f(some12-some0,some10-8,3-3,2-7,1-6,some1-some3,6-some11,some2-some13)],[1-f(some2-some4,4-some5,7-some6,some7-1,5-5,some8-4,8-2,some9-some0),2-f(6-some5,some2-some6,4-1,7-5,some7-4,5-2,some8-some0,8-8),3-f(some1-some6,6-1,some2-5,4-4,7-2,some7-some0,5-8,some8-3),5-f(2-5,1-4,some1-2,6-some0,some2-8,4-3,7-7,some7-6),7-f(some10-2,3-some0,2-8,1-3,some1-7,6-6,some2-some3,4-some11),8-f(some12-some0,some10-8,3-3,2-7,1-6,some1-some3,6-some11,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-4,2-2,1-some0,some1-8,6-3,some2-7,4-6,7-some3),2-2)"}]
    <#lemma505>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_318 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_318.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma411> a r:Inference;
  r:gives {
    "queens([1-f(5-some5,7-some6,3-3,some4-1,6-some1,8-some3,some7-6,some8-2),2-f(some2-some6,5-3,7-1,3-some1,some4-some3,6-6,8-2,some7-5),3-f(some0-3,some2-1,5-some1,7-some3,3-6,some4-2,6-5,8-8),5-f(4-some1,1-some3,some0-6,some2-2,5-5,7-8,3-4,some4-7),6-f(2-some3,4-6,1-2,some0-5,some2-8,5-4,7-7,3-some9),7-f(some10-6,2-2,4-5,1-8,some0-4,some2-7,5-some9,7-some11),8-f(some12-2,some10-5,2-8,4-4,1-7,some0-some9,some2-some11,5-some13)],1,[7,1,8,5,2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(7-f(some0-6,2-2,4-5,1-8,some1-4,some2-7,5-some3,7-some4),[1-f(5-some5,7-some6,3-3,some7-1,6-some8,8-some9,some10-6,some11-2),2-f(some2-some6,5-3,7-1,3-some8,some7-some9,6-6,8-2,some10-5),3-f(some1-3,some2-1,5-some8,7-some9,3-6,some7-2,6-5,8-8),5-f(4-some8,1-some9,some1-6,some2-2,5-5,7-8,3-4,some7-7),6-f(2-some9,4-6,1-2,some1-5,some2-8,5-4,7-7,3-some3),7-f(some0-6,2-2,4-5,1-8,some1-4,some2-7,5-some3,7-some4),8-f(some12-2,some0-5,2-8,4-4,1-7,some1-some3,some2-some4,5-some13)],[1-f(5-some5,7-some6,3-3,some7-1,6-some8,8-some9,some10-6,some11-2),2-f(some2-some6,5-3,7-1,3-some8,some7-some9,6-6,8-2,some10-5),3-f(some1-3,some2-1,5-some8,7-some9,3-6,some7-2,6-5,8-8),5-f(4-some8,1-some9,some1-6,some2-2,5-5,7-8,3-4,some7-7),6-f(2-some9,4-6,1-2,some1-5,some2-8,5-4,7-7,3-some3),8-f(some12-2,some0-5,2-8,4-4,1-7,some1-some3,some2-some4,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-6,2-2,4-5,1-8,some1-4,some2-7,5-some3,7-some4),2-2)"}]
    <#lemma506>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_319 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_319.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma412> a r:Inference;
  r:gives {
    "queens([1-f(3-some4,6-some5,8-some6,5-1,some3-3,some7-5,7-7,some8-2),2-f(some1-some5,3-some6,6-1,8-3,5-5,some3-7,some7-2,7-some2),3-f(some0-some6,some1-1,3-3,6-5,8-7,5-2,some3-some2,some7-6),5-f(4-3,1-5,some0-7,some1-2,3-some2,6-6,8-4,5-some9),6-f(2-5,4-7,1-2,some0-some2,some1-6,3-4,6-some9,8-8),7-f(some10-7,2-2,4-some2,1-6,some0-4,some1-some9,3-8,6-some11),8-f(some12-2,some10-some2,2-6,4-4,1-some9,some0-8,some1-some11,3-some13)],1,[7,3,8,2,5,1,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(7-f(some0-7,2-2,4-some1,1-6,some2-4,some3-some4,3-8,6-some5),[1-f(3-some6,6-some7,8-some8,5-1,some9-3,some10-5,7-7,some11-2),2-f(some3-some7,3-some8,6-1,8-3,5-5,some9-7,some10-2,7-some1),3-f(some2-some8,some3-1,3-3,6-5,8-7,5-2,some9-some1,some10-6),5-f(4-3,1-5,some2-7,some3-2,3-some1,6-6,8-4,5-some4),6-f(2-5,4-7,1-2,some2-some1,some3-6,3-4,6-some4,8-8),7-f(some0-7,2-2,4-some1,1-6,some2-4,some3-some4,3-8,6-some5),8-f(some12-2,some0-some1,2-6,4-4,1-some4,some2-8,some3-some5,3-some13)],[1-f(3-some6,6-some7,8-some8,5-1,some9-3,some10-5,7-7,some11-2),2-f(some3-some7,3-some8,6-1,8-3,5-5,some9-7,some10-2,7-some1),3-f(some2-some8,some3-1,3-3,6-5,8-7,5-2,some9-some1,some10-6),5-f(4-3,1-5,some2-7,some3-2,3-some1,6-6,8-4,5-some4),6-f(2-5,4-7,1-2,some2-some1,some3-6,3-4,6-some4,8-8),8-f(some12-2,some0-some1,2-6,4-4,1-some4,some2-8,some3-some5,3-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-7,2-2,4-some1,1-6,some2-4,some3-some4,3-8,6-some5),2-2)"}]
    <#lemma507>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_320 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_320.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma413> a r:Inference;
  r:gives {
    "queens([1-f(8-some3,some0-some4,4-some5,some1-1,7-4,6-6,some6-3,some7-2),2-f(5-some4,8-some5,some0-1,4-4,some1-6,7-3,6-2,some6-7),3-f(3-some5,5-1,8-4,some0-6,4-3,some1-2,7-7,6-5),5-f(some8-4,1-6,3-3,5-2,8-7,some0-5,4-some2,some1-some9),6-f(2-6,some8-3,1-2,3-7,5-5,8-some2,some0-some9,4-some10),7-f(some11-3,2-2,some8-7,1-5,3-some2,5-some9,8-some10,some0-some12),8-f(some13-2,some11-7,2-5,some8-some2,1-some9,3-some10,5-some12,8-8)],1,[7,5,2,6,1,3,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(7-f(some0-3,2-2,some1-7,1-5,3-some2,5-some3,8-some4,some5-some6),[1-f(8-some7,some5-some8,4-some9,some10-1,7-4,6-6,some11-3,some12-2),2-f(5-some8,8-some9,some5-1,4-4,some10-6,7-3,6-2,some11-7),3-f(3-some9,5-1,8-4,some5-6,4-3,some10-2,7-7,6-5),5-f(some1-4,1-6,3-3,5-2,8-7,some5-5,4-some2,some10-some3),6-f(2-6,some1-3,1-2,3-7,5-5,8-some2,some5-some3,4-some4),7-f(some0-3,2-2,some1-7,1-5,3-some2,5-some3,8-some4,some5-some6),8-f(some13-2,some0-7,2-5,some1-some2,1-some3,3-some4,5-some6,8-8)],[1-f(8-some7,some5-some8,4-some9,some10-1,7-4,6-6,some11-3,some12-2),2-f(5-some8,8-some9,some5-1,4-4,some10-6,7-3,6-2,some11-7),3-f(3-some9,5-1,8-4,some5-6,4-3,some10-2,7-7,6-5),5-f(some1-4,1-6,3-3,5-2,8-7,some5-5,4-some2,some10-some3),6-f(2-6,some1-3,1-2,3-7,5-5,8-some2,some5-some3,4-some4),8-f(some13-2,some0-7,2-5,some1-some2,1-some3,3-some4,5-some6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-3,2-2,some1-7,1-5,3-some2,5-some3,8-some4,some5-some6),2-2)"}]
    <#lemma508>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_321 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_321.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma414> a r:Inference;
  r:gives {
    "queens([1-f(6-some3,4-some4,some0-some5,some1-1,5-5,some6-4,8-3,some7-2),2-f(7-some4,6-some5,4-1,some0-5,some1-4,5-3,some6-2,8-8),3-f(3-some5,7-1,6-5,4-4,some0-3,some1-2,5-8,some6-some2),5-f(some8-5,1-4,3-3,7-2,6-8,4-some2,some0-6,some1-some9),6-f(2-4,some8-3,1-2,3-8,7-some2,6-6,4-some9,some0-some10),7-f(some11-3,2-2,some8-8,1-some2,3-6,7-some9,6-some10,4-7),8-f(some12-2,some11-8,2-some2,some8-6,1-some9,3-some10,7-7,6-some13)],1,[7,5,3,1,6,8,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(7-f(some0-3,2-2,some1-8,1-some2,3-6,7-some3,6-some4,4-7),[1-f(6-some5,4-some6,some7-some8,some9-1,5-5,some10-4,8-3,some11-2),2-f(7-some6,6-some8,4-1,some7-5,some9-4,5-3,some10-2,8-8),3-f(3-some8,7-1,6-5,4-4,some7-3,some9-2,5-8,some10-some2),5-f(some1-5,1-4,3-3,7-2,6-8,4-some2,some7-6,some9-some3),6-f(2-4,some1-3,1-2,3-8,7-some2,6-6,4-some3,some7-some4),7-f(some0-3,2-2,some1-8,1-some2,3-6,7-some3,6-some4,4-7),8-f(some12-2,some0-8,2-some2,some1-6,1-some3,3-some4,7-7,6-some13)],[1-f(6-some5,4-some6,some7-some8,some9-1,5-5,some10-4,8-3,some11-2),2-f(7-some6,6-some8,4-1,some7-5,some9-4,5-3,some10-2,8-8),3-f(3-some8,7-1,6-5,4-4,some7-3,some9-2,5-8,some10-some2),5-f(some1-5,1-4,3-3,7-2,6-8,4-some2,some7-6,some9-some3),6-f(2-4,some1-3,1-2,3-8,7-some2,6-6,4-some3,some7-some4),8-f(some12-2,some0-8,2-some2,some1-6,1-some3,3-some4,7-7,6-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-3,2-2,some1-8,1-some2,3-6,7-some3,6-some4,4-7),2-2)"}]
    <#lemma509>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_322 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_322.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma415> a r:Inference;
  r:gives {
    "queens([1-f(7-some4,4-some5,3-3,8-1,6-some1,some6-4,some7-6,some8-some2),2-f(5-some5,7-3,4-1,3-some1,8-4,6-6,some6-some2,some7-2),3-f(some0-3,5-1,7-some1,4-4,3-6,8-some2,6-2,some6-5),5-f(some9-some1,1-4,some0-6,5-some2,7-2,4-5,3-some3,8-8),6-f(some10-4,some9-6,1-some2,some0-2,5-5,7-some3,4-8,3-7),7-f(2-6,some10-some2,some9-2,1-5,some0-some3,5-8,7-7,4-some11),8-f(some12-some2,2-2,some10-5,some9-some3,1-8,some0-7,5-some11,7-some13)],1,[8,1,3,6,2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,2-2,some2-5,some3-some4,1-8,some5-7,5-some6,7-some7),[1-f(7-some8,4-some9,3-3,8-1,6-some10,some11-4,some12-6,some13-some1),2-f(5-some9,7-3,4-1,3-some10,8-4,6-6,some11-some1,some12-2),3-f(some5-3,5-1,7-some10,4-4,3-6,8-some1,6-2,some11-5),5-f(some3-some10,1-4,some5-6,5-some1,7-2,4-5,3-some4,8-8),6-f(some2-4,some3-6,1-some1,some5-2,5-5,7-some4,4-8,3-7),7-f(2-6,some2-some1,some3-2,1-5,some5-some4,5-8,7-7,4-some6),8-f(some0-some1,2-2,some2-5,some3-some4,1-8,some5-7,5-some6,7-some7)],[1-f(7-some8,4-some9,3-3,8-1,6-some10,some11-4,some12-6,some13-some1),2-f(5-some9,7-3,4-1,3-some10,8-4,6-6,some11-some1,some12-2),3-f(some5-3,5-1,7-some10,4-4,3-6,8-some1,6-2,some11-5),5-f(some3-some10,1-4,some5-6,5-some1,7-2,4-5,3-some4,8-8),6-f(some2-4,some3-6,1-some1,some5-2,5-5,7-some4,4-8,3-7),7-f(2-6,some2-some1,some3-2,1-5,some5-some4,5-8,7-7,4-some6)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-some1,2-2,some2-5,some3-some4,1-8,some5-7,5-some6,7-some7),2-2)"}]
    <#lemma510>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_323 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_323.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma416> a r:Inference;
  r:gives {
    "queens([1-f(some2-some4,7-some5,3-3,some3-1,6-some0,8-some1,some6-6,some7-4),2-f(4-some5,some2-3,7-1,3-some0,some3-some1,6-6,8-4,some6-2),3-f(5-3,4-1,some2-some0,7-some1,3-6,some3-4,6-2,8-8),5-f(some8-some0,1-some1,5-6,4-4,some2-2,7-8,3-5,some3-7),6-f(some9-some1,some8-6,1-4,5-2,4-8,some2-5,7-7,3-some10),7-f(2-6,some9-4,some8-2,1-8,5-5,4-7,some2-some10,7-some11),8-f(some12-4,2-2,some9-8,some8-5,1-7,5-some10,4-some11,some2-some13)],1,[8,1,5,7,2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(8-f(some0-4,2-2,some1-8,some2-5,1-7,5-some3,4-some4,some5-some6),[1-f(some5-some7,7-some8,3-3,some9-1,6-some10,8-some11,some12-6,some13-4),2-f(4-some8,some5-3,7-1,3-some10,some9-some11,6-6,8-4,some12-2),3-f(5-3,4-1,some5-some10,7-some11,3-6,some9-4,6-2,8-8),5-f(some2-some10,1-some11,5-6,4-4,some5-2,7-8,3-5,some9-7),6-f(some1-some11,some2-6,1-4,5-2,4-8,some5-5,7-7,3-some3),7-f(2-6,some1-4,some2-2,1-8,5-5,4-7,some5-some3,7-some4),8-f(some0-4,2-2,some1-8,some2-5,1-7,5-some3,4-some4,some5-some6)],[1-f(some5-some7,7-some8,3-3,some9-1,6-some10,8-some11,some12-6,some13-4),2-f(4-some8,some5-3,7-1,3-some10,some9-some11,6-6,8-4,some12-2),3-f(5-3,4-1,some5-some10,7-some11,3-6,some9-4,6-2,8-8),5-f(some2-some10,1-some11,5-6,4-4,some5-2,7-8,3-5,some9-7),6-f(some1-some11,some2-6,1-4,5-2,4-8,some5-5,7-7,3-some3),7-f(2-6,some1-4,some2-2,1-8,5-5,4-7,some5-some3,7-some4)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-4,2-2,some1-8,some2-5,1-7,5-some3,4-some4,some5-some6),2-2)"}]
    <#lemma511>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_324 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_324.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma417> a r:Inference;
  r:gives {
    "queens([1-f(some0-some4,4-some5,8-some6,some1-1,5-5,7-4,some7-3,some8-7),2-f(6-some5,some0-some6,4-1,8-5,some1-4,5-3,7-7,some7-2),3-f(3-some6,6-1,some0-5,4-4,8-3,some1-7,5-2,7-some2),5-f(some9-5,1-4,3-3,6-7,some0-2,4-some2,8-some3,some1-6),6-f(some10-4,some9-3,1-7,3-2,6-some2,some0-some3,4-6,8-8),7-f(2-3,some10-7,some9-2,1-some2,3-some3,6-6,some0-8,4-some11),8-f(some12-7,2-2,some10-some2,some9-some3,1-6,3-8,6-some11,some0-some13)],1,[8,5,3,1,7,2,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(8-f(some0-7,2-2,some1-some2,some3-some4,1-6,3-8,6-some5,some6-some7),[1-f(some6-some8,4-some9,8-some10,some11-1,5-5,7-4,some12-3,some13-7),2-f(6-some9,some6-some10,4-1,8-5,some11-4,5-3,7-7,some12-2),3-f(3-some10,6-1,some6-5,4-4,8-3,some11-7,5-2,7-some2),5-f(some3-5,1-4,3-3,6-7,some6-2,4-some2,8-some4,some11-6),6-f(some1-4,some3-3,1-7,3-2,6-some2,some6-some4,4-6,8-8),7-f(2-3,some1-7,some3-2,1-some2,3-some4,6-6,some6-8,4-some5),8-f(some0-7,2-2,some1-some2,some3-some4,1-6,3-8,6-some5,some6-some7)],[1-f(some6-some8,4-some9,8-some10,some11-1,5-5,7-4,some12-3,some13-7),2-f(6-some9,some6-some10,4-1,8-5,some11-4,5-3,7-7,some12-2),3-f(3-some10,6-1,some6-5,4-4,8-3,some11-7,5-2,7-some2),5-f(some3-5,1-4,3-3,6-7,some6-2,4-some2,8-some4,some11-6),6-f(some1-4,some3-3,1-7,3-2,6-some2,some6-some4,4-6,8-8),7-f(2-3,some1-7,some3-2,1-some2,3-some4,6-6,some6-8,4-some5)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-7,2-2,some1-some2,some3-some4,1-6,3-8,6-some5,some6-some7),2-2)"}]
    <#lemma512>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_325 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_325.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma418> a r:Inference;
  r:gives {
    "queens([1-f(7-some4,2-2,some1-some5,some3-some6,6-1,8-3,some7-6,some8-some0),2-f(3-2,7-some5,2-some6,some1-1,some3-3,6-6,8-some0,some7-4),3-f(4-some5,3-some6,7-1,2-3,some1-6,some3-some0,6-4,8-8),4-f(5-some6,4-1,3-3,7-6,2-some0,some1-4,some3-8,6-some2),6-f(some9-3,1-6,5-some0,4-4,3-8,7-some2,2-5,some1-7),7-f(some10-6,some9-some0,1-4,5-8,4-some2,3-5,7-7,2-some11),8-f(some12-some0,some10-4,some9-8,1-some2,5-5,4-7,3-some11,7-some13)],1,[1,4,6,8,2,7,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(1-f(7-some0,2-2,some1-some2,some3-some4,6-1,8-3,some5-6,some6-some7),[1-f(7-some0,2-2,some1-some2,some3-some4,6-1,8-3,some5-6,some6-some7),2-f(3-2,7-some2,2-some4,some1-1,some3-3,6-6,8-some7,some5-4),3-f(4-some2,3-some4,7-1,2-3,some1-6,some3-some7,6-4,8-8),4-f(5-some4,4-1,3-3,7-6,2-some7,some1-4,some3-8,6-some8),6-f(some9-3,1-6,5-some7,4-4,3-8,7-some8,2-5,some1-7),7-f(some10-6,some9-some7,1-4,5-8,4-some8,3-5,7-7,2-some11),8-f(some12-some7,some10-4,some9-8,1-some8,5-5,4-7,3-some11,7-some13)],[2-f(3-2,7-some2,2-some4,some1-1,some3-3,6-6,8-some7,some5-4),3-f(4-some2,3-some4,7-1,2-3,some1-6,some3-some7,6-4,8-8),4-f(5-some4,4-1,3-3,7-6,2-some7,some1-4,some3-8,6-some8),6-f(some9-3,1-6,5-some7,4-4,3-8,7-some8,2-5,some1-7),7-f(some10-6,some9-some7,1-4,5-8,4-some8,3-5,7-7,2-some11),8-f(some12-some7,some10-4,some9-8,1-some8,5-5,4-7,3-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(7-some0,2-2,some1-some2,some3-some4,6-1,8-3,some5-6,some6-some7),2-2)"}]
    <#lemma513>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_326 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_326.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma419> a r:Inference;
  r:gives {
    "queens([1-f(4-some4,2-2,8-some5,5-some6,7-1,some7-5,some8-4,some9-some2),2-f(6-2,4-some5,2-some6,8-1,5-5,7-4,some7-some2,some8-7),3-f(some1-some5,6-some6,4-1,2-5,8-4,5-some2,7-7,some7-3),4-f(some0-some6,some1-1,6-5,4-4,2-some2,8-7,5-3,7-some3),6-f(3-5,1-4,some0-some2,some1-7,6-3,4-some3,2-6,8-8),7-f(some10-4,3-some2,1-7,some0-3,some1-some3,6-6,4-8,2-some11),8-f(some12-some2,some10-7,3-3,1-some3,some0-6,some1-8,6-some11,4-some13)],1,[1,8,4,2,7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(1-f(4-some0,2-2,8-some1,5-some2,7-1,some3-5,some4-4,some5-some6),[1-f(4-some0,2-2,8-some1,5-some2,7-1,some3-5,some4-4,some5-some6),2-f(6-2,4-some1,2-some2,8-1,5-5,7-4,some3-some6,some4-7),3-f(some7-some1,6-some2,4-1,2-5,8-4,5-some6,7-7,some3-3),4-f(some8-some2,some7-1,6-5,4-4,2-some6,8-7,5-3,7-some9),6-f(3-5,1-4,some8-some6,some7-7,6-3,4-some9,2-6,8-8),7-f(some10-4,3-some6,1-7,some8-3,some7-some9,6-6,4-8,2-some11),8-f(some12-some6,some10-7,3-3,1-some9,some8-6,some7-8,6-some11,4-some13)],[2-f(6-2,4-some1,2-some2,8-1,5-5,7-4,some3-some6,some4-7),3-f(some7-some1,6-some2,4-1,2-5,8-4,5-some6,7-7,some3-3),4-f(some8-some2,some7-1,6-5,4-4,2-some6,8-7,5-3,7-some9),6-f(3-5,1-4,some8-some6,some7-7,6-3,4-some9,2-6,8-8),7-f(some10-4,3-some6,1-7,some8-3,some7-some9,6-6,4-8,2-some11),8-f(some12-some6,some10-7,3-3,1-some9,some8-6,some7-8,6-some11,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(4-some0,2-2,8-some1,5-some2,7-1,some3-5,some4-4,some5-some6),2-2)"}]
    <#lemma514>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_327 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_327.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma420> a r:Inference;
  r:gives {
    "queens([1-f(some2-some4,2-2,5-some5,some3-some6,8-1,7-some1,some7-5,some8-7),2-f(6-2,some2-some5,2-some6,5-1,some3-some1,8-5,7-7,some7-4),3-f(4-some5,6-some6,some2-1,2-some1,5-5,some3-7,8-4,7-3),4-f(some0-some6,4-1,6-some1,some2-5,2-7,5-4,some3-3,8-8),6-f(3-some1,1-5,some0-7,4-4,6-3,some2-8,2-6,5-some9),7-f(some10-5,3-7,1-4,some0-3,4-8,6-6,some2-some9,2-some11),8-f(some12-7,some10-4,3-3,1-8,some0-6,4-some9,6-some11,some2-some13)],1,[1,8,6,3,7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,2-2,5-some2,some3-some4,8-1,7-some5,some6-5,some7-7),[1-f(some0-some1,2-2,5-some2,some3-some4,8-1,7-some5,some6-5,some7-7),2-f(6-2,some0-some2,2-some4,5-1,some3-some5,8-5,7-7,some6-4),3-f(4-some2,6-some4,some0-1,2-some5,5-5,some3-7,8-4,7-3),4-f(some8-some4,4-1,6-some5,some0-5,2-7,5-4,some3-3,8-8),6-f(3-some5,1-5,some8-7,4-4,6-3,some0-8,2-6,5-some9),7-f(some10-5,3-7,1-4,some8-3,4-8,6-6,some0-some9,2-some11),8-f(some12-7,some10-4,3-3,1-8,some8-6,4-some9,6-some11,some0-some13)],[2-f(6-2,some0-some2,2-some4,5-1,some3-some5,8-5,7-7,some6-4),3-f(4-some2,6-some4,some0-1,2-some5,5-5,some3-7,8-4,7-3),4-f(some8-some4,4-1,6-some5,some0-5,2-7,5-4,some3-3,8-8),6-f(3-some5,1-5,some8-7,4-4,6-3,some0-8,2-6,5-some9),7-f(some10-5,3-7,1-4,some8-3,4-8,6-6,some0-some9,2-some11),8-f(some12-7,some10-4,3-3,1-8,some8-6,4-some9,6-some11,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-some1,2-2,5-some2,some3-some4,8-1,7-some5,some6-5,some7-7),2-2)"}]
    <#lemma515>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_328 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_328.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma421> a r:Inference;
  r:gives {
    "queens([1-f(2-some3,8-some4,some1-2,6-some5,some6-1,some7-3,7-7,some8-6),2-f(3-some4,2-2,8-some5,some1-1,6-3,some6-7,some7-6,7-4),3-f(4-2,3-some5,2-1,8-3,some1-7,6-6,some6-4,some7-some0),4-f(5-some5,4-1,3-3,2-7,8-6,some1-4,6-some0,some6-some2),6-f(some9-3,1-7,5-6,4-4,3-some0,2-some2,8-5,some1-some10),7-f(some11-7,some9-6,1-4,5-some0,4-some2,3-5,2-some10,8-8),8-f(some12-6,some11-4,some9-some0,1-some2,5-5,4-some10,3-8,2-some13)],1,[2,4,6,8,3,1,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(2-f(3-some0,2-2,8-some1,some2-1,6-3,some3-7,some4-6,7-4),[1-f(2-some5,8-some0,some2-2,6-some1,some3-1,some4-3,7-7,some6-6),2-f(3-some0,2-2,8-some1,some2-1,6-3,some3-7,some4-6,7-4),3-f(4-2,3-some1,2-1,8-3,some2-7,6-6,some3-4,some4-some7),4-f(5-some1,4-1,3-3,2-7,8-6,some2-4,6-some7,some3-some8),6-f(some9-3,1-7,5-6,4-4,3-some7,2-some8,8-5,some2-some10),7-f(some11-7,some9-6,1-4,5-some7,4-some8,3-5,2-some10,8-8),8-f(some12-6,some11-4,some9-some7,1-some8,5-5,4-some10,3-8,2-some13)],[1-f(2-some5,8-some0,some2-2,6-some1,some3-1,some4-3,7-7,some6-6),3-f(4-2,3-some1,2-1,8-3,some2-7,6-6,some3-4,some4-some7),4-f(5-some1,4-1,3-3,2-7,8-6,some2-4,6-some7,some3-some8),6-f(some9-3,1-7,5-6,4-4,3-some7,2-some8,8-5,some2-some10),7-f(some11-7,some9-6,1-4,5-some7,4-some8,3-5,2-some10,8-8),8-f(some12-6,some11-4,some9-some7,1-some8,5-5,4-some10,3-8,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-some0,2-2,8-some1,some2-1,6-3,some3-7,some4-6,7-4),2-2)"}]
    <#lemma516>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_329 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_329.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma422> a r:Inference;
  r:gives {
    "queens([1-f(2-some3,7-some4,5-2,some2-some5,some6-1,some7-3,some8-5,8-8),2-f(3-some4,2-2,7-some5,5-1,some2-3,some6-5,some7-8,some8-some0),3-f(6-2,3-some5,2-1,7-3,5-5,some2-8,some6-some0,some7-4),4-f(4-some5,6-1,3-3,2-5,7-8,5-some0,some2-4,some6-some1),6-f(some9-3,1-5,4-8,6-some0,3-4,2-some1,7-7,5-6),7-f(some10-5,some9-8,1-some0,4-4,6-some1,3-7,2-6,7-some11),8-f(some12-8,some10-some0,some9-4,1-some1,4-7,6-6,3-some11,2-some13)],1,[2,4,7,3,8,6,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(2-f(3-some0,2-2,7-some1,5-1,some2-3,some3-5,some4-8,some5-some6),[1-f(2-some7,7-some0,5-2,some2-some1,some3-1,some4-3,some5-5,8-8),2-f(3-some0,2-2,7-some1,5-1,some2-3,some3-5,some4-8,some5-some6),3-f(6-2,3-some1,2-1,7-3,5-5,some2-8,some3-some6,some4-4),4-f(4-some1,6-1,3-3,2-5,7-8,5-some6,some2-4,some3-some8),6-f(some9-3,1-5,4-8,6-some6,3-4,2-some8,7-7,5-6),7-f(some10-5,some9-8,1-some6,4-4,6-some8,3-7,2-6,7-some11),8-f(some12-8,some10-some6,some9-4,1-some8,4-7,6-6,3-some11,2-some13)],[1-f(2-some7,7-some0,5-2,some2-some1,some3-1,some4-3,some5-5,8-8),3-f(6-2,3-some1,2-1,7-3,5-5,some2-8,some3-some6,some4-4),4-f(4-some1,6-1,3-3,2-5,7-8,5-some6,some2-4,some3-some8),6-f(some9-3,1-5,4-8,6-some6,3-4,2-some8,7-7,5-6),7-f(some10-5,some9-8,1-some6,4-4,6-some8,3-7,2-6,7-some11),8-f(some12-8,some10-some6,some9-4,1-some8,4-7,6-6,3-some11,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-some0,2-2,7-some1,5-1,some2-3,some3-5,some4-8,some5-some6),2-2)"}]
    <#lemma517>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_330 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_330.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma423> a r:Inference;
  r:gives {
    "queens([1-f(2-some4,some2-some5,6-2,4-4,some6-1,8-some0,some7-some1,some8-3),2-f(7-some5,2-2,some2-4,6-1,4-some0,some6-some1,8-3,some7-6),3-f(5-2,7-4,2-1,some2-some0,6-some1,4-3,some6-6,8-8),4-f(3-4,5-1,7-some0,2-some1,some2-3,6-6,4-8,some6-5),6-f(some9-some0,1-some1,3-3,5-6,7-8,2-5,some2-some3,6-some10),7-f(some11-some1,some9-3,1-6,3-8,5-5,7-some3,2-some10,some2-7),8-f(some12-3,some11-6,some9-8,1-5,3-some3,5-some10,7-7,2-some13)],1,[2,6,1,7,4,8,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(2-f(7-some0,2-2,some1-4,6-1,4-some2,some3-some4,8-3,some5-6),[1-f(2-some6,some1-some0,6-2,4-4,some3-1,8-some2,some5-some4,some7-3),2-f(7-some0,2-2,some1-4,6-1,4-some2,some3-some4,8-3,some5-6),3-f(5-2,7-4,2-1,some1-some2,6-some4,4-3,some3-6,8-8),4-f(3-4,5-1,7-some2,2-some4,some1-3,6-6,4-8,some3-5),6-f(some8-some2,1-some4,3-3,5-6,7-8,2-5,some1-some9,6-some10),7-f(some11-some4,some8-3,1-6,3-8,5-5,7-some9,2-some10,some1-7),8-f(some12-3,some11-6,some8-8,1-5,3-some9,5-some10,7-7,2-some13)],[1-f(2-some6,some1-some0,6-2,4-4,some3-1,8-some2,some5-some4,some7-3),3-f(5-2,7-4,2-1,some1-some2,6-some4,4-3,some3-6,8-8),4-f(3-4,5-1,7-some2,2-some4,some1-3,6-6,4-8,some3-5),6-f(some8-some2,1-some4,3-3,5-6,7-8,2-5,some1-some9,6-some10),7-f(some11-some4,some8-3,1-6,3-8,5-5,7-some9,2-some10,some1-7),8-f(some12-3,some11-6,some8-8,1-5,3-some9,5-some10,7-7,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(7-some0,2-2,some1-4,6-1,4-some2,some3-some4,8-3,some5-6),2-2)"}]
    <#lemma518>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_331 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_331.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma424> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,5-some6,8-2,4-4,7-1,some7-some1,some8-some3,some9-5),2-f(6-some6,2-2,5-4,8-1,4-some1,7-some3,some7-5,some8-7),3-f(some2-2,6-4,2-1,5-some1,8-some3,4-5,7-7,some7-3),4-f(some0-4,some2-1,6-some1,2-some3,5-5,8-7,4-3,7-some4),6-f(3-some1,1-some3,some0-5,some2-7,6-3,2-some4,5-6,8-8),7-f(some10-some3,3-5,1-7,some0-3,some2-some4,6-6,2-8,5-some11),8-f(some12-5,some10-7,3-3,1-some4,some0-6,some2-8,6-some11,2-some13)],1,[2,8,1,4,7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(2-f(6-some0,2-2,5-4,8-1,4-some1,7-some2,some3-5,some4-7),[1-f(2-some5,5-some0,8-2,4-4,7-1,some3-some1,some4-some2,some6-5),2-f(6-some0,2-2,5-4,8-1,4-some1,7-some2,some3-5,some4-7),3-f(some7-2,6-4,2-1,5-some1,8-some2,4-5,7-7,some3-3),4-f(some8-4,some7-1,6-some1,2-some2,5-5,8-7,4-3,7-some9),6-f(3-some1,1-some2,some8-5,some7-7,6-3,2-some9,5-6,8-8),7-f(some10-some2,3-5,1-7,some8-3,some7-some9,6-6,2-8,5-some11),8-f(some12-5,some10-7,3-3,1-some9,some8-6,some7-8,6-some11,2-some13)],[1-f(2-some5,5-some0,8-2,4-4,7-1,some3-some1,some4-some2,some6-5),3-f(some7-2,6-4,2-1,5-some1,8-some2,4-5,7-7,some3-3),4-f(some8-4,some7-1,6-some1,2-some2,5-5,8-7,4-3,7-some9),6-f(3-some1,1-some2,some8-5,some7-7,6-3,2-some9,5-6,8-8),7-f(some10-some2,3-5,1-7,some8-3,some7-some9,6-6,2-8,5-some11),8-f(some12-5,some10-7,3-3,1-some9,some8-6,some7-8,6-some11,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(6-some0,2-2,5-4,8-1,4-some1,7-some2,some3-5,some4-7),2-2)"}]
    <#lemma519>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_332 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_332.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma425> a r:Inference;
  r:gives {
    "queens([1-f(some2-some4,8-some5,3-3,7-2,6-1,some6-some0,some7-6,some8-some1),2-f(2-some5,some2-3,8-2,3-1,7-some0,6-6,some6-some1,some7-4),3-f(4-3,2-2,some2-1,8-some0,3-6,7-some1,6-4,some6-7),4-f(5-2,4-1,2-some0,some2-6,8-some1,3-4,7-7,6-some3),6-f(some9-some0,1-6,5-some1,4-4,2-7,some2-some3,8-5,3-some10),7-f(some11-6,some9-some1,1-4,5-7,4-some3,2-5,some2-some10,8-8),8-f(some12-some1,some11-4,some9-7,1-some3,5-5,4-some10,2-8,some2-some13)],1,[3,1,6,8,2,4,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(3-f(4-3,2-2,some0-1,8-some1,3-6,7-some2,6-4,some3-7),[1-f(some0-some4,8-some5,3-3,7-2,6-1,some3-some1,some6-6,some7-some2),2-f(2-some5,some0-3,8-2,3-1,7-some1,6-6,some3-some2,some6-4),3-f(4-3,2-2,some0-1,8-some1,3-6,7-some2,6-4,some3-7),4-f(5-2,4-1,2-some1,some0-6,8-some2,3-4,7-7,6-some8),6-f(some9-some1,1-6,5-some2,4-4,2-7,some0-some8,8-5,3-some10),7-f(some11-6,some9-some2,1-4,5-7,4-some8,2-5,some0-some10,8-8),8-f(some12-some2,some11-4,some9-7,1-some8,5-5,4-some10,2-8,some0-some13)],[1-f(some0-some4,8-some5,3-3,7-2,6-1,some3-some1,some6-6,some7-some2),2-f(2-some5,some0-3,8-2,3-1,7-some1,6-6,some3-some2,some6-4),4-f(5-2,4-1,2-some1,some0-6,8-some2,3-4,7-7,6-some8),6-f(some9-some1,1-6,5-some2,4-4,2-7,some0-some8,8-5,3-some10),7-f(some11-6,some9-some2,1-4,5-7,4-some8,2-5,some0-some10,8-8),8-f(some12-some2,some11-4,some9-7,1-some8,5-5,4-some10,2-8,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(4-3,2-2,some0-1,8-some1,3-6,7-some2,6-4,some3-7),2-2)"}]
    <#lemma520>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_333 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_333.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma426> a r:Inference;
  r:gives {
    "queens([1-f(some2-some4,7-some5,3-3,5-2,8-1,some6-5,some7-some0,some8-some1),2-f(2-some5,some2-3,7-2,3-1,5-5,8-some0,some6-some1,some7-some3),3-f(6-3,2-2,some2-1,7-5,3-some0,5-some1,8-some3,some6-4),4-f(4-2,6-1,2-5,some2-some0,7-some1,3-some3,5-4,8-8),6-f(some9-5,1-some0,4-some1,6-some3,2-4,some2-8,7-7,3-6),7-f(some10-some0,some9-some1,1-some3,4-4,6-8,2-7,some2-6,7-some11),8-f(some12-some1,some10-some3,some9-4,1-8,4-7,6-6,2-some11,some2-some13)],1,[3,1,7,2,8,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(3-f(6-3,2-2,some0-1,7-5,3-some1,5-some2,8-some3,some4-4),[1-f(some0-some5,7-some6,3-3,5-2,8-1,some4-5,some7-some1,some8-some2),2-f(2-some6,some0-3,7-2,3-1,5-5,8-some1,some4-some2,some7-some3),3-f(6-3,2-2,some0-1,7-5,3-some1,5-some2,8-some3,some4-4),4-f(4-2,6-1,2-5,some0-some1,7-some2,3-some3,5-4,8-8),6-f(some9-5,1-some1,4-some2,6-some3,2-4,some0-8,7-7,3-6),7-f(some10-some1,some9-some2,1-some3,4-4,6-8,2-7,some0-6,7-some11),8-f(some12-some2,some10-some3,some9-4,1-8,4-7,6-6,2-some11,some0-some13)],[1-f(some0-some5,7-some6,3-3,5-2,8-1,some4-5,some7-some1,some8-some2),2-f(2-some6,some0-3,7-2,3-1,5-5,8-some1,some4-some2,some7-some3),4-f(4-2,6-1,2-5,some0-some1,7-some2,3-some3,5-4,8-8),6-f(some9-5,1-some1,4-some2,6-some3,2-4,some0-8,7-7,3-6),7-f(some10-some1,some9-some2,1-some3,4-4,6-8,2-7,some0-6,7-some11),8-f(some12-some2,some10-some3,some9-4,1-8,4-7,6-6,2-some11,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(6-3,2-2,some0-1,7-5,3-some1,5-some2,8-some3,some4-4),2-2)"}]
    <#lemma521>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_334 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_334.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma427> a r:Inference;
  r:gives {
    "queens([1-f(4-some4,7-some5,some2-some6,some3-2,some7-1,6-6,8-4,some8-some1),2-f(2-some5,4-some6,7-2,some2-1,some3-6,some7-4,6-some1,8-8),3-f(5-some6,2-2,4-1,7-6,some2-4,some3-some1,some7-8,6-3),4-f(some0-2,5-1,2-6,4-4,7-some1,some2-8,some3-3,some7-5),6-f(3-6,1-4,some0-some1,5-8,2-3,4-5,7-7,some2-some9),7-f(some10-4,3-some1,1-8,some0-3,5-5,2-7,4-some9,7-some11),8-f(some12-some1,some10-8,3-3,1-5,some0-7,5-some9,2-some11,4-some13)],1,[3,8,4,7,1,6,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(3-f(5-some0,2-2,4-1,7-6,some1-4,some2-some3,some4-8,6-3),[1-f(4-some5,7-some6,some1-some0,some2-2,some4-1,6-6,8-4,some7-some3),2-f(2-some6,4-some0,7-2,some1-1,some2-6,some4-4,6-some3,8-8),3-f(5-some0,2-2,4-1,7-6,some1-4,some2-some3,some4-8,6-3),4-f(some8-2,5-1,2-6,4-4,7-some3,some1-8,some2-3,some4-5),6-f(3-6,1-4,some8-some3,5-8,2-3,4-5,7-7,some1-some9),7-f(some10-4,3-some3,1-8,some8-3,5-5,2-7,4-some9,7-some11),8-f(some12-some3,some10-8,3-3,1-5,some8-7,5-some9,2-some11,4-some13)],[1-f(4-some5,7-some6,some1-some0,some2-2,some4-1,6-6,8-4,some7-some3),2-f(2-some6,4-some0,7-2,some1-1,some2-6,some4-4,6-some3,8-8),4-f(some8-2,5-1,2-6,4-4,7-some3,some1-8,some2-3,some4-5),6-f(3-6,1-4,some8-some3,5-8,2-3,4-5,7-7,some1-some9),7-f(some10-4,3-some3,1-8,some8-3,5-5,2-7,4-some9,7-some11),8-f(some12-some3,some10-8,3-3,1-5,some8-7,5-some9,2-some11,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(5-some0,2-2,4-1,7-6,some1-4,some2-some3,some4-8,6-3),2-2)"}]
    <#lemma522>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_335 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_335.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma428> a r:Inference;
  r:gives {
    "queens([1-f(6-some3,4-some4,3-3,7-some5,some6-1,some7-4,8-some1,some8-2),2-f(some2-some4,6-3,4-some5,3-1,7-4,some6-some1,some7-2,8-8),3-f(some0-3,some2-some5,6-1,4-4,3-some1,7-2,some6-8,some7-7),4-f(5-some5,some0-1,some2-4,6-some1,4-2,3-8,7-7,some6-6),6-f(2-4,1-some1,5-2,some0-8,some2-7,6-6,4-5,3-some9),7-f(some10-some1,2-2,1-8,5-7,some0-6,some2-5,6-some9,4-some11),8-f(some12-2,some10-8,2-7,1-6,5-5,some0-some9,some2-some11,6-some13)],1,[7,1,3,8,6,4,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(7-f(some0-some1,2-2,1-8,5-7,some2-6,some3-5,6-some4,4-some5),[1-f(6-some6,4-some7,3-3,7-some8,some9-1,some10-4,8-some1,some11-2),2-f(some3-some7,6-3,4-some8,3-1,7-4,some9-some1,some10-2,8-8),3-f(some2-3,some3-some8,6-1,4-4,3-some1,7-2,some9-8,some10-7),4-f(5-some8,some2-1,some3-4,6-some1,4-2,3-8,7-7,some9-6),6-f(2-4,1-some1,5-2,some2-8,some3-7,6-6,4-5,3-some4),7-f(some0-some1,2-2,1-8,5-7,some2-6,some3-5,6-some4,4-some5),8-f(some12-2,some0-8,2-7,1-6,5-5,some2-some4,some3-some5,6-some13)],[1-f(6-some6,4-some7,3-3,7-some8,some9-1,some10-4,8-some1,some11-2),2-f(some3-some7,6-3,4-some8,3-1,7-4,some9-some1,some10-2,8-8),3-f(some2-3,some3-some8,6-1,4-4,3-some1,7-2,some9-8,some10-7),4-f(5-some8,some2-1,some3-4,6-some1,4-2,3-8,7-7,some9-6),6-f(2-4,1-some1,5-2,some2-8,some3-7,6-6,4-5,3-some4),8-f(some12-2,some0-8,2-7,1-6,5-5,some2-some4,some3-some5,6-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-some1,2-2,1-8,5-7,some2-6,some3-5,6-some4,4-some5),2-2)"}]
    <#lemma523>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_336 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_336.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma429> a r:Inference;
  r:gives {
    "queens([1-f(4-some4,7-some5,3-3,5-some6,some7-1,8-5,some8-4,some9-2),2-f(some1-some5,4-3,7-some6,3-1,5-5,some7-4,8-2,some8-some2),3-f(6-3,some1-some6,4-1,7-5,3-4,5-2,some7-some2,8-8),4-f(some0-some6,6-1,some1-5,4-4,7-2,3-some2,5-8,some7-some3),6-f(2-5,1-4,some0-2,6-some2,some1-8,4-some3,7-7,3-6),7-f(some10-4,2-2,1-some2,some0-8,6-some3,some1-7,4-6,7-some11),8-f(some12-2,some10-some2,2-8,1-some3,some0-7,6-6,some1-some11,4-some13)],1,[7,1,4,2,8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(7-f(some0-4,2-2,1-some1,some2-8,6-some3,some4-7,4-6,7-some5),[1-f(4-some6,7-some7,3-3,5-some8,some9-1,8-5,some10-4,some11-2),2-f(some4-some7,4-3,7-some8,3-1,5-5,some9-4,8-2,some10-some1),3-f(6-3,some4-some8,4-1,7-5,3-4,5-2,some9-some1,8-8),4-f(some2-some8,6-1,some4-5,4-4,7-2,3-some1,5-8,some9-some3),6-f(2-5,1-4,some2-2,6-some1,some4-8,4-some3,7-7,3-6),7-f(some0-4,2-2,1-some1,some2-8,6-some3,some4-7,4-6,7-some5),8-f(some12-2,some0-some1,2-8,1-some3,some2-7,6-6,some4-some5,4-some13)],[1-f(4-some6,7-some7,3-3,5-some8,some9-1,8-5,some10-4,some11-2),2-f(some4-some7,4-3,7-some8,3-1,5-5,some9-4,8-2,some10-some1),3-f(6-3,some4-some8,4-1,7-5,3-4,5-2,some9-some1,8-8),4-f(some2-some8,6-1,some4-5,4-4,7-2,3-some1,5-8,some9-some3),6-f(2-5,1-4,some2-2,6-some1,some4-8,4-some3,7-7,3-6),8-f(some12-2,some0-some1,2-8,1-some3,some2-7,6-6,some4-some5,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-4,2-2,1-some1,some2-8,6-some3,some4-7,4-6,7-some5),2-2)"}]
    <#lemma524>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_337 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_337.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma430> a r:Inference;
  r:gives {
    "queens([1-f(4-some5,3-some6,8-some7,some4-3,7-1,6-6,some8-4,some9-2),2-f(some1-some6,4-some7,3-3,8-1,some4-6,7-4,6-2,some8-7),3-f(some0-some7,some1-3,4-1,3-6,8-4,some4-2,7-7,6-some2),4-f(5-3,some0-1,some1-6,4-4,3-2,8-7,some4-some2,7-some3),6-f(2-6,1-4,5-2,some0-7,some1-some2,4-some3,3-5,8-8),7-f(some10-4,2-2,1-7,5-some2,some0-some3,some1-5,4-8,3-some11),8-f(some12-2,some10-7,2-some2,1-some3,5-5,some0-8,some1-some11,4-some13)],1,[7,2,4,8,1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(7-f(some0-4,2-2,1-7,5-some1,some2-some3,some4-5,4-8,3-some5),[1-f(4-some6,3-some7,8-some8,some9-3,7-1,6-6,some10-4,some11-2),2-f(some4-some7,4-some8,3-3,8-1,some9-6,7-4,6-2,some10-7),3-f(some2-some8,some4-3,4-1,3-6,8-4,some9-2,7-7,6-some1),4-f(5-3,some2-1,some4-6,4-4,3-2,8-7,some9-some1,7-some3),6-f(2-6,1-4,5-2,some2-7,some4-some1,4-some3,3-5,8-8),7-f(some0-4,2-2,1-7,5-some1,some2-some3,some4-5,4-8,3-some5),8-f(some12-2,some0-7,2-some1,1-some3,5-5,some2-8,some4-some5,4-some13)],[1-f(4-some6,3-some7,8-some8,some9-3,7-1,6-6,some10-4,some11-2),2-f(some4-some7,4-some8,3-3,8-1,some9-6,7-4,6-2,some10-7),3-f(some2-some8,some4-3,4-1,3-6,8-4,some9-2,7-7,6-some1),4-f(5-3,some2-1,some4-6,4-4,3-2,8-7,some9-some1,7-some3),6-f(2-6,1-4,5-2,some2-7,some4-some1,4-some3,3-5,8-8),8-f(some12-2,some0-7,2-some1,1-some3,5-5,some2-8,some4-some5,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-4,2-2,1-7,5-some1,some2-some3,some4-5,4-8,3-some5),2-2)"}]
    <#lemma525>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_338 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_338.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma431> a r:Inference;
  r:gives {
    "queens([1-f(8-some4,3-some5,5-some6,7-3,some7-1,6-6,some8-5,some9-2),2-f(some1-some5,8-some6,3-3,5-1,7-6,some7-5,6-2,some8-4),3-f(4-some6,some1-3,8-1,3-6,5-5,7-2,some7-4,6-7),4-f(some0-3,4-1,some1-6,8-5,3-2,5-4,7-7,some7-some2),6-f(2-6,1-5,some0-2,4-4,some1-7,8-some2,3-some3,5-some10),7-f(some11-5,2-2,1-4,some0-7,4-some2,some1-some3,8-some10,3-some12),8-f(some13-2,some11-4,2-7,1-some2,some0-some3,4-some10,some1-some12,8-8)],1,[7,2,6,3,1,4,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(7-f(some0-5,2-2,1-4,some1-7,4-some2,some3-some4,8-some5,3-some6),[1-f(8-some7,3-some8,5-some9,7-3,some10-1,6-6,some11-5,some12-2),2-f(some3-some8,8-some9,3-3,5-1,7-6,some10-5,6-2,some11-4),3-f(4-some9,some3-3,8-1,3-6,5-5,7-2,some10-4,6-7),4-f(some1-3,4-1,some3-6,8-5,3-2,5-4,7-7,some10-some2),6-f(2-6,1-5,some1-2,4-4,some3-7,8-some2,3-some4,5-some5),7-f(some0-5,2-2,1-4,some1-7,4-some2,some3-some4,8-some5,3-some6),8-f(some13-2,some0-4,2-7,1-some2,some1-some4,4-some5,some3-some6,8-8)],[1-f(8-some7,3-some8,5-some9,7-3,some10-1,6-6,some11-5,some12-2),2-f(some3-some8,8-some9,3-3,5-1,7-6,some10-5,6-2,some11-4),3-f(4-some9,some3-3,8-1,3-6,5-5,7-2,some10-4,6-7),4-f(some1-3,4-1,some3-6,8-5,3-2,5-4,7-7,some10-some2),6-f(2-6,1-5,some1-2,4-4,some3-7,8-some2,3-some4,5-some5),8-f(some13-2,some0-4,2-7,1-some2,some1-some4,4-some5,some3-some6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-5,2-2,1-4,some1-7,4-some2,some3-some4,8-some5,3-some6),2-2)"}]
    <#lemma526>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_339 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_339.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma432> a r:Inference;
  r:gives {
    "queens([1-f(some1-some5,3-some6,5-some7,some3-3,8-1,6-6,some8-5,some9-2),2-f(7-some6,some1-some7,3-3,5-1,some3-6,8-5,6-2,some8-4),3-f(4-some7,7-3,some1-1,3-6,5-5,some3-2,8-4,6-some2),4-f(some0-3,4-1,7-6,some1-5,3-2,5-4,some3-some2,8-8),6-f(2-6,1-5,some0-2,4-4,7-some2,some1-8,3-some4,5-some10),7-f(some11-5,2-2,1-4,some0-some2,4-8,7-some4,some1-some10,3-7),8-f(some12-2,some11-4,2-some2,1-8,some0-some4,4-some10,7-7,some1-some13)],1,[7,2,6,3,1,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(7-f(some0-5,2-2,1-4,some1-some2,4-8,7-some3,some4-some5,3-7),[1-f(some4-some6,3-some7,5-some8,some9-3,8-1,6-6,some10-5,some11-2),2-f(7-some7,some4-some8,3-3,5-1,some9-6,8-5,6-2,some10-4),3-f(4-some8,7-3,some4-1,3-6,5-5,some9-2,8-4,6-some2),4-f(some1-3,4-1,7-6,some4-5,3-2,5-4,some9-some2,8-8),6-f(2-6,1-5,some1-2,4-4,7-some2,some4-8,3-some3,5-some5),7-f(some0-5,2-2,1-4,some1-some2,4-8,7-some3,some4-some5,3-7),8-f(some12-2,some0-4,2-some2,1-8,some1-some3,4-some5,7-7,some4-some13)],[1-f(some4-some6,3-some7,5-some8,some9-3,8-1,6-6,some10-5,some11-2),2-f(7-some7,some4-some8,3-3,5-1,some9-6,8-5,6-2,some10-4),3-f(4-some8,7-3,some4-1,3-6,5-5,some9-2,8-4,6-some2),4-f(some1-3,4-1,7-6,some4-5,3-2,5-4,some9-some2,8-8),6-f(2-6,1-5,some1-2,4-4,7-some2,some4-8,3-some3,5-some5),8-f(some12-2,some0-4,2-some2,1-8,some1-some3,4-some5,7-7,some4-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-5,2-2,1-4,some1-some2,4-8,7-some3,some4-some5,3-7),2-2)"}]
    <#lemma527>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_340 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_340.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma433> a r:Inference;
  r:gives {
    "queens([1-f(some1-some4,7-some5,5-some6,4-4,some7-1,some8-3,8-5,some9-2),2-f(3-some5,some1-some6,7-4,5-1,4-3,some7-5,some8-2,8-8),3-f(6-some6,3-4,some1-1,7-3,5-5,4-2,some7-8,some8-some2),4-f(some0-4,6-1,3-3,some1-5,7-2,5-8,4-some2,some7-some3),6-f(2-3,1-5,some0-2,6-8,3-some2,some1-some3,7-7,5-6),7-f(some10-5,2-2,1-8,some0-some2,6-some3,3-7,some1-6,7-some11),8-f(some12-2,some10-8,2-some2,1-some3,some0-7,6-6,3-some11,some1-some13)],1,[7,4,1,3,8,6,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(7-f(some0-5,2-2,1-8,some1-some2,6-some3,3-7,some4-6,7-some5),[1-f(some4-some6,7-some7,5-some8,4-4,some9-1,some10-3,8-5,some11-2),2-f(3-some7,some4-some8,7-4,5-1,4-3,some9-5,some10-2,8-8),3-f(6-some8,3-4,some4-1,7-3,5-5,4-2,some9-8,some10-some2),4-f(some1-4,6-1,3-3,some4-5,7-2,5-8,4-some2,some9-some3),6-f(2-3,1-5,some1-2,6-8,3-some2,some4-some3,7-7,5-6),7-f(some0-5,2-2,1-8,some1-some2,6-some3,3-7,some4-6,7-some5),8-f(some12-2,some0-8,2-some2,1-some3,some1-7,6-6,3-some5,some4-some13)],[1-f(some4-some6,7-some7,5-some8,4-4,some9-1,some10-3,8-5,some11-2),2-f(3-some7,some4-some8,7-4,5-1,4-3,some9-5,some10-2,8-8),3-f(6-some8,3-4,some4-1,7-3,5-5,4-2,some9-8,some10-some2),4-f(some1-4,6-1,3-3,some4-5,7-2,5-8,4-some2,some9-some3),6-f(2-3,1-5,some1-2,6-8,3-some2,some4-some3,7-7,5-6),8-f(some12-2,some0-8,2-some2,1-some3,some1-7,6-6,3-some5,some4-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-5,2-2,1-8,some1-some2,6-some3,3-7,some4-6,7-some5),2-2)"}]
    <#lemma528>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_341 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_341.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma434> a r:Inference;
  r:gives {
    "queens([1-f(6-some4,8-some5,5-some6,4-4,some7-1,7-3,some8-5,some9-7),2-f(3-some5,6-some6,8-4,5-1,4-3,some7-5,7-7,some8-2),3-f(some1-some6,3-4,6-1,8-3,5-5,4-7,some7-2,7-some2),4-f(some0-4,some1-1,3-3,6-5,8-7,5-2,4-some2,some7-6),6-f(some10-3,1-5,some0-7,some1-2,3-some2,6-6,8-some3,5-some11),7-f(2-5,some10-7,1-2,some0-some2,some1-6,3-some3,6-some11,8-8),8-f(some12-7,2-2,some10-some2,1-6,some0-some3,some1-some11,3-8,6-some13)],1,[8,4,1,3,6,2,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(8-f(some0-7,2-2,some1-some2,1-6,some3-some4,some5-some6,3-8,6-some7),[1-f(6-some8,8-some9,5-some10,4-4,some11-1,7-3,some12-5,some13-7),2-f(3-some9,6-some10,8-4,5-1,4-3,some11-5,7-7,some12-2),3-f(some5-some10,3-4,6-1,8-3,5-5,4-7,some11-2,7-some2),4-f(some3-4,some5-1,3-3,6-5,8-7,5-2,4-some2,some11-6),6-f(some1-3,1-5,some3-7,some5-2,3-some2,6-6,8-some4,5-some6),7-f(2-5,some1-7,1-2,some3-some2,some5-6,3-some4,6-some6,8-8),8-f(some0-7,2-2,some1-some2,1-6,some3-some4,some5-some6,3-8,6-some7)],[1-f(6-some8,8-some9,5-some10,4-4,some11-1,7-3,some12-5,some13-7),2-f(3-some9,6-some10,8-4,5-1,4-3,some11-5,7-7,some12-2),3-f(some5-some10,3-4,6-1,8-3,5-5,4-7,some11-2,7-some2),4-f(some3-4,some5-1,3-3,6-5,8-7,5-2,4-some2,some11-6),6-f(some1-3,1-5,some3-7,some5-2,3-some2,6-6,8-some4,5-some6),7-f(2-5,some1-7,1-2,some3-some2,some5-6,3-some4,6-some6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-7,2-2,some1-some2,1-6,some3-some4,some5-some6,3-8,6-some7),2-2)"}]
    <#lemma529>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_342 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_342.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma435> a r:Inference;
  r:gives {
    "queens([1-f(some2-some4,7-some5,some3-some6,4-4,6-1,8-3,some7-6,some8-some1),2-f(3-some5,some2-some6,7-4,some3-1,4-3,6-6,8-some1,some7-2),3-f(5-some6,3-4,some2-1,7-3,some3-6,4-some1,6-2,8-8),4-f(some0-4,5-1,3-3,some2-6,7-some1,some3-2,4-8,6-5),6-f(some9-3,1-6,some0-some1,5-2,3-8,some2-5,7-7,some3-some10),7-f(2-6,some9-some1,1-2,some0-8,5-5,3-7,some2-some10,7-some11),8-f(some12-some1,2-2,some9-8,1-5,some0-7,5-some10,3-some11,some2-some13)],1,[8,4,1,7,2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,2-2,some2-8,1-5,some3-7,5-some4,3-some5,some6-some7),[1-f(some6-some8,7-some9,some10-some11,4-4,6-1,8-3,some12-6,some13-some1),2-f(3-some9,some6-some11,7-4,some10-1,4-3,6-6,8-some1,some12-2),3-f(5-some11,3-4,some6-1,7-3,some10-6,4-some1,6-2,8-8),4-f(some3-4,5-1,3-3,some6-6,7-some1,some10-2,4-8,6-5),6-f(some2-3,1-6,some3-some1,5-2,3-8,some6-5,7-7,some10-some4),7-f(2-6,some2-some1,1-2,some3-8,5-5,3-7,some6-some4,7-some5),8-f(some0-some1,2-2,some2-8,1-5,some3-7,5-some4,3-some5,some6-some7)],[1-f(some6-some8,7-some9,some10-some11,4-4,6-1,8-3,some12-6,some13-some1),2-f(3-some9,some6-some11,7-4,some10-1,4-3,6-6,8-some1,some12-2),3-f(5-some11,3-4,some6-1,7-3,some10-6,4-some1,6-2,8-8),4-f(some3-4,5-1,3-3,some6-6,7-some1,some10-2,4-8,6-5),6-f(some2-3,1-6,some3-some1,5-2,3-8,some6-5,7-7,some10-some4),7-f(2-6,some2-some1,1-2,some3-8,5-5,3-7,some6-some4,7-some5)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-some1,2-2,some2-8,1-5,some3-7,5-some4,3-some5,some6-some7),2-2)"}]
    <#lemma530>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_343 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_343.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma436> a r:Inference;
  r:gives {
    "queens([1-f(7-some4,2-2,4-some5,6-some6,8-4,some7-1,some8-3,some9-6),2-f(some2-2,7-some5,2-some6,4-4,6-1,8-3,some7-6,some8-some1),3-f(3-some5,some2-some6,7-4,2-1,4-3,6-6,8-some1,some7-some3),4-f(5-some6,3-4,some2-1,7-3,2-6,4-some1,6-some3,8-8),5-f(some0-4,5-1,3-3,some2-6,7-some1,2-some3,4-8,6-5),7-f(some10-3,1-6,some0-some1,5-some3,3-8,some2-5,7-7,2-some11),8-f(some12-6,some10-some1,1-some3,some0-8,5-5,3-7,some2-some11,7-some13)],1,[1,5,2,8,3,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(1-f(7-some0,2-2,4-some1,6-some2,8-4,some3-1,some4-3,some5-6),[1-f(7-some0,2-2,4-some1,6-some2,8-4,some3-1,some4-3,some5-6),2-f(some6-2,7-some1,2-some2,4-4,6-1,8-3,some3-6,some4-some7),3-f(3-some1,some6-some2,7-4,2-1,4-3,6-6,8-some7,some3-some8),4-f(5-some2,3-4,some6-1,7-3,2-6,4-some7,6-some8,8-8),5-f(some9-4,5-1,3-3,some6-6,7-some7,2-some8,4-8,6-5),7-f(some10-3,1-6,some9-some7,5-some8,3-8,some6-5,7-7,2-some11),8-f(some12-6,some10-some7,1-some8,some9-8,5-5,3-7,some6-some11,7-some13)],[2-f(some6-2,7-some1,2-some2,4-4,6-1,8-3,some3-6,some4-some7),3-f(3-some1,some6-some2,7-4,2-1,4-3,6-6,8-some7,some3-some8),4-f(5-some2,3-4,some6-1,7-3,2-6,4-some7,6-some8,8-8),5-f(some9-4,5-1,3-3,some6-6,7-some7,2-some8,4-8,6-5),7-f(some10-3,1-6,some9-some7,5-some8,3-8,some6-5,7-7,2-some11),8-f(some12-6,some10-some7,1-some8,some9-8,5-5,3-7,some6-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(7-some0,2-2,4-some1,6-some2,8-4,some3-1,some4-3,some5-6),2-2)"}]
    <#lemma531>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_344 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_344.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma437> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,6-some6,5-2,4-4,8-some7,some8-1,some9-5,some10-some1),2-f(7-some6,2-2,6-4,5-some7,4-1,8-5,some8-some1,some9-3),3-f(some2-2,7-4,2-some7,6-1,5-5,4-some1,8-3,some8-6),4-f(some0-4,some2-some7,7-1,2-5,6-some1,5-3,4-6,8-8),5-f(3-some7,some0-1,some2-5,7-some1,2-3,6-6,5-8,4-some3),7-f(some11-5,1-some1,3-3,some0-6,some2-8,7-some3,2-some4,6-7),8-f(some12-some1,some11-3,1-6,3-8,some0-some3,some2-some4,7-7,2-some13)],1,[2,7,1,3,5,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(2-f(7-some0,2-2,6-4,5-some1,4-1,8-5,some2-some3,some4-3),[1-f(2-some5,6-some0,5-2,4-4,8-some1,some2-1,some4-5,some6-some3),2-f(7-some0,2-2,6-4,5-some1,4-1,8-5,some2-some3,some4-3),3-f(some7-2,7-4,2-some1,6-1,5-5,4-some3,8-3,some2-6),4-f(some8-4,some7-some1,7-1,2-5,6-some3,5-3,4-6,8-8),5-f(3-some1,some8-1,some7-5,7-some3,2-3,6-6,5-8,4-some9),7-f(some10-5,1-some3,3-3,some8-6,some7-8,7-some9,2-some11,6-7),8-f(some12-some3,some10-3,1-6,3-8,some8-some9,some7-some11,7-7,2-some13)],[1-f(2-some5,6-some0,5-2,4-4,8-some1,some2-1,some4-5,some6-some3),3-f(some7-2,7-4,2-some1,6-1,5-5,4-some3,8-3,some2-6),4-f(some8-4,some7-some1,7-1,2-5,6-some3,5-3,4-6,8-8),5-f(3-some1,some8-1,some7-5,7-some3,2-3,6-6,5-8,4-some9),7-f(some10-5,1-some3,3-3,some8-6,some7-8,7-some9,2-some11,6-7),8-f(some12-some3,some10-3,1-6,3-8,some8-some9,some7-some11,7-7,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(7-some0,2-2,6-4,5-some1,4-1,8-5,some2-some3,some4-3),2-2)"}]
    <#lemma532>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_345 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_345.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma438> a r:Inference;
  r:gives {
    "queens([1-f(2-some4,5-some5,7-2,4-4,some6-some7,8-1,some8-some0,some9-5),2-f(some2-some5,2-2,5-4,7-some7,4-1,some6-some0,8-5,some8-3),3-f(6-2,some2-4,2-some7,5-1,7-some0,4-5,some6-3,8-8),4-f(some1-4,6-some7,some2-1,2-some0,5-5,7-3,4-8,some6-7),5-f(3-some7,some1-1,6-some0,some2-5,2-3,5-8,7-7,4-some3),7-f(some10-some0,1-5,3-3,some1-8,6-7,some2-some3,2-6,5-some11),8-f(some12-5,some10-3,1-8,3-7,some1-some3,6-6,some2-some11,2-some13)],1,[2,7,1,4,8,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(2-f(some0-some1,2-2,5-4,7-some2,4-1,some3-some4,8-5,some5-3),[1-f(2-some6,5-some1,7-2,4-4,some3-some2,8-1,some5-some4,some7-5),2-f(some0-some1,2-2,5-4,7-some2,4-1,some3-some4,8-5,some5-3),3-f(6-2,some0-4,2-some2,5-1,7-some4,4-5,some3-3,8-8),4-f(some8-4,6-some2,some0-1,2-some4,5-5,7-3,4-8,some3-7),5-f(3-some2,some8-1,6-some4,some0-5,2-3,5-8,7-7,4-some9),7-f(some10-some4,1-5,3-3,some8-8,6-7,some0-some9,2-6,5-some11),8-f(some12-5,some10-3,1-8,3-7,some8-some9,6-6,some0-some11,2-some13)],[1-f(2-some6,5-some1,7-2,4-4,some3-some2,8-1,some5-some4,some7-5),3-f(6-2,some0-4,2-some2,5-1,7-some4,4-5,some3-3,8-8),4-f(some8-4,6-some2,some0-1,2-some4,5-5,7-3,4-8,some3-7),5-f(3-some2,some8-1,6-some4,some0-5,2-3,5-8,7-7,4-some9),7-f(some10-some4,1-5,3-3,some8-8,6-7,some0-some9,2-6,5-some11),8-f(some12-5,some10-3,1-8,3-7,some8-some9,6-6,some0-some11,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-some1,2-2,5-4,7-some2,4-1,some3-some4,8-5,some5-3),2-2)"}]
    <#lemma533>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_346 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_346.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma439> a r:Inference;
  r:gives {
    "queens([1-f(5-some4,some2-some5,3-3,some6-2,8-some7,7-1,some8-some1,some9-7),2-f(2-some5,5-3,some2-2,3-some7,some6-1,8-some1,7-7,some8-5),3-f(6-3,2-2,5-some7,some2-1,3-some1,some6-7,8-5,7-4),4-f(4-2,6-some7,2-1,5-some1,some2-7,3-5,some6-4,8-8),5-f(some0-some7,4-1,6-some1,2-7,5-5,some2-4,3-8,some6-some3),7-f(some10-some1,1-7,some0-5,4-4,6-8,2-some3,5-6,some2-some11),8-f(some12-7,some10-5,1-4,some0-8,4-some3,6-6,2-some11,5-some13)],1,[3,1,7,5,8,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(3-f(6-3,2-2,5-some0,some1-1,3-some2,some3-7,8-5,7-4),[1-f(5-some4,some1-some5,3-3,some3-2,8-some0,7-1,some6-some2,some7-7),2-f(2-some5,5-3,some1-2,3-some0,some3-1,8-some2,7-7,some6-5),3-f(6-3,2-2,5-some0,some1-1,3-some2,some3-7,8-5,7-4),4-f(4-2,6-some0,2-1,5-some2,some1-7,3-5,some3-4,8-8),5-f(some8-some0,4-1,6-some2,2-7,5-5,some1-4,3-8,some3-some9),7-f(some10-some2,1-7,some8-5,4-4,6-8,2-some9,5-6,some1-some11),8-f(some12-7,some10-5,1-4,some8-8,4-some9,6-6,2-some11,5-some13)],[1-f(5-some4,some1-some5,3-3,some3-2,8-some0,7-1,some6-some2,some7-7),2-f(2-some5,5-3,some1-2,3-some0,some3-1,8-some2,7-7,some6-5),4-f(4-2,6-some0,2-1,5-some2,some1-7,3-5,some3-4,8-8),5-f(some8-some0,4-1,6-some2,2-7,5-5,some1-4,3-8,some3-some9),7-f(some10-some2,1-7,some8-5,4-4,6-8,2-some9,5-6,some1-some11),8-f(some12-7,some10-5,1-4,some8-8,4-some9,6-6,2-some11,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(6-3,2-2,5-some0,some1-1,3-some2,some3-7,8-5,7-4),2-2)"}]
    <#lemma534>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_347 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_347.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma440> a r:Inference;
  r:gives {
    "queens([1-f(7-some4,5-some5,3-3,8-2,6-some6,some7-1,some8-6,some9-5),2-f(2-some5,7-3,5-2,3-some6,8-1,6-6,some7-5,some8-some2),3-f(some1-3,2-2,7-some6,5-1,3-6,8-5,6-some2,some7-some3),4-f(some0-2,some1-some6,2-1,7-6,5-5,3-some2,8-some3,6-4),5-f(4-some6,some0-1,some1-6,2-5,7-some2,5-some3,3-4,8-8),7-f(some10-6,1-5,4-some2,some0-some3,some1-4,2-8,7-7,5-some11),8-f(some12-5,some10-some2,1-some3,4-4,some0-8,some1-7,2-some11,7-some13)],1,[3,1,8,4,2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(3-f(some0-3,2-2,7-some1,5-1,3-6,8-5,6-some2,some3-some4),[1-f(7-some5,5-some6,3-3,8-2,6-some1,some3-1,some7-6,some8-5),2-f(2-some6,7-3,5-2,3-some1,8-1,6-6,some3-5,some7-some2),3-f(some0-3,2-2,7-some1,5-1,3-6,8-5,6-some2,some3-some4),4-f(some9-2,some0-some1,2-1,7-6,5-5,3-some2,8-some4,6-4),5-f(4-some1,some9-1,some0-6,2-5,7-some2,5-some4,3-4,8-8),7-f(some10-6,1-5,4-some2,some9-some4,some0-4,2-8,7-7,5-some11),8-f(some12-5,some10-some2,1-some4,4-4,some9-8,some0-7,2-some11,7-some13)],[1-f(7-some5,5-some6,3-3,8-2,6-some1,some3-1,some7-6,some8-5),2-f(2-some6,7-3,5-2,3-some1,8-1,6-6,some3-5,some7-some2),4-f(some9-2,some0-some1,2-1,7-6,5-5,3-some2,8-some4,6-4),5-f(4-some1,some9-1,some0-6,2-5,7-some2,5-some4,3-4,8-8),7-f(some10-6,1-5,4-some2,some9-some4,some0-4,2-8,7-7,5-some11),8-f(some12-5,some10-some2,1-some4,4-4,some9-8,some0-7,2-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-3,2-2,7-some1,5-1,3-6,8-5,6-some2,some3-some4),2-2)"}]
    <#lemma535>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_348 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_348.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma441> a r:Inference;
  r:gives {
    "queens([1-f(5-some5,8-some6,3-3,7-2,6-some7,some8-1,some9-6,some10-some1),2-f(2-some6,5-3,8-2,3-some7,7-1,6-6,some8-some1,some9-5),3-f(some2-3,2-2,5-some7,8-1,3-6,7-some1,6-5,some8-7),4-f(some0-2,some2-some7,2-1,5-6,8-some1,3-5,7-7,6-4),5-f(4-some7,some0-1,some2-6,2-some1,5-5,8-7,3-4,7-some3),7-f(some11-6,1-some1,4-5,some0-7,some2-4,2-some3,5-some4,8-8),8-f(some12-some1,some11-5,1-7,4-4,some0-some3,some2-some4,2-8,5-some13)],1,[3,1,8,5,2,4,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(3-f(some0-3,2-2,5-some1,8-1,3-6,7-some2,6-5,some3-7),[1-f(5-some4,8-some5,3-3,7-2,6-some1,some3-1,some6-6,some7-some2),2-f(2-some5,5-3,8-2,3-some1,7-1,6-6,some3-some2,some6-5),3-f(some0-3,2-2,5-some1,8-1,3-6,7-some2,6-5,some3-7),4-f(some8-2,some0-some1,2-1,5-6,8-some2,3-5,7-7,6-4),5-f(4-some1,some8-1,some0-6,2-some2,5-5,8-7,3-4,7-some9),7-f(some10-6,1-some2,4-5,some8-7,some0-4,2-some9,5-some11,8-8),8-f(some12-some2,some10-5,1-7,4-4,some8-some9,some0-some11,2-8,5-some13)],[1-f(5-some4,8-some5,3-3,7-2,6-some1,some3-1,some6-6,some7-some2),2-f(2-some5,5-3,8-2,3-some1,7-1,6-6,some3-some2,some6-5),4-f(some8-2,some0-some1,2-1,5-6,8-some2,3-5,7-7,6-4),5-f(4-some1,some8-1,some0-6,2-some2,5-5,8-7,3-4,7-some9),7-f(some10-6,1-some2,4-5,some8-7,some0-4,2-some9,5-some11,8-8),8-f(some12-some2,some10-5,1-7,4-4,some8-some9,some0-some11,2-8,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-3,2-2,5-some1,8-1,3-6,7-some2,6-5,some3-7),2-2)"}]
    <#lemma536>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_349 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_349.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma442> a r:Inference;
  r:gives {
    "queens([1-f(8-some5,some2-some6,6-some7,some8-2,5-5,7-1,some9-3,some10-7),2-f(2-some6,8-some7,some2-2,6-5,some8-1,5-3,7-7,some9-6),3-f(3-some7,2-2,8-5,some2-1,6-3,some8-7,5-6,7-4),4-f(4-2,3-5,2-1,8-3,some2-7,6-6,some8-4,5-some1),5-f(some0-5,4-1,3-3,2-7,8-6,some2-4,6-some1,some8-some3),7-f(some11-3,1-7,some0-6,4-4,3-some1,2-some3,8-some4,some2-some12),8-f(some13-7,some11-6,1-4,some0-some1,4-some3,3-some4,2-some12,8-8)],1,[3,5,7,1,4,2,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(3-f(3-some0,2-2,8-5,some1-1,6-3,some2-7,5-6,7-4),[1-f(8-some3,some1-some4,6-some0,some2-2,5-5,7-1,some5-3,some6-7),2-f(2-some4,8-some0,some1-2,6-5,some2-1,5-3,7-7,some5-6),3-f(3-some0,2-2,8-5,some1-1,6-3,some2-7,5-6,7-4),4-f(4-2,3-5,2-1,8-3,some1-7,6-6,some2-4,5-some7),5-f(some8-5,4-1,3-3,2-7,8-6,some1-4,6-some7,some2-some9),7-f(some10-3,1-7,some8-6,4-4,3-some7,2-some9,8-some11,some1-some12),8-f(some13-7,some10-6,1-4,some8-some7,4-some9,3-some11,2-some12,8-8)],[1-f(8-some3,some1-some4,6-some0,some2-2,5-5,7-1,some5-3,some6-7),2-f(2-some4,8-some0,some1-2,6-5,some2-1,5-3,7-7,some5-6),4-f(4-2,3-5,2-1,8-3,some1-7,6-6,some2-4,5-some7),5-f(some8-5,4-1,3-3,2-7,8-6,some1-4,6-some7,some2-some9),7-f(some10-3,1-7,some8-6,4-4,3-some7,2-some9,8-some11,some1-some12),8-f(some13-7,some10-6,1-4,some8-some7,4-some9,3-some11,2-some12,8-8)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-some0,2-2,8-5,some1-1,6-3,some2-7,5-6,7-4),2-2)"}]
    <#lemma537>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_350 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_350.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma443> a r:Inference;
  r:gives {
    "queens([1-f(some2-some5,8-some6,6-some7,some8-2,5-5,7-1,some9-3,some10-7),2-f(2-some6,some2-some7,8-2,6-5,some8-1,5-3,7-7,some9-6),3-f(3-some7,2-2,some2-5,8-1,6-3,some8-7,5-6,7-some1),4-f(some0-2,3-5,2-1,some2-3,8-7,6-6,some8-some1,5-4),5-f(4-5,some0-1,3-3,2-7,some2-6,8-some1,6-4,some8-some3),7-f(some11-3,1-7,4-6,some0-some1,3-4,2-some3,some2-some4,8-8),8-f(some12-7,some11-6,1-some1,4-4,some0-some3,3-some4,2-8,some2-some13)],1,[3,5,8,1,4,2,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(3-f(3-some0,2-2,some1-5,8-1,6-3,some2-7,5-6,7-some3),[1-f(some1-some4,8-some5,6-some0,some2-2,5-5,7-1,some6-3,some7-7),2-f(2-some5,some1-some0,8-2,6-5,some2-1,5-3,7-7,some6-6),3-f(3-some0,2-2,some1-5,8-1,6-3,some2-7,5-6,7-some3),4-f(some8-2,3-5,2-1,some1-3,8-7,6-6,some2-some3,5-4),5-f(4-5,some8-1,3-3,2-7,some1-6,8-some3,6-4,some2-some9),7-f(some10-3,1-7,4-6,some8-some3,3-4,2-some9,some1-some11,8-8),8-f(some12-7,some10-6,1-some3,4-4,some8-some9,3-some11,2-8,some1-some13)],[1-f(some1-some4,8-some5,6-some0,some2-2,5-5,7-1,some6-3,some7-7),2-f(2-some5,some1-some0,8-2,6-5,some2-1,5-3,7-7,some6-6),4-f(some8-2,3-5,2-1,some1-3,8-7,6-6,some2-some3,5-4),5-f(4-5,some8-1,3-3,2-7,some1-6,8-some3,6-4,some2-some9),7-f(some10-3,1-7,4-6,some8-some3,3-4,2-some9,some1-some11,8-8),8-f(some12-7,some10-6,1-some3,4-4,some8-some9,3-some11,2-8,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-some0,2-2,some1-5,8-1,6-3,some2-7,5-6,7-some3),2-2)"}]
    <#lemma538>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_351 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_351.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma444> a r:Inference;
  r:gives {
    "queens([1-f(some2-some4,5-some5,4-some6,8-2,some7-4,some8-1,7-7,some9-5),2-f(2-some5,some2-some6,5-2,4-4,8-1,some7-7,some8-5,7-3),3-f(6-some6,2-2,some2-4,5-1,4-7,8-5,some7-3,some8-some1),4-f(some0-2,6-4,2-1,some2-7,5-5,4-3,8-some1,some7-some3),5-f(3-4,some0-1,6-7,2-5,some2-3,5-some1,4-some3,8-8),7-f(some10-7,1-5,3-3,some0-some1,6-some3,2-8,some2-6,5-some11),8-f(some12-5,some10-3,1-some1,3-some3,some0-8,6-6,2-some11,some2-some13)],1,[3,7,2,4,8,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(3-f(6-some0,2-2,some1-4,5-1,4-7,8-5,some2-3,some3-some4),[1-f(some1-some5,5-some6,4-some0,8-2,some2-4,some3-1,7-7,some7-5),2-f(2-some6,some1-some0,5-2,4-4,8-1,some2-7,some3-5,7-3),3-f(6-some0,2-2,some1-4,5-1,4-7,8-5,some2-3,some3-some4),4-f(some8-2,6-4,2-1,some1-7,5-5,4-3,8-some4,some2-some9),5-f(3-4,some8-1,6-7,2-5,some1-3,5-some4,4-some9,8-8),7-f(some10-7,1-5,3-3,some8-some4,6-some9,2-8,some1-6,5-some11),8-f(some12-5,some10-3,1-some4,3-some9,some8-8,6-6,2-some11,some1-some13)],[1-f(some1-some5,5-some6,4-some0,8-2,some2-4,some3-1,7-7,some7-5),2-f(2-some6,some1-some0,5-2,4-4,8-1,some2-7,some3-5,7-3),4-f(some8-2,6-4,2-1,some1-7,5-5,4-3,8-some4,some2-some9),5-f(3-4,some8-1,6-7,2-5,some1-3,5-some4,4-some9,8-8),7-f(some10-7,1-5,3-3,some8-some4,6-some9,2-8,some1-6,5-some11),8-f(some12-5,some10-3,1-some4,3-some9,some8-8,6-6,2-some11,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(6-some0,2-2,some1-4,5-1,4-7,8-5,some2-3,some3-some4),2-2)"}]
    <#lemma539>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_352 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_352.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma445> a r:Inference;
  r:gives {
    "queens([1-f(some2-some4,6-some5,4-some6,some7-2,8-4,some8-1,7-7,some9-some0),2-f(2-some5,some2-some6,6-2,4-4,some7-1,8-7,some8-some0,7-3),3-f(some1-some6,2-2,some2-4,6-1,4-7,some7-some0,8-3,some8-6),4-f(5-2,some1-4,2-1,some2-7,6-some0,4-3,some7-6,8-8),5-f(3-4,5-1,some1-7,2-some0,some2-3,6-6,4-8,some7-5),7-f(some10-7,1-some0,3-3,5-6,some1-8,2-5,some2-some3,6-some11),8-f(some12-some0,some10-3,1-6,3-8,5-5,some1-some3,2-some11,some2-some13)],1,[3,7,2,8,5,1,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(3-f(some0-some1,2-2,some2-4,6-1,4-7,some3-some4,8-3,some5-6),[1-f(some2-some6,6-some7,4-some1,some3-2,8-4,some5-1,7-7,some8-some4),2-f(2-some7,some2-some1,6-2,4-4,some3-1,8-7,some5-some4,7-3),3-f(some0-some1,2-2,some2-4,6-1,4-7,some3-some4,8-3,some5-6),4-f(5-2,some0-4,2-1,some2-7,6-some4,4-3,some3-6,8-8),5-f(3-4,5-1,some0-7,2-some4,some2-3,6-6,4-8,some3-5),7-f(some9-7,1-some4,3-3,5-6,some0-8,2-5,some2-some10,6-some11),8-f(some12-some4,some9-3,1-6,3-8,5-5,some0-some10,2-some11,some2-some13)],[1-f(some2-some6,6-some7,4-some1,some3-2,8-4,some5-1,7-7,some8-some4),2-f(2-some7,some2-some1,6-2,4-4,some3-1,8-7,some5-some4,7-3),4-f(5-2,some0-4,2-1,some2-7,6-some4,4-3,some3-6,8-8),5-f(3-4,5-1,some0-7,2-some4,some2-3,6-6,4-8,some3-5),7-f(some9-7,1-some4,3-3,5-6,some0-8,2-5,some2-some10,6-some11),8-f(some12-some4,some9-3,1-6,3-8,5-5,some0-some10,2-some11,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-some1,2-2,some2-4,6-1,4-7,some3-some4,8-3,some5-6),2-2)"}]
    <#lemma540>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_353 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_353.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma446> a r:Inference;
  r:gives {
    "queens([1-f(4-some5,some3-some6,some4-some7,8-2,5-5,7-1,some8-4,some9-7),2-f(2-some6,4-some7,some3-2,some4-5,8-1,5-4,7-7,some8-3),3-f(6-some7,2-2,4-5,some3-1,some4-4,8-7,5-3,7-some1),4-f(some0-2,6-5,2-1,4-4,some3-7,some4-3,8-some1,5-some2),5-f(3-5,some0-1,6-4,2-7,4-3,some3-some1,some4-some2,8-8),7-f(some10-4,1-7,3-3,some0-some1,6-some2,2-8,4-6,some3-some11),8-f(some12-7,some10-3,1-some1,3-some2,some0-8,6-6,2-some11,4-some13)],1,[3,7,4,1,8,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(3-f(6-some0,2-2,4-5,some1-1,some2-4,8-7,5-3,7-some3),[1-f(4-some4,some1-some5,some2-some0,8-2,5-5,7-1,some6-4,some7-7),2-f(2-some5,4-some0,some1-2,some2-5,8-1,5-4,7-7,some6-3),3-f(6-some0,2-2,4-5,some1-1,some2-4,8-7,5-3,7-some3),4-f(some8-2,6-5,2-1,4-4,some1-7,some2-3,8-some3,5-some9),5-f(3-5,some8-1,6-4,2-7,4-3,some1-some3,some2-some9,8-8),7-f(some10-4,1-7,3-3,some8-some3,6-some9,2-8,4-6,some1-some11),8-f(some12-7,some10-3,1-some3,3-some9,some8-8,6-6,2-some11,4-some13)],[1-f(4-some4,some1-some5,some2-some0,8-2,5-5,7-1,some6-4,some7-7),2-f(2-some5,4-some0,some1-2,some2-5,8-1,5-4,7-7,some6-3),4-f(some8-2,6-5,2-1,4-4,some1-7,some2-3,8-some3,5-some9),5-f(3-5,some8-1,6-4,2-7,4-3,some1-some3,some2-some9,8-8),7-f(some10-4,1-7,3-3,some8-some3,6-some9,2-8,4-6,some1-some11),8-f(some12-7,some10-3,1-some3,3-some9,some8-8,6-6,2-some11,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(6-some0,2-2,4-5,some1-1,some2-4,8-7,5-3,7-some3),2-2)"}]
    <#lemma541>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_354 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_354.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma447> a r:Inference;
  r:gives {
    "queens([1-f(7-some4,some3-some5,3-3,some6-some7,6-2,8-1,some8-6,some9-4),2-f(4-some5,7-3,some3-some7,3-2,some6-1,6-6,8-4,some8-some1),3-f(2-3,4-some7,7-2,some3-1,3-6,some6-4,6-some1,8-8),4-f(5-some7,2-2,4-1,7-6,some3-4,3-some1,some6-8,6-some2),5-f(some0-2,5-1,2-6,4-4,7-some1,some3-8,3-some2,some6-5),7-f(some10-6,1-4,some0-some1,5-8,2-some2,4-5,7-7,some3-some11),8-f(some12-4,some10-some1,1-8,some0-some2,5-5,2-7,4-some11,7-some13)],1,[4,1,5,8,2,7,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(4-f(5-some0,2-2,4-1,7-6,some1-4,3-some2,some3-8,6-some4),[1-f(7-some5,some1-some6,3-3,some3-some0,6-2,8-1,some7-6,some8-4),2-f(4-some6,7-3,some1-some0,3-2,some3-1,6-6,8-4,some7-some2),3-f(2-3,4-some0,7-2,some1-1,3-6,some3-4,6-some2,8-8),4-f(5-some0,2-2,4-1,7-6,some1-4,3-some2,some3-8,6-some4),5-f(some9-2,5-1,2-6,4-4,7-some2,some1-8,3-some4,some3-5),7-f(some10-6,1-4,some9-some2,5-8,2-some4,4-5,7-7,some1-some11),8-f(some12-4,some10-some2,1-8,some9-some4,5-5,2-7,4-some11,7-some13)],[1-f(7-some5,some1-some6,3-3,some3-some0,6-2,8-1,some7-6,some8-4),2-f(4-some6,7-3,some1-some0,3-2,some3-1,6-6,8-4,some7-some2),3-f(2-3,4-some0,7-2,some1-1,3-6,some3-4,6-some2,8-8),5-f(some9-2,5-1,2-6,4-4,7-some2,some1-8,3-some4,some3-5),7-f(some10-6,1-4,some9-some2,5-8,2-some4,4-5,7-7,some1-some11),8-f(some12-4,some10-some2,1-8,some9-some4,5-5,2-7,4-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(5-some0,2-2,4-1,7-6,some1-4,3-some2,some3-8,6-some4),2-2)"}]
    <#lemma542>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_355 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_355.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma448> a r:Inference;
  r:gives {
    "queens([1-f(5-some4,3-some5,some2-some6,some7-3,some8-2,8-1,7-7,some9-some1),2-f(6-some5,5-some6,3-3,some2-2,some7-1,some8-7,8-some1,7-5),3-f(2-some6,6-3,5-2,3-1,some2-7,some7-some1,some8-5,8-8),4-f(some0-3,2-2,6-1,5-7,3-some1,some2-5,some7-8,some8-4),5-f(4-2,some0-1,2-7,6-some1,5-5,3-8,some2-4,some7-6),7-f(some10-7,1-some1,4-5,some0-8,2-4,6-6,5-some3,3-some11),8-f(some12-some1,some10-5,1-8,4-4,some0-6,2-some3,6-some11,5-some13)],1,[4,2,8,5,7,1,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(4-f(some0-3,2-2,6-1,5-7,3-some1,some2-5,some3-8,some4-4),[1-f(5-some5,3-some6,some2-some7,some3-3,some4-2,8-1,7-7,some8-some1),2-f(6-some6,5-some7,3-3,some2-2,some3-1,some4-7,8-some1,7-5),3-f(2-some7,6-3,5-2,3-1,some2-7,some3-some1,some4-5,8-8),4-f(some0-3,2-2,6-1,5-7,3-some1,some2-5,some3-8,some4-4),5-f(4-2,some0-1,2-7,6-some1,5-5,3-8,some2-4,some3-6),7-f(some9-7,1-some1,4-5,some0-8,2-4,6-6,5-some10,3-some11),8-f(some12-some1,some9-5,1-8,4-4,some0-6,2-some10,6-some11,5-some13)],[1-f(5-some5,3-some6,some2-some7,some3-3,some4-2,8-1,7-7,some8-some1),2-f(6-some6,5-some7,3-3,some2-2,some3-1,some4-7,8-some1,7-5),3-f(2-some7,6-3,5-2,3-1,some2-7,some3-some1,some4-5,8-8),5-f(4-2,some0-1,2-7,6-some1,5-5,3-8,some2-4,some3-6),7-f(some9-7,1-some1,4-5,some0-8,2-4,6-6,5-some10,3-some11),8-f(some12-some1,some9-5,1-8,4-4,some0-6,2-some10,6-some11,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-3,2-2,6-1,5-7,3-some1,some2-5,some3-8,some4-4),2-2)"}]
    <#lemma543>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_356 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_356.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma449> a r:Inference;
  r:gives {
    "queens([1-f(8-some5,6-some6,5-some7,4-4,some8-2,7-1,some9-5,some10-7),2-f(some1-some6,8-some7,6-4,5-2,4-1,some8-5,7-7,some9-3),3-f(2-some7,some1-4,8-2,6-1,5-5,4-7,some8-3,7-6),4-f(some0-4,2-2,some1-1,8-5,6-7,5-3,4-6,some8-some2),5-f(3-2,some0-1,2-5,some1-7,8-3,6-6,5-some2,4-some3),7-f(some11-5,1-7,3-3,some0-6,2-some2,some1-some3,8-some4,6-some12),8-f(some13-7,some11-3,1-6,3-some2,some0-some3,2-some4,some1-some12,8-8)],1,[4,7,1,3,5,2,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(4-f(some0-4,2-2,some1-1,8-5,6-7,5-3,4-6,some2-some3),[1-f(8-some4,6-some5,5-some6,4-4,some2-2,7-1,some7-5,some8-7),2-f(some1-some5,8-some6,6-4,5-2,4-1,some2-5,7-7,some7-3),3-f(2-some6,some1-4,8-2,6-1,5-5,4-7,some2-3,7-6),4-f(some0-4,2-2,some1-1,8-5,6-7,5-3,4-6,some2-some3),5-f(3-2,some0-1,2-5,some1-7,8-3,6-6,5-some3,4-some9),7-f(some10-5,1-7,3-3,some0-6,2-some3,some1-some9,8-some11,6-some12),8-f(some13-7,some10-3,1-6,3-some3,some0-some9,2-some11,some1-some12,8-8)],[1-f(8-some4,6-some5,5-some6,4-4,some2-2,7-1,some7-5,some8-7),2-f(some1-some5,8-some6,6-4,5-2,4-1,some2-5,7-7,some7-3),3-f(2-some6,some1-4,8-2,6-1,5-5,4-7,some2-3,7-6),5-f(3-2,some0-1,2-5,some1-7,8-3,6-6,5-some3,4-some9),7-f(some10-5,1-7,3-3,some0-6,2-some3,some1-some9,8-some11,6-some12),8-f(some13-7,some10-3,1-6,3-some3,some0-some9,2-some11,some1-some12,8-8)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-4,2-2,some1-1,8-5,6-7,5-3,4-6,some2-some3),2-2)"}]
    <#lemma544>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_357 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_357.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma450> a r:Inference;
  r:gives {
    "queens([1-f(some2-some5,some3-some6,7-some7,4-4,6-2,8-1,some8-6,some9-some0),2-f(some1-some6,some2-some7,some3-4,7-2,4-1,6-6,8-some0,some8-3),3-f(2-some7,some1-4,some2-2,some3-1,7-6,4-some0,6-3,8-8),4-f(5-4,2-2,some1-1,some2-6,some3-some0,7-3,4-8,6-7),5-f(3-2,5-1,2-6,some1-some0,some2-3,some3-8,7-7,4-5),7-f(some10-6,1-some0,3-3,5-8,2-7,some1-5,some2-some4,some3-some11),8-f(some12-some0,some10-3,1-8,3-7,5-5,2-some4,some1-some11,some2-some13)],1,[4,7,1,8,2,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(4-f(5-4,2-2,some0-1,some1-6,some2-some3,7-3,4-8,6-7),[1-f(some1-some4,some2-some5,7-some6,4-4,6-2,8-1,some7-6,some8-some3),2-f(some0-some5,some1-some6,some2-4,7-2,4-1,6-6,8-some3,some7-3),3-f(2-some6,some0-4,some1-2,some2-1,7-6,4-some3,6-3,8-8),4-f(5-4,2-2,some0-1,some1-6,some2-some3,7-3,4-8,6-7),5-f(3-2,5-1,2-6,some0-some3,some1-3,some2-8,7-7,4-5),7-f(some9-6,1-some3,3-3,5-8,2-7,some0-5,some1-some10,some2-some11),8-f(some12-some3,some9-3,1-8,3-7,5-5,2-some10,some0-some11,some1-some13)],[1-f(some1-some4,some2-some5,7-some6,4-4,6-2,8-1,some7-6,some8-some3),2-f(some0-some5,some1-some6,some2-4,7-2,4-1,6-6,8-some3,some7-3),3-f(2-some6,some0-4,some1-2,some2-1,7-6,4-some3,6-3,8-8),5-f(3-2,5-1,2-6,some0-some3,some1-3,some2-8,7-7,4-5),7-f(some9-6,1-some3,3-3,5-8,2-7,some0-5,some1-some10,some2-some11),8-f(some12-some3,some9-3,1-8,3-7,5-5,2-some10,some0-some11,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(5-4,2-2,some0-1,some1-6,some2-some3,7-3,4-8,6-7),2-2)"}]
    <#lemma545>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_358 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_358.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma451> a r:Inference;
  r:gives {
    "queens([1-f(4-some5,3-some6,7-some7,some8-3,5-5,8-1,some9-4,some10-some2),2-f(6-some6,4-some7,3-3,7-5,some8-1,5-4,8-some2,some9-2),3-f(some3-some7,6-3,4-5,3-1,7-4,some8-some2,5-2,8-8),4-f(some1-3,some3-5,6-1,4-4,3-some2,7-2,some8-8,5-7),5-f(some0-5,some1-1,some3-4,6-some2,4-2,3-8,7-7,some8-6),7-f(2-4,1-some2,some0-2,some1-8,some3-7,6-6,4-some4,3-some11),8-f(some12-some2,2-2,1-8,some0-7,some1-6,some3-some4,6-some11,4-some13)],1,[8,2,4,1,7,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,2-2,1-8,some2-7,some3-6,some4-some5,6-some6,4-some7),[1-f(4-some8,3-some9,7-some10,some11-3,5-5,8-1,some12-4,some13-some1),2-f(6-some9,4-some10,3-3,7-5,some11-1,5-4,8-some1,some12-2),3-f(some4-some10,6-3,4-5,3-1,7-4,some11-some1,5-2,8-8),4-f(some3-3,some4-5,6-1,4-4,3-some1,7-2,some11-8,5-7),5-f(some2-5,some3-1,some4-4,6-some1,4-2,3-8,7-7,some11-6),7-f(2-4,1-some1,some2-2,some3-8,some4-7,6-6,4-some5,3-some6),8-f(some0-some1,2-2,1-8,some2-7,some3-6,some4-some5,6-some6,4-some7)],[1-f(4-some8,3-some9,7-some10,some11-3,5-5,8-1,some12-4,some13-some1),2-f(6-some9,4-some10,3-3,7-5,some11-1,5-4,8-some1,some12-2),3-f(some4-some10,6-3,4-5,3-1,7-4,some11-some1,5-2,8-8),4-f(some3-3,some4-5,6-1,4-4,3-some1,7-2,some11-8,5-7),5-f(some2-5,some3-1,some4-4,6-some1,4-2,3-8,7-7,some11-6),7-f(2-4,1-some1,some2-2,some3-8,some4-7,6-6,4-some5,3-some6)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-some1,2-2,1-8,some2-7,some3-6,some4-some5,6-some6,4-some7),2-2)"}]
    <#lemma546>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_359 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_359.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma452> a r:Inference;
  r:gives {
    "queens([1-f(3-some5,2-2,6-some6,8-some7,some8-3,7-some9,some10-1,some11-7),2-f(5-2,3-some6,2-some7,6-3,8-some9,some8-1,7-7,some10-6),3-f(some2-some6,5-some7,3-3,2-some9,6-1,8-7,some8-6,7-5),4-f(some1-some7,some2-3,5-some9,3-1,2-7,6-6,8-5,some8-4),5-f(4-3,some1-some9,some2-1,5-7,3-6,2-5,6-4,8-8),6-f(some0-some9,4-1,some1-7,some2-6,5-5,3-4,2-8,6-some3),8-f(some12-7,1-6,some0-5,4-4,some1-8,some2-some3,5-some4,3-some13)],1,[1,3,8,6,4,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(1-f(3-some0,2-2,6-some1,8-some2,some3-3,7-some4,some5-1,some6-7),[1-f(3-some0,2-2,6-some1,8-some2,some3-3,7-some4,some5-1,some6-7),2-f(5-2,3-some1,2-some2,6-3,8-some4,some3-1,7-7,some5-6),3-f(some7-some1,5-some2,3-3,2-some4,6-1,8-7,some3-6,7-5),4-f(some8-some2,some7-3,5-some4,3-1,2-7,6-6,8-5,some3-4),5-f(4-3,some8-some4,some7-1,5-7,3-6,2-5,6-4,8-8),6-f(some9-some4,4-1,some8-7,some7-6,5-5,3-4,2-8,6-some10),8-f(some11-7,1-6,some9-5,4-4,some8-8,some7-some10,5-some12,3-some13)],[2-f(5-2,3-some1,2-some2,6-3,8-some4,some3-1,7-7,some5-6),3-f(some7-some1,5-some2,3-3,2-some4,6-1,8-7,some3-6,7-5),4-f(some8-some2,some7-3,5-some4,3-1,2-7,6-6,8-5,some3-4),5-f(4-3,some8-some4,some7-1,5-7,3-6,2-5,6-4,8-8),6-f(some9-some4,4-1,some8-7,some7-6,5-5,3-4,2-8,6-some10),8-f(some11-7,1-6,some9-5,4-4,some8-8,some7-some10,5-some12,3-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-some0,2-2,6-some1,8-some2,some3-3,7-some4,some5-1,some6-7),2-2)"}]
    <#lemma547>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_360 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_360.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma453> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,6-some7,8-2,4-4,7-some8,some9-3,some10-1,some11-some1),2-f(3-some7,2-2,6-4,8-some8,4-3,7-1,some9-some1,some10-7),3-f(some3-2,3-4,2-some8,6-3,8-1,4-some1,7-7,some9-6),4-f(5-4,some3-some8,3-3,2-1,6-some1,8-7,4-6,7-some4),5-f(some2-some8,5-3,some3-1,3-some1,2-7,6-6,8-some4,4-5),6-f(some0-3,some2-1,5-some1,some3-7,3-6,2-some4,6-5,8-8),8-f(some12-some1,1-7,some0-6,some2-some4,5-5,some3-8,3-some5,2-some13)],1,[2,4,1,8,5,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(2-f(3-some0,2-2,6-4,8-some1,4-3,7-1,some2-some3,some4-7),[1-f(2-some5,6-some0,8-2,4-4,7-some1,some2-3,some4-1,some6-some3),2-f(3-some0,2-2,6-4,8-some1,4-3,7-1,some2-some3,some4-7),3-f(some7-2,3-4,2-some1,6-3,8-1,4-some3,7-7,some2-6),4-f(5-4,some7-some1,3-3,2-1,6-some3,8-7,4-6,7-some8),5-f(some9-some1,5-3,some7-1,3-some3,2-7,6-6,8-some8,4-5),6-f(some10-3,some9-1,5-some3,some7-7,3-6,2-some8,6-5,8-8),8-f(some11-some3,1-7,some10-6,some9-some8,5-5,some7-8,3-some12,2-some13)],[1-f(2-some5,6-some0,8-2,4-4,7-some1,some2-3,some4-1,some6-some3),3-f(some7-2,3-4,2-some1,6-3,8-1,4-some3,7-7,some2-6),4-f(5-4,some7-some1,3-3,2-1,6-some3,8-7,4-6,7-some8),5-f(some9-some1,5-3,some7-1,3-some3,2-7,6-6,8-some8,4-5),6-f(some10-3,some9-1,5-some3,some7-7,3-6,2-some8,6-5,8-8),8-f(some11-some3,1-7,some10-6,some9-some8,5-5,some7-8,3-some12,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-some0,2-2,6-4,8-some1,4-3,7-1,some2-some3,some4-7),2-2)"}]
    <#lemma548>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_361 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_361.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma454> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,4-some7,6-2,8-some8,5-5,some9-4,some10-1,some11-3),2-f(7-some7,2-2,4-some8,6-5,8-4,5-1,some9-3,some10-6),3-f(some3-2,7-some8,2-5,4-4,6-1,8-3,5-6,some9-some2),4-f(3-some8,some3-5,7-4,2-1,4-3,6-6,8-some2,5-some4),5-f(some1-5,3-4,some3-1,7-3,2-6,4-some2,6-some4,8-8),6-f(some0-4,some1-1,3-3,some3-6,7-some2,2-some4,4-8,6-some5),8-f(some12-3,1-6,some0-some2,some1-some4,3-8,some3-some5,7-7,2-some13)],1,[2,6,3,1,4,8,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(2-f(7-some0,2-2,4-some1,6-5,8-4,5-1,some2-3,some3-6),[1-f(2-some4,4-some0,6-2,8-some1,5-5,some2-4,some3-1,some5-3),2-f(7-some0,2-2,4-some1,6-5,8-4,5-1,some2-3,some3-6),3-f(some6-2,7-some1,2-5,4-4,6-1,8-3,5-6,some2-some7),4-f(3-some1,some6-5,7-4,2-1,4-3,6-6,8-some7,5-some8),5-f(some9-5,3-4,some6-1,7-3,2-6,4-some7,6-some8,8-8),6-f(some10-4,some9-1,3-3,some6-6,7-some7,2-some8,4-8,6-some11),8-f(some12-3,1-6,some10-some7,some9-some8,3-8,some6-some11,7-7,2-some13)],[1-f(2-some4,4-some0,6-2,8-some1,5-5,some2-4,some3-1,some5-3),3-f(some6-2,7-some1,2-5,4-4,6-1,8-3,5-6,some2-some7),4-f(3-some1,some6-5,7-4,2-1,4-3,6-6,8-some7,5-some8),5-f(some9-5,3-4,some6-1,7-3,2-6,4-some7,6-some8,8-8),6-f(some10-4,some9-1,3-3,some6-6,7-some7,2-some8,4-8,6-some11),8-f(some12-3,1-6,some10-some7,some9-some8,3-8,some6-some11,7-7,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(7-some0,2-2,4-some1,6-5,8-4,5-1,some2-3,some3-6),2-2)"}]
    <#lemma549>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_362 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_362.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma455> a r:Inference;
  r:gives {
    "queens([1-f(some2-some5,6-some6,3-3,some7-2,8-some8,7-some9,some10-1,some11-7),2-f(2-some6,some2-3,6-2,3-some8,some7-some9,8-1,7-7,some10-4),3-f(4-3,2-2,some2-some8,6-some9,3-1,some7-7,8-4,7-6),4-f(5-2,4-some8,2-some9,some2-1,6-7,3-4,some7-6,8-8),5-f(some1-some8,5-some9,4-1,2-7,some2-4,6-6,3-8,some7-5),6-f(some0-some9,some1-1,5-7,4-4,2-6,some2-8,6-5,3-some3),8-f(some12-7,1-4,some0-6,some1-8,5-5,4-some3,2-some4,some2-some13)],1,[3,1,6,8,5,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(3-f(4-3,2-2,some0-some1,6-some2,3-1,some3-7,8-4,7-6),[1-f(some0-some4,6-some5,3-3,some3-2,8-some1,7-some2,some6-1,some7-7),2-f(2-some5,some0-3,6-2,3-some1,some3-some2,8-1,7-7,some6-4),3-f(4-3,2-2,some0-some1,6-some2,3-1,some3-7,8-4,7-6),4-f(5-2,4-some1,2-some2,some0-1,6-7,3-4,some3-6,8-8),5-f(some8-some1,5-some2,4-1,2-7,some0-4,6-6,3-8,some3-5),6-f(some9-some2,some8-1,5-7,4-4,2-6,some0-8,6-5,3-some10),8-f(some11-7,1-4,some9-6,some8-8,5-5,4-some10,2-some12,some0-some13)],[1-f(some0-some4,6-some5,3-3,some3-2,8-some1,7-some2,some6-1,some7-7),2-f(2-some5,some0-3,6-2,3-some1,some3-some2,8-1,7-7,some6-4),4-f(5-2,4-some1,2-some2,some0-1,6-7,3-4,some3-6,8-8),5-f(some8-some1,5-some2,4-1,2-7,some0-4,6-6,3-8,some3-5),6-f(some9-some2,some8-1,5-7,4-4,2-6,some0-8,6-5,3-some10),8-f(some11-7,1-4,some9-6,some8-8,5-5,4-some10,2-some12,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(4-3,2-2,some0-some1,6-some2,3-1,some3-7,8-4,7-6),2-2)"}]
    <#lemma550>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_363 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_363.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma456> a r:Inference;
  r:gives {
    "queens([1-f(5-some6,7-some7,4-some8,some9-2,8-4,6-6,some10-1,some11-some0),2-f(2-some7,5-some8,7-2,4-4,some9-6,8-1,6-some0,some10-5),3-f(some3-some8,2-2,5-4,7-6,4-1,some9-some0,8-5,6-3),4-f(some2-2,some3-4,2-6,5-1,7-some0,4-5,some9-3,8-8),5-f(some1-4,some2-6,some3-1,2-some0,5-5,7-3,4-8,some9-7),6-f(3-6,some1-1,some2-some0,some3-5,2-3,5-8,7-7,4-some4),8-f(some12-some0,1-5,3-3,some1-8,some2-7,some3-some4,2-some5,5-some13)],1,[3,8,2,5,1,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(3-f(some0-some1,2-2,5-4,7-6,4-1,some2-some3,8-5,6-3),[1-f(5-some4,7-some5,4-some1,some2-2,8-4,6-6,some6-1,some7-some3),2-f(2-some5,5-some1,7-2,4-4,some2-6,8-1,6-some3,some6-5),3-f(some0-some1,2-2,5-4,7-6,4-1,some2-some3,8-5,6-3),4-f(some8-2,some0-4,2-6,5-1,7-some3,4-5,some2-3,8-8),5-f(some9-4,some8-6,some0-1,2-some3,5-5,7-3,4-8,some2-7),6-f(3-6,some9-1,some8-some3,some0-5,2-3,5-8,7-7,4-some10),8-f(some11-some3,1-5,3-3,some9-8,some8-7,some0-some10,2-some12,5-some13)],[1-f(5-some4,7-some5,4-some1,some2-2,8-4,6-6,some6-1,some7-some3),2-f(2-some5,5-some1,7-2,4-4,some2-6,8-1,6-some3,some6-5),4-f(some8-2,some0-4,2-6,5-1,7-some3,4-5,some2-3,8-8),5-f(some9-4,some8-6,some0-1,2-some3,5-5,7-3,4-8,some2-7),6-f(3-6,some9-1,some8-some3,some0-5,2-3,5-8,7-7,4-some10),8-f(some11-some3,1-5,3-3,some9-8,some8-7,some0-some10,2-some12,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-some1,2-2,5-4,7-6,4-1,some2-some3,8-5,6-3),2-2)"}]
    <#lemma551>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_364 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_364.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma457> a r:Inference;
  r:gives {
    "queens([1-f(some4-some6,3-some7,8-some8,some9-3,7-2,6-6,some10-1,some11-4),2-f(4-some7,some4-some8,3-3,8-2,some9-6,7-1,6-4,some10-7),3-f(2-some8,4-3,some4-2,3-6,8-1,some9-4,7-7,6-some2),4-f(5-3,2-2,4-6,some4-1,3-4,8-7,some9-some2,7-some3),5-f(some1-2,5-6,2-1,4-4,some4-7,3-some2,8-some3,some9-5),6-f(some0-6,some1-1,5-4,2-7,4-some2,some4-some3,3-5,8-8),8-f(some12-4,1-7,some0-some2,some1-some3,5-5,2-8,4-some5,some4-some13)],1,[4,2,5,8,1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(4-f(5-3,2-2,4-6,some0-1,3-4,8-7,some1-some2,7-some3),[1-f(some0-some4,3-some5,8-some6,some1-3,7-2,6-6,some7-1,some8-4),2-f(4-some5,some0-some6,3-3,8-2,some1-6,7-1,6-4,some7-7),3-f(2-some6,4-3,some0-2,3-6,8-1,some1-4,7-7,6-some2),4-f(5-3,2-2,4-6,some0-1,3-4,8-7,some1-some2,7-some3),5-f(some9-2,5-6,2-1,4-4,some0-7,3-some2,8-some3,some1-5),6-f(some10-6,some9-1,5-4,2-7,4-some2,some0-some3,3-5,8-8),8-f(some11-4,1-7,some10-some2,some9-some3,5-5,2-8,4-some12,some0-some13)],[1-f(some0-some4,3-some5,8-some6,some1-3,7-2,6-6,some7-1,some8-4),2-f(4-some5,some0-some6,3-3,8-2,some1-6,7-1,6-4,some7-7),3-f(2-some6,4-3,some0-2,3-6,8-1,some1-4,7-7,6-some2),5-f(some9-2,5-6,2-1,4-4,some0-7,3-some2,8-some3,some1-5),6-f(some10-6,some9-1,5-4,2-7,4-some2,some0-some3,3-5,8-8),8-f(some11-4,1-7,some10-some2,some9-some3,5-5,2-8,4-some12,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(5-3,2-2,4-6,some0-1,3-4,8-7,some1-some2,7-some3),2-2)"}]
    <#lemma552>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_365 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_365.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma458> a r:Inference;
  r:gives {
    "queens([1-f(some3-some6,3-some7,some8-some9,8-3,7-2,6-6,some10-1,some11-some1),2-f(5-some7,some3-some9,3-3,some8-2,8-6,7-1,6-some1,some10-7),3-f(2-some9,5-3,some3-2,3-6,some8-1,8-some1,7-7,6-5),4-f(some2-3,2-2,5-6,some3-1,3-some1,some8-7,8-5,7-4),5-f(4-2,some2-6,2-1,5-some1,some3-7,3-5,some8-4,8-8),6-f(some0-6,4-1,some2-some1,2-7,5-5,some3-4,3-8,some8-some4),8-f(some12-some1,1-7,some0-5,4-4,some2-8,2-some4,5-some5,some3-some13)],1,[4,2,8,6,1,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(4-f(some0-3,2-2,5-6,some1-1,3-some2,some3-7,8-5,7-4),[1-f(some1-some4,3-some5,some3-some6,8-3,7-2,6-6,some7-1,some8-some2),2-f(5-some5,some1-some6,3-3,some3-2,8-6,7-1,6-some2,some7-7),3-f(2-some6,5-3,some1-2,3-6,some3-1,8-some2,7-7,6-5),4-f(some0-3,2-2,5-6,some1-1,3-some2,some3-7,8-5,7-4),5-f(4-2,some0-6,2-1,5-some2,some1-7,3-5,some3-4,8-8),6-f(some9-6,4-1,some0-some2,2-7,5-5,some1-4,3-8,some3-some10),8-f(some11-some2,1-7,some9-5,4-4,some0-8,2-some10,5-some12,some1-some13)],[1-f(some1-some4,3-some5,some3-some6,8-3,7-2,6-6,some7-1,some8-some2),2-f(5-some5,some1-some6,3-3,some3-2,8-6,7-1,6-some2,some7-7),3-f(2-some6,5-3,some1-2,3-6,some3-1,8-some2,7-7,6-5),5-f(4-2,some0-6,2-1,5-some2,some1-7,3-5,some3-4,8-8),6-f(some9-6,4-1,some0-some2,2-7,5-5,some1-4,3-8,some3-some10),8-f(some11-some2,1-7,some9-5,4-4,some0-8,2-some10,5-some12,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-3,2-2,5-6,some1-1,3-some2,some3-7,8-5,7-4),2-2)"}]
    <#lemma553>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_366 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_366.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma459> a r:Inference;
  r:gives {
    "queens([1-f(3-some6,some4-some7,some8-some9,4-4,8-3,7-2,some10-1,some11-7),2-f(5-some7,3-some9,some4-4,some8-3,4-2,8-1,7-7,some10-some2),3-f(6-some9,5-4,3-3,some4-2,some8-1,4-7,8-some2,7-5),4-f(2-4,6-3,5-2,3-1,some4-7,some8-some2,4-5,8-8),5-f(some1-3,2-2,6-1,5-7,3-some2,some4-5,some8-8,4-some3),6-f(some0-2,some1-1,2-7,6-some2,5-5,3-8,some4-some3,some8-6),8-f(some12-7,1-some2,some0-5,some1-8,2-some3,6-6,5-some5,3-some13)],1,[5,3,1,6,8,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(5-f(some0-3,2-2,6-1,5-7,3-some1,some2-5,some3-8,4-some4),[1-f(3-some5,some2-some6,some3-some7,4-4,8-3,7-2,some8-1,some9-7),2-f(5-some6,3-some7,some2-4,some3-3,4-2,8-1,7-7,some8-some1),3-f(6-some7,5-4,3-3,some2-2,some3-1,4-7,8-some1,7-5),4-f(2-4,6-3,5-2,3-1,some2-7,some3-some1,4-5,8-8),5-f(some0-3,2-2,6-1,5-7,3-some1,some2-5,some3-8,4-some4),6-f(some10-2,some0-1,2-7,6-some1,5-5,3-8,some2-some4,some3-6),8-f(some11-7,1-some1,some10-5,some0-8,2-some4,6-6,5-some12,3-some13)],[1-f(3-some5,some2-some6,some3-some7,4-4,8-3,7-2,some8-1,some9-7),2-f(5-some6,3-some7,some2-4,some3-3,4-2,8-1,7-7,some8-some1),3-f(6-some7,5-4,3-3,some2-2,some3-1,4-7,8-some1,7-5),4-f(2-4,6-3,5-2,3-1,some2-7,some3-some1,4-5,8-8),6-f(some10-2,some0-1,2-7,6-some1,5-5,3-8,some2-some4,some3-6),8-f(some11-7,1-some1,some10-5,some0-8,2-some4,6-6,5-some12,3-some13)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-3,2-2,6-1,5-7,3-some1,some2-5,some3-8,4-some4),2-2)"}]
    <#lemma554>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_367 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_367.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma460> a r:Inference;
  r:gives {
    "queens([1-f(2-some7,6-some8,8-2,4-4,7-some9,some10-3,some11-some12,some13-1),2-f(3-some8,2-2,6-4,8-some9,4-3,7-some12,some10-1,some11-7),3-f(5-2,3-4,2-some9,6-3,8-some12,4-1,7-7,some10-6),4-f(some3-4,5-some9,3-3,2-some12,6-1,8-7,4-6,7-5),5-f(some2-some9,some3-3,5-some12,3-1,2-7,6-6,8-5,4-some4),6-f(some1-3,some2-some12,some3-1,5-7,3-6,2-5,6-some4,8-8),7-f(some0-some12,some1-1,some2-7,some3-6,5-5,3-some4,2-8,6-some5)],1,[2,4,1,7,5,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(2-f(3-some0,2-2,6-4,8-some1,4-3,7-some2,some3-1,some4-7),[1-f(2-some5,6-some0,8-2,4-4,7-some1,some3-3,some4-some2,some6-1),2-f(3-some0,2-2,6-4,8-some1,4-3,7-some2,some3-1,some4-7),3-f(5-2,3-4,2-some1,6-3,8-some2,4-1,7-7,some3-6),4-f(some7-4,5-some1,3-3,2-some2,6-1,8-7,4-6,7-5),5-f(some8-some1,some7-3,5-some2,3-1,2-7,6-6,8-5,4-some9),6-f(some10-3,some8-some2,some7-1,5-7,3-6,2-5,6-some9,8-8),7-f(some11-some2,some10-1,some8-7,some7-6,5-5,3-some9,2-8,6-some12)],[1-f(2-some5,6-some0,8-2,4-4,7-some1,some3-3,some4-some2,some6-1),3-f(5-2,3-4,2-some1,6-3,8-some2,4-1,7-7,some3-6),4-f(some7-4,5-some1,3-3,2-some2,6-1,8-7,4-6,7-5),5-f(some8-some1,some7-3,5-some2,3-1,2-7,6-6,8-5,4-some9),6-f(some10-3,some8-some2,some7-1,5-7,3-6,2-5,6-some9,8-8),7-f(some11-some2,some10-1,some8-7,some7-6,5-5,3-some9,2-8,6-some12)])"}]
    [ a r:Fact; r:gives {"arg(2,f(3-some0,2-2,6-4,8-some1,4-3,7-some2,some3-1,some4-7),2-2)"}]
    <#lemma555>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_368 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_368.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma461> a r:Inference;
  r:gives {
    "queens([1-f(2-some8,4-some9,8-2,7-some10,5-5,some11-4,some12-3,some13-1),2-f(6-some9,2-2,4-some10,8-5,7-4,5-3,some11-1,some12-some1),3-f(3-2,6-some10,2-5,4-4,8-3,7-1,5-some1,some11-7),4-f(some5-some10,3-5,6-4,2-3,4-1,8-some1,7-7,5-some4),5-f(some3-5,some5-4,3-3,6-1,2-some1,4-7,8-some4,7-6),6-f(some2-4,some3-3,some5-1,3-some1,6-7,2-some4,4-6,8-8),7-f(some0-3,some2-1,some3-some1,some5-7,3-some4,6-6,2-8,4-some6)],1,[2,5,3,1,7,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(2-f(6-some0,2-2,4-some1,8-5,7-4,5-3,some2-1,some3-some4),[1-f(2-some5,4-some0,8-2,7-some1,5-5,some2-4,some3-3,some6-1),2-f(6-some0,2-2,4-some1,8-5,7-4,5-3,some2-1,some3-some4),3-f(3-2,6-some1,2-5,4-4,8-3,7-1,5-some4,some2-7),4-f(some7-some1,3-5,6-4,2-3,4-1,8-some4,7-7,5-some8),5-f(some9-5,some7-4,3-3,6-1,2-some4,4-7,8-some8,7-6),6-f(some10-4,some9-3,some7-1,3-some4,6-7,2-some8,4-6,8-8),7-f(some11-3,some10-1,some9-some4,some7-7,3-some8,6-6,2-8,4-some12)],[1-f(2-some5,4-some0,8-2,7-some1,5-5,some2-4,some3-3,some6-1),3-f(3-2,6-some1,2-5,4-4,8-3,7-1,5-some4,some2-7),4-f(some7-some1,3-5,6-4,2-3,4-1,8-some4,7-7,5-some8),5-f(some9-5,some7-4,3-3,6-1,2-some4,4-7,8-some8,7-6),6-f(some10-4,some9-3,some7-1,3-some4,6-7,2-some8,4-6,8-8),7-f(some11-3,some10-1,some9-some4,some7-7,3-some8,6-6,2-8,4-some12)])"}]
    [ a r:Fact; r:gives {"arg(2,f(6-some0,2-2,4-some1,8-5,7-4,5-3,some2-1,some3-some4),2-2)"}]
    <#lemma556>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_369 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_369.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma462> a r:Inference;
  r:gives {
    "queens([1-f(7-some7,6-some8,3-3,5-2,8-some9,some10-5,some11-some12,some13-1),2-f(2-some8,7-3,6-2,3-some9,5-5,8-some12,some10-1,some11-4),3-f(4-3,2-2,7-some9,6-5,3-some12,5-1,8-4,some10-6),4-f(some3-2,4-some9,2-5,7-some12,6-1,3-4,5-6,8-8),5-f(some2-some9,some3-5,4-some12,2-1,7-4,6-6,3-8,5-some4),6-f(some1-5,some2-some12,some3-1,4-4,2-6,7-8,6-some4,3-7),7-f(some0-some12,some1-1,some2-4,some3-6,4-8,2-some4,7-7,6-some5)],1,[3,1,6,2,5,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(3-f(4-3,2-2,7-some0,6-5,3-some1,5-1,8-4,some2-6),[1-f(7-some3,6-some4,3-3,5-2,8-some0,some2-5,some5-some1,some6-1),2-f(2-some4,7-3,6-2,3-some0,5-5,8-some1,some2-1,some5-4),3-f(4-3,2-2,7-some0,6-5,3-some1,5-1,8-4,some2-6),4-f(some7-2,4-some0,2-5,7-some1,6-1,3-4,5-6,8-8),5-f(some8-some0,some7-5,4-some1,2-1,7-4,6-6,3-8,5-some9),6-f(some10-5,some8-some1,some7-1,4-4,2-6,7-8,6-some9,3-7),7-f(some11-some1,some10-1,some8-4,some7-6,4-8,2-some9,7-7,6-some12)],[1-f(7-some3,6-some4,3-3,5-2,8-some0,some2-5,some5-some1,some6-1),2-f(2-some4,7-3,6-2,3-some0,5-5,8-some1,some2-1,some5-4),4-f(some7-2,4-some0,2-5,7-some1,6-1,3-4,5-6,8-8),5-f(some8-some0,some7-5,4-some1,2-1,7-4,6-6,3-8,5-some9),6-f(some10-5,some8-some1,some7-1,4-4,2-6,7-8,6-some9,3-7),7-f(some11-some1,some10-1,some8-4,some7-6,4-8,2-some9,7-7,6-some12)])"}]
    [ a r:Fact; r:gives {"arg(2,f(4-3,2-2,7-some0,6-5,3-some1,5-1,8-4,some2-6),2-2)"}]
    <#lemma557>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_370 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_370.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma463> a r:Inference;
  r:gives {
    "queens([1-f(7-some8,4-some9,3-3,8-some10,6-2,some11-4,some12-6,some13-1),2-f(5-some9,7-3,4-some10,3-2,8-4,6-6,some11-1,some12-some1),3-f(2-3,5-some10,7-2,4-4,3-6,8-1,6-some1,some11-5),4-f(some5-some10,2-2,5-4,7-6,4-1,3-some1,8-5,6-some4),5-f(some3-2,some5-4,2-6,5-1,7-some1,4-5,3-some4,8-8),6-f(some2-4,some3-6,some5-1,2-some1,5-5,7-some4,4-8,3-7),7-f(some0-6,some2-1,some3-some1,some5-5,2-some4,5-8,7-7,4-some6)],1,[4,1,3,6,2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 2}]
    [ a r:Fact; r:gives {"select(4-f(some0-some1,2-2,5-4,7-6,4-1,3-some2,8-5,6-some3),[1-f(7-some4,4-some5,3-3,8-some1,6-2,some6-4,some7-6,some8-1),2-f(5-some5,7-3,4-some1,3-2,8-4,6-6,some6-1,some7-some2),3-f(2-3,5-some1,7-2,4-4,3-6,8-1,6-some2,some6-5),4-f(some0-some1,2-2,5-4,7-6,4-1,3-some2,8-5,6-some3),5-f(some9-2,some0-4,2-6,5-1,7-some2,4-5,3-some3,8-8),6-f(some10-4,some9-6,some0-1,2-some2,5-5,7-some3,4-8,3-7),7-f(some11-6,some10-1,some9-some2,some0-5,2-some3,5-8,7-7,4-some12)],[1-f(7-some4,4-some5,3-3,8-some1,6-2,some6-4,some7-6,some8-1),2-f(5-some5,7-3,4-some1,3-2,8-4,6-6,some6-1,some7-some2),3-f(2-3,5-some1,7-2,4-4,3-6,8-1,6-some2,some6-5),5-f(some9-2,some0-4,2-6,5-1,7-some2,4-5,3-some3,8-8),6-f(some10-4,some9-6,some0-1,2-some2,5-5,7-some3,4-8,3-7),7-f(some11-6,some10-1,some9-some2,some0-5,2-some3,5-8,7-7,4-some12)])"}]
    [ a r:Fact; r:gives {"arg(2,f(some0-some1,2-2,5-4,7-6,4-1,3-some2,8-5,6-some3),2-2)"}]
    <#lemma558>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_371 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_371.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma464> a r:Inference;
  r:gives {
    "constraints(7,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),[some12,some10,some8,some6,some4,some2,some0|some16],[some13,some11,some9,some7,some5,some3,some1|some17])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"arg(7,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),some12-some13)"}]
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> 6}]
    <#lemma559>
  );
  r:rule [ a r:Fact; r:gives {{"arg(avar0,avar1,avar2-avar3)".
    (_:x_0_372 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> _:x_4_372.
    "constraints(avar4,avar1,avar5,avar6)"} => "constraints(avar0,avar1,[avar2|avar5],[avar3|avar6])"}].

<#lemma465> a r:Inference;
  r:gives {
    "constraints(8,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),[some14,some12,some10,some8,some6,some4,some2,some0,some16,some17,some18,some19,some20,some21|some22],[some15,some13,some11,some9,some7,some5,some3,some1,some23|some24])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"arg(8,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),some14-some15)"}]
    [ a r:Fact; r:gives {(8 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> 7}]
    <#lemma464>
  );
  r:rule [ a r:Fact; r:gives {{"arg(avar0,avar1,avar2-avar3)".
    (_:x_0_373 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> _:x_4_373.
    "constraints(avar4,avar1,avar5,avar6)"} => "constraints(avar0,avar1,[avar2|avar5],[avar3|avar6])"}].

<#lemma466> a r:Inference;
  r:gives {
    "board([some25,some26,some27,some28,some29,some30],[3-f(some16-some3,some0-some5,some2-some7,some4-some9,some6-some11,some8-some13,some10-some15,some12-some31),4-f(some17-some5,some16-some7,some0-some9,some2-some11,some4-some13,some6-some15,some8-some31,some10-some32),5-f(some18-some7,some17-some9,some16-some11,some0-some13,some2-some15,some4-some31,some6-some32,some8-some33),6-f(some19-some9,some18-some11,some17-some13,some16-some15,some0-some31,some2-some32,some4-some33,some6-some34),7-f(some20-some11,some19-some13,some18-some15,some17-some31,some16-some32,some0-some33,some2-some34,some4-some35),8-f(some21-some13,some20-some15,some19-some31,some18-some32,some17-some33,some16-some34,some0-some35,some2-some36)],2,8,[some14,some12,some10,some8,some6,some4,some2,some0,some16,some17,some18,some19,some20,some21|some22],[some31,some15,some13,some11,some9,some7,some5,some3,some1,some23|some24])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma560>
    <#lemma561>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_374 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_374.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma467> a r:Inference;
  r:gives {
    "queens([2-f(6-some4,1-some5,some2-some6,5-some1,some3-2,8-5,7-7,some7-4),3-f(4-some5,6-some6,1-some1,some2-2,5-5,some3-7,8-4,7-3),4-f(2-some6,4-some1,6-2,1-5,some2-7,5-4,some3-3,8-8),6-f(3-2,some0-5,2-7,4-4,6-3,1-8,some2-6,5-some8),7-f(some9-5,3-7,some0-4,2-3,4-8,6-6,1-some8,some2-some10),8-f(some11-7,some9-4,3-3,some0-8,2-6,4-some8,6-some10,1-some12)],2,[8,6,3,7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(8-f(some0-7,some1-4,3-3,some2-8,2-6,4-some3,6-some4,1-some5),[2-f(6-some6,1-some7,some8-some9,5-some10,some11-2,8-5,7-7,some12-4),3-f(4-some7,6-some9,1-some10,some8-2,5-5,some11-7,8-4,7-3),4-f(2-some9,4-some10,6-2,1-5,some8-7,5-4,some11-3,8-8),6-f(3-2,some2-5,2-7,4-4,6-3,1-8,some8-6,5-some3),7-f(some1-5,3-7,some2-4,2-3,4-8,6-6,1-some3,some8-some4),8-f(some0-7,some1-4,3-3,some2-8,2-6,4-some3,6-some4,1-some5)],[2-f(6-some6,1-some7,some8-some9,5-some10,some11-2,8-5,7-7,some12-4),3-f(4-some7,6-some9,1-some10,some8-2,5-5,some11-7,8-4,7-3),4-f(2-some9,4-some10,6-2,1-5,some8-7,5-4,some11-3,8-8),6-f(3-2,some2-5,2-7,4-4,6-3,1-8,some8-6,5-some3),7-f(some1-5,3-7,some2-4,2-3,4-8,6-6,1-some3,some8-some4)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-7,some1-4,3-3,some2-8,2-6,4-some3,6-some4,1-some5),3-3)"}]
    <#lemma562>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_375 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_375.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma468> a r:Inference;
  r:gives {
    "queens([2-f(some1-some3,1-some4,4-some5,6-some6,8-4,some7-2,7-7,some8-6),3-f(5-some4,some1-some5,1-some6,4-4,6-2,8-7,some7-6,7-3),4-f(some0-some5,5-some6,some1-4,1-2,4-7,6-6,8-3,some7-5),5-f(2-some6,some0-4,5-2,some1-7,1-6,4-3,6-5,8-8),7-f(some9-2,3-7,2-6,some0-3,5-5,some1-8,1-some2,4-some10),8-f(some11-7,some9-6,3-3,2-5,some0-8,5-some2,some1-some10,1-some12)],2,[8,3,7,4,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(8-f(some0-7,some1-6,3-3,2-5,some2-8,5-some3,some4-some5,1-some6),[2-f(some4-some7,1-some8,4-some9,6-some10,8-4,some11-2,7-7,some12-6),3-f(5-some8,some4-some9,1-some10,4-4,6-2,8-7,some11-6,7-3),4-f(some2-some9,5-some10,some4-4,1-2,4-7,6-6,8-3,some11-5),5-f(2-some10,some2-4,5-2,some4-7,1-6,4-3,6-5,8-8),7-f(some1-2,3-7,2-6,some2-3,5-5,some4-8,1-some3,4-some5),8-f(some0-7,some1-6,3-3,2-5,some2-8,5-some3,some4-some5,1-some6)],[2-f(some4-some7,1-some8,4-some9,6-some10,8-4,some11-2,7-7,some12-6),3-f(5-some8,some4-some9,1-some10,4-4,6-2,8-7,some11-6,7-3),4-f(some2-some9,5-some10,some4-4,1-2,4-7,6-6,8-3,some11-5),5-f(2-some10,some2-4,5-2,some4-7,1-6,4-3,6-5,8-8),7-f(some1-2,3-7,2-6,some2-3,5-5,some4-8,1-some3,4-some5)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-7,some1-6,3-3,2-5,some2-8,5-some3,some4-some5,1-some6),3-3)"}]
    <#lemma563>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_376 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_376.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma469> a r:Inference;
  r:gives {
    "queens([2-f(3-some5,1-some6,some3-some7,7-some8,some9-3,6-6,8-2,some10-4),3-f(4-some6,3-some7,1-some8,some3-3,7-6,some9-2,6-4,8-8),4-f(5-some7,4-some8,3-3,1-6,some3-2,7-4,some9-8,6-7),5-f(some1-some8,5-3,4-6,3-2,1-4,some3-8,7-7,some9-5),6-f(2-3,some1-6,5-2,4-4,3-8,1-7,some3-5,7-some2),8-f(some11-2,some0-4,2-8,some1-7,5-5,4-some2,3-some4,1-some12)],2,[4,6,8,2,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(4-f(5-some0,4-some1,3-3,1-6,some2-2,7-4,some3-8,6-7),[2-f(3-some4,1-some5,some2-some0,7-some1,some3-3,6-6,8-2,some6-4),3-f(4-some5,3-some0,1-some1,some2-3,7-6,some3-2,6-4,8-8),4-f(5-some0,4-some1,3-3,1-6,some2-2,7-4,some3-8,6-7),5-f(some7-some1,5-3,4-6,3-2,1-4,some2-8,7-7,some3-5),6-f(2-3,some7-6,5-2,4-4,3-8,1-7,some2-5,7-some8),8-f(some9-2,some10-4,2-8,some7-7,5-5,4-some8,3-some11,1-some12)],[2-f(3-some4,1-some5,some2-some0,7-some1,some3-3,6-6,8-2,some6-4),3-f(4-some5,3-some0,1-some1,some2-3,7-6,some3-2,6-4,8-8),5-f(some7-some1,5-3,4-6,3-2,1-4,some2-8,7-7,some3-5),6-f(2-3,some7-6,5-2,4-4,3-8,1-7,some2-5,7-some8),8-f(some9-2,some10-4,2-8,some7-7,5-5,4-some8,3-some11,1-some12)])"}]
    [ a r:Fact; r:gives {"arg(3,f(5-some0,4-some1,3-3,1-6,some2-2,7-4,some3-8,6-7),3-3)"}]
    <#lemma564>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_377 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_377.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma470> a r:Inference;
  r:gives {
    "queens([2-f(some2-some5,1-some6,7-some7,6-some8,5-5,some9-3,8-2,some10-6),3-f(3-some6,some2-some7,1-some8,7-5,6-3,5-2,some9-6,8-8),4-f(some1-some7,3-some8,some2-5,1-3,7-2,6-6,5-8,some9-4),5-f(4-some8,some1-5,3-3,some2-2,1-6,7-8,6-4,5-7),6-f(2-5,4-3,some1-2,3-6,some2-8,1-4,7-7,6-some3),8-f(some11-2,some0-6,2-8,4-4,some1-7,3-some3,some2-some4,1-some12)],2,[5,8,2,4,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(5-f(4-some0,some1-5,3-3,some2-2,1-6,7-8,6-4,5-7),[2-f(some2-some3,1-some4,7-some5,6-some0,5-5,some6-3,8-2,some7-6),3-f(3-some4,some2-some5,1-some0,7-5,6-3,5-2,some6-6,8-8),4-f(some1-some5,3-some0,some2-5,1-3,7-2,6-6,5-8,some6-4),5-f(4-some0,some1-5,3-3,some2-2,1-6,7-8,6-4,5-7),6-f(2-5,4-3,some1-2,3-6,some2-8,1-4,7-7,6-some8),8-f(some9-2,some10-6,2-8,4-4,some1-7,3-some8,some2-some11,1-some12)],[2-f(some2-some3,1-some4,7-some5,6-some0,5-5,some6-3,8-2,some7-6),3-f(3-some4,some2-some5,1-some0,7-5,6-3,5-2,some6-6,8-8),4-f(some1-some5,3-some0,some2-5,1-3,7-2,6-6,5-8,some6-4),6-f(2-5,4-3,some1-2,3-6,some2-8,1-4,7-7,6-some8),8-f(some9-2,some10-6,2-8,4-4,some1-7,3-some8,some2-some11,1-some12)])"}]
    [ a r:Fact; r:gives {"arg(3,f(4-some0,some1-5,3-3,some2-2,1-6,7-8,6-4,5-7),3-3)"}]
    <#lemma565>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_378 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_378.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma471> a r:Inference;
  r:gives {
    "queens([1-f(7-some5,some1-1,5-some6,8-some0,some4-2,6-6,some7-5,some8-3),3-f(2-some6,1-some0,7-2,some1-6,5-5,8-3,some4-some2,6-some3),5-f(4-2,3-6,2-5,1-3,7-some2,some1-some3,5-4,8-8),6-f(some9-6,4-5,3-3,2-some2,1-some3,7-4,some1-8,5-7),7-f(some10-5,some9-3,4-some2,3-some3,2-4,1-8,7-7,some1-some11),8-f(some12-3,some10-some2,some9-some3,4-4,3-8,2-7,1-some11,7-some13)],2,[6,8,3,1,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(6-f(some0-6,4-5,3-3,2-some1,1-some2,7-4,some3-8,5-7),[1-f(7-some4,some3-1,5-some5,8-some6,some7-2,6-6,some8-5,some9-3),3-f(2-some5,1-some6,7-2,some3-6,5-5,8-3,some7-some1,6-some2),5-f(4-2,3-6,2-5,1-3,7-some1,some3-some2,5-4,8-8),6-f(some0-6,4-5,3-3,2-some1,1-some2,7-4,some3-8,5-7),7-f(some10-5,some0-3,4-some1,3-some2,2-4,1-8,7-7,some3-some11),8-f(some12-3,some10-some1,some0-some2,4-4,3-8,2-7,1-some11,7-some13)],[1-f(7-some4,some3-1,5-some5,8-some6,some7-2,6-6,some8-5,some9-3),3-f(2-some5,1-some6,7-2,some3-6,5-5,8-3,some7-some1,6-some2),5-f(4-2,3-6,2-5,1-3,7-some1,some3-some2,5-4,8-8),7-f(some10-5,some0-3,4-some1,3-some2,2-4,1-8,7-7,some3-some11),8-f(some12-3,some10-some1,some0-some2,4-4,3-8,2-7,1-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-6,4-5,3-3,2-some1,1-some2,7-4,some3-8,5-7),3-3)"}]
    <#lemma566>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_379 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_379.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma472> a r:Inference;
  r:gives {
    "queens([1-f(some2-some4,7-1,5-some5,4-4,8-some0,some6-2,some7-5,some8-some1),3-f(6-some5,1-4,some2-some0,7-2,5-5,4-some1,8-3,some6-some3),4-f(2-4,6-some0,1-2,some2-5,7-some1,5-3,4-some3,8-8),6-f(some9-2,3-5,2-some1,6-3,1-some3,some2-8,7-7,5-6),7-f(some10-5,some9-some1,3-3,2-some3,6-8,1-7,some2-6,7-some11),8-f(some12-some1,some10-3,some9-some3,3-8,2-7,6-6,1-some11,some2-some13)],2,[7,1,3,8,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(7-f(some0-5,some1-some2,3-3,2-some3,6-8,1-7,some4-6,7-some5),[1-f(some4-some6,7-1,5-some7,4-4,8-some8,some9-2,some10-5,some11-some2),3-f(6-some7,1-4,some4-some8,7-2,5-5,4-some2,8-3,some9-some3),4-f(2-4,6-some8,1-2,some4-5,7-some2,5-3,4-some3,8-8),6-f(some1-2,3-5,2-some2,6-3,1-some3,some4-8,7-7,5-6),7-f(some0-5,some1-some2,3-3,2-some3,6-8,1-7,some4-6,7-some5),8-f(some12-some2,some0-3,some1-some3,3-8,2-7,6-6,1-some5,some4-some13)],[1-f(some4-some6,7-1,5-some7,4-4,8-some8,some9-2,some10-5,some11-some2),3-f(6-some7,1-4,some4-some8,7-2,5-5,4-some2,8-3,some9-some3),4-f(2-4,6-some8,1-2,some4-5,7-some2,5-3,4-some3,8-8),6-f(some1-2,3-5,2-some2,6-3,1-some3,some4-8,7-7,5-6),8-f(some12-some2,some0-3,some1-some3,3-8,2-7,6-6,1-some5,some4-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-5,some1-some2,3-3,2-some3,6-8,1-7,some4-6,7-some5),3-3)"}]
    <#lemma567>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_380 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_380.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma473> a r:Inference;
  r:gives {
    "queens([1-f(4-some4,7-1,some1-some5,some3-some6,5-5,8-2,some7-4,some8-some0),3-f(6-some5,1-some6,4-5,7-2,some1-4,some3-some0,5-3,8-8),4-f(2-some6,6-5,1-2,4-4,7-some0,some1-3,some3-8,5-some2),6-f(some9-2,3-4,2-some0,6-3,1-8,4-some2,7-7,some1-6),7-f(some10-4,some9-some0,3-3,2-8,6-some2,1-7,4-6,7-some11),8-f(some12-some0,some10-3,some9-8,3-some2,2-7,6-6,1-some11,4-some13)],2,[7,4,1,8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(7-f(some0-4,some1-some2,3-3,2-8,6-some3,1-7,4-6,7-some4),[1-f(4-some5,7-1,some6-some7,some8-some9,5-5,8-2,some10-4,some11-some2),3-f(6-some7,1-some9,4-5,7-2,some6-4,some8-some2,5-3,8-8),4-f(2-some9,6-5,1-2,4-4,7-some2,some6-3,some8-8,5-some3),6-f(some1-2,3-4,2-some2,6-3,1-8,4-some3,7-7,some6-6),7-f(some0-4,some1-some2,3-3,2-8,6-some3,1-7,4-6,7-some4),8-f(some12-some2,some0-3,some1-8,3-some3,2-7,6-6,1-some4,4-some13)],[1-f(4-some5,7-1,some6-some7,some8-some9,5-5,8-2,some10-4,some11-some2),3-f(6-some7,1-some9,4-5,7-2,some6-4,some8-some2,5-3,8-8),4-f(2-some9,6-5,1-2,4-4,7-some2,some6-3,some8-8,5-some3),6-f(some1-2,3-4,2-some2,6-3,1-8,4-some3,7-7,some6-6),8-f(some12-some2,some0-3,some1-8,3-some3,2-7,6-6,1-some4,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-4,some1-some2,3-3,2-8,6-some3,1-7,4-6,7-some4),3-3)"}]
    <#lemma568>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_381 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_381.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma474> a r:Inference;
  r:gives {
    "queens([1-f(some2-some4,5-1,3-3,8-some5,7-some6,some7-some1,some8-2,some9-5),3-f(6-3,1-some5,some2-some6,5-some1,3-2,8-5,7-7,some7-4),4-f(4-some5,6-some6,1-some1,some2-2,5-5,3-7,8-4,7-some3),5-f(2-some6,4-some1,6-2,1-5,some2-7,5-4,3-some3,8-8),7-f(some10-2,some0-5,2-7,4-4,6-some3,1-8,some2-6,5-some11),8-f(some12-5,some10-7,some0-4,2-some3,4-8,6-6,1-some11,some2-some13)],2,[1,7,4,8,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,5-1,3-3,8-some2,7-some3,some4-some5,some6-2,some7-5),[1-f(some0-some1,5-1,3-3,8-some2,7-some3,some4-some5,some6-2,some7-5),3-f(6-3,1-some2,some0-some3,5-some5,3-2,8-5,7-7,some4-4),4-f(4-some2,6-some3,1-some5,some0-2,5-5,3-7,8-4,7-some8),5-f(2-some3,4-some5,6-2,1-5,some0-7,5-4,3-some8,8-8),7-f(some9-2,some10-5,2-7,4-4,6-some8,1-8,some0-6,5-some11),8-f(some12-5,some9-7,some10-4,2-some8,4-8,6-6,1-some11,some0-some13)],[3-f(6-3,1-some2,some0-some3,5-some5,3-2,8-5,7-7,some4-4),4-f(4-some2,6-some3,1-some5,some0-2,5-5,3-7,8-4,7-some8),5-f(2-some3,4-some5,6-2,1-5,some0-7,5-4,3-some8,8-8),7-f(some9-2,some10-5,2-7,4-4,6-some8,1-8,some0-6,5-some11),8-f(some12-5,some9-7,some10-4,2-some8,4-8,6-6,1-some11,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,5-1,3-3,8-some2,7-some3,some4-some5,some6-2,some7-5),3-3)"}]
    <#lemma569>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_382 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_382.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma475> a r:Inference;
  r:gives {
    "queens([1-f(7-some4,4-1,6-some5,8-some6,5-5,some7-4,some8-2,some9-some1),3-f(some2-some5,1-some6,7-5,4-4,6-2,8-some1,5-6,some7-3),4-f(some0-some6,some2-5,1-4,7-2,4-some1,6-6,8-3,5-some3),5-f(2-5,some0-4,some2-2,1-some1,7-6,4-3,6-some3,8-8),7-f(some10-2,3-some1,2-6,some0-3,some2-some3,1-8,7-7,4-some11),8-f(some12-some1,some10-6,3-3,2-some3,some0-8,some2-7,1-some11,7-some13)],2,[8,3,1,4,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-6,3-3,2-some3,some4-8,some5-7,1-some6,7-some7),[1-f(7-some8,4-1,6-some9,8-some10,5-5,some11-4,some12-2,some13-some1),3-f(some5-some9,1-some10,7-5,4-4,6-2,8-some1,5-6,some11-3),4-f(some4-some10,some5-5,1-4,7-2,4-some1,6-6,8-3,5-some3),5-f(2-5,some4-4,some5-2,1-some1,7-6,4-3,6-some3,8-8),7-f(some2-2,3-some1,2-6,some4-3,some5-some3,1-8,7-7,4-some6),8-f(some0-some1,some2-6,3-3,2-some3,some4-8,some5-7,1-some6,7-some7)],[1-f(7-some8,4-1,6-some9,8-some10,5-5,some11-4,some12-2,some13-some1),3-f(some5-some9,1-some10,7-5,4-4,6-2,8-some1,5-6,some11-3),4-f(some4-some10,some5-5,1-4,7-2,4-some1,6-6,8-3,5-some3),5-f(2-5,some4-4,some5-2,1-some1,7-6,4-3,6-some3,8-8),7-f(some2-2,3-some1,2-6,some4-3,some5-some3,1-8,7-7,4-some6)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,some2-6,3-3,2-some3,some4-8,some5-7,1-some6,7-some7),3-3)"}]
    <#lemma570>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_383 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_383.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma476> a r:Inference;
  r:gives {
    "queens([1-f(3-some4,6-1,some5-some6,some7-some8,8-3,some9-some10,7-7,some11-2),3-f(4-some6,1-some8,3-3,6-some10,some5-7,some7-2,8-4,some9-6),4-f(5-some8,4-3,1-some10,3-7,6-2,some5-4,some7-6,8-8),5-f(some1-3,5-some10,4-7,1-2,3-4,6-6,some5-8,some7-5),6-f(2-some10,some1-7,5-2,4-4,1-6,3-8,6-5,some5-some2),8-f(some12-2,some0-4,2-6,some1-8,5-5,4-some2,1-some3,3-some13)],2,[3,6,8,5,1,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(3-f(4-some0,1-some1,3-3,6-some2,some3-7,some4-2,8-4,some5-6),[1-f(3-some6,6-1,some3-some0,some4-some1,8-3,some5-some2,7-7,some7-2),3-f(4-some0,1-some1,3-3,6-some2,some3-7,some4-2,8-4,some5-6),4-f(5-some1,4-3,1-some2,3-7,6-2,some3-4,some4-6,8-8),5-f(some8-3,5-some2,4-7,1-2,3-4,6-6,some3-8,some4-5),6-f(2-some2,some8-7,5-2,4-4,1-6,3-8,6-5,some3-some9),8-f(some10-2,some11-4,2-6,some8-8,5-5,4-some9,1-some12,3-some13)],[1-f(3-some6,6-1,some3-some0,some4-some1,8-3,some5-some2,7-7,some7-2),4-f(5-some1,4-3,1-some2,3-7,6-2,some3-4,some4-6,8-8),5-f(some8-3,5-some2,4-7,1-2,3-4,6-6,some3-8,some4-5),6-f(2-some2,some8-7,5-2,4-4,1-6,3-8,6-5,some3-some9),8-f(some10-2,some11-4,2-6,some8-8,5-5,4-some9,1-some12,3-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(4-some0,1-some1,3-3,6-some2,some3-7,some4-2,8-4,some5-6),3-3)"}]
    <#lemma571>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_384 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_384.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma477> a r:Inference;
  r:gives {
    "queens([1-f(some2-some5,7-1,6-some6,some7-some8,5-5,8-some9,some10-3,some11-2),3-f(3-some6,1-some8,some2-5,7-some9,6-3,some7-2,5-6,8-8),4-f(some1-some8,3-5,1-some9,some2-3,7-2,6-6,some7-8,5-4),5-f(4-5,some1-some9,3-3,1-2,some2-6,7-8,6-4,some7-7),6-f(2-some9,4-3,some1-2,3-6,1-8,some2-4,7-7,6-some3),8-f(some12-2,some0-6,2-8,4-4,some1-7,3-some3,1-some4,some2-some13)],2,[5,8,1,4,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(5-f(4-5,some0-some1,3-3,1-2,some2-6,7-8,6-4,some3-7),[1-f(some2-some4,7-1,6-some5,some3-some6,5-5,8-some1,some7-3,some8-2),3-f(3-some5,1-some6,some2-5,7-some1,6-3,some3-2,5-6,8-8),4-f(some0-some6,3-5,1-some1,some2-3,7-2,6-6,some3-8,5-4),5-f(4-5,some0-some1,3-3,1-2,some2-6,7-8,6-4,some3-7),6-f(2-some1,4-3,some0-2,3-6,1-8,some2-4,7-7,6-some9),8-f(some10-2,some11-6,2-8,4-4,some0-7,3-some9,1-some12,some2-some13)],[1-f(some2-some4,7-1,6-some5,some3-some6,5-5,8-some1,some7-3,some8-2),3-f(3-some5,1-some6,some2-5,7-some1,6-3,some3-2,5-6,8-8),4-f(some0-some6,3-5,1-some1,some2-3,7-2,6-6,some3-8,5-4),6-f(2-some1,4-3,some0-2,3-6,1-8,some2-4,7-7,6-some9),8-f(some10-2,some11-6,2-8,4-4,some0-7,3-some9,1-some12,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(4-5,some0-some1,3-3,1-2,some2-6,7-8,6-4,some3-7),3-3)"}]
    <#lemma572>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_385 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_385.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma478> a r:Inference;
  r:gives {
    "queens([1-f(7-some7,6-1,5-some8,4-4,8-some9,some10-some11,some12-5,some13-3),3-f(some4-some8,1-4,7-some9,6-some11,5-5,4-3,8-2,some10-6),4-f(3-4,some4-some9,1-some11,7-5,6-3,5-2,4-6,8-8),5-f(some2-some9,3-some11,some4-5,1-3,7-2,6-6,5-8,4-some3),6-f(some1-some11,some2-5,3-3,some4-2,1-6,7-8,6-some3,5-7),7-f(2-5,some1-3,some2-2,3-6,some4-8,1-some3,7-7,6-some5)],2,[6,1,3,5,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(6-f(some0-some1,some2-5,3-3,some3-2,1-6,7-8,6-some4,5-7),[1-f(7-some5,6-1,5-some6,4-4,8-some7,some8-some1,some9-5,some10-3),3-f(some3-some6,1-4,7-some7,6-some1,5-5,4-3,8-2,some8-6),4-f(3-4,some3-some7,1-some1,7-5,6-3,5-2,4-6,8-8),5-f(some2-some7,3-some1,some3-5,1-3,7-2,6-6,5-8,4-some4),6-f(some0-some1,some2-5,3-3,some3-2,1-6,7-8,6-some4,5-7),7-f(2-5,some0-3,some2-2,3-6,some3-8,1-some4,7-7,6-some11)],[1-f(7-some5,6-1,5-some6,4-4,8-some7,some8-some1,some9-5,some10-3),3-f(some3-some6,1-4,7-some7,6-some1,5-5,4-3,8-2,some8-6),4-f(3-4,some3-some7,1-some1,7-5,6-3,5-2,4-6,8-8),5-f(some2-some7,3-some1,some3-5,1-3,7-2,6-6,5-8,4-some4),7-f(2-5,some0-3,some2-2,3-6,some3-8,1-some4,7-7,6-some11)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,some2-5,3-3,some3-2,1-6,7-8,6-some4,5-7),3-3)"}]
    <#lemma573>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_386 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_386.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma479> a r:Inference;
  r:gives {
    "queens([2-f(4-2,some0-1,2-some2,8-some3,7-some5,6-6,some4-4,some6-3),4-f(5-some2,1-some3,4-some5,some0-6,2-4,8-3,7-7,6-some8),5-f(3-some3,5-some5,1-6,4-4,some0-3,2-7,8-some8,7-5),6-f(some9-some5,3-6,5-4,1-3,4-7,some0-some8,2-5,8-8),7-f(some10-6,some9-4,3-3,5-7,1-some8,4-5,some0-8,2-some11),8-f(some12-4,some10-3,some9-7,3-some8,5-5,1-8,4-some11,some0-some13)],2,[7,5,8,2,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(7-f(some0-6,some1-4,3-3,5-7,1-some2,4-5,some3-8,2-some4),[2-f(4-2,some3-1,2-some5,8-some6,7-some7,6-6,some8-4,some9-3),4-f(5-some5,1-some6,4-some7,some3-6,2-4,8-3,7-7,6-some2),5-f(3-some6,5-some7,1-6,4-4,some3-3,2-7,8-some2,7-5),6-f(some1-some7,3-6,5-4,1-3,4-7,some3-some2,2-5,8-8),7-f(some0-6,some1-4,3-3,5-7,1-some2,4-5,some3-8,2-some4),8-f(some10-4,some0-3,some1-7,3-some2,5-5,1-8,4-some4,some3-some11)],[2-f(4-2,some3-1,2-some5,8-some6,7-some7,6-6,some8-4,some9-3),4-f(5-some5,1-some6,4-some7,some3-6,2-4,8-3,7-7,6-some2),5-f(3-some6,5-some7,1-6,4-4,some3-3,2-7,8-some2,7-5),6-f(some1-some7,3-6,5-4,1-3,4-7,some3-some2,2-5,8-8),8-f(some10-4,some0-3,some1-7,3-some2,5-5,1-8,4-some4,some3-some11)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-6,some1-4,3-3,5-7,1-some2,4-5,some3-8,2-some4),3-3)"}]
    <#lemma574>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_387 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_387.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma480> a r:Inference;
  r:gives {
    "queens([1-f(some2-some4,3-some5,8-1,7-3,5-5,some6-2,some7-some0,some8-some1),2-f(6-some5,some2-1,3-3,8-5,7-2,5-some0,some6-some1,some7-some3),4-f(2-3,1-5,6-2,some2-some0,3-some1,8-some3,7-7,5-4),6-f(some9-2,4-some0,2-some1,1-some3,6-7,some2-4,3-6,8-8),7-f(some10-some0,some9-some1,4-some3,2-7,1-4,6-6,some2-8,3-some11),8-f(some12-some1,some10-some3,some9-7,4-4,2-6,1-8,6-some11,some2-some13)],2,[2,8,1,7,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(2-f(6-some0,some1-1,3-3,8-5,7-2,5-some2,some3-some4,some5-some6),[1-f(some1-some7,3-some0,8-1,7-3,5-5,some3-2,some5-some2,some8-some4),2-f(6-some0,some1-1,3-3,8-5,7-2,5-some2,some3-some4,some5-some6),4-f(2-3,1-5,6-2,some1-some2,3-some4,8-some6,7-7,5-4),6-f(some9-2,4-some2,2-some4,1-some6,6-7,some1-4,3-6,8-8),7-f(some10-some2,some9-some4,4-some6,2-7,1-4,6-6,some1-8,3-some11),8-f(some12-some4,some10-some6,some9-7,4-4,2-6,1-8,6-some11,some1-some13)],[1-f(some1-some7,3-some0,8-1,7-3,5-5,some3-2,some5-some2,some8-some4),4-f(2-3,1-5,6-2,some1-some2,3-some4,8-some6,7-7,5-4),6-f(some9-2,4-some2,2-some4,1-some6,6-7,some1-4,3-6,8-8),7-f(some10-some2,some9-some4,4-some6,2-7,1-4,6-6,some1-8,3-some11),8-f(some12-some4,some10-some6,some9-7,4-4,2-6,1-8,6-some11,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(6-some0,some1-1,3-3,8-5,7-2,5-some2,some3-some4,some5-some6),3-3)"}]
    <#lemma575>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_388 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_388.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma481> a r:Inference;
  r:gives {
    "queens([1-f(7-some4,3-some5,6-1,some2-3,some6-some0,some7-2,some8-some1,8-8),2-f(5-some5,7-1,3-3,6-some0,some2-2,some6-some1,some7-8,some8-6),4-f(2-3,1-some0,5-2,7-some1,3-8,6-6,some2-5,some6-4),6-f(some9-2,4-some1,2-8,1-6,5-5,7-4,3-some3,6-7),7-f(some10-some1,some9-8,4-6,2-5,1-4,5-some3,7-7,3-some11),8-f(some12-8,some10-6,some9-5,4-4,2-some3,1-7,5-some11,7-some13)],2,[2,8,6,4,7,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(2-f(5-some0,7-1,3-3,6-some1,some2-2,some3-some4,some5-8,some6-6),[1-f(7-some7,3-some0,6-1,some2-3,some3-some1,some5-2,some6-some4,8-8),2-f(5-some0,7-1,3-3,6-some1,some2-2,some3-some4,some5-8,some6-6),4-f(2-3,1-some1,5-2,7-some4,3-8,6-6,some2-5,some3-4),6-f(some8-2,4-some4,2-8,1-6,5-5,7-4,3-some9,6-7),7-f(some10-some4,some8-8,4-6,2-5,1-4,5-some9,7-7,3-some11),8-f(some12-8,some10-6,some8-5,4-4,2-some9,1-7,5-some11,7-some13)],[1-f(7-some7,3-some0,6-1,some2-3,some3-some1,some5-2,some6-some4,8-8),4-f(2-3,1-some1,5-2,7-some4,3-8,6-6,some2-5,some3-4),6-f(some8-2,4-some4,2-8,1-6,5-5,7-4,3-some9,6-7),7-f(some10-some4,some8-8,4-6,2-5,1-4,5-some9,7-7,3-some11),8-f(some12-8,some10-6,some8-5,4-4,2-some9,1-7,5-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(5-some0,7-1,3-3,6-some1,some2-2,some3-some4,some5-8,some6-6),3-3)"}]
    <#lemma576>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_389 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_389.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma482> a r:Inference;
  r:gives {
    "queens([1-f(some1-some5,5-some6,8-1,4-4,6-some0,some7-2,some8-6,some9-5),2-f(7-some6,some1-1,5-4,8-some0,4-2,6-6,some7-5,some8-3),4-f(2-4,1-some0,7-2,some1-6,5-5,8-3,4-some2,6-some3),6-f(some10-2,3-6,2-5,1-3,7-some2,some1-some3,5-some4,8-8),7-f(some11-6,some10-5,3-3,2-some2,1-some3,7-some4,some1-8,5-7),8-f(some12-5,some11-3,some10-some2,3-some3,2-some4,1-8,7-7,some1-some13)],2,[7,1,4,2,8,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(7-f(some0-6,some1-5,3-3,2-some2,1-some3,7-some4,some5-8,5-7),[1-f(some5-some6,5-some7,8-1,4-4,6-some8,some9-2,some10-6,some11-5),2-f(7-some7,some5-1,5-4,8-some8,4-2,6-6,some9-5,some10-3),4-f(2-4,1-some8,7-2,some5-6,5-5,8-3,4-some2,6-some3),6-f(some1-2,3-6,2-5,1-3,7-some2,some5-some3,5-some4,8-8),7-f(some0-6,some1-5,3-3,2-some2,1-some3,7-some4,some5-8,5-7),8-f(some12-5,some0-3,some1-some2,3-some3,2-some4,1-8,7-7,some5-some13)],[1-f(some5-some6,5-some7,8-1,4-4,6-some8,some9-2,some10-6,some11-5),2-f(7-some7,some5-1,5-4,8-some8,4-2,6-6,some9-5,some10-3),4-f(2-4,1-some8,7-2,some5-6,5-5,8-3,4-some2,6-some3),6-f(some1-2,3-6,2-5,1-3,7-some2,some5-some3,5-some4,8-8),8-f(some12-5,some0-3,some1-some2,3-some3,2-some4,1-8,7-7,some5-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-6,some1-5,3-3,2-some2,1-some3,7-some4,some5-8,5-7),3-3)"}]
    <#lemma577>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_390 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_390.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma483> a r:Inference;
  r:gives {
    "queens([1-f(4-some5,some2-some6,8-1,some4-some7,5-5,7-2,some8-4,some9-7),2-f(6-some6,4-1,some2-some7,8-5,some4-2,5-4,7-7,some8-some1),4-f(2-some7,1-5,6-2,4-4,some2-7,8-some1,some4-3,5-some3),6-f(3-2,some0-4,2-7,1-some1,6-3,4-some3,some2-6,8-8),7-f(some10-4,3-7,some0-some1,2-3,1-some3,6-6,4-8,some2-some11),8-f(some12-7,some10-some1,3-3,some0-some3,2-6,1-8,6-some11,4-some13)],2,[8,4,1,7,2,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(8-f(some0-7,some1-some2,3-3,some3-some4,2-6,1-8,6-some5,4-some6),[1-f(4-some7,some8-some9,8-1,some10-some11,5-5,7-2,some12-4,some13-7),2-f(6-some9,4-1,some8-some11,8-5,some10-2,5-4,7-7,some12-some2),4-f(2-some11,1-5,6-2,4-4,some8-7,8-some2,some10-3,5-some4),6-f(3-2,some3-4,2-7,1-some2,6-3,4-some4,some8-6,8-8),7-f(some1-4,3-7,some3-some2,2-3,1-some4,6-6,4-8,some8-some5),8-f(some0-7,some1-some2,3-3,some3-some4,2-6,1-8,6-some5,4-some6)],[1-f(4-some7,some8-some9,8-1,some10-some11,5-5,7-2,some12-4,some13-7),2-f(6-some9,4-1,some8-some11,8-5,some10-2,5-4,7-7,some12-some2),4-f(2-some11,1-5,6-2,4-4,some8-7,8-some2,some10-3,5-some4),6-f(3-2,some3-4,2-7,1-some2,6-3,4-some4,some8-6,8-8),7-f(some1-4,3-7,some3-some2,2-3,1-some4,6-6,4-8,some8-some5)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-7,some1-some2,3-3,some3-some4,2-6,1-8,6-some5,4-some6),3-3)"}]
    <#lemma578>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_391 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_391.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma484> a r:Inference;
  r:gives {
    "queens([1-f(7-some4,3-some5,some3-1,some6-3,8-some7,6-6,some8-2,some9-4),2-f(4-some5,7-1,3-3,some3-some7,some6-6,8-2,6-4,some8-some1),4-f(5-3,1-some7,4-6,7-2,3-4,some3-some1,some6-some2,8-8),5-f(2-some7,5-6,1-2,4-4,7-some1,3-some2,some3-8,some6-5),7-f(some10-2,some0-4,2-some1,5-some2,1-8,4-5,7-7,3-some11),8-f(some12-4,some10-some1,some0-some2,2-8,5-5,1-7,4-some11,7-some13)],2,[2,5,8,1,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(2-f(4-some0,7-1,3-3,some1-some2,some3-6,8-2,6-4,some4-some5),[1-f(7-some6,3-some0,some1-1,some3-3,8-some2,6-6,some4-2,some7-4),2-f(4-some0,7-1,3-3,some1-some2,some3-6,8-2,6-4,some4-some5),4-f(5-3,1-some2,4-6,7-2,3-4,some1-some5,some3-some8,8-8),5-f(2-some2,5-6,1-2,4-4,7-some5,3-some8,some1-8,some3-5),7-f(some9-2,some10-4,2-some5,5-some8,1-8,4-5,7-7,3-some11),8-f(some12-4,some9-some5,some10-some8,2-8,5-5,1-7,4-some11,7-some13)],[1-f(7-some6,3-some0,some1-1,some3-3,8-some2,6-6,some4-2,some7-4),4-f(5-3,1-some2,4-6,7-2,3-4,some1-some5,some3-some8,8-8),5-f(2-some2,5-6,1-2,4-4,7-some5,3-some8,some1-8,some3-5),7-f(some9-2,some10-4,2-some5,5-some8,1-8,4-5,7-7,3-some11),8-f(some12-4,some9-some5,some10-some8,2-8,5-5,1-7,4-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(4-some0,7-1,3-3,some1-some2,some3-6,8-2,6-4,some4-some5),3-3)"}]
    <#lemma579>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_392 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_392.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma485> a r:Inference;
  r:gives {
    "queens([1-f(some3-some6,3-some7,6-1,8-3,5-5,some8-some1,some9-2,some10-some2),2-f(7-some7,some3-1,3-3,6-5,8-some1,5-2,some8-some2,some9-6),4-f(4-3,1-5,7-some1,some3-2,3-some2,6-6,8-4,5-some4),5-f(2-5,4-some1,1-2,7-some2,some3-6,3-4,6-some4,8-8),7-f(some11-2,some0-some2,2-6,4-4,1-some4,7-8,some3-some5,3-7),8-f(some12-some2,some11-6,some0-4,2-some4,4-8,1-some5,7-7,some3-some13)],2,[2,7,1,4,8,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(2-f(7-some0,some1-1,3-3,6-5,8-some2,5-2,some3-some4,some5-6),[1-f(some1-some6,3-some0,6-1,8-3,5-5,some3-some2,some5-2,some7-some4),2-f(7-some0,some1-1,3-3,6-5,8-some2,5-2,some3-some4,some5-6),4-f(4-3,1-5,7-some2,some1-2,3-some4,6-6,8-4,5-some8),5-f(2-5,4-some2,1-2,7-some4,some1-6,3-4,6-some8,8-8),7-f(some9-2,some10-some4,2-6,4-4,1-some8,7-8,some1-some11,3-7),8-f(some12-some4,some9-6,some10-4,2-some8,4-8,1-some11,7-7,some1-some13)],[1-f(some1-some6,3-some0,6-1,8-3,5-5,some3-some2,some5-2,some7-some4),4-f(4-3,1-5,7-some2,some1-2,3-some4,6-6,8-4,5-some8),5-f(2-5,4-some2,1-2,7-some4,some1-6,3-4,6-some8,8-8),7-f(some9-2,some10-some4,2-6,4-4,1-some8,7-8,some1-some11,3-7),8-f(some12-some4,some9-6,some10-4,2-some8,4-8,1-some11,7-7,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(7-some0,some1-1,3-3,6-5,8-some2,5-2,some3-some4,some5-6),3-3)"}]
    <#lemma580>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_393 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_393.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma486> a r:Inference;
  r:gives {
    "queens([1-f(5-some5,3-some6,some3-1,some7-3,8-some8,6-6,some9-2,some10-some1),2-f(7-some6,5-1,3-3,some3-some8,some7-6,8-2,6-some1,some9-5),4-f(4-3,1-some8,7-6,5-2,3-some1,some3-5,some7-4,8-8),5-f(2-some8,4-6,1-2,7-some1,5-5,3-4,some3-8,some7-some2),7-f(some11-2,some0-some1,2-5,4-4,1-8,7-some2,5-some4,3-7),8-f(some12-some1,some11-5,some0-4,2-8,4-some2,1-some4,7-7,5-some13)],2,[2,7,5,1,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(2-f(7-some0,5-1,3-3,some1-some2,some3-6,8-2,6-some4,some5-5),[1-f(5-some6,3-some0,some1-1,some3-3,8-some2,6-6,some5-2,some7-some4),2-f(7-some0,5-1,3-3,some1-some2,some3-6,8-2,6-some4,some5-5),4-f(4-3,1-some2,7-6,5-2,3-some4,some1-5,some3-4,8-8),5-f(2-some2,4-6,1-2,7-some4,5-5,3-4,some1-8,some3-some8),7-f(some9-2,some10-some4,2-5,4-4,1-8,7-some8,5-some11,3-7),8-f(some12-some4,some9-5,some10-4,2-8,4-some8,1-some11,7-7,5-some13)],[1-f(5-some6,3-some0,some1-1,some3-3,8-some2,6-6,some5-2,some7-some4),4-f(4-3,1-some2,7-6,5-2,3-some4,some1-5,some3-4,8-8),5-f(2-some2,4-6,1-2,7-some4,5-5,3-4,some1-8,some3-some8),7-f(some9-2,some10-some4,2-5,4-4,1-8,7-some8,5-some11,3-7),8-f(some12-some4,some9-5,some10-4,2-8,4-some8,1-some11,7-7,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(7-some0,5-1,3-3,some1-some2,some3-6,8-2,6-some4,some5-5),3-3)"}]
    <#lemma581>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_394 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_394.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma487> a r:Inference;
  r:gives {
    "queens([1-f(7-some4,6-some5,some3-1,4-4,some6-some7,some8-3,8-2,some9-some1),2-f(3-some5,7-1,6-4,some3-some7,4-3,some6-2,some8-some1,8-8),4-f(5-4,1-some7,3-3,7-2,6-some1,some3-8,4-6,some6-some2),5-f(2-some7,5-3,1-2,3-some1,7-8,6-6,some3-some2,4-5),7-f(some10-2,some0-some1,2-8,5-6,1-some2,3-5,7-7,6-some11),8-f(some12-some1,some10-8,some0-6,2-some2,5-5,1-7,3-some11,7-some13)],2,[4,1,8,5,7,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(4-f(5-4,1-some0,3-3,7-2,6-some1,some2-8,4-6,some3-some4),[1-f(7-some5,6-some6,some2-1,4-4,some3-some0,some7-3,8-2,some8-some1),2-f(3-some6,7-1,6-4,some2-some0,4-3,some3-2,some7-some1,8-8),4-f(5-4,1-some0,3-3,7-2,6-some1,some2-8,4-6,some3-some4),5-f(2-some0,5-3,1-2,3-some1,7-8,6-6,some2-some4,4-5),7-f(some9-2,some10-some1,2-8,5-6,1-some4,3-5,7-7,6-some11),8-f(some12-some1,some9-8,some10-6,2-some4,5-5,1-7,3-some11,7-some13)],[1-f(7-some5,6-some6,some2-1,4-4,some3-some0,some7-3,8-2,some8-some1),2-f(3-some6,7-1,6-4,some2-some0,4-3,some3-2,some7-some1,8-8),5-f(2-some0,5-3,1-2,3-some1,7-8,6-6,some2-some4,4-5),7-f(some9-2,some10-some1,2-8,5-6,1-some4,3-5,7-7,6-some11),8-f(some12-some1,some9-8,some10-6,2-some4,5-5,1-7,3-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(5-4,1-some0,3-3,7-2,6-some1,some2-8,4-6,some3-some4),3-3)"}]
    <#lemma582>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_395 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_395.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma488> a r:Inference;
  r:gives {
    "queens([1-f(7-some3,6-some4,4-1,some5-some6,some7-4,some8-3,some9-2,8-8),2-f(3-some4,7-1,6-some6,4-4,some5-3,some7-2,some8-8,some9-some1),4-f(5-some6,1-4,3-3,7-2,6-8,4-some1,some5-6,some7-some2),5-f(2-4,5-3,1-2,3-8,7-some1,6-6,4-some2,some5-5),7-f(some10-2,some0-8,2-some1,5-6,1-some2,3-5,7-7,6-some11),8-f(some12-8,some10-some1,some0-6,2-some2,5-5,1-7,3-some11,7-some13)],2,[4,2,8,5,7,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(4-f(5-some0,1-4,3-3,7-2,6-8,4-some1,some2-6,some3-some4),[1-f(7-some5,6-some6,4-1,some2-some0,some3-4,some7-3,some8-2,8-8),2-f(3-some6,7-1,6-some0,4-4,some2-3,some3-2,some7-8,some8-some1),4-f(5-some0,1-4,3-3,7-2,6-8,4-some1,some2-6,some3-some4),5-f(2-4,5-3,1-2,3-8,7-some1,6-6,4-some4,some2-5),7-f(some9-2,some10-8,2-some1,5-6,1-some4,3-5,7-7,6-some11),8-f(some12-8,some9-some1,some10-6,2-some4,5-5,1-7,3-some11,7-some13)],[1-f(7-some5,6-some6,4-1,some2-some0,some3-4,some7-3,some8-2,8-8),2-f(3-some6,7-1,6-some0,4-4,some2-3,some3-2,some7-8,some8-some1),5-f(2-4,5-3,1-2,3-8,7-some1,6-6,4-some4,some2-5),7-f(some9-2,some10-8,2-some1,5-6,1-some4,3-5,7-7,6-some11),8-f(some12-8,some9-some1,some10-6,2-some4,5-5,1-7,3-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(5-some0,1-4,3-3,7-2,6-8,4-some1,some2-6,some3-some4),3-3)"}]
    <#lemma583>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_396 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_396.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma489> a r:Inference;
  r:gives {
    "queens([1-f(some2-some4,5-some5,7-1,4-4,some6-some7,some8-some0,8-2,some9-5),2-f(6-some5,some2-1,5-4,7-some7,4-some0,some6-2,some8-5,8-8),4-f(some1-4,1-some7,6-some0,some2-2,5-5,7-8,4-3,some6-7),5-f(2-some7,some1-some0,1-2,6-5,some2-8,5-3,7-7,4-6),7-f(some10-2,3-5,2-8,some1-3,1-7,6-6,some2-some3,5-some11),8-f(some12-5,some10-8,3-3,2-7,some1-6,1-some3,6-some11,some2-some13)],2,[8,1,4,7,5,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(8-f(some0-5,some1-8,3-3,2-7,some2-6,1-some3,6-some4,some5-some6),[1-f(some5-some7,5-some8,7-1,4-4,some9-some10,some11-some12,8-2,some13-5),2-f(6-some8,some5-1,5-4,7-some10,4-some12,some9-2,some11-5,8-8),4-f(some2-4,1-some10,6-some12,some5-2,5-5,7-8,4-3,some9-7),5-f(2-some10,some2-some12,1-2,6-5,some5-8,5-3,7-7,4-6),7-f(some1-2,3-5,2-8,some2-3,1-7,6-6,some5-some3,5-some4),8-f(some0-5,some1-8,3-3,2-7,some2-6,1-some3,6-some4,some5-some6)],[1-f(some5-some7,5-some8,7-1,4-4,some9-some10,some11-some12,8-2,some13-5),2-f(6-some8,some5-1,5-4,7-some10,4-some12,some9-2,some11-5,8-8),4-f(some2-4,1-some10,6-some12,some5-2,5-5,7-8,4-3,some9-7),5-f(2-some10,some2-some12,1-2,6-5,some5-8,5-3,7-7,4-6),7-f(some1-2,3-5,2-8,some2-3,1-7,6-6,some5-some3,5-some4)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-5,some1-8,3-3,2-7,some2-6,1-some3,6-some4,some5-some6),3-3)"}]
    <#lemma584>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_397 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_397.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma490> a r:Inference;
  r:gives {
    "queens([1-f(5-some5,some2-some6,some3-1,4-4,8-some7,7-some0,some8-2,some9-7),2-f(6-some6,5-1,some2-4,some3-some7,4-some0,8-2,7-7,some8-5),4-f(some1-4,1-some7,6-some0,5-2,some2-7,some3-5,4-3,8-8),5-f(2-some7,some1-some0,1-2,6-7,5-5,some2-3,some3-8,4-6),7-f(some10-2,3-7,2-5,some1-3,1-8,6-6,5-some4,some2-some11),8-f(some12-7,some10-5,3-3,2-8,some1-6,1-some4,6-some11,5-some13)],2,[8,1,5,7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(8-f(some0-7,some1-5,3-3,2-8,some2-6,1-some3,6-some4,5-some5),[1-f(5-some6,some7-some8,some9-1,4-4,8-some10,7-some11,some12-2,some13-7),2-f(6-some8,5-1,some7-4,some9-some10,4-some11,8-2,7-7,some12-5),4-f(some2-4,1-some10,6-some11,5-2,some7-7,some9-5,4-3,8-8),5-f(2-some10,some2-some11,1-2,6-7,5-5,some7-3,some9-8,4-6),7-f(some1-2,3-7,2-5,some2-3,1-8,6-6,5-some3,some7-some4),8-f(some0-7,some1-5,3-3,2-8,some2-6,1-some3,6-some4,5-some5)],[1-f(5-some6,some7-some8,some9-1,4-4,8-some10,7-some11,some12-2,some13-7),2-f(6-some8,5-1,some7-4,some9-some10,4-some11,8-2,7-7,some12-5),4-f(some2-4,1-some10,6-some11,5-2,some7-7,some9-5,4-3,8-8),5-f(2-some10,some2-some11,1-2,6-7,5-5,some7-3,some9-8,4-6),7-f(some1-2,3-7,2-5,some2-3,1-8,6-6,5-some3,some7-some4)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-7,some1-5,3-3,2-8,some2-6,1-some3,6-some4,5-some5),3-3)"}]
    <#lemma585>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_398 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_398.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma491> a r:Inference;
  r:gives {
    "queens([1-f(7-some4,5-some5,4-1,8-some6,some7-4,6-6,some8-2,some9-5),2-f(some2-some5,7-1,5-some6,4-4,8-6,some7-2,6-5,some8-some1),4-f(some0-some6,1-4,some2-6,7-2,5-5,4-some1,8-3,some7-some3),5-f(2-4,some0-6,1-2,some2-5,7-some1,5-3,4-some3,8-8),7-f(some10-2,3-5,2-some1,some0-3,1-some3,some2-8,7-7,5-some11),8-f(some12-5,some10-some1,3-3,2-some3,some0-8,1-7,some2-some11,7-some13)],2,[8,2,4,1,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(8-f(some0-5,some1-some2,3-3,2-some3,some4-8,1-7,some5-some6,7-some7),[1-f(7-some8,5-some9,4-1,8-some10,some11-4,6-6,some12-2,some13-5),2-f(some5-some9,7-1,5-some10,4-4,8-6,some11-2,6-5,some12-some2),4-f(some4-some10,1-4,some5-6,7-2,5-5,4-some2,8-3,some11-some3),5-f(2-4,some4-6,1-2,some5-5,7-some2,5-3,4-some3,8-8),7-f(some1-2,3-5,2-some2,some4-3,1-some3,some5-8,7-7,5-some6),8-f(some0-5,some1-some2,3-3,2-some3,some4-8,1-7,some5-some6,7-some7)],[1-f(7-some8,5-some9,4-1,8-some10,some11-4,6-6,some12-2,some13-5),2-f(some5-some9,7-1,5-some10,4-4,8-6,some11-2,6-5,some12-some2),4-f(some4-some10,1-4,some5-6,7-2,5-5,4-some2,8-3,some11-some3),5-f(2-4,some4-6,1-2,some5-5,7-some2,5-3,4-some3,8-8),7-f(some1-2,3-5,2-some2,some4-3,1-some3,some5-8,7-7,5-some6)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-5,some1-some2,3-3,2-some3,some4-8,1-7,some5-some6,7-some7),3-3)"}]
    <#lemma586>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_399 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_399.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma492> a r:Inference;
  r:gives {
    "queens([1-f(5-some6,3-some7,8-1,7-3,some8-some9,6-6,some10-some1,some11-2),2-f(some3-some7,5-1,3-3,8-some9,7-6,some8-some1,6-2,some10-5),4-f(some2-3,1-some9,some3-6,5-some1,3-2,8-5,7-7,some8-4),5-f(4-some9,some2-6,1-some1,some3-2,5-5,3-7,8-4,7-some4),6-f(2-6,4-some1,some2-2,1-5,some3-7,5-4,3-some4,8-8),8-f(some12-2,some0-5,2-7,4-4,some2-some4,1-8,some3-some5,5-some13)],2,[2,8,5,1,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(2-f(some0-some1,5-1,3-3,8-some2,7-6,some3-some4,6-2,some5-5),[1-f(5-some6,3-some1,8-1,7-3,some3-some2,6-6,some5-some4,some7-2),2-f(some0-some1,5-1,3-3,8-some2,7-6,some3-some4,6-2,some5-5),4-f(some8-3,1-some2,some0-6,5-some4,3-2,8-5,7-7,some3-4),5-f(4-some2,some8-6,1-some4,some0-2,5-5,3-7,8-4,7-some9),6-f(2-6,4-some4,some8-2,1-5,some0-7,5-4,3-some9,8-8),8-f(some10-2,some11-5,2-7,4-4,some8-some9,1-8,some0-some12,5-some13)],[1-f(5-some6,3-some1,8-1,7-3,some3-some2,6-6,some5-some4,some7-2),4-f(some8-3,1-some2,some0-6,5-some4,3-2,8-5,7-7,some3-4),5-f(4-some2,some8-6,1-some4,some0-2,5-5,3-7,8-4,7-some9),6-f(2-6,4-some4,some8-2,1-5,some0-7,5-4,3-some9,8-8),8-f(some10-2,some11-5,2-7,4-4,some8-some9,1-8,some0-some12,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,5-1,3-3,8-some2,7-6,some3-some4,6-2,some5-5),3-3)"}]
    <#lemma587>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_400 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_400.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma493> a r:Inference;
  r:gives {
    "queens([1-f(some2-some5,3-some6,6-1,8-3,some7-some8,some9-some10,7-7,some11-2),2-f(5-some6,some2-1,3-3,6-some8,8-some10,some7-7,some9-2,7-6),4-f(some1-3,1-some8,5-some10,some2-7,3-2,6-6,8-5,some7-4),5-f(4-some8,some1-some10,1-7,5-2,some2-6,3-5,6-4,8-8),6-f(2-some10,4-7,some1-2,1-6,5-5,some2-4,3-8,6-some3),8-f(some12-2,some0-6,2-5,4-4,some1-8,1-some3,5-some4,some2-some13)],2,[2,8,6,4,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(2-f(5-some0,some1-1,3-3,6-some2,8-some3,some4-7,some5-2,7-6),[1-f(some1-some6,3-some0,6-1,8-3,some4-some2,some5-some3,7-7,some7-2),2-f(5-some0,some1-1,3-3,6-some2,8-some3,some4-7,some5-2,7-6),4-f(some8-3,1-some2,5-some3,some1-7,3-2,6-6,8-5,some4-4),5-f(4-some2,some8-some3,1-7,5-2,some1-6,3-5,6-4,8-8),6-f(2-some3,4-7,some8-2,1-6,5-5,some1-4,3-8,6-some9),8-f(some10-2,some11-6,2-5,4-4,some8-8,1-some9,5-some12,some1-some13)],[1-f(some1-some6,3-some0,6-1,8-3,some4-some2,some5-some3,7-7,some7-2),4-f(some8-3,1-some2,5-some3,some1-7,3-2,6-6,8-5,some4-4),5-f(4-some2,some8-some3,1-7,5-2,some1-6,3-5,6-4,8-8),6-f(2-some3,4-7,some8-2,1-6,5-5,some1-4,3-8,6-some9),8-f(some10-2,some11-6,2-5,4-4,some8-8,1-some9,5-some12,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(5-some0,some1-1,3-3,6-some2,8-some3,some4-7,some5-2,7-6),3-3)"}]
    <#lemma588>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_401 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_401.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma494> a r:Inference;
  r:gives {
    "queens([1-f(6-some6,some7-some8,some9-1,8-some10,5-5,7-3,some11-some12,some13-7),2-f(3-some8,6-1,some7-some10,some9-5,8-3,5-some12,7-7,some11-2),4-f(4-some10,1-5,3-3,6-some12,some7-7,some9-2,8-4,5-6),5-f(some2-5,4-3,1-some12,3-7,6-2,some7-4,some9-6,8-8),6-f(some1-3,some2-some12,4-7,1-2,3-4,6-6,some7-8,some9-some3),7-f(2-some12,some1-7,some2-2,4-4,1-6,3-8,6-some3,some7-some4)],2,[4,7,1,6,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(4-f(4-some0,1-5,3-3,6-some1,some2-7,some3-2,8-4,5-6),[1-f(6-some4,some2-some5,some3-1,8-some0,5-5,7-3,some6-some1,some7-7),2-f(3-some5,6-1,some2-some0,some3-5,8-3,5-some1,7-7,some6-2),4-f(4-some0,1-5,3-3,6-some1,some2-7,some3-2,8-4,5-6),5-f(some8-5,4-3,1-some1,3-7,6-2,some2-4,some3-6,8-8),6-f(some9-3,some8-some1,4-7,1-2,3-4,6-6,some2-8,some3-some10),7-f(2-some1,some9-7,some8-2,4-4,1-6,3-8,6-some10,some2-some11)],[1-f(6-some4,some2-some5,some3-1,8-some0,5-5,7-3,some6-some1,some7-7),2-f(3-some5,6-1,some2-some0,some3-5,8-3,5-some1,7-7,some6-2),5-f(some8-5,4-3,1-some1,3-7,6-2,some2-4,some3-6,8-8),6-f(some9-3,some8-some1,4-7,1-2,3-4,6-6,some2-8,some3-some10),7-f(2-some1,some9-7,some8-2,4-4,1-6,3-8,6-some10,some2-some11)])"}]
    [ a r:Fact; r:gives {"arg(3,f(4-some0,1-5,3-3,6-some1,some2-7,some3-2,8-4,5-6),3-3)"}]
    <#lemma589>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_402 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_402.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma495> a r:Inference;
  r:gives {
    "queens([2-f(6-2,some0-some2,2-1,8-some3,5-5,7-3,some4-some7,some5-7),3-f(3-some2,6-1,some0-some3,2-5,8-3,5-some7,7-7,some4-some8),5-f(4-some3,1-5,3-3,6-some7,some0-7,2-some8,8-4,5-6),6-f(some9-5,4-3,1-some7,3-7,6-some8,some0-4,2-6,8-8),7-f(some10-3,some9-some7,4-7,1-some8,3-4,6-6,some0-8,2-some11),8-f(some12-some7,some10-7,some9-some8,4-4,1-6,3-8,6-some11,some0-some13)],2,[5,8,2,7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(5-f(4-some0,1-5,3-3,6-some1,some2-7,2-some3,8-4,5-6),[2-f(6-2,some2-some4,2-1,8-some0,5-5,7-3,some5-some1,some6-7),3-f(3-some4,6-1,some2-some0,2-5,8-3,5-some1,7-7,some5-some3),5-f(4-some0,1-5,3-3,6-some1,some2-7,2-some3,8-4,5-6),6-f(some7-5,4-3,1-some1,3-7,6-some3,some2-4,2-6,8-8),7-f(some8-3,some7-some1,4-7,1-some3,3-4,6-6,some2-8,2-some9),8-f(some10-some1,some8-7,some7-some3,4-4,1-6,3-8,6-some9,some2-some11)],[2-f(6-2,some2-some4,2-1,8-some0,5-5,7-3,some5-some1,some6-7),3-f(3-some4,6-1,some2-some0,2-5,8-3,5-some1,7-7,some5-some3),6-f(some7-5,4-3,1-some1,3-7,6-some3,some2-4,2-6,8-8),7-f(some8-3,some7-some1,4-7,1-some3,3-4,6-6,some2-8,2-some9),8-f(some10-some1,some8-7,some7-some3,4-4,1-6,3-8,6-some9,some2-some11)])"}]
    [ a r:Fact; r:gives {"arg(3,f(4-some0,1-5,3-3,6-some1,some2-7,2-some3,8-4,5-6),3-3)"}]
    <#lemma590>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_403 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_403.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma496> a r:Inference;
  r:gives {
    "queens([2-f(5-2,7-some2,2-1,some1-some4,6-some6,some3-3,some5-6,8-8),3-f(3-some2,5-1,7-some4,2-some6,some1-3,6-6,some3-8,some5-5),5-f(4-some4,1-some6,3-3,5-6,7-8,2-5,some1-4,6-some8),6-f(some9-some6,4-3,1-6,3-8,5-5,7-4,2-some8,some1-7),7-f(some10-3,some9-6,4-8,1-5,3-4,5-some8,7-7,2-some11),8-f(some12-6,some10-8,some9-5,4-4,1-some8,3-7,5-some11,7-some13)],2,[5,8,6,3,7,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(5-f(4-some0,1-some1,3-3,5-6,7-8,2-5,some2-4,6-some3),[2-f(5-2,7-some4,2-1,some2-some0,6-some1,some5-3,some6-6,8-8),3-f(3-some4,5-1,7-some0,2-some1,some2-3,6-6,some5-8,some6-5),5-f(4-some0,1-some1,3-3,5-6,7-8,2-5,some2-4,6-some3),6-f(some7-some1,4-3,1-6,3-8,5-5,7-4,2-some3,some2-7),7-f(some8-3,some7-6,4-8,1-5,3-4,5-some3,7-7,2-some9),8-f(some10-6,some8-8,some7-5,4-4,1-some3,3-7,5-some9,7-some11)],[2-f(5-2,7-some4,2-1,some2-some0,6-some1,some5-3,some6-6,8-8),3-f(3-some4,5-1,7-some0,2-some1,some2-3,6-6,some5-8,some6-5),6-f(some7-some1,4-3,1-6,3-8,5-5,7-4,2-some3,some2-7),7-f(some8-3,some7-6,4-8,1-5,3-4,5-some3,7-7,2-some9),8-f(some10-6,some8-8,some7-5,4-4,1-some3,3-7,5-some9,7-some11)])"}]
    [ a r:Fact; r:gives {"arg(3,f(4-some0,1-some1,3-3,5-6,7-8,2-5,some2-4,6-some3),3-3)"}]
    <#lemma591>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_404 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_404.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma497> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,8-some0,some1-2,some3-1,7-some2,6-6,some5-3,some7-some4),3-f(3-2,5-1,2-some2,8-6,some1-3,some3-some4,7-7,6-5),5-f(4-some2,1-6,3-3,5-some4,2-7,8-5,some1-4,some3-some8),6-f(some9-6,4-3,1-some4,3-7,5-5,2-4,8-some8,some1-some10),7-f(some11-3,some9-some4,4-7,1-5,3-4,5-some8,2-some10,8-8),8-f(some12-some4,some11-7,some9-5,4-4,1-some8,3-some10,5-8,2-some13)],2,[5,8,6,1,3,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(5-f(4-some0,1-6,3-3,5-some1,2-7,8-5,some2-4,some3-some4),[1-f(2-some5,8-some6,some2-2,some3-1,7-some0,6-6,some7-3,some8-some1),3-f(3-2,5-1,2-some0,8-6,some2-3,some3-some1,7-7,6-5),5-f(4-some0,1-6,3-3,5-some1,2-7,8-5,some2-4,some3-some4),6-f(some9-6,4-3,1-some1,3-7,5-5,2-4,8-some4,some2-some10),7-f(some11-3,some9-some1,4-7,1-5,3-4,5-some4,2-some10,8-8),8-f(some12-some1,some11-7,some9-5,4-4,1-some4,3-some10,5-8,2-some13)],[1-f(2-some5,8-some6,some2-2,some3-1,7-some0,6-6,some7-3,some8-some1),3-f(3-2,5-1,2-some0,8-6,some2-3,some3-some1,7-7,6-5),6-f(some9-6,4-3,1-some1,3-7,5-5,2-4,8-some4,some2-some10),7-f(some11-3,some9-some1,4-7,1-5,3-4,5-some4,2-some10,8-8),8-f(some12-some1,some11-7,some9-5,4-4,1-some4,3-some10,5-8,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(4-some0,1-6,3-3,5-some1,2-7,8-5,some2-4,some3-some4),3-3)"}]
    <#lemma592>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_405 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_405.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma498> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,4-some0,some1-2,8-1,some3-some2,some4-4,7-7,some7-some5),3-f(6-2,5-1,2-some2,4-4,some1-7,8-some5,some3-3,some4-5),5-f(3-some2,1-4,6-7,5-some5,2-3,4-5,some1-some8,8-8),6-f(some9-4,3-7,1-some5,6-3,5-5,2-some8,4-8,some1-6),7-f(some10-7,some9-some5,3-3,1-5,6-some8,5-8,2-6,4-some11),8-f(some12-some5,some10-3,some9-5,3-some8,1-8,6-6,5-some11,2-some13)],2,[7,3,6,8,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(7-f(some0-7,some1-some2,3-3,1-5,6-some3,5-8,2-6,4-some4),[1-f(2-some5,4-some6,some7-2,8-1,some8-some9,some10-4,7-7,some11-some2),3-f(6-2,5-1,2-some9,4-4,some7-7,8-some2,some8-3,some10-5),5-f(3-some9,1-4,6-7,5-some2,2-3,4-5,some7-some3,8-8),6-f(some1-4,3-7,1-some2,6-3,5-5,2-some3,4-8,some7-6),7-f(some0-7,some1-some2,3-3,1-5,6-some3,5-8,2-6,4-some4),8-f(some12-some2,some0-3,some1-5,3-some3,1-8,6-6,5-some4,2-some13)],[1-f(2-some5,4-some6,some7-2,8-1,some8-some9,some10-4,7-7,some11-some2),3-f(6-2,5-1,2-some9,4-4,some7-7,8-some2,some8-3,some10-5),5-f(3-some9,1-4,6-7,5-some2,2-3,4-5,some7-some3,8-8),6-f(some1-4,3-7,1-some2,6-3,5-5,2-some3,4-8,some7-6),8-f(some12-some2,some0-3,some1-5,3-some3,1-8,6-6,5-some4,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-7,some1-some2,3-3,1-5,6-some3,5-8,2-6,4-some4),3-3)"}]
    <#lemma593>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_406 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_406.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma499> a r:Inference;
  r:gives {
    "queens([1-f(2-some7,4-some0,7-2,some2-1,some3-some1,some5-4,some6-some4,8-8),3-f(6-2,5-1,2-some1,4-4,7-some4,some2-8,some3-3,some5-5),5-f(3-some1,1-4,6-some4,5-8,2-3,4-5,7-7,some2-some8),6-f(some9-4,3-some4,1-8,6-3,5-5,2-7,4-some8,7-6),7-f(some10-some4,some9-8,3-3,1-5,6-7,5-some8,2-6,4-some11),8-f(some12-8,some10-3,some9-5,3-7,1-some8,6-6,5-some11,2-some13)],2,[7,3,6,8,5,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(7-f(some0-some1,some2-8,3-3,1-5,6-7,5-some3,2-6,4-some4),[1-f(2-some5,4-some6,7-2,some7-1,some8-some9,some10-4,some11-some1,8-8),3-f(6-2,5-1,2-some9,4-4,7-some1,some7-8,some8-3,some10-5),5-f(3-some9,1-4,6-some1,5-8,2-3,4-5,7-7,some7-some3),6-f(some2-4,3-some1,1-8,6-3,5-5,2-7,4-some3,7-6),7-f(some0-some1,some2-8,3-3,1-5,6-7,5-some3,2-6,4-some4),8-f(some12-8,some0-3,some2-5,3-7,1-some3,6-6,5-some4,2-some13)],[1-f(2-some5,4-some6,7-2,some7-1,some8-some9,some10-4,some11-some1,8-8),3-f(6-2,5-1,2-some9,4-4,7-some1,some7-8,some8-3,some10-5),5-f(3-some9,1-4,6-some1,5-8,2-3,4-5,7-7,some7-some3),6-f(some2-4,3-some1,1-8,6-3,5-5,2-7,4-some3,7-6),8-f(some12-8,some0-3,some2-5,3-7,1-some3,6-6,5-some4,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,some2-8,3-3,1-5,6-7,5-some3,2-6,4-some4),3-3)"}]
    <#lemma594>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_407 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_407.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma500> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,7-some0,some1-2,some2-1,5-5,8-some3,some5-some4,some7-4),3-f(6-2,4-1,2-5,7-some3,some1-some4,some2-4,5-3,8-8),5-f(3-5,1-some3,6-some4,4-4,2-3,7-8,some1-some8,some2-7),6-f(some9-some3,3-some4,1-4,6-3,4-8,2-some8,7-7,some1-6),7-f(some10-some4,some9-4,3-3,1-8,6-some8,4-7,2-6,7-some11),8-f(some12-4,some10-3,some9-8,3-some8,1-7,6-6,4-some11,2-some13)],2,[7,5,1,8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(7-f(some0-some1,some2-4,3-3,1-8,6-some3,4-7,2-6,7-some4),[1-f(2-some5,7-some6,some7-2,some8-1,5-5,8-some9,some10-some1,some11-4),3-f(6-2,4-1,2-5,7-some9,some7-some1,some8-4,5-3,8-8),5-f(3-5,1-some9,6-some1,4-4,2-3,7-8,some7-some3,some8-7),6-f(some2-some9,3-some1,1-4,6-3,4-8,2-some3,7-7,some7-6),7-f(some0-some1,some2-4,3-3,1-8,6-some3,4-7,2-6,7-some4),8-f(some12-4,some0-3,some2-8,3-some3,1-7,6-6,4-some4,2-some13)],[1-f(2-some5,7-some6,some7-2,some8-1,5-5,8-some9,some10-some1,some11-4),3-f(6-2,4-1,2-5,7-some9,some7-some1,some8-4,5-3,8-8),5-f(3-5,1-some9,6-some1,4-4,2-3,7-8,some7-some3,some8-7),6-f(some2-some9,3-some1,1-4,6-3,4-8,2-some3,7-7,some7-6),8-f(some12-4,some0-3,some2-8,3-some3,1-7,6-6,4-some4,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,some2-4,3-3,1-8,6-some3,4-7,2-6,7-some4),3-3)"}]
    <#lemma595>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_408 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_408.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma501> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,some1-some0,8-2,some3-1,7-some2,6-6,some5-some4,some7-4),3-f(5-2,4-1,2-some2,some1-6,8-some4,some3-4,7-7,6-3),5-f(some8-some2,1-6,5-some4,4-4,2-7,some1-3,8-5,some3-some9),6-f(3-6,some8-some4,1-4,5-7,4-3,2-5,some1-some9,8-8),7-f(some10-some4,3-4,some8-7,1-3,5-5,4-some9,2-8,some1-some11),8-f(some12-4,some10-7,3-3,some8-5,1-some9,5-8,4-some11,2-some13)],2,[8,5,7,1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(8-f(some0-4,some1-7,3-3,some2-5,1-some3,5-8,4-some4,2-some5),[1-f(2-some6,some7-some8,8-2,some9-1,7-some10,6-6,some11-some12,some13-4),3-f(5-2,4-1,2-some10,some7-6,8-some12,some9-4,7-7,6-3),5-f(some2-some10,1-6,5-some12,4-4,2-7,some7-3,8-5,some9-some3),6-f(3-6,some2-some12,1-4,5-7,4-3,2-5,some7-some3,8-8),7-f(some1-some12,3-4,some2-7,1-3,5-5,4-some3,2-8,some7-some4),8-f(some0-4,some1-7,3-3,some2-5,1-some3,5-8,4-some4,2-some5)],[1-f(2-some6,some7-some8,8-2,some9-1,7-some10,6-6,some11-some12,some13-4),3-f(5-2,4-1,2-some10,some7-6,8-some12,some9-4,7-7,6-3),5-f(some2-some10,1-6,5-some12,4-4,2-7,some7-3,8-5,some9-some3),6-f(3-6,some2-some12,1-4,5-7,4-3,2-5,some7-some3,8-8),7-f(some1-some12,3-4,some2-7,1-3,5-5,4-some3,2-8,some7-some4)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-4,some1-7,3-3,some2-5,1-some3,5-8,4-some4,2-some5),3-3)"}]
    <#lemma596>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_409 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_409.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma502> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,8-some1,7-2,6-1,5-5,some4-some2,some5-some3,some7-6),3-f(4-2,some0-1,2-5,8-some2,7-some3,6-6,5-4,some4-3),5-f(some8-5,1-some2,4-some3,some0-6,2-4,8-3,7-7,6-some9),6-f(3-some2,some8-some3,1-6,4-4,some0-3,2-7,8-some9,7-some10),7-f(some11-some3,3-6,some8-4,1-3,4-7,some0-some9,2-some10,8-8),8-f(some12-6,some11-4,3-3,some8-7,1-some9,4-some10,some0-8,2-some13)],2,[8,6,1,3,5,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(8-f(some0-6,some1-4,3-3,some2-7,1-some3,4-some4,some5-8,2-some6),[1-f(2-some7,8-some8,7-2,6-1,5-5,some9-some10,some11-some12,some13-6),3-f(4-2,some5-1,2-5,8-some10,7-some12,6-6,5-4,some9-3),5-f(some2-5,1-some10,4-some12,some5-6,2-4,8-3,7-7,6-some3),6-f(3-some10,some2-some12,1-6,4-4,some5-3,2-7,8-some3,7-some4),7-f(some1-some12,3-6,some2-4,1-3,4-7,some5-some3,2-some4,8-8),8-f(some0-6,some1-4,3-3,some2-7,1-some3,4-some4,some5-8,2-some6)],[1-f(2-some7,8-some8,7-2,6-1,5-5,some9-some10,some11-some12,some13-6),3-f(4-2,some5-1,2-5,8-some10,7-some12,6-6,5-4,some9-3),5-f(some2-5,1-some10,4-some12,some5-6,2-4,8-3,7-7,6-some3),6-f(3-some10,some2-some12,1-6,4-4,some5-3,2-7,8-some3,7-some4),7-f(some1-some12,3-6,some2-4,1-3,4-7,some5-some3,2-some4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-6,some1-4,3-3,some2-7,1-some3,4-some4,some5-8,2-some6),3-3)"}]
    <#lemma597>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_410 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_410.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma503> a r:Inference;
  r:gives {
    "queens([1-f(some2-some5,8-some6,3-3,5-1,7-some7,some8-5,some9-2,some10-4),2-f(4-some6,some2-3,8-1,3-some7,5-5,7-2,some8-4,some9-7),3-f(6-3,4-1,some2-some7,8-5,3-2,5-4,7-7,some8-some1),5-f(2-some7,1-5,6-2,4-4,some2-7,8-some1,3-some3,5-some4),7-f(some11-2,some0-4,2-7,1-some1,6-some3,4-some4,some2-6,8-8),8-f(some12-4,some11-7,some0-some1,2-some3,1-some4,6-6,4-8,some2-some13)],2,[1,5,2,8,3,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,8-some2,3-3,5-1,7-some3,some4-5,some5-2,some6-4),[1-f(some0-some1,8-some2,3-3,5-1,7-some3,some4-5,some5-2,some6-4),2-f(4-some2,some0-3,8-1,3-some3,5-5,7-2,some4-4,some5-7),3-f(6-3,4-1,some0-some3,8-5,3-2,5-4,7-7,some4-some7),5-f(2-some3,1-5,6-2,4-4,some0-7,8-some7,3-some8,5-some9),7-f(some10-2,some11-4,2-7,1-some7,6-some8,4-some9,some0-6,8-8),8-f(some12-4,some10-7,some11-some7,2-some8,1-some9,6-6,4-8,some0-some13)],[2-f(4-some2,some0-3,8-1,3-some3,5-5,7-2,some4-4,some5-7),3-f(6-3,4-1,some0-some3,8-5,3-2,5-4,7-7,some4-some7),5-f(2-some3,1-5,6-2,4-4,some0-7,8-some7,3-some8,5-some9),7-f(some10-2,some11-4,2-7,1-some7,6-some8,4-some9,some0-6,8-8),8-f(some12-4,some10-7,some11-some7,2-some8,1-some9,6-6,4-8,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,8-some2,3-3,5-1,7-some3,some4-5,some5-2,some6-4),3-3)"}]
    <#lemma598>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_411 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_411.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma504> a r:Inference;
  r:gives {
    "queens([1-f(some2-some5,some3-some6,4-some7,8-1,7-4,6-6,some8-2,some9-some0),2-f(some1-some6,some2-some7,some3-1,4-4,8-6,7-2,6-some0,some8-7),3-f(5-some7,some1-1,some2-4,some3-6,4-2,8-some0,7-7,6-3),5-f(2-4,1-6,5-2,some1-some0,some2-7,some3-3,4-5,8-8),7-f(some10-2,3-some0,2-7,1-3,5-5,some1-8,some2-some4,some3-some11),8-f(some12-some0,some10-7,3-3,2-5,1-8,5-some4,some1-some11,some2-some13)],2,[8,2,7,1,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-7,3-3,2-5,1-8,5-some3,some4-some5,some6-some7),[1-f(some6-some8,some9-some10,4-some11,8-1,7-4,6-6,some12-2,some13-some1),2-f(some4-some10,some6-some11,some9-1,4-4,8-6,7-2,6-some1,some12-7),3-f(5-some11,some4-1,some6-4,some9-6,4-2,8-some1,7-7,6-3),5-f(2-4,1-6,5-2,some4-some1,some6-7,some9-3,4-5,8-8),7-f(some2-2,3-some1,2-7,1-3,5-5,some4-8,some6-some3,some9-some5),8-f(some0-some1,some2-7,3-3,2-5,1-8,5-some3,some4-some5,some6-some7)],[1-f(some6-some8,some9-some10,4-some11,8-1,7-4,6-6,some12-2,some13-some1),2-f(some4-some10,some6-some11,some9-1,4-4,8-6,7-2,6-some1,some12-7),3-f(5-some11,some4-1,some6-4,some9-6,4-2,8-some1,7-7,6-3),5-f(2-4,1-6,5-2,some4-some1,some6-7,some9-3,4-5,8-8),7-f(some2-2,3-some1,2-7,1-3,5-5,some4-8,some6-some3,some9-some5)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,some2-7,3-3,2-5,1-8,5-some3,some4-some5,some6-some7),3-3)"}]
    <#lemma599>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_412 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_412.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma505> a r:Inference;
  r:gives {
    "queens([1-f(some2-some4,4-some5,7-some6,some7-1,5-5,some8-4,8-2,some9-some0),2-f(6-some5,some2-some6,4-1,7-5,some7-4,5-2,some8-some0,8-8),3-f(some1-some6,6-1,some2-5,4-4,7-2,some7-some0,5-8,some8-3),5-f(2-5,1-4,some1-2,6-some0,some2-8,4-3,7-7,some7-6),7-f(some10-2,3-some0,2-8,1-3,some1-7,6-6,some2-some3,4-some11),8-f(some12-some0,some10-8,3-3,2-7,1-6,some1-some3,6-some11,some2-some13)],2,[8,3,1,7,5,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-8,3-3,2-7,1-6,some3-some4,6-some5,some6-some7),[1-f(some6-some8,4-some9,7-some10,some11-1,5-5,some12-4,8-2,some13-some1),2-f(6-some9,some6-some10,4-1,7-5,some11-4,5-2,some12-some1,8-8),3-f(some3-some10,6-1,some6-5,4-4,7-2,some11-some1,5-8,some12-3),5-f(2-5,1-4,some3-2,6-some1,some6-8,4-3,7-7,some11-6),7-f(some2-2,3-some1,2-8,1-3,some3-7,6-6,some6-some4,4-some5),8-f(some0-some1,some2-8,3-3,2-7,1-6,some3-some4,6-some5,some6-some7)],[1-f(some6-some8,4-some9,7-some10,some11-1,5-5,some12-4,8-2,some13-some1),2-f(6-some9,some6-some10,4-1,7-5,some11-4,5-2,some12-some1,8-8),3-f(some3-some10,6-1,some6-5,4-4,7-2,some11-some1,5-8,some12-3),5-f(2-5,1-4,some3-2,6-some1,some6-8,4-3,7-7,some11-6),7-f(some2-2,3-some1,2-8,1-3,some3-7,6-6,some6-some4,4-some5)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,some2-8,3-3,2-7,1-6,some3-some4,6-some5,some6-some7),3-3)"}]
    <#lemma600>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_413 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_413.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma506> a r:Inference;
  r:gives {
    "queens([1-f(5-some5,7-some6,3-3,some7-1,6-some8,8-some9,some10-6,some11-2),2-f(some2-some6,5-3,7-1,3-some8,some7-some9,6-6,8-2,some10-5),3-f(some1-3,some2-1,5-some8,7-some9,3-6,some7-2,6-5,8-8),5-f(4-some8,1-some9,some1-6,some2-2,5-5,7-8,3-4,some7-7),6-f(2-some9,4-6,1-2,some1-5,some2-8,5-4,7-7,3-some3),8-f(some12-2,some0-5,2-8,4-4,1-7,some1-some3,some2-some4,5-some13)],2,[1,8,5,2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(1-f(5-some0,7-some1,3-3,some2-1,6-some3,8-some4,some5-6,some6-2),[1-f(5-some0,7-some1,3-3,some2-1,6-some3,8-some4,some5-6,some6-2),2-f(some7-some1,5-3,7-1,3-some3,some2-some4,6-6,8-2,some5-5),3-f(some8-3,some7-1,5-some3,7-some4,3-6,some2-2,6-5,8-8),5-f(4-some3,1-some4,some8-6,some7-2,5-5,7-8,3-4,some2-7),6-f(2-some4,4-6,1-2,some8-5,some7-8,5-4,7-7,3-some9),8-f(some10-2,some11-5,2-8,4-4,1-7,some8-some9,some7-some12,5-some13)],[2-f(some7-some1,5-3,7-1,3-some3,some2-some4,6-6,8-2,some5-5),3-f(some8-3,some7-1,5-some3,7-some4,3-6,some2-2,6-5,8-8),5-f(4-some3,1-some4,some8-6,some7-2,5-5,7-8,3-4,some2-7),6-f(2-some4,4-6,1-2,some8-5,some7-8,5-4,7-7,3-some9),8-f(some10-2,some11-5,2-8,4-4,1-7,some8-some9,some7-some12,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(5-some0,7-some1,3-3,some2-1,6-some3,8-some4,some5-6,some6-2),3-3)"}]
    <#lemma601>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_414 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_414.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma507> a r:Inference;
  r:gives {
    "queens([1-f(3-some6,6-some7,8-some8,5-1,some9-3,some10-5,7-7,some11-2),2-f(some3-some7,3-some8,6-1,8-3,5-5,some9-7,some10-2,7-some1),3-f(some2-some8,some3-1,3-3,6-5,8-7,5-2,some9-some1,some10-6),5-f(4-3,1-5,some2-7,some3-2,3-some1,6-6,8-4,5-some4),6-f(2-5,4-7,1-2,some2-some1,some3-6,3-4,6-some4,8-8),8-f(some12-2,some0-some1,2-6,4-4,1-some4,some2-8,some3-some5,3-some13)],2,[3,8,2,5,1,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(3-f(some0-some1,some2-1,3-3,6-5,8-7,5-2,some3-some4,some5-6),[1-f(3-some6,6-some7,8-some1,5-1,some3-3,some5-5,7-7,some8-2),2-f(some2-some7,3-some1,6-1,8-3,5-5,some3-7,some5-2,7-some4),3-f(some0-some1,some2-1,3-3,6-5,8-7,5-2,some3-some4,some5-6),5-f(4-3,1-5,some0-7,some2-2,3-some4,6-6,8-4,5-some9),6-f(2-5,4-7,1-2,some0-some4,some2-6,3-4,6-some9,8-8),8-f(some10-2,some11-some4,2-6,4-4,1-some9,some0-8,some2-some12,3-some13)],[1-f(3-some6,6-some7,8-some1,5-1,some3-3,some5-5,7-7,some8-2),2-f(some2-some7,3-some1,6-1,8-3,5-5,some3-7,some5-2,7-some4),5-f(4-3,1-5,some0-7,some2-2,3-some4,6-6,8-4,5-some9),6-f(2-5,4-7,1-2,some0-some4,some2-6,3-4,6-some9,8-8),8-f(some10-2,some11-some4,2-6,4-4,1-some9,some0-8,some2-some12,3-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,some2-1,3-3,6-5,8-7,5-2,some3-some4,some5-6),3-3)"}]
    <#lemma602>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_415 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_415.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma508> a r:Inference;
  r:gives {
    "queens([1-f(8-some7,some5-some8,4-some9,some10-1,7-4,6-6,some11-3,some12-2),2-f(5-some8,8-some9,some5-1,4-4,some10-6,7-3,6-2,some11-7),3-f(3-some9,5-1,8-4,some5-6,4-3,some10-2,7-7,6-5),5-f(some1-4,1-6,3-3,5-2,8-7,some5-5,4-some2,some10-some3),6-f(2-6,some1-3,1-2,3-7,5-5,8-some2,some5-some3,4-some4),8-f(some13-2,some0-7,2-5,some1-some2,1-some3,3-some4,5-some6,8-8)],2,[5,2,6,1,3,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(5-f(some0-4,1-6,3-3,5-2,8-7,some1-5,4-some2,some3-some4),[1-f(8-some5,some1-some6,4-some7,some3-1,7-4,6-6,some8-3,some9-2),2-f(5-some6,8-some7,some1-1,4-4,some3-6,7-3,6-2,some8-7),3-f(3-some7,5-1,8-4,some1-6,4-3,some3-2,7-7,6-5),5-f(some0-4,1-6,3-3,5-2,8-7,some1-5,4-some2,some3-some4),6-f(2-6,some0-3,1-2,3-7,5-5,8-some2,some1-some4,4-some10),8-f(some11-2,some12-7,2-5,some0-some2,1-some4,3-some10,5-some13,8-8)],[1-f(8-some5,some1-some6,4-some7,some3-1,7-4,6-6,some8-3,some9-2),2-f(5-some6,8-some7,some1-1,4-4,some3-6,7-3,6-2,some8-7),3-f(3-some7,5-1,8-4,some1-6,4-3,some3-2,7-7,6-5),6-f(2-6,some0-3,1-2,3-7,5-5,8-some2,some1-some4,4-some10),8-f(some11-2,some12-7,2-5,some0-some2,1-some4,3-some10,5-some13,8-8)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-4,1-6,3-3,5-2,8-7,some1-5,4-some2,some3-some4),3-3)"}]
    <#lemma603>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_416 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_416.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma509> a r:Inference;
  r:gives {
    "queens([1-f(6-some5,4-some6,some7-some8,some9-1,5-5,some10-4,8-3,some11-2),2-f(7-some6,6-some8,4-1,some7-5,some9-4,5-3,some10-2,8-8),3-f(3-some8,7-1,6-5,4-4,some7-3,some9-2,5-8,some10-some2),5-f(some1-5,1-4,3-3,7-2,6-8,4-some2,some7-6,some9-some3),6-f(2-4,some1-3,1-2,3-8,7-some2,6-6,4-some3,some7-some4),8-f(some12-2,some0-8,2-some2,some1-6,1-some3,3-some4,7-7,6-some13)],2,[5,3,1,6,8,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(5-f(some0-5,1-4,3-3,7-2,6-8,4-some1,some2-6,some3-some4),[1-f(6-some5,4-some6,some2-some7,some3-1,5-5,some8-4,8-3,some9-2),2-f(7-some6,6-some7,4-1,some2-5,some3-4,5-3,some8-2,8-8),3-f(3-some7,7-1,6-5,4-4,some2-3,some3-2,5-8,some8-some1),5-f(some0-5,1-4,3-3,7-2,6-8,4-some1,some2-6,some3-some4),6-f(2-4,some0-3,1-2,3-8,7-some1,6-6,4-some4,some2-some10),8-f(some11-2,some12-8,2-some1,some0-6,1-some4,3-some10,7-7,6-some13)],[1-f(6-some5,4-some6,some2-some7,some3-1,5-5,some8-4,8-3,some9-2),2-f(7-some6,6-some7,4-1,some2-5,some3-4,5-3,some8-2,8-8),3-f(3-some7,7-1,6-5,4-4,some2-3,some3-2,5-8,some8-some1),6-f(2-4,some0-3,1-2,3-8,7-some1,6-6,4-some4,some2-some10),8-f(some11-2,some12-8,2-some1,some0-6,1-some4,3-some10,7-7,6-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-5,1-4,3-3,7-2,6-8,4-some1,some2-6,some3-some4),3-3)"}]
    <#lemma604>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_417 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_417.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma510> a r:Inference;
  r:gives {
    "queens([1-f(7-some8,4-some9,3-3,8-1,6-some10,some11-4,some12-6,some13-some1),2-f(5-some9,7-3,4-1,3-some10,8-4,6-6,some11-some1,some12-2),3-f(some5-3,5-1,7-some10,4-4,3-6,8-some1,6-2,some11-5),5-f(some3-some10,1-4,some5-6,5-some1,7-2,4-5,3-some4,8-8),6-f(some2-4,some3-6,1-some1,some5-2,5-5,7-some4,4-8,3-7),7-f(2-6,some2-some1,some3-2,1-5,some5-some4,5-8,7-7,4-some6)],2,[1,3,6,2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(1-f(7-some0,4-some1,3-3,8-1,6-some2,some3-4,some4-6,some5-some6),[1-f(7-some0,4-some1,3-3,8-1,6-some2,some3-4,some4-6,some5-some6),2-f(5-some1,7-3,4-1,3-some2,8-4,6-6,some3-some6,some4-2),3-f(some7-3,5-1,7-some2,4-4,3-6,8-some6,6-2,some3-5),5-f(some8-some2,1-4,some7-6,5-some6,7-2,4-5,3-some9,8-8),6-f(some10-4,some8-6,1-some6,some7-2,5-5,7-some9,4-8,3-7),7-f(2-6,some10-some6,some8-2,1-5,some7-some9,5-8,7-7,4-some11)],[2-f(5-some1,7-3,4-1,3-some2,8-4,6-6,some3-some6,some4-2),3-f(some7-3,5-1,7-some2,4-4,3-6,8-some6,6-2,some3-5),5-f(some8-some2,1-4,some7-6,5-some6,7-2,4-5,3-some9,8-8),6-f(some10-4,some8-6,1-some6,some7-2,5-5,7-some9,4-8,3-7),7-f(2-6,some10-some6,some8-2,1-5,some7-some9,5-8,7-7,4-some11)])"}]
    [ a r:Fact; r:gives {"arg(3,f(7-some0,4-some1,3-3,8-1,6-some2,some3-4,some4-6,some5-some6),3-3)"}]
    <#lemma605>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_418 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_418.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma511> a r:Inference;
  r:gives {
    "queens([1-f(some5-some7,7-some8,3-3,some9-1,6-some10,8-some11,some12-6,some13-4),2-f(4-some8,some5-3,7-1,3-some10,some9-some11,6-6,8-4,some12-2),3-f(5-3,4-1,some5-some10,7-some11,3-6,some9-4,6-2,8-8),5-f(some2-some10,1-some11,5-6,4-4,some5-2,7-8,3-5,some9-7),6-f(some1-some11,some2-6,1-4,5-2,4-8,some5-5,7-7,3-some3),7-f(2-6,some1-4,some2-2,1-8,5-5,4-7,some5-some3,7-some4)],2,[1,5,7,2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,7-some2,3-3,some3-1,6-some4,8-some5,some6-6,some7-4),[1-f(some0-some1,7-some2,3-3,some3-1,6-some4,8-some5,some6-6,some7-4),2-f(4-some2,some0-3,7-1,3-some4,some3-some5,6-6,8-4,some6-2),3-f(5-3,4-1,some0-some4,7-some5,3-6,some3-4,6-2,8-8),5-f(some8-some4,1-some5,5-6,4-4,some0-2,7-8,3-5,some3-7),6-f(some9-some5,some8-6,1-4,5-2,4-8,some0-5,7-7,3-some10),7-f(2-6,some9-4,some8-2,1-8,5-5,4-7,some0-some10,7-some11)],[2-f(4-some2,some0-3,7-1,3-some4,some3-some5,6-6,8-4,some6-2),3-f(5-3,4-1,some0-some4,7-some5,3-6,some3-4,6-2,8-8),5-f(some8-some4,1-some5,5-6,4-4,some0-2,7-8,3-5,some3-7),6-f(some9-some5,some8-6,1-4,5-2,4-8,some0-5,7-7,3-some10),7-f(2-6,some9-4,some8-2,1-8,5-5,4-7,some0-some10,7-some11)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,7-some2,3-3,some3-1,6-some4,8-some5,some6-6,some7-4),3-3)"}]
    <#lemma606>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_419 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_419.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma512> a r:Inference;
  r:gives {
    "queens([1-f(some6-some8,4-some9,8-some10,some11-1,5-5,7-4,some12-3,some13-7),2-f(6-some9,some6-some10,4-1,8-5,some11-4,5-3,7-7,some12-2),3-f(3-some10,6-1,some6-5,4-4,8-3,some11-7,5-2,7-some2),5-f(some3-5,1-4,3-3,6-7,some6-2,4-some2,8-some4,some11-6),6-f(some1-4,some3-3,1-7,3-2,6-some2,some6-some4,4-6,8-8),7-f(2-3,some1-7,some3-2,1-some2,3-some4,6-6,some6-8,4-some5)],2,[5,3,1,7,2,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(5-f(some0-5,1-4,3-3,6-7,some1-2,4-some2,8-some3,some4-6),[1-f(some1-some5,4-some6,8-some7,some4-1,5-5,7-4,some8-3,some9-7),2-f(6-some6,some1-some7,4-1,8-5,some4-4,5-3,7-7,some8-2),3-f(3-some7,6-1,some1-5,4-4,8-3,some4-7,5-2,7-some2),5-f(some0-5,1-4,3-3,6-7,some1-2,4-some2,8-some3,some4-6),6-f(some10-4,some0-3,1-7,3-2,6-some2,some1-some3,4-6,8-8),7-f(2-3,some10-7,some0-2,1-some2,3-some3,6-6,some1-8,4-some11)],[1-f(some1-some5,4-some6,8-some7,some4-1,5-5,7-4,some8-3,some9-7),2-f(6-some6,some1-some7,4-1,8-5,some4-4,5-3,7-7,some8-2),3-f(3-some7,6-1,some1-5,4-4,8-3,some4-7,5-2,7-some2),6-f(some10-4,some0-3,1-7,3-2,6-some2,some1-some3,4-6,8-8),7-f(2-3,some10-7,some0-2,1-some2,3-some3,6-6,some1-8,4-some11)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-5,1-4,3-3,6-7,some1-2,4-some2,8-some3,some4-6),3-3)"}]
    <#lemma607>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_420 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_420.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma513> a r:Inference;
  r:gives {
    "queens([2-f(3-2,7-some2,2-some4,some1-1,some3-3,6-6,8-some7,some5-4),3-f(4-some2,3-some4,7-1,2-3,some1-6,some3-some7,6-4,8-8),4-f(5-some4,4-1,3-3,7-6,2-some7,some1-4,some3-8,6-some8),6-f(some9-3,1-6,5-some7,4-4,3-8,7-some8,2-5,some1-7),7-f(some10-6,some9-some7,1-4,5-8,4-some8,3-5,7-7,2-some11),8-f(some12-some7,some10-4,some9-8,1-some8,5-5,4-7,3-some11,7-some13)],2,[4,6,8,2,7,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(4-f(5-some0,4-1,3-3,7-6,2-some1,some2-4,some3-8,6-some4),[2-f(3-2,7-some5,2-some0,some2-1,some3-3,6-6,8-some1,some6-4),3-f(4-some5,3-some0,7-1,2-3,some2-6,some3-some1,6-4,8-8),4-f(5-some0,4-1,3-3,7-6,2-some1,some2-4,some3-8,6-some4),6-f(some7-3,1-6,5-some1,4-4,3-8,7-some4,2-5,some2-7),7-f(some8-6,some7-some1,1-4,5-8,4-some4,3-5,7-7,2-some9),8-f(some10-some1,some8-4,some7-8,1-some4,5-5,4-7,3-some9,7-some11)],[2-f(3-2,7-some5,2-some0,some2-1,some3-3,6-6,8-some1,some6-4),3-f(4-some5,3-some0,7-1,2-3,some2-6,some3-some1,6-4,8-8),6-f(some7-3,1-6,5-some1,4-4,3-8,7-some4,2-5,some2-7),7-f(some8-6,some7-some1,1-4,5-8,4-some4,3-5,7-7,2-some9),8-f(some10-some1,some8-4,some7-8,1-some4,5-5,4-7,3-some9,7-some11)])"}]
    [ a r:Fact; r:gives {"arg(3,f(5-some0,4-1,3-3,7-6,2-some1,some2-4,some3-8,6-some4),3-3)"}]
    <#lemma608>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_421 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_421.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma514> a r:Inference;
  r:gives {
    "queens([2-f(6-2,4-some1,2-some2,8-1,5-5,7-4,some3-some6,some4-7),3-f(some7-some1,6-some2,4-1,2-5,8-4,5-some6,7-7,some3-3),4-f(some8-some2,some7-1,6-5,4-4,2-some6,8-7,5-3,7-some9),6-f(3-5,1-4,some8-some6,some7-7,6-3,4-some9,2-6,8-8),7-f(some10-4,3-some6,1-7,some8-3,some7-some9,6-6,4-8,2-some11),8-f(some12-some6,some10-7,3-3,1-some9,some8-6,some7-8,6-some11,4-some13)],2,[8,4,2,7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-7,3-3,1-some3,some4-6,some5-8,6-some6,4-some7),[2-f(6-2,4-some8,2-some9,8-1,5-5,7-4,some10-some1,some11-7),3-f(some5-some8,6-some9,4-1,2-5,8-4,5-some1,7-7,some10-3),4-f(some4-some9,some5-1,6-5,4-4,2-some1,8-7,5-3,7-some3),6-f(3-5,1-4,some4-some1,some5-7,6-3,4-some3,2-6,8-8),7-f(some2-4,3-some1,1-7,some4-3,some5-some3,6-6,4-8,2-some6),8-f(some0-some1,some2-7,3-3,1-some3,some4-6,some5-8,6-some6,4-some7)],[2-f(6-2,4-some8,2-some9,8-1,5-5,7-4,some10-some1,some11-7),3-f(some5-some8,6-some9,4-1,2-5,8-4,5-some1,7-7,some10-3),4-f(some4-some9,some5-1,6-5,4-4,2-some1,8-7,5-3,7-some3),6-f(3-5,1-4,some4-some1,some5-7,6-3,4-some3,2-6,8-8),7-f(some2-4,3-some1,1-7,some4-3,some5-some3,6-6,4-8,2-some6)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,some2-7,3-3,1-some3,some4-6,some5-8,6-some6,4-some7),3-3)"}]
    <#lemma609>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_422 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_422.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma515> a r:Inference;
  r:gives {
    "queens([2-f(6-2,some0-some2,2-some4,5-1,some3-some5,8-5,7-7,some6-4),3-f(4-some2,6-some4,some0-1,2-some5,5-5,some3-7,8-4,7-3),4-f(some8-some4,4-1,6-some5,some0-5,2-7,5-4,some3-3,8-8),6-f(3-some5,1-5,some8-7,4-4,6-3,some0-8,2-6,5-some9),7-f(some10-5,3-7,1-4,some8-3,4-8,6-6,some0-some9,2-some11),8-f(some12-7,some10-4,3-3,1-8,some8-6,4-some9,6-some11,some0-some13)],2,[8,6,3,7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(8-f(some0-7,some1-4,3-3,1-8,some2-6,4-some3,6-some4,some5-some6),[2-f(6-2,some5-some7,2-some8,5-1,some9-some10,8-5,7-7,some11-4),3-f(4-some7,6-some8,some5-1,2-some10,5-5,some9-7,8-4,7-3),4-f(some2-some8,4-1,6-some10,some5-5,2-7,5-4,some9-3,8-8),6-f(3-some10,1-5,some2-7,4-4,6-3,some5-8,2-6,5-some3),7-f(some1-5,3-7,1-4,some2-3,4-8,6-6,some5-some3,2-some4),8-f(some0-7,some1-4,3-3,1-8,some2-6,4-some3,6-some4,some5-some6)],[2-f(6-2,some5-some7,2-some8,5-1,some9-some10,8-5,7-7,some11-4),3-f(4-some7,6-some8,some5-1,2-some10,5-5,some9-7,8-4,7-3),4-f(some2-some8,4-1,6-some10,some5-5,2-7,5-4,some9-3,8-8),6-f(3-some10,1-5,some2-7,4-4,6-3,some5-8,2-6,5-some3),7-f(some1-5,3-7,1-4,some2-3,4-8,6-6,some5-some3,2-some4)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-7,some1-4,3-3,1-8,some2-6,4-some3,6-some4,some5-some6),3-3)"}]
    <#lemma610>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_423 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_423.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma516> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,8-some0,some2-2,6-some1,some3-1,some4-3,7-7,some6-6),3-f(4-2,3-some1,2-1,8-3,some2-7,6-6,some3-4,some4-some7),4-f(5-some1,4-1,3-3,2-7,8-6,some2-4,6-some7,some3-some8),6-f(some9-3,1-7,5-6,4-4,3-some7,2-some8,8-5,some2-some10),7-f(some11-7,some9-6,1-4,5-some7,4-some8,3-5,2-some10,8-8),8-f(some12-6,some11-4,some9-some7,1-some8,5-5,4-some10,3-8,2-some13)],2,[4,6,8,3,1,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(4-f(5-some0,4-1,3-3,2-7,8-6,some1-4,6-some2,some3-some4),[1-f(2-some5,8-some6,some1-2,6-some0,some3-1,some7-3,7-7,some8-6),3-f(4-2,3-some0,2-1,8-3,some1-7,6-6,some3-4,some7-some2),4-f(5-some0,4-1,3-3,2-7,8-6,some1-4,6-some2,some3-some4),6-f(some9-3,1-7,5-6,4-4,3-some2,2-some4,8-5,some1-some10),7-f(some11-7,some9-6,1-4,5-some2,4-some4,3-5,2-some10,8-8),8-f(some12-6,some11-4,some9-some2,1-some4,5-5,4-some10,3-8,2-some13)],[1-f(2-some5,8-some6,some1-2,6-some0,some3-1,some7-3,7-7,some8-6),3-f(4-2,3-some0,2-1,8-3,some1-7,6-6,some3-4,some7-some2),6-f(some9-3,1-7,5-6,4-4,3-some2,2-some4,8-5,some1-some10),7-f(some11-7,some9-6,1-4,5-some2,4-some4,3-5,2-some10,8-8),8-f(some12-6,some11-4,some9-some2,1-some4,5-5,4-some10,3-8,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(5-some0,4-1,3-3,2-7,8-6,some1-4,6-some2,some3-some4),3-3)"}]
    <#lemma611>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_424 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_424.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma517> a r:Inference;
  r:gives {
    "queens([1-f(2-some7,7-some0,5-2,some2-some1,some3-1,some4-3,some5-5,8-8),3-f(6-2,3-some1,2-1,7-3,5-5,some2-8,some3-some6,some4-4),4-f(4-some1,6-1,3-3,2-5,7-8,5-some6,some2-4,some3-some8),6-f(some9-3,1-5,4-8,6-some6,3-4,2-some8,7-7,5-6),7-f(some10-5,some9-8,1-some6,4-4,6-some8,3-7,2-6,7-some11),8-f(some12-8,some10-some6,some9-4,1-some8,4-7,6-6,3-some11,2-some13)],2,[4,7,3,8,6,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(4-f(4-some0,6-1,3-3,2-5,7-8,5-some1,some2-4,some3-some4),[1-f(2-some5,7-some6,5-2,some2-some0,some3-1,some7-3,some8-5,8-8),3-f(6-2,3-some0,2-1,7-3,5-5,some2-8,some3-some1,some7-4),4-f(4-some0,6-1,3-3,2-5,7-8,5-some1,some2-4,some3-some4),6-f(some9-3,1-5,4-8,6-some1,3-4,2-some4,7-7,5-6),7-f(some10-5,some9-8,1-some1,4-4,6-some4,3-7,2-6,7-some11),8-f(some12-8,some10-some1,some9-4,1-some4,4-7,6-6,3-some11,2-some13)],[1-f(2-some5,7-some6,5-2,some2-some0,some3-1,some7-3,some8-5,8-8),3-f(6-2,3-some0,2-1,7-3,5-5,some2-8,some3-some1,some7-4),6-f(some9-3,1-5,4-8,6-some1,3-4,2-some4,7-7,5-6),7-f(some10-5,some9-8,1-some1,4-4,6-some4,3-7,2-6,7-some11),8-f(some12-8,some10-some1,some9-4,1-some4,4-7,6-6,3-some11,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(4-some0,6-1,3-3,2-5,7-8,5-some1,some2-4,some3-some4),3-3)"}]
    <#lemma612>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_425 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_425.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma518> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,some1-some0,6-2,4-4,some3-1,8-some2,some5-some4,some7-3),3-f(5-2,7-4,2-1,some1-some2,6-some4,4-3,some3-6,8-8),4-f(3-4,5-1,7-some2,2-some4,some1-3,6-6,4-8,some3-5),6-f(some8-some2,1-some4,3-3,5-6,7-8,2-5,some1-some9,6-some10),7-f(some11-some4,some8-3,1-6,3-8,5-5,7-some9,2-some10,some1-7),8-f(some12-3,some11-6,some8-8,1-5,3-some9,5-some10,7-7,2-some13)],2,[6,1,7,4,8,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(6-f(some0-some1,1-some2,3-3,5-6,7-8,2-5,some3-some4,6-some5),[1-f(2-some6,some3-some7,6-2,4-4,some8-1,8-some1,some9-some2,some10-3),3-f(5-2,7-4,2-1,some3-some1,6-some2,4-3,some8-6,8-8),4-f(3-4,5-1,7-some1,2-some2,some3-3,6-6,4-8,some8-5),6-f(some0-some1,1-some2,3-3,5-6,7-8,2-5,some3-some4,6-some5),7-f(some11-some2,some0-3,1-6,3-8,5-5,7-some4,2-some5,some3-7),8-f(some12-3,some11-6,some0-8,1-5,3-some4,5-some5,7-7,2-some13)],[1-f(2-some6,some3-some7,6-2,4-4,some8-1,8-some1,some9-some2,some10-3),3-f(5-2,7-4,2-1,some3-some1,6-some2,4-3,some8-6,8-8),4-f(3-4,5-1,7-some1,2-some2,some3-3,6-6,4-8,some8-5),7-f(some11-some2,some0-3,1-6,3-8,5-5,7-some4,2-some5,some3-7),8-f(some12-3,some11-6,some0-8,1-5,3-some4,5-some5,7-7,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,1-some2,3-3,5-6,7-8,2-5,some3-some4,6-some5),3-3)"}]
    <#lemma613>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_426 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_426.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma519> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,5-some0,8-2,4-4,7-1,some3-some1,some4-some2,some6-5),3-f(some7-2,6-4,2-1,5-some1,8-some2,4-5,7-7,some3-3),4-f(some8-4,some7-1,6-some1,2-some2,5-5,8-7,4-3,7-some9),6-f(3-some1,1-some2,some8-5,some7-7,6-3,2-some9,5-6,8-8),7-f(some10-some2,3-5,1-7,some8-3,some7-some9,6-6,2-8,5-some11),8-f(some12-5,some10-7,3-3,1-some9,some8-6,some7-8,6-some11,2-some13)],2,[8,1,4,7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(8-f(some0-5,some1-7,3-3,1-some2,some3-6,some4-8,6-some5,2-some6),[1-f(2-some7,5-some8,8-2,4-4,7-1,some9-some10,some11-some12,some13-5),3-f(some4-2,6-4,2-1,5-some10,8-some12,4-5,7-7,some9-3),4-f(some3-4,some4-1,6-some10,2-some12,5-5,8-7,4-3,7-some2),6-f(3-some10,1-some12,some3-5,some4-7,6-3,2-some2,5-6,8-8),7-f(some1-some12,3-5,1-7,some3-3,some4-some2,6-6,2-8,5-some5),8-f(some0-5,some1-7,3-3,1-some2,some3-6,some4-8,6-some5,2-some6)],[1-f(2-some7,5-some8,8-2,4-4,7-1,some9-some10,some11-some12,some13-5),3-f(some4-2,6-4,2-1,5-some10,8-some12,4-5,7-7,some9-3),4-f(some3-4,some4-1,6-some10,2-some12,5-5,8-7,4-3,7-some2),6-f(3-some10,1-some12,some3-5,some4-7,6-3,2-some2,5-6,8-8),7-f(some1-some12,3-5,1-7,some3-3,some4-some2,6-6,2-8,5-some5)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-5,some1-7,3-3,1-some2,some3-6,some4-8,6-some5,2-some6),3-3)"}]
    <#lemma614>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_427 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_427.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma520> a r:Inference;
  r:gives {
    "queens([1-f(some0-some4,8-some5,3-3,7-2,6-1,some3-some1,some6-6,some7-some2),2-f(2-some5,some0-3,8-2,3-1,7-some1,6-6,some3-some2,some6-4),4-f(5-2,4-1,2-some1,some0-6,8-some2,3-4,7-7,6-some8),6-f(some9-some1,1-6,5-some2,4-4,2-7,some0-some8,8-5,3-some10),7-f(some11-6,some9-some2,1-4,5-7,4-some8,2-5,some0-some10,8-8),8-f(some12-some2,some11-4,some9-7,1-some8,5-5,4-some10,2-8,some0-some13)],2,[1,6,8,2,4,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,8-some2,3-3,7-2,6-1,some3-some4,some5-6,some6-some7),[1-f(some0-some1,8-some2,3-3,7-2,6-1,some3-some4,some5-6,some6-some7),2-f(2-some2,some0-3,8-2,3-1,7-some4,6-6,some3-some7,some5-4),4-f(5-2,4-1,2-some4,some0-6,8-some7,3-4,7-7,6-some8),6-f(some9-some4,1-6,5-some7,4-4,2-7,some0-some8,8-5,3-some10),7-f(some11-6,some9-some7,1-4,5-7,4-some8,2-5,some0-some10,8-8),8-f(some12-some7,some11-4,some9-7,1-some8,5-5,4-some10,2-8,some0-some13)],[2-f(2-some2,some0-3,8-2,3-1,7-some4,6-6,some3-some7,some5-4),4-f(5-2,4-1,2-some4,some0-6,8-some7,3-4,7-7,6-some8),6-f(some9-some4,1-6,5-some7,4-4,2-7,some0-some8,8-5,3-some10),7-f(some11-6,some9-some7,1-4,5-7,4-some8,2-5,some0-some10,8-8),8-f(some12-some7,some11-4,some9-7,1-some8,5-5,4-some10,2-8,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,8-some2,3-3,7-2,6-1,some3-some4,some5-6,some6-some7),3-3)"}]
    <#lemma615>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_428 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_428.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma521> a r:Inference;
  r:gives {
    "queens([1-f(some0-some5,7-some6,3-3,5-2,8-1,some4-5,some7-some1,some8-some2),2-f(2-some6,some0-3,7-2,3-1,5-5,8-some1,some4-some2,some7-some3),4-f(4-2,6-1,2-5,some0-some1,7-some2,3-some3,5-4,8-8),6-f(some9-5,1-some1,4-some2,6-some3,2-4,some0-8,7-7,3-6),7-f(some10-some1,some9-some2,1-some3,4-4,6-8,2-7,some0-6,7-some11),8-f(some12-some2,some10-some3,some9-4,1-8,4-7,6-6,2-some11,some0-some13)],2,[1,7,2,8,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,7-some2,3-3,5-2,8-1,some3-5,some4-some5,some6-some7),[1-f(some0-some1,7-some2,3-3,5-2,8-1,some3-5,some4-some5,some6-some7),2-f(2-some2,some0-3,7-2,3-1,5-5,8-some5,some3-some7,some4-some8),4-f(4-2,6-1,2-5,some0-some5,7-some7,3-some8,5-4,8-8),6-f(some9-5,1-some5,4-some7,6-some8,2-4,some0-8,7-7,3-6),7-f(some10-some5,some9-some7,1-some8,4-4,6-8,2-7,some0-6,7-some11),8-f(some12-some7,some10-some8,some9-4,1-8,4-7,6-6,2-some11,some0-some13)],[2-f(2-some2,some0-3,7-2,3-1,5-5,8-some5,some3-some7,some4-some8),4-f(4-2,6-1,2-5,some0-some5,7-some7,3-some8,5-4,8-8),6-f(some9-5,1-some5,4-some7,6-some8,2-4,some0-8,7-7,3-6),7-f(some10-some5,some9-some7,1-some8,4-4,6-8,2-7,some0-6,7-some11),8-f(some12-some7,some10-some8,some9-4,1-8,4-7,6-6,2-some11,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,7-some2,3-3,5-2,8-1,some3-5,some4-some5,some6-some7),3-3)"}]
    <#lemma616>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_429 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_429.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma522> a r:Inference;
  r:gives {
    "queens([1-f(4-some5,7-some6,some1-some0,some2-2,some4-1,6-6,8-4,some7-some3),2-f(2-some6,4-some0,7-2,some1-1,some2-6,some4-4,6-some3,8-8),4-f(some8-2,5-1,2-6,4-4,7-some3,some1-8,some2-3,some4-5),6-f(3-6,1-4,some8-some3,5-8,2-3,4-5,7-7,some1-some9),7-f(some10-4,3-some3,1-8,some8-3,5-5,2-7,4-some9,7-some11),8-f(some12-some3,some10-8,3-3,1-5,some8-7,5-some9,2-some11,4-some13)],2,[8,4,7,1,6,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-8,3-3,1-5,some3-7,5-some4,2-some5,4-some6),[1-f(4-some7,7-some8,some9-some10,some11-2,some12-1,6-6,8-4,some13-some1),2-f(2-some8,4-some10,7-2,some9-1,some11-6,some12-4,6-some1,8-8),4-f(some3-2,5-1,2-6,4-4,7-some1,some9-8,some11-3,some12-5),6-f(3-6,1-4,some3-some1,5-8,2-3,4-5,7-7,some9-some4),7-f(some2-4,3-some1,1-8,some3-3,5-5,2-7,4-some4,7-some5),8-f(some0-some1,some2-8,3-3,1-5,some3-7,5-some4,2-some5,4-some6)],[1-f(4-some7,7-some8,some9-some10,some11-2,some12-1,6-6,8-4,some13-some1),2-f(2-some8,4-some10,7-2,some9-1,some11-6,some12-4,6-some1,8-8),4-f(some3-2,5-1,2-6,4-4,7-some1,some9-8,some11-3,some12-5),6-f(3-6,1-4,some3-some1,5-8,2-3,4-5,7-7,some9-some4),7-f(some2-4,3-some1,1-8,some3-3,5-5,2-7,4-some4,7-some5)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,some2-8,3-3,1-5,some3-7,5-some4,2-some5,4-some6),3-3)"}]
    <#lemma617>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_430 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_430.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma523> a r:Inference;
  r:gives {
    "queens([1-f(6-some6,4-some7,3-3,7-some8,some9-1,some10-4,8-some1,some11-2),2-f(some3-some7,6-3,4-some8,3-1,7-4,some9-some1,some10-2,8-8),3-f(some2-3,some3-some8,6-1,4-4,3-some1,7-2,some9-8,some10-7),4-f(5-some8,some2-1,some3-4,6-some1,4-2,3-8,7-7,some9-6),6-f(2-4,1-some1,5-2,some2-8,some3-7,6-6,4-5,3-some4),8-f(some12-2,some0-8,2-7,1-6,5-5,some2-some4,some3-some5,6-some13)],2,[1,3,8,6,4,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(1-f(6-some0,4-some1,3-3,7-some2,some3-1,some4-4,8-some5,some6-2),[1-f(6-some0,4-some1,3-3,7-some2,some3-1,some4-4,8-some5,some6-2),2-f(some7-some1,6-3,4-some2,3-1,7-4,some3-some5,some4-2,8-8),3-f(some8-3,some7-some2,6-1,4-4,3-some5,7-2,some3-8,some4-7),4-f(5-some2,some8-1,some7-4,6-some5,4-2,3-8,7-7,some3-6),6-f(2-4,1-some5,5-2,some8-8,some7-7,6-6,4-5,3-some9),8-f(some10-2,some11-8,2-7,1-6,5-5,some8-some9,some7-some12,6-some13)],[2-f(some7-some1,6-3,4-some2,3-1,7-4,some3-some5,some4-2,8-8),3-f(some8-3,some7-some2,6-1,4-4,3-some5,7-2,some3-8,some4-7),4-f(5-some2,some8-1,some7-4,6-some5,4-2,3-8,7-7,some3-6),6-f(2-4,1-some5,5-2,some8-8,some7-7,6-6,4-5,3-some9),8-f(some10-2,some11-8,2-7,1-6,5-5,some8-some9,some7-some12,6-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(6-some0,4-some1,3-3,7-some2,some3-1,some4-4,8-some5,some6-2),3-3)"}]
    <#lemma618>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_431 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_431.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma524> a r:Inference;
  r:gives {
    "queens([1-f(4-some6,7-some7,3-3,5-some8,some9-1,8-5,some10-4,some11-2),2-f(some4-some7,4-3,7-some8,3-1,5-5,some9-4,8-2,some10-some1),3-f(6-3,some4-some8,4-1,7-5,3-4,5-2,some9-some1,8-8),4-f(some2-some8,6-1,some4-5,4-4,7-2,3-some1,5-8,some9-some3),6-f(2-5,1-4,some2-2,6-some1,some4-8,4-some3,7-7,3-6),8-f(some12-2,some0-some1,2-8,1-some3,some2-7,6-6,some4-some5,4-some13)],2,[1,4,2,8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(1-f(4-some0,7-some1,3-3,5-some2,some3-1,8-5,some4-4,some5-2),[1-f(4-some0,7-some1,3-3,5-some2,some3-1,8-5,some4-4,some5-2),2-f(some6-some1,4-3,7-some2,3-1,5-5,some3-4,8-2,some4-some7),3-f(6-3,some6-some2,4-1,7-5,3-4,5-2,some3-some7,8-8),4-f(some8-some2,6-1,some6-5,4-4,7-2,3-some7,5-8,some3-some9),6-f(2-5,1-4,some8-2,6-some7,some6-8,4-some9,7-7,3-6),8-f(some10-2,some11-some7,2-8,1-some9,some8-7,6-6,some6-some12,4-some13)],[2-f(some6-some1,4-3,7-some2,3-1,5-5,some3-4,8-2,some4-some7),3-f(6-3,some6-some2,4-1,7-5,3-4,5-2,some3-some7,8-8),4-f(some8-some2,6-1,some6-5,4-4,7-2,3-some7,5-8,some3-some9),6-f(2-5,1-4,some8-2,6-some7,some6-8,4-some9,7-7,3-6),8-f(some10-2,some11-some7,2-8,1-some9,some8-7,6-6,some6-some12,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(4-some0,7-some1,3-3,5-some2,some3-1,8-5,some4-4,some5-2),3-3)"}]
    <#lemma619>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_432 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_432.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma525> a r:Inference;
  r:gives {
    "queens([1-f(4-some6,3-some7,8-some8,some9-3,7-1,6-6,some10-4,some11-2),2-f(some4-some7,4-some8,3-3,8-1,some9-6,7-4,6-2,some10-7),3-f(some2-some8,some4-3,4-1,3-6,8-4,some9-2,7-7,6-some1),4-f(5-3,some2-1,some4-6,4-4,3-2,8-7,some9-some1,7-some3),6-f(2-6,1-4,5-2,some2-7,some4-some1,4-some3,3-5,8-8),8-f(some12-2,some0-7,2-some1,1-some3,5-5,some2-8,some4-some5,4-some13)],2,[2,4,8,1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(2-f(some0-some1,4-some2,3-3,8-1,some3-6,7-4,6-2,some4-7),[1-f(4-some5,3-some1,8-some2,some3-3,7-1,6-6,some4-4,some6-2),2-f(some0-some1,4-some2,3-3,8-1,some3-6,7-4,6-2,some4-7),3-f(some7-some2,some0-3,4-1,3-6,8-4,some3-2,7-7,6-some8),4-f(5-3,some7-1,some0-6,4-4,3-2,8-7,some3-some8,7-some9),6-f(2-6,1-4,5-2,some7-7,some0-some8,4-some9,3-5,8-8),8-f(some10-2,some11-7,2-some8,1-some9,5-5,some7-8,some0-some12,4-some13)],[1-f(4-some5,3-some1,8-some2,some3-3,7-1,6-6,some4-4,some6-2),3-f(some7-some2,some0-3,4-1,3-6,8-4,some3-2,7-7,6-some8),4-f(5-3,some7-1,some0-6,4-4,3-2,8-7,some3-some8,7-some9),6-f(2-6,1-4,5-2,some7-7,some0-some8,4-some9,3-5,8-8),8-f(some10-2,some11-7,2-some8,1-some9,5-5,some7-8,some0-some12,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,4-some2,3-3,8-1,some3-6,7-4,6-2,some4-7),3-3)"}]
    <#lemma620>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_433 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_433.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma526> a r:Inference;
  r:gives {
    "queens([1-f(8-some7,3-some8,5-some9,7-3,some10-1,6-6,some11-5,some12-2),2-f(some3-some8,8-some9,3-3,5-1,7-6,some10-5,6-2,some11-4),3-f(4-some9,some3-3,8-1,3-6,5-5,7-2,some10-4,6-7),4-f(some1-3,4-1,some3-6,8-5,3-2,5-4,7-7,some10-some2),6-f(2-6,1-5,some1-2,4-4,some3-7,8-some2,3-some4,5-some5),8-f(some13-2,some0-4,2-7,1-some2,some1-some4,4-some5,some3-some6,8-8)],2,[2,6,3,1,4,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(2-f(some0-some1,8-some2,3-3,5-1,7-6,some3-5,6-2,some4-4),[1-f(8-some5,3-some1,5-some2,7-3,some3-1,6-6,some4-5,some6-2),2-f(some0-some1,8-some2,3-3,5-1,7-6,some3-5,6-2,some4-4),3-f(4-some2,some0-3,8-1,3-6,5-5,7-2,some3-4,6-7),4-f(some7-3,4-1,some0-6,8-5,3-2,5-4,7-7,some3-some8),6-f(2-6,1-5,some7-2,4-4,some0-7,8-some8,3-some9,5-some10),8-f(some11-2,some12-4,2-7,1-some8,some7-some9,4-some10,some0-some13,8-8)],[1-f(8-some5,3-some1,5-some2,7-3,some3-1,6-6,some4-5,some6-2),3-f(4-some2,some0-3,8-1,3-6,5-5,7-2,some3-4,6-7),4-f(some7-3,4-1,some0-6,8-5,3-2,5-4,7-7,some3-some8),6-f(2-6,1-5,some7-2,4-4,some0-7,8-some8,3-some9,5-some10),8-f(some11-2,some12-4,2-7,1-some8,some7-some9,4-some10,some0-some13,8-8)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,8-some2,3-3,5-1,7-6,some3-5,6-2,some4-4),3-3)"}]
    <#lemma621>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_434 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_434.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma527> a r:Inference;
  r:gives {
    "queens([1-f(some4-some6,3-some7,5-some8,some9-3,8-1,6-6,some10-5,some11-2),2-f(7-some7,some4-some8,3-3,5-1,some9-6,8-5,6-2,some10-4),3-f(4-some8,7-3,some4-1,3-6,5-5,some9-2,8-4,6-some2),4-f(some1-3,4-1,7-6,some4-5,3-2,5-4,some9-some2,8-8),6-f(2-6,1-5,some1-2,4-4,7-some2,some4-8,3-some3,5-some5),8-f(some12-2,some0-4,2-some2,1-8,some1-some3,4-some5,7-7,some4-some13)],2,[2,6,3,1,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(2-f(7-some0,some1-some2,3-3,5-1,some3-6,8-5,6-2,some4-4),[1-f(some1-some5,3-some0,5-some2,some3-3,8-1,6-6,some4-5,some6-2),2-f(7-some0,some1-some2,3-3,5-1,some3-6,8-5,6-2,some4-4),3-f(4-some2,7-3,some1-1,3-6,5-5,some3-2,8-4,6-some7),4-f(some8-3,4-1,7-6,some1-5,3-2,5-4,some3-some7,8-8),6-f(2-6,1-5,some8-2,4-4,7-some7,some1-8,3-some9,5-some10),8-f(some11-2,some12-4,2-some7,1-8,some8-some9,4-some10,7-7,some1-some13)],[1-f(some1-some5,3-some0,5-some2,some3-3,8-1,6-6,some4-5,some6-2),3-f(4-some2,7-3,some1-1,3-6,5-5,some3-2,8-4,6-some7),4-f(some8-3,4-1,7-6,some1-5,3-2,5-4,some3-some7,8-8),6-f(2-6,1-5,some8-2,4-4,7-some7,some1-8,3-some9,5-some10),8-f(some11-2,some12-4,2-some7,1-8,some8-some9,4-some10,7-7,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(7-some0,some1-some2,3-3,5-1,some3-6,8-5,6-2,some4-4),3-3)"}]
    <#lemma622>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_435 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_435.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma528> a r:Inference;
  r:gives {
    "queens([1-f(some4-some6,7-some7,5-some8,4-4,some9-1,some10-3,8-5,some11-2),2-f(3-some7,some4-some8,7-4,5-1,4-3,some9-5,some10-2,8-8),3-f(6-some8,3-4,some4-1,7-3,5-5,4-2,some9-8,some10-some2),4-f(some1-4,6-1,3-3,some4-5,7-2,5-8,4-some2,some9-some3),6-f(2-3,1-5,some1-2,6-8,3-some2,some4-some3,7-7,5-6),8-f(some12-2,some0-8,2-some2,1-some3,some1-7,6-6,3-some5,some4-some13)],2,[4,1,3,8,6,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(4-f(some0-4,6-1,3-3,some1-5,7-2,5-8,4-some2,some3-some4),[1-f(some1-some5,7-some6,5-some7,4-4,some3-1,some8-3,8-5,some9-2),2-f(3-some6,some1-some7,7-4,5-1,4-3,some3-5,some8-2,8-8),3-f(6-some7,3-4,some1-1,7-3,5-5,4-2,some3-8,some8-some2),4-f(some0-4,6-1,3-3,some1-5,7-2,5-8,4-some2,some3-some4),6-f(2-3,1-5,some0-2,6-8,3-some2,some1-some4,7-7,5-6),8-f(some10-2,some11-8,2-some2,1-some4,some0-7,6-6,3-some12,some1-some13)],[1-f(some1-some5,7-some6,5-some7,4-4,some3-1,some8-3,8-5,some9-2),2-f(3-some6,some1-some7,7-4,5-1,4-3,some3-5,some8-2,8-8),3-f(6-some7,3-4,some1-1,7-3,5-5,4-2,some3-8,some8-some2),6-f(2-3,1-5,some0-2,6-8,3-some2,some1-some4,7-7,5-6),8-f(some10-2,some11-8,2-some2,1-some4,some0-7,6-6,3-some12,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-4,6-1,3-3,some1-5,7-2,5-8,4-some2,some3-some4),3-3)"}]
    <#lemma623>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_436 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_436.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma529> a r:Inference;
  r:gives {
    "queens([1-f(6-some8,8-some9,5-some10,4-4,some11-1,7-3,some12-5,some13-7),2-f(3-some9,6-some10,8-4,5-1,4-3,some11-5,7-7,some12-2),3-f(some5-some10,3-4,6-1,8-3,5-5,4-7,some11-2,7-some2),4-f(some3-4,some5-1,3-3,6-5,8-7,5-2,4-some2,some11-6),6-f(some1-3,1-5,some3-7,some5-2,3-some2,6-6,8-some4,5-some6),7-f(2-5,some1-7,1-2,some3-some2,some5-6,3-some4,6-some6,8-8)],2,[4,1,3,6,2,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(4-f(some0-4,some1-1,3-3,6-5,8-7,5-2,4-some2,some3-6),[1-f(6-some4,8-some5,5-some6,4-4,some3-1,7-3,some7-5,some8-7),2-f(3-some5,6-some6,8-4,5-1,4-3,some3-5,7-7,some7-2),3-f(some1-some6,3-4,6-1,8-3,5-5,4-7,some3-2,7-some2),4-f(some0-4,some1-1,3-3,6-5,8-7,5-2,4-some2,some3-6),6-f(some9-3,1-5,some0-7,some1-2,3-some2,6-6,8-some10,5-some11),7-f(2-5,some9-7,1-2,some0-some2,some1-6,3-some10,6-some11,8-8)],[1-f(6-some4,8-some5,5-some6,4-4,some3-1,7-3,some7-5,some8-7),2-f(3-some5,6-some6,8-4,5-1,4-3,some3-5,7-7,some7-2),3-f(some1-some6,3-4,6-1,8-3,5-5,4-7,some3-2,7-some2),6-f(some9-3,1-5,some0-7,some1-2,3-some2,6-6,8-some10,5-some11),7-f(2-5,some9-7,1-2,some0-some2,some1-6,3-some10,6-some11,8-8)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-4,some1-1,3-3,6-5,8-7,5-2,4-some2,some3-6),3-3)"}]
    <#lemma624>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_437 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_437.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma530> a r:Inference;
  r:gives {
    "queens([1-f(some6-some8,7-some9,some10-some11,4-4,6-1,8-3,some12-6,some13-some1),2-f(3-some9,some6-some11,7-4,some10-1,4-3,6-6,8-some1,some12-2),3-f(5-some11,3-4,some6-1,7-3,some10-6,4-some1,6-2,8-8),4-f(some3-4,5-1,3-3,some6-6,7-some1,some10-2,4-8,6-5),6-f(some2-3,1-6,some3-some1,5-2,3-8,some6-5,7-7,some10-some4),7-f(2-6,some2-some1,1-2,some3-8,5-5,3-7,some6-some4,7-some5)],2,[4,1,7,2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(4-f(some0-4,5-1,3-3,some1-6,7-some2,some3-2,4-8,6-5),[1-f(some1-some4,7-some5,some3-some6,4-4,6-1,8-3,some7-6,some8-some2),2-f(3-some5,some1-some6,7-4,some3-1,4-3,6-6,8-some2,some7-2),3-f(5-some6,3-4,some1-1,7-3,some3-6,4-some2,6-2,8-8),4-f(some0-4,5-1,3-3,some1-6,7-some2,some3-2,4-8,6-5),6-f(some9-3,1-6,some0-some2,5-2,3-8,some1-5,7-7,some3-some10),7-f(2-6,some9-some2,1-2,some0-8,5-5,3-7,some1-some10,7-some11)],[1-f(some1-some4,7-some5,some3-some6,4-4,6-1,8-3,some7-6,some8-some2),2-f(3-some5,some1-some6,7-4,some3-1,4-3,6-6,8-some2,some7-2),3-f(5-some6,3-4,some1-1,7-3,some3-6,4-some2,6-2,8-8),6-f(some9-3,1-6,some0-some2,5-2,3-8,some1-5,7-7,some3-some10),7-f(2-6,some9-some2,1-2,some0-8,5-5,3-7,some1-some10,7-some11)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-4,5-1,3-3,some1-6,7-some2,some3-2,4-8,6-5),3-3)"}]
    <#lemma625>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_438 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_438.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma531> a r:Inference;
  r:gives {
    "queens([2-f(some6-2,7-some1,2-some2,4-4,6-1,8-3,some3-6,some4-some7),3-f(3-some1,some6-some2,7-4,2-1,4-3,6-6,8-some7,some3-some8),4-f(5-some2,3-4,some6-1,7-3,2-6,4-some7,6-some8,8-8),5-f(some9-4,5-1,3-3,some6-6,7-some7,2-some8,4-8,6-5),7-f(some10-3,1-6,some9-some7,5-some8,3-8,some6-5,7-7,2-some11),8-f(some12-6,some10-some7,1-some8,some9-8,5-5,3-7,some6-some11,7-some13)],2,[5,2,8,3,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(5-f(some0-4,5-1,3-3,some1-6,7-some2,2-some3,4-8,6-5),[2-f(some1-2,7-some4,2-some5,4-4,6-1,8-3,some6-6,some7-some2),3-f(3-some4,some1-some5,7-4,2-1,4-3,6-6,8-some2,some6-some3),4-f(5-some5,3-4,some1-1,7-3,2-6,4-some2,6-some3,8-8),5-f(some0-4,5-1,3-3,some1-6,7-some2,2-some3,4-8,6-5),7-f(some8-3,1-6,some0-some2,5-some3,3-8,some1-5,7-7,2-some9),8-f(some10-6,some8-some2,1-some3,some0-8,5-5,3-7,some1-some9,7-some11)],[2-f(some1-2,7-some4,2-some5,4-4,6-1,8-3,some6-6,some7-some2),3-f(3-some4,some1-some5,7-4,2-1,4-3,6-6,8-some2,some6-some3),4-f(5-some5,3-4,some1-1,7-3,2-6,4-some2,6-some3,8-8),7-f(some8-3,1-6,some0-some2,5-some3,3-8,some1-5,7-7,2-some9),8-f(some10-6,some8-some2,1-some3,some0-8,5-5,3-7,some1-some9,7-some11)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-4,5-1,3-3,some1-6,7-some2,2-some3,4-8,6-5),3-3)"}]
    <#lemma626>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_439 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_439.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma532> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,6-some0,5-2,4-4,8-some1,some2-1,some4-5,some6-some3),3-f(some7-2,7-4,2-some1,6-1,5-5,4-some3,8-3,some2-6),4-f(some8-4,some7-some1,7-1,2-5,6-some3,5-3,4-6,8-8),5-f(3-some1,some8-1,some7-5,7-some3,2-3,6-6,5-8,4-some9),7-f(some10-5,1-some3,3-3,some8-6,some7-8,7-some9,2-some11,6-7),8-f(some12-some3,some10-3,1-6,3-8,some8-some9,some7-some11,7-7,2-some13)],2,[7,1,3,5,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(7-f(some0-5,1-some1,3-3,some2-6,some3-8,7-some4,2-some5,6-7),[1-f(2-some6,6-some7,5-2,4-4,8-some8,some9-1,some10-5,some11-some1),3-f(some3-2,7-4,2-some8,6-1,5-5,4-some1,8-3,some9-6),4-f(some2-4,some3-some8,7-1,2-5,6-some1,5-3,4-6,8-8),5-f(3-some8,some2-1,some3-5,7-some1,2-3,6-6,5-8,4-some4),7-f(some0-5,1-some1,3-3,some2-6,some3-8,7-some4,2-some5,6-7),8-f(some12-some1,some0-3,1-6,3-8,some2-some4,some3-some5,7-7,2-some13)],[1-f(2-some6,6-some7,5-2,4-4,8-some8,some9-1,some10-5,some11-some1),3-f(some3-2,7-4,2-some8,6-1,5-5,4-some1,8-3,some9-6),4-f(some2-4,some3-some8,7-1,2-5,6-some1,5-3,4-6,8-8),5-f(3-some8,some2-1,some3-5,7-some1,2-3,6-6,5-8,4-some4),8-f(some12-some1,some0-3,1-6,3-8,some2-some4,some3-some5,7-7,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-5,1-some1,3-3,some2-6,some3-8,7-some4,2-some5,6-7),3-3)"}]
    <#lemma627>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_440 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_440.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma533> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,5-some1,7-2,4-4,some3-some2,8-1,some5-some4,some7-5),3-f(6-2,some0-4,2-some2,5-1,7-some4,4-5,some3-3,8-8),4-f(some8-4,6-some2,some0-1,2-some4,5-5,7-3,4-8,some3-7),5-f(3-some2,some8-1,6-some4,some0-5,2-3,5-8,7-7,4-some9),7-f(some10-some4,1-5,3-3,some8-8,6-7,some0-some9,2-6,5-some11),8-f(some12-5,some10-3,1-8,3-7,some8-some9,6-6,some0-some11,2-some13)],2,[7,1,4,8,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(7-f(some0-some1,1-5,3-3,some2-8,6-7,some3-some4,2-6,5-some5),[1-f(2-some6,5-some7,7-2,4-4,some8-some9,8-1,some10-some1,some11-5),3-f(6-2,some3-4,2-some9,5-1,7-some1,4-5,some8-3,8-8),4-f(some2-4,6-some9,some3-1,2-some1,5-5,7-3,4-8,some8-7),5-f(3-some9,some2-1,6-some1,some3-5,2-3,5-8,7-7,4-some4),7-f(some0-some1,1-5,3-3,some2-8,6-7,some3-some4,2-6,5-some5),8-f(some12-5,some0-3,1-8,3-7,some2-some4,6-6,some3-some5,2-some13)],[1-f(2-some6,5-some7,7-2,4-4,some8-some9,8-1,some10-some1,some11-5),3-f(6-2,some3-4,2-some9,5-1,7-some1,4-5,some8-3,8-8),4-f(some2-4,6-some9,some3-1,2-some1,5-5,7-3,4-8,some8-7),5-f(3-some9,some2-1,6-some1,some3-5,2-3,5-8,7-7,4-some4),8-f(some12-5,some0-3,1-8,3-7,some2-some4,6-6,some3-some5,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,1-5,3-3,some2-8,6-7,some3-some4,2-6,5-some5),3-3)"}]
    <#lemma628>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_441 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_441.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma534> a r:Inference;
  r:gives {
    "queens([1-f(5-some4,some1-some5,3-3,some3-2,8-some0,7-1,some6-some2,some7-7),2-f(2-some5,5-3,some1-2,3-some0,some3-1,8-some2,7-7,some6-5),4-f(4-2,6-some0,2-1,5-some2,some1-7,3-5,some3-4,8-8),5-f(some8-some0,4-1,6-some2,2-7,5-5,some1-4,3-8,some3-some9),7-f(some10-some2,1-7,some8-5,4-4,6-8,2-some9,5-6,some1-some11),8-f(some12-7,some10-5,1-4,some8-8,4-some9,6-6,2-some11,5-some13)],2,[1,7,5,8,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(1-f(5-some0,some1-some2,3-3,some3-2,8-some4,7-1,some5-some6,some7-7),[1-f(5-some0,some1-some2,3-3,some3-2,8-some4,7-1,some5-some6,some7-7),2-f(2-some2,5-3,some1-2,3-some4,some3-1,8-some6,7-7,some5-5),4-f(4-2,6-some4,2-1,5-some6,some1-7,3-5,some3-4,8-8),5-f(some8-some4,4-1,6-some6,2-7,5-5,some1-4,3-8,some3-some9),7-f(some10-some6,1-7,some8-5,4-4,6-8,2-some9,5-6,some1-some11),8-f(some12-7,some10-5,1-4,some8-8,4-some9,6-6,2-some11,5-some13)],[2-f(2-some2,5-3,some1-2,3-some4,some3-1,8-some6,7-7,some5-5),4-f(4-2,6-some4,2-1,5-some6,some1-7,3-5,some3-4,8-8),5-f(some8-some4,4-1,6-some6,2-7,5-5,some1-4,3-8,some3-some9),7-f(some10-some6,1-7,some8-5,4-4,6-8,2-some9,5-6,some1-some11),8-f(some12-7,some10-5,1-4,some8-8,4-some9,6-6,2-some11,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(5-some0,some1-some2,3-3,some3-2,8-some4,7-1,some5-some6,some7-7),3-3)"}]
    <#lemma629>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_442 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_442.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma535> a r:Inference;
  r:gives {
    "queens([1-f(7-some5,5-some6,3-3,8-2,6-some1,some3-1,some7-6,some8-5),2-f(2-some6,7-3,5-2,3-some1,8-1,6-6,some3-5,some7-some2),4-f(some9-2,some0-some1,2-1,7-6,5-5,3-some2,8-some4,6-4),5-f(4-some1,some9-1,some0-6,2-5,7-some2,5-some4,3-4,8-8),7-f(some10-6,1-5,4-some2,some9-some4,some0-4,2-8,7-7,5-some11),8-f(some12-5,some10-some2,1-some4,4-4,some9-8,some0-7,2-some11,7-some13)],2,[1,8,4,2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(1-f(7-some0,5-some1,3-3,8-2,6-some2,some3-1,some4-6,some5-5),[1-f(7-some0,5-some1,3-3,8-2,6-some2,some3-1,some4-6,some5-5),2-f(2-some1,7-3,5-2,3-some2,8-1,6-6,some3-5,some4-some6),4-f(some7-2,some8-some2,2-1,7-6,5-5,3-some6,8-some9,6-4),5-f(4-some2,some7-1,some8-6,2-5,7-some6,5-some9,3-4,8-8),7-f(some10-6,1-5,4-some6,some7-some9,some8-4,2-8,7-7,5-some11),8-f(some12-5,some10-some6,1-some9,4-4,some7-8,some8-7,2-some11,7-some13)],[2-f(2-some1,7-3,5-2,3-some2,8-1,6-6,some3-5,some4-some6),4-f(some7-2,some8-some2,2-1,7-6,5-5,3-some6,8-some9,6-4),5-f(4-some2,some7-1,some8-6,2-5,7-some6,5-some9,3-4,8-8),7-f(some10-6,1-5,4-some6,some7-some9,some8-4,2-8,7-7,5-some11),8-f(some12-5,some10-some6,1-some9,4-4,some7-8,some8-7,2-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(7-some0,5-some1,3-3,8-2,6-some2,some3-1,some4-6,some5-5),3-3)"}]
    <#lemma630>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_443 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_443.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma536> a r:Inference;
  r:gives {
    "queens([1-f(5-some4,8-some5,3-3,7-2,6-some1,some3-1,some6-6,some7-some2),2-f(2-some5,5-3,8-2,3-some1,7-1,6-6,some3-some2,some6-5),4-f(some8-2,some0-some1,2-1,5-6,8-some2,3-5,7-7,6-4),5-f(4-some1,some8-1,some0-6,2-some2,5-5,8-7,3-4,7-some9),7-f(some10-6,1-some2,4-5,some8-7,some0-4,2-some9,5-some11,8-8),8-f(some12-some2,some10-5,1-7,4-4,some8-some9,some0-some11,2-8,5-some13)],2,[1,8,5,2,4,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(1-f(5-some0,8-some1,3-3,7-2,6-some2,some3-1,some4-6,some5-some6),[1-f(5-some0,8-some1,3-3,7-2,6-some2,some3-1,some4-6,some5-some6),2-f(2-some1,5-3,8-2,3-some2,7-1,6-6,some3-some6,some4-5),4-f(some7-2,some8-some2,2-1,5-6,8-some6,3-5,7-7,6-4),5-f(4-some2,some7-1,some8-6,2-some6,5-5,8-7,3-4,7-some9),7-f(some10-6,1-some6,4-5,some7-7,some8-4,2-some9,5-some11,8-8),8-f(some12-some6,some10-5,1-7,4-4,some7-some9,some8-some11,2-8,5-some13)],[2-f(2-some1,5-3,8-2,3-some2,7-1,6-6,some3-some6,some4-5),4-f(some7-2,some8-some2,2-1,5-6,8-some6,3-5,7-7,6-4),5-f(4-some2,some7-1,some8-6,2-some6,5-5,8-7,3-4,7-some9),7-f(some10-6,1-some6,4-5,some7-7,some8-4,2-some9,5-some11,8-8),8-f(some12-some6,some10-5,1-7,4-4,some7-some9,some8-some11,2-8,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(5-some0,8-some1,3-3,7-2,6-some2,some3-1,some4-6,some5-some6),3-3)"}]
    <#lemma631>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_444 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_444.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma537> a r:Inference;
  r:gives {
    "queens([1-f(8-some3,some1-some4,6-some0,some2-2,5-5,7-1,some5-3,some6-7),2-f(2-some4,8-some0,some1-2,6-5,some2-1,5-3,7-7,some5-6),4-f(4-2,3-5,2-1,8-3,some1-7,6-6,some2-4,5-some7),5-f(some8-5,4-1,3-3,2-7,8-6,some1-4,6-some7,some2-some9),7-f(some10-3,1-7,some8-6,4-4,3-some7,2-some9,8-some11,some1-some12),8-f(some13-7,some10-6,1-4,some8-some7,4-some9,3-some11,2-some12,8-8)],2,[5,7,1,4,2,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(5-f(some0-5,4-1,3-3,2-7,8-6,some1-4,6-some2,some3-some4),[1-f(8-some5,some1-some6,6-some7,some3-2,5-5,7-1,some8-3,some9-7),2-f(2-some6,8-some7,some1-2,6-5,some3-1,5-3,7-7,some8-6),4-f(4-2,3-5,2-1,8-3,some1-7,6-6,some3-4,5-some2),5-f(some0-5,4-1,3-3,2-7,8-6,some1-4,6-some2,some3-some4),7-f(some10-3,1-7,some0-6,4-4,3-some2,2-some4,8-some11,some1-some12),8-f(some13-7,some10-6,1-4,some0-some2,4-some4,3-some11,2-some12,8-8)],[1-f(8-some5,some1-some6,6-some7,some3-2,5-5,7-1,some8-3,some9-7),2-f(2-some6,8-some7,some1-2,6-5,some3-1,5-3,7-7,some8-6),4-f(4-2,3-5,2-1,8-3,some1-7,6-6,some3-4,5-some2),7-f(some10-3,1-7,some0-6,4-4,3-some2,2-some4,8-some11,some1-some12),8-f(some13-7,some10-6,1-4,some0-some2,4-some4,3-some11,2-some12,8-8)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-5,4-1,3-3,2-7,8-6,some1-4,6-some2,some3-some4),3-3)"}]
    <#lemma632>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_445 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_445.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma538> a r:Inference;
  r:gives {
    "queens([1-f(some1-some4,8-some5,6-some0,some2-2,5-5,7-1,some6-3,some7-7),2-f(2-some5,some1-some0,8-2,6-5,some2-1,5-3,7-7,some6-6),4-f(some8-2,3-5,2-1,some1-3,8-7,6-6,some2-some3,5-4),5-f(4-5,some8-1,3-3,2-7,some1-6,8-some3,6-4,some2-some9),7-f(some10-3,1-7,4-6,some8-some3,3-4,2-some9,some1-some11,8-8),8-f(some12-7,some10-6,1-some3,4-4,some8-some9,3-some11,2-8,some1-some13)],2,[5,8,1,4,2,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(5-f(4-5,some0-1,3-3,2-7,some1-6,8-some2,6-4,some3-some4),[1-f(some1-some5,8-some6,6-some7,some3-2,5-5,7-1,some8-3,some9-7),2-f(2-some6,some1-some7,8-2,6-5,some3-1,5-3,7-7,some8-6),4-f(some0-2,3-5,2-1,some1-3,8-7,6-6,some3-some2,5-4),5-f(4-5,some0-1,3-3,2-7,some1-6,8-some2,6-4,some3-some4),7-f(some10-3,1-7,4-6,some0-some2,3-4,2-some4,some1-some11,8-8),8-f(some12-7,some10-6,1-some2,4-4,some0-some4,3-some11,2-8,some1-some13)],[1-f(some1-some5,8-some6,6-some7,some3-2,5-5,7-1,some8-3,some9-7),2-f(2-some6,some1-some7,8-2,6-5,some3-1,5-3,7-7,some8-6),4-f(some0-2,3-5,2-1,some1-3,8-7,6-6,some3-some2,5-4),7-f(some10-3,1-7,4-6,some0-some2,3-4,2-some4,some1-some11,8-8),8-f(some12-7,some10-6,1-some2,4-4,some0-some4,3-some11,2-8,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(4-5,some0-1,3-3,2-7,some1-6,8-some2,6-4,some3-some4),3-3)"}]
    <#lemma633>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_446 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_446.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma539> a r:Inference;
  r:gives {
    "queens([1-f(some1-some5,5-some6,4-some0,8-2,some2-4,some3-1,7-7,some7-5),2-f(2-some6,some1-some0,5-2,4-4,8-1,some2-7,some3-5,7-3),4-f(some8-2,6-4,2-1,some1-7,5-5,4-3,8-some4,some2-some9),5-f(3-4,some8-1,6-7,2-5,some1-3,5-some4,4-some9,8-8),7-f(some10-7,1-5,3-3,some8-some4,6-some9,2-8,some1-6,5-some11),8-f(some12-5,some10-3,1-some4,3-some9,some8-8,6-6,2-some11,some1-some13)],2,[7,2,4,8,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(7-f(some0-7,1-5,3-3,some1-some2,6-some3,2-8,some4-6,5-some5),[1-f(some4-some6,5-some7,4-some8,8-2,some9-4,some10-1,7-7,some11-5),2-f(2-some7,some4-some8,5-2,4-4,8-1,some9-7,some10-5,7-3),4-f(some1-2,6-4,2-1,some4-7,5-5,4-3,8-some2,some9-some3),5-f(3-4,some1-1,6-7,2-5,some4-3,5-some2,4-some3,8-8),7-f(some0-7,1-5,3-3,some1-some2,6-some3,2-8,some4-6,5-some5),8-f(some12-5,some0-3,1-some2,3-some3,some1-8,6-6,2-some5,some4-some13)],[1-f(some4-some6,5-some7,4-some8,8-2,some9-4,some10-1,7-7,some11-5),2-f(2-some7,some4-some8,5-2,4-4,8-1,some9-7,some10-5,7-3),4-f(some1-2,6-4,2-1,some4-7,5-5,4-3,8-some2,some9-some3),5-f(3-4,some1-1,6-7,2-5,some4-3,5-some2,4-some3,8-8),8-f(some12-5,some0-3,1-some2,3-some3,some1-8,6-6,2-some5,some4-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-7,1-5,3-3,some1-some2,6-some3,2-8,some4-6,5-some5),3-3)"}]
    <#lemma634>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_447 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_447.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma540> a r:Inference;
  r:gives {
    "queens([1-f(some2-some6,6-some7,4-some1,some3-2,8-4,some5-1,7-7,some8-some4),2-f(2-some7,some2-some1,6-2,4-4,some3-1,8-7,some5-some4,7-3),4-f(5-2,some0-4,2-1,some2-7,6-some4,4-3,some3-6,8-8),5-f(3-4,5-1,some0-7,2-some4,some2-3,6-6,4-8,some3-5),7-f(some9-7,1-some4,3-3,5-6,some0-8,2-5,some2-some10,6-some11),8-f(some12-some4,some9-3,1-6,3-8,5-5,some0-some10,2-some11,some2-some13)],2,[7,2,8,5,1,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(7-f(some0-7,1-some1,3-3,5-6,some2-8,2-5,some3-some4,6-some5),[1-f(some3-some6,6-some7,4-some8,some9-2,8-4,some10-1,7-7,some11-some1),2-f(2-some7,some3-some8,6-2,4-4,some9-1,8-7,some10-some1,7-3),4-f(5-2,some2-4,2-1,some3-7,6-some1,4-3,some9-6,8-8),5-f(3-4,5-1,some2-7,2-some1,some3-3,6-6,4-8,some9-5),7-f(some0-7,1-some1,3-3,5-6,some2-8,2-5,some3-some4,6-some5),8-f(some12-some1,some0-3,1-6,3-8,5-5,some2-some4,2-some5,some3-some13)],[1-f(some3-some6,6-some7,4-some8,some9-2,8-4,some10-1,7-7,some11-some1),2-f(2-some7,some3-some8,6-2,4-4,some9-1,8-7,some10-some1,7-3),4-f(5-2,some2-4,2-1,some3-7,6-some1,4-3,some9-6,8-8),5-f(3-4,5-1,some2-7,2-some1,some3-3,6-6,4-8,some9-5),8-f(some12-some1,some0-3,1-6,3-8,5-5,some2-some4,2-some5,some3-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-7,1-some1,3-3,5-6,some2-8,2-5,some3-some4,6-some5),3-3)"}]
    <#lemma635>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_448 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_448.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma541> a r:Inference;
  r:gives {
    "queens([1-f(4-some4,some1-some5,some2-some0,8-2,5-5,7-1,some6-4,some7-7),2-f(2-some5,4-some0,some1-2,some2-5,8-1,5-4,7-7,some6-3),4-f(some8-2,6-5,2-1,4-4,some1-7,some2-3,8-some3,5-some9),5-f(3-5,some8-1,6-4,2-7,4-3,some1-some3,some2-some9,8-8),7-f(some10-4,1-7,3-3,some8-some3,6-some9,2-8,4-6,some1-some11),8-f(some12-7,some10-3,1-some3,3-some9,some8-8,6-6,2-some11,4-some13)],2,[7,4,1,8,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(7-f(some0-4,1-7,3-3,some1-some2,6-some3,2-8,4-6,some4-some5),[1-f(4-some6,some4-some7,some8-some9,8-2,5-5,7-1,some10-4,some11-7),2-f(2-some7,4-some9,some4-2,some8-5,8-1,5-4,7-7,some10-3),4-f(some1-2,6-5,2-1,4-4,some4-7,some8-3,8-some2,5-some3),5-f(3-5,some1-1,6-4,2-7,4-3,some4-some2,some8-some3,8-8),7-f(some0-4,1-7,3-3,some1-some2,6-some3,2-8,4-6,some4-some5),8-f(some12-7,some0-3,1-some2,3-some3,some1-8,6-6,2-some5,4-some13)],[1-f(4-some6,some4-some7,some8-some9,8-2,5-5,7-1,some10-4,some11-7),2-f(2-some7,4-some9,some4-2,some8-5,8-1,5-4,7-7,some10-3),4-f(some1-2,6-5,2-1,4-4,some4-7,some8-3,8-some2,5-some3),5-f(3-5,some1-1,6-4,2-7,4-3,some4-some2,some8-some3,8-8),8-f(some12-7,some0-3,1-some2,3-some3,some1-8,6-6,2-some5,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-4,1-7,3-3,some1-some2,6-some3,2-8,4-6,some4-some5),3-3)"}]
    <#lemma636>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_449 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_449.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma542> a r:Inference;
  r:gives {
    "queens([1-f(7-some5,some1-some6,3-3,some3-some0,6-2,8-1,some7-6,some8-4),2-f(4-some6,7-3,some1-some0,3-2,some3-1,6-6,8-4,some7-some2),3-f(2-3,4-some0,7-2,some1-1,3-6,some3-4,6-some2,8-8),5-f(some9-2,5-1,2-6,4-4,7-some2,some1-8,3-some4,some3-5),7-f(some10-6,1-4,some9-some2,5-8,2-some4,4-5,7-7,some1-some11),8-f(some12-4,some10-some2,1-8,some9-some4,5-5,2-7,4-some11,7-some13)],2,[1,5,8,2,7,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(1-f(7-some0,some1-some2,3-3,some3-some4,6-2,8-1,some5-6,some6-4),[1-f(7-some0,some1-some2,3-3,some3-some4,6-2,8-1,some5-6,some6-4),2-f(4-some2,7-3,some1-some4,3-2,some3-1,6-6,8-4,some5-some7),3-f(2-3,4-some4,7-2,some1-1,3-6,some3-4,6-some7,8-8),5-f(some8-2,5-1,2-6,4-4,7-some7,some1-8,3-some9,some3-5),7-f(some10-6,1-4,some8-some7,5-8,2-some9,4-5,7-7,some1-some11),8-f(some12-4,some10-some7,1-8,some8-some9,5-5,2-7,4-some11,7-some13)],[2-f(4-some2,7-3,some1-some4,3-2,some3-1,6-6,8-4,some5-some7),3-f(2-3,4-some4,7-2,some1-1,3-6,some3-4,6-some7,8-8),5-f(some8-2,5-1,2-6,4-4,7-some7,some1-8,3-some9,some3-5),7-f(some10-6,1-4,some8-some7,5-8,2-some9,4-5,7-7,some1-some11),8-f(some12-4,some10-some7,1-8,some8-some9,5-5,2-7,4-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(7-some0,some1-some2,3-3,some3-some4,6-2,8-1,some5-6,some6-4),3-3)"}]
    <#lemma637>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_450 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_450.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma543> a r:Inference;
  r:gives {
    "queens([1-f(5-some5,3-some6,some2-some7,some3-3,some4-2,8-1,7-7,some8-some1),2-f(6-some6,5-some7,3-3,some2-2,some3-1,some4-7,8-some1,7-5),3-f(2-some7,6-3,5-2,3-1,some2-7,some3-some1,some4-5,8-8),5-f(4-2,some0-1,2-7,6-some1,5-5,3-8,some2-4,some3-6),7-f(some9-7,1-some1,4-5,some0-8,2-4,6-6,5-some10,3-some11),8-f(some12-some1,some9-5,1-8,4-4,some0-6,2-some10,6-some11,5-some13)],2,[2,8,5,7,1,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(2-f(6-some0,5-some1,3-3,some2-2,some3-1,some4-7,8-some5,7-5),[1-f(5-some6,3-some0,some2-some1,some3-3,some4-2,8-1,7-7,some7-some5),2-f(6-some0,5-some1,3-3,some2-2,some3-1,some4-7,8-some5,7-5),3-f(2-some1,6-3,5-2,3-1,some2-7,some3-some5,some4-5,8-8),5-f(4-2,some8-1,2-7,6-some5,5-5,3-8,some2-4,some3-6),7-f(some9-7,1-some5,4-5,some8-8,2-4,6-6,5-some10,3-some11),8-f(some12-some5,some9-5,1-8,4-4,some8-6,2-some10,6-some11,5-some13)],[1-f(5-some6,3-some0,some2-some1,some3-3,some4-2,8-1,7-7,some7-some5),3-f(2-some1,6-3,5-2,3-1,some2-7,some3-some5,some4-5,8-8),5-f(4-2,some8-1,2-7,6-some5,5-5,3-8,some2-4,some3-6),7-f(some9-7,1-some5,4-5,some8-8,2-4,6-6,5-some10,3-some11),8-f(some12-some5,some9-5,1-8,4-4,some8-6,2-some10,6-some11,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(6-some0,5-some1,3-3,some2-2,some3-1,some4-7,8-some5,7-5),3-3)"}]
    <#lemma638>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_451 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_451.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma544> a r:Inference;
  r:gives {
    "queens([1-f(8-some4,6-some5,5-some6,4-4,some2-2,7-1,some7-5,some8-7),2-f(some1-some5,8-some6,6-4,5-2,4-1,some2-5,7-7,some7-3),3-f(2-some6,some1-4,8-2,6-1,5-5,4-7,some2-3,7-6),5-f(3-2,some0-1,2-5,some1-7,8-3,6-6,5-some3,4-some9),7-f(some10-5,1-7,3-3,some0-6,2-some3,some1-some9,8-some11,6-some12),8-f(some13-7,some10-3,1-6,3-some3,some0-some9,2-some11,some1-some12,8-8)],2,[7,1,3,5,2,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(7-f(some0-5,1-7,3-3,some1-6,2-some2,some3-some4,8-some5,6-some6),[1-f(8-some7,6-some8,5-some9,4-4,some10-2,7-1,some11-5,some12-7),2-f(some3-some8,8-some9,6-4,5-2,4-1,some10-5,7-7,some11-3),3-f(2-some9,some3-4,8-2,6-1,5-5,4-7,some10-3,7-6),5-f(3-2,some1-1,2-5,some3-7,8-3,6-6,5-some2,4-some4),7-f(some0-5,1-7,3-3,some1-6,2-some2,some3-some4,8-some5,6-some6),8-f(some13-7,some0-3,1-6,3-some2,some1-some4,2-some5,some3-some6,8-8)],[1-f(8-some7,6-some8,5-some9,4-4,some10-2,7-1,some11-5,some12-7),2-f(some3-some8,8-some9,6-4,5-2,4-1,some10-5,7-7,some11-3),3-f(2-some9,some3-4,8-2,6-1,5-5,4-7,some10-3,7-6),5-f(3-2,some1-1,2-5,some3-7,8-3,6-6,5-some2,4-some4),8-f(some13-7,some0-3,1-6,3-some2,some1-some4,2-some5,some3-some6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-5,1-7,3-3,some1-6,2-some2,some3-some4,8-some5,6-some6),3-3)"}]
    <#lemma639>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_452 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_452.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma545> a r:Inference;
  r:gives {
    "queens([1-f(some1-some4,some2-some5,7-some6,4-4,6-2,8-1,some7-6,some8-some3),2-f(some0-some5,some1-some6,some2-4,7-2,4-1,6-6,8-some3,some7-3),3-f(2-some6,some0-4,some1-2,some2-1,7-6,4-some3,6-3,8-8),5-f(3-2,5-1,2-6,some0-some3,some1-3,some2-8,7-7,4-5),7-f(some9-6,1-some3,3-3,5-8,2-7,some0-5,some1-some10,some2-some11),8-f(some12-some3,some9-3,1-8,3-7,5-5,2-some10,some0-some11,some1-some13)],2,[7,1,8,2,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(7-f(some0-6,1-some1,3-3,5-8,2-7,some2-5,some3-some4,some5-some6),[1-f(some3-some7,some5-some8,7-some9,4-4,6-2,8-1,some10-6,some11-some1),2-f(some2-some8,some3-some9,some5-4,7-2,4-1,6-6,8-some1,some10-3),3-f(2-some9,some2-4,some3-2,some5-1,7-6,4-some1,6-3,8-8),5-f(3-2,5-1,2-6,some2-some1,some3-3,some5-8,7-7,4-5),7-f(some0-6,1-some1,3-3,5-8,2-7,some2-5,some3-some4,some5-some6),8-f(some12-some1,some0-3,1-8,3-7,5-5,2-some4,some2-some6,some3-some13)],[1-f(some3-some7,some5-some8,7-some9,4-4,6-2,8-1,some10-6,some11-some1),2-f(some2-some8,some3-some9,some5-4,7-2,4-1,6-6,8-some1,some10-3),3-f(2-some9,some2-4,some3-2,some5-1,7-6,4-some1,6-3,8-8),5-f(3-2,5-1,2-6,some2-some1,some3-3,some5-8,7-7,4-5),8-f(some12-some1,some0-3,1-8,3-7,5-5,2-some4,some2-some6,some3-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-6,1-some1,3-3,5-8,2-7,some2-5,some3-some4,some5-some6),3-3)"}]
    <#lemma640>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_453 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_453.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma546> a r:Inference;
  r:gives {
    "queens([1-f(4-some8,3-some9,7-some10,some11-3,5-5,8-1,some12-4,some13-some1),2-f(6-some9,4-some10,3-3,7-5,some11-1,5-4,8-some1,some12-2),3-f(some4-some10,6-3,4-5,3-1,7-4,some11-some1,5-2,8-8),4-f(some3-3,some4-5,6-1,4-4,3-some1,7-2,some11-8,5-7),5-f(some2-5,some3-1,some4-4,6-some1,4-2,3-8,7-7,some11-6),7-f(2-4,1-some1,some2-2,some3-8,some4-7,6-6,4-some5,3-some6)],2,[2,4,1,7,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(2-f(6-some0,4-some1,3-3,7-5,some2-1,5-4,8-some3,some4-2),[1-f(4-some5,3-some0,7-some1,some2-3,5-5,8-1,some4-4,some6-some3),2-f(6-some0,4-some1,3-3,7-5,some2-1,5-4,8-some3,some4-2),3-f(some7-some1,6-3,4-5,3-1,7-4,some2-some3,5-2,8-8),4-f(some8-3,some7-5,6-1,4-4,3-some3,7-2,some2-8,5-7),5-f(some9-5,some8-1,some7-4,6-some3,4-2,3-8,7-7,some2-6),7-f(2-4,1-some3,some9-2,some8-8,some7-7,6-6,4-some10,3-some11)],[1-f(4-some5,3-some0,7-some1,some2-3,5-5,8-1,some4-4,some6-some3),3-f(some7-some1,6-3,4-5,3-1,7-4,some2-some3,5-2,8-8),4-f(some8-3,some7-5,6-1,4-4,3-some3,7-2,some2-8,5-7),5-f(some9-5,some8-1,some7-4,6-some3,4-2,3-8,7-7,some2-6),7-f(2-4,1-some3,some9-2,some8-8,some7-7,6-6,4-some10,3-some11)])"}]
    [ a r:Fact; r:gives {"arg(3,f(6-some0,4-some1,3-3,7-5,some2-1,5-4,8-some3,some4-2),3-3)"}]
    <#lemma641>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_454 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_454.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma547> a r:Inference;
  r:gives {
    "queens([2-f(5-2,3-some1,2-some2,6-3,8-some4,some3-1,7-7,some5-6),3-f(some7-some1,5-some2,3-3,2-some4,6-1,8-7,some3-6,7-5),4-f(some8-some2,some7-3,5-some4,3-1,2-7,6-6,8-5,some3-4),5-f(4-3,some8-some4,some7-1,5-7,3-6,2-5,6-4,8-8),6-f(some9-some4,4-1,some8-7,some7-6,5-5,3-4,2-8,6-some10),8-f(some11-7,1-6,some9-5,4-4,some8-8,some7-some10,5-some12,3-some13)],2,[3,8,6,4,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(3-f(some0-some1,5-some2,3-3,2-some3,6-1,8-7,some4-6,7-5),[2-f(5-2,3-some1,2-some2,6-3,8-some3,some4-1,7-7,some5-6),3-f(some0-some1,5-some2,3-3,2-some3,6-1,8-7,some4-6,7-5),4-f(some6-some2,some0-3,5-some3,3-1,2-7,6-6,8-5,some4-4),5-f(4-3,some6-some3,some0-1,5-7,3-6,2-5,6-4,8-8),6-f(some7-some3,4-1,some6-7,some0-6,5-5,3-4,2-8,6-some8),8-f(some9-7,1-6,some7-5,4-4,some6-8,some0-some8,5-some10,3-some11)],[2-f(5-2,3-some1,2-some2,6-3,8-some3,some4-1,7-7,some5-6),4-f(some6-some2,some0-3,5-some3,3-1,2-7,6-6,8-5,some4-4),5-f(4-3,some6-some3,some0-1,5-7,3-6,2-5,6-4,8-8),6-f(some7-some3,4-1,some6-7,some0-6,5-5,3-4,2-8,6-some8),8-f(some9-7,1-6,some7-5,4-4,some6-8,some0-some8,5-some10,3-some11)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,5-some2,3-3,2-some3,6-1,8-7,some4-6,7-5),3-3)"}]
    <#lemma642>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_455 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_455.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma548> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,6-some0,8-2,4-4,7-some1,some2-3,some4-1,some6-some3),3-f(some7-2,3-4,2-some1,6-3,8-1,4-some3,7-7,some2-6),4-f(5-4,some7-some1,3-3,2-1,6-some3,8-7,4-6,7-some8),5-f(some9-some1,5-3,some7-1,3-some3,2-7,6-6,8-some8,4-5),6-f(some10-3,some9-1,5-some3,some7-7,3-6,2-some8,6-5,8-8),8-f(some11-some3,1-7,some10-6,some9-some8,5-5,some7-8,3-some12,2-some13)],2,[4,1,8,5,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(4-f(5-4,some0-some1,3-3,2-1,6-some2,8-7,4-6,7-some3),[1-f(2-some4,6-some5,8-2,4-4,7-some1,some6-3,some7-1,some8-some2),3-f(some0-2,3-4,2-some1,6-3,8-1,4-some2,7-7,some6-6),4-f(5-4,some0-some1,3-3,2-1,6-some2,8-7,4-6,7-some3),5-f(some9-some1,5-3,some0-1,3-some2,2-7,6-6,8-some3,4-5),6-f(some10-3,some9-1,5-some2,some0-7,3-6,2-some3,6-5,8-8),8-f(some11-some2,1-7,some10-6,some9-some3,5-5,some0-8,3-some12,2-some13)],[1-f(2-some4,6-some5,8-2,4-4,7-some1,some6-3,some7-1,some8-some2),3-f(some0-2,3-4,2-some1,6-3,8-1,4-some2,7-7,some6-6),5-f(some9-some1,5-3,some0-1,3-some2,2-7,6-6,8-some3,4-5),6-f(some10-3,some9-1,5-some2,some0-7,3-6,2-some3,6-5,8-8),8-f(some11-some2,1-7,some10-6,some9-some3,5-5,some0-8,3-some12,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(5-4,some0-some1,3-3,2-1,6-some2,8-7,4-6,7-some3),3-3)"}]
    <#lemma643>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_456 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_456.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma549> a r:Inference;
  r:gives {
    "queens([1-f(2-some4,4-some0,6-2,8-some1,5-5,some2-4,some3-1,some5-3),3-f(some6-2,7-some1,2-5,4-4,6-1,8-3,5-6,some2-some7),4-f(3-some1,some6-5,7-4,2-1,4-3,6-6,8-some7,5-some8),5-f(some9-5,3-4,some6-1,7-3,2-6,4-some7,6-some8,8-8),6-f(some10-4,some9-1,3-3,some6-6,7-some7,2-some8,4-8,6-some11),8-f(some12-3,1-6,some10-some7,some9-some8,3-8,some6-some11,7-7,2-some13)],2,[6,3,1,4,8,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(6-f(some0-4,some1-1,3-3,some2-6,7-some3,2-some4,4-8,6-some5),[1-f(2-some6,4-some7,6-2,8-some8,5-5,some9-4,some10-1,some11-3),3-f(some2-2,7-some8,2-5,4-4,6-1,8-3,5-6,some9-some3),4-f(3-some8,some2-5,7-4,2-1,4-3,6-6,8-some3,5-some4),5-f(some1-5,3-4,some2-1,7-3,2-6,4-some3,6-some4,8-8),6-f(some0-4,some1-1,3-3,some2-6,7-some3,2-some4,4-8,6-some5),8-f(some12-3,1-6,some0-some3,some1-some4,3-8,some2-some5,7-7,2-some13)],[1-f(2-some6,4-some7,6-2,8-some8,5-5,some9-4,some10-1,some11-3),3-f(some2-2,7-some8,2-5,4-4,6-1,8-3,5-6,some9-some3),4-f(3-some8,some2-5,7-4,2-1,4-3,6-6,8-some3,5-some4),5-f(some1-5,3-4,some2-1,7-3,2-6,4-some3,6-some4,8-8),8-f(some12-3,1-6,some0-some3,some1-some4,3-8,some2-some5,7-7,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-4,some1-1,3-3,some2-6,7-some3,2-some4,4-8,6-some5),3-3)"}]
    <#lemma644>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_457 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_457.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma550> a r:Inference;
  r:gives {
    "queens([1-f(some0-some4,6-some5,3-3,some3-2,8-some1,7-some2,some6-1,some7-7),2-f(2-some5,some0-3,6-2,3-some1,some3-some2,8-1,7-7,some6-4),4-f(5-2,4-some1,2-some2,some0-1,6-7,3-4,some3-6,8-8),5-f(some8-some1,5-some2,4-1,2-7,some0-4,6-6,3-8,some3-5),6-f(some9-some2,some8-1,5-7,4-4,2-6,some0-8,6-5,3-some10),8-f(some11-7,1-4,some9-6,some8-8,5-5,4-some10,2-some12,some0-some13)],2,[1,6,8,5,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,6-some2,3-3,some3-2,8-some4,7-some5,some6-1,some7-7),[1-f(some0-some1,6-some2,3-3,some3-2,8-some4,7-some5,some6-1,some7-7),2-f(2-some2,some0-3,6-2,3-some4,some3-some5,8-1,7-7,some6-4),4-f(5-2,4-some4,2-some5,some0-1,6-7,3-4,some3-6,8-8),5-f(some8-some4,5-some5,4-1,2-7,some0-4,6-6,3-8,some3-5),6-f(some9-some5,some8-1,5-7,4-4,2-6,some0-8,6-5,3-some10),8-f(some11-7,1-4,some9-6,some8-8,5-5,4-some10,2-some12,some0-some13)],[2-f(2-some2,some0-3,6-2,3-some4,some3-some5,8-1,7-7,some6-4),4-f(5-2,4-some4,2-some5,some0-1,6-7,3-4,some3-6,8-8),5-f(some8-some4,5-some5,4-1,2-7,some0-4,6-6,3-8,some3-5),6-f(some9-some5,some8-1,5-7,4-4,2-6,some0-8,6-5,3-some10),8-f(some11-7,1-4,some9-6,some8-8,5-5,4-some10,2-some12,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,6-some2,3-3,some3-2,8-some4,7-some5,some6-1,some7-7),3-3)"}]
    <#lemma645>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_458 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_458.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma551> a r:Inference;
  r:gives {
    "queens([1-f(5-some4,7-some5,4-some1,some2-2,8-4,6-6,some6-1,some7-some3),2-f(2-some5,5-some1,7-2,4-4,some2-6,8-1,6-some3,some6-5),4-f(some8-2,some0-4,2-6,5-1,7-some3,4-5,some2-3,8-8),5-f(some9-4,some8-6,some0-1,2-some3,5-5,7-3,4-8,some2-7),6-f(3-6,some9-1,some8-some3,some0-5,2-3,5-8,7-7,4-some10),8-f(some11-some3,1-5,3-3,some9-8,some8-7,some0-some10,2-some12,5-some13)],2,[8,2,5,1,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,1-5,3-3,some2-8,some3-7,some4-some5,2-some6,5-some7),[1-f(5-some8,7-some9,4-some10,some11-2,8-4,6-6,some12-1,some13-some1),2-f(2-some9,5-some10,7-2,4-4,some11-6,8-1,6-some1,some12-5),4-f(some3-2,some4-4,2-6,5-1,7-some1,4-5,some11-3,8-8),5-f(some2-4,some3-6,some4-1,2-some1,5-5,7-3,4-8,some11-7),6-f(3-6,some2-1,some3-some1,some4-5,2-3,5-8,7-7,4-some5),8-f(some0-some1,1-5,3-3,some2-8,some3-7,some4-some5,2-some6,5-some7)],[1-f(5-some8,7-some9,4-some10,some11-2,8-4,6-6,some12-1,some13-some1),2-f(2-some9,5-some10,7-2,4-4,some11-6,8-1,6-some1,some12-5),4-f(some3-2,some4-4,2-6,5-1,7-some1,4-5,some11-3,8-8),5-f(some2-4,some3-6,some4-1,2-some1,5-5,7-3,4-8,some11-7),6-f(3-6,some2-1,some3-some1,some4-5,2-3,5-8,7-7,4-some5)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,1-5,3-3,some2-8,some3-7,some4-some5,2-some6,5-some7),3-3)"}]
    <#lemma646>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_459 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_459.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma552> a r:Inference;
  r:gives {
    "queens([1-f(some0-some4,3-some5,8-some6,some1-3,7-2,6-6,some7-1,some8-4),2-f(4-some5,some0-some6,3-3,8-2,some1-6,7-1,6-4,some7-7),3-f(2-some6,4-3,some0-2,3-6,8-1,some1-4,7-7,6-some2),5-f(some9-2,5-6,2-1,4-4,some0-7,3-some2,8-some3,some1-5),6-f(some10-6,some9-1,5-4,2-7,4-some2,some0-some3,3-5,8-8),8-f(some11-4,1-7,some10-some2,some9-some3,5-5,2-8,4-some12,some0-some13)],2,[2,5,8,1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(2-f(4-some0,some1-some2,3-3,8-2,some3-6,7-1,6-4,some4-7),[1-f(some1-some5,3-some0,8-some2,some3-3,7-2,6-6,some4-1,some6-4),2-f(4-some0,some1-some2,3-3,8-2,some3-6,7-1,6-4,some4-7),3-f(2-some2,4-3,some1-2,3-6,8-1,some3-4,7-7,6-some7),5-f(some8-2,5-6,2-1,4-4,some1-7,3-some7,8-some9,some3-5),6-f(some10-6,some8-1,5-4,2-7,4-some7,some1-some9,3-5,8-8),8-f(some11-4,1-7,some10-some7,some8-some9,5-5,2-8,4-some12,some1-some13)],[1-f(some1-some5,3-some0,8-some2,some3-3,7-2,6-6,some4-1,some6-4),3-f(2-some2,4-3,some1-2,3-6,8-1,some3-4,7-7,6-some7),5-f(some8-2,5-6,2-1,4-4,some1-7,3-some7,8-some9,some3-5),6-f(some10-6,some8-1,5-4,2-7,4-some7,some1-some9,3-5,8-8),8-f(some11-4,1-7,some10-some7,some8-some9,5-5,2-8,4-some12,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(4-some0,some1-some2,3-3,8-2,some3-6,7-1,6-4,some4-7),3-3)"}]
    <#lemma647>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_460 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_460.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma553> a r:Inference;
  r:gives {
    "queens([1-f(some1-some4,3-some5,some3-some6,8-3,7-2,6-6,some7-1,some8-some2),2-f(5-some5,some1-some6,3-3,some3-2,8-6,7-1,6-some2,some7-7),3-f(2-some6,5-3,some1-2,3-6,some3-1,8-some2,7-7,6-5),5-f(4-2,some0-6,2-1,5-some2,some1-7,3-5,some3-4,8-8),6-f(some9-6,4-1,some0-some2,2-7,5-5,some1-4,3-8,some3-some10),8-f(some11-some2,1-7,some9-5,4-4,some0-8,2-some10,5-some12,some1-some13)],2,[2,8,6,1,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(2-f(5-some0,some1-some2,3-3,some3-2,8-6,7-1,6-some4,some5-7),[1-f(some1-some6,3-some0,some3-some2,8-3,7-2,6-6,some5-1,some7-some4),2-f(5-some0,some1-some2,3-3,some3-2,8-6,7-1,6-some4,some5-7),3-f(2-some2,5-3,some1-2,3-6,some3-1,8-some4,7-7,6-5),5-f(4-2,some8-6,2-1,5-some4,some1-7,3-5,some3-4,8-8),6-f(some9-6,4-1,some8-some4,2-7,5-5,some1-4,3-8,some3-some10),8-f(some11-some4,1-7,some9-5,4-4,some8-8,2-some10,5-some12,some1-some13)],[1-f(some1-some6,3-some0,some3-some2,8-3,7-2,6-6,some5-1,some7-some4),3-f(2-some2,5-3,some1-2,3-6,some3-1,8-some4,7-7,6-5),5-f(4-2,some8-6,2-1,5-some4,some1-7,3-5,some3-4,8-8),6-f(some9-6,4-1,some8-some4,2-7,5-5,some1-4,3-8,some3-some10),8-f(some11-some4,1-7,some9-5,4-4,some8-8,2-some10,5-some12,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(5-some0,some1-some2,3-3,some3-2,8-6,7-1,6-some4,some5-7),3-3)"}]
    <#lemma648>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_461 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_461.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma554> a r:Inference;
  r:gives {
    "queens([1-f(3-some5,some2-some6,some3-some7,4-4,8-3,7-2,some8-1,some9-7),2-f(5-some6,3-some7,some2-4,some3-3,4-2,8-1,7-7,some8-some1),3-f(6-some7,5-4,3-3,some2-2,some3-1,4-7,8-some1,7-5),4-f(2-4,6-3,5-2,3-1,some2-7,some3-some1,4-5,8-8),6-f(some10-2,some0-1,2-7,6-some1,5-5,3-8,some2-some4,some3-6),8-f(some11-7,1-some1,some10-5,some0-8,2-some4,6-6,5-some12,3-some13)],2,[3,1,6,8,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(3-f(6-some0,5-4,3-3,some1-2,some2-1,4-7,8-some3,7-5),[1-f(3-some4,some1-some5,some2-some0,4-4,8-3,7-2,some6-1,some7-7),2-f(5-some5,3-some0,some1-4,some2-3,4-2,8-1,7-7,some6-some3),3-f(6-some0,5-4,3-3,some1-2,some2-1,4-7,8-some3,7-5),4-f(2-4,6-3,5-2,3-1,some1-7,some2-some3,4-5,8-8),6-f(some8-2,some9-1,2-7,6-some3,5-5,3-8,some1-some10,some2-6),8-f(some11-7,1-some3,some8-5,some9-8,2-some10,6-6,5-some12,3-some13)],[1-f(3-some4,some1-some5,some2-some0,4-4,8-3,7-2,some6-1,some7-7),2-f(5-some5,3-some0,some1-4,some2-3,4-2,8-1,7-7,some6-some3),4-f(2-4,6-3,5-2,3-1,some1-7,some2-some3,4-5,8-8),6-f(some8-2,some9-1,2-7,6-some3,5-5,3-8,some1-some10,some2-6),8-f(some11-7,1-some3,some8-5,some9-8,2-some10,6-6,5-some12,3-some13)])"}]
    [ a r:Fact; r:gives {"arg(3,f(6-some0,5-4,3-3,some1-2,some2-1,4-7,8-some3,7-5),3-3)"}]
    <#lemma649>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_462 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_462.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma555> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,6-some0,8-2,4-4,7-some1,some3-3,some4-some2,some6-1),3-f(5-2,3-4,2-some1,6-3,8-some2,4-1,7-7,some3-6),4-f(some7-4,5-some1,3-3,2-some2,6-1,8-7,4-6,7-5),5-f(some8-some1,some7-3,5-some2,3-1,2-7,6-6,8-5,4-some9),6-f(some10-3,some8-some2,some7-1,5-7,3-6,2-5,6-some9,8-8),7-f(some11-some2,some10-1,some8-7,some7-6,5-5,3-some9,2-8,6-some12)],2,[4,1,7,5,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(4-f(some0-4,5-some1,3-3,2-some2,6-1,8-7,4-6,7-5),[1-f(2-some3,6-some4,8-2,4-4,7-some1,some5-3,some6-some2,some7-1),3-f(5-2,3-4,2-some1,6-3,8-some2,4-1,7-7,some5-6),4-f(some0-4,5-some1,3-3,2-some2,6-1,8-7,4-6,7-5),5-f(some8-some1,some0-3,5-some2,3-1,2-7,6-6,8-5,4-some9),6-f(some10-3,some8-some2,some0-1,5-7,3-6,2-5,6-some9,8-8),7-f(some11-some2,some10-1,some8-7,some0-6,5-5,3-some9,2-8,6-some12)],[1-f(2-some3,6-some4,8-2,4-4,7-some1,some5-3,some6-some2,some7-1),3-f(5-2,3-4,2-some1,6-3,8-some2,4-1,7-7,some5-6),5-f(some8-some1,some0-3,5-some2,3-1,2-7,6-6,8-5,4-some9),6-f(some10-3,some8-some2,some0-1,5-7,3-6,2-5,6-some9,8-8),7-f(some11-some2,some10-1,some8-7,some0-6,5-5,3-some9,2-8,6-some12)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-4,5-some1,3-3,2-some2,6-1,8-7,4-6,7-5),3-3)"}]
    <#lemma650>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_463 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_463.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma556> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,4-some0,8-2,7-some1,5-5,some2-4,some3-3,some6-1),3-f(3-2,6-some1,2-5,4-4,8-3,7-1,5-some4,some2-7),4-f(some7-some1,3-5,6-4,2-3,4-1,8-some4,7-7,5-some8),5-f(some9-5,some7-4,3-3,6-1,2-some4,4-7,8-some8,7-6),6-f(some10-4,some9-3,some7-1,3-some4,6-7,2-some8,4-6,8-8),7-f(some11-3,some10-1,some9-some4,some7-7,3-some8,6-6,2-8,4-some12)],2,[5,3,1,7,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(5-f(some0-5,some1-4,3-3,6-1,2-some2,4-7,8-some3,7-6),[1-f(2-some4,4-some5,8-2,7-some6,5-5,some7-4,some8-3,some9-1),3-f(3-2,6-some6,2-5,4-4,8-3,7-1,5-some2,some7-7),4-f(some1-some6,3-5,6-4,2-3,4-1,8-some2,7-7,5-some3),5-f(some0-5,some1-4,3-3,6-1,2-some2,4-7,8-some3,7-6),6-f(some10-4,some0-3,some1-1,3-some2,6-7,2-some3,4-6,8-8),7-f(some11-3,some10-1,some0-some2,some1-7,3-some3,6-6,2-8,4-some12)],[1-f(2-some4,4-some5,8-2,7-some6,5-5,some7-4,some8-3,some9-1),3-f(3-2,6-some6,2-5,4-4,8-3,7-1,5-some2,some7-7),4-f(some1-some6,3-5,6-4,2-3,4-1,8-some2,7-7,5-some3),6-f(some10-4,some0-3,some1-1,3-some2,6-7,2-some3,4-6,8-8),7-f(some11-3,some10-1,some0-some2,some1-7,3-some3,6-6,2-8,4-some12)])"}]
    [ a r:Fact; r:gives {"arg(3,f(some0-5,some1-4,3-3,6-1,2-some2,4-7,8-some3,7-6),3-3)"}]
    <#lemma651>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_464 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_464.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma557> a r:Inference;
  r:gives {
    "queens([1-f(7-some3,6-some4,3-3,5-2,8-some0,some2-5,some5-some1,some6-1),2-f(2-some4,7-3,6-2,3-some0,5-5,8-some1,some2-1,some5-4),4-f(some7-2,4-some0,2-5,7-some1,6-1,3-4,5-6,8-8),5-f(some8-some0,some7-5,4-some1,2-1,7-4,6-6,3-8,5-some9),6-f(some10-5,some8-some1,some7-1,4-4,2-6,7-8,6-some9,3-7),7-f(some11-some1,some10-1,some8-4,some7-6,4-8,2-some9,7-7,6-some12)],2,[1,6,2,5,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(1-f(7-some0,6-some1,3-3,5-2,8-some2,some3-5,some4-some5,some6-1),[1-f(7-some0,6-some1,3-3,5-2,8-some2,some3-5,some4-some5,some6-1),2-f(2-some1,7-3,6-2,3-some2,5-5,8-some5,some3-1,some4-4),4-f(some7-2,4-some2,2-5,7-some5,6-1,3-4,5-6,8-8),5-f(some8-some2,some7-5,4-some5,2-1,7-4,6-6,3-8,5-some9),6-f(some10-5,some8-some5,some7-1,4-4,2-6,7-8,6-some9,3-7),7-f(some11-some5,some10-1,some8-4,some7-6,4-8,2-some9,7-7,6-some12)],[2-f(2-some1,7-3,6-2,3-some2,5-5,8-some5,some3-1,some4-4),4-f(some7-2,4-some2,2-5,7-some5,6-1,3-4,5-6,8-8),5-f(some8-some2,some7-5,4-some5,2-1,7-4,6-6,3-8,5-some9),6-f(some10-5,some8-some5,some7-1,4-4,2-6,7-8,6-some9,3-7),7-f(some11-some5,some10-1,some8-4,some7-6,4-8,2-some9,7-7,6-some12)])"}]
    [ a r:Fact; r:gives {"arg(3,f(7-some0,6-some1,3-3,5-2,8-some2,some3-5,some4-some5,some6-1),3-3)"}]
    <#lemma652>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_465 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_465.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma558> a r:Inference;
  r:gives {
    "queens([1-f(7-some4,4-some5,3-3,8-some1,6-2,some6-4,some7-6,some8-1),2-f(5-some5,7-3,4-some1,3-2,8-4,6-6,some6-1,some7-some2),3-f(2-3,5-some1,7-2,4-4,3-6,8-1,6-some2,some6-5),5-f(some9-2,some0-4,2-6,5-1,7-some2,4-5,3-some3,8-8),6-f(some10-4,some9-6,some0-1,2-some2,5-5,7-some3,4-8,3-7),7-f(some11-6,some10-1,some9-some2,some0-5,2-some3,5-8,7-7,4-some12)],2,[1,3,6,2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 3}]
    [ a r:Fact; r:gives {"select(1-f(7-some0,4-some1,3-3,8-some2,6-2,some3-4,some4-6,some5-1),[1-f(7-some0,4-some1,3-3,8-some2,6-2,some3-4,some4-6,some5-1),2-f(5-some1,7-3,4-some2,3-2,8-4,6-6,some3-1,some4-some6),3-f(2-3,5-some2,7-2,4-4,3-6,8-1,6-some6,some3-5),5-f(some7-2,some8-4,2-6,5-1,7-some6,4-5,3-some9,8-8),6-f(some10-4,some7-6,some8-1,2-some6,5-5,7-some9,4-8,3-7),7-f(some11-6,some10-1,some7-some6,some8-5,2-some9,5-8,7-7,4-some12)],[2-f(5-some1,7-3,4-some2,3-2,8-4,6-6,some3-1,some4-some6),3-f(2-3,5-some2,7-2,4-4,3-6,8-1,6-some6,some3-5),5-f(some7-2,some8-4,2-6,5-1,7-some6,4-5,3-some9,8-8),6-f(some10-4,some7-6,some8-1,2-some6,5-5,7-some9,4-8,3-7),7-f(some11-6,some10-1,some7-some6,some8-5,2-some9,5-8,7-7,4-some12)])"}]
    [ a r:Fact; r:gives {"arg(3,f(7-some0,4-some1,3-3,8-some2,6-2,some3-4,some4-6,some5-1),3-3)"}]
    <#lemma653>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_466 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_466.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma559> a r:Inference;
  r:gives {
    "constraints(6,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),[some10,some8,some6,some4,some2,some0|some16],[some11,some9,some7,some5,some3,some1|some17])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),some10-some11)"}]
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> 5}]
    <#lemma654>
  );
  r:rule [ a r:Fact; r:gives {{"arg(avar0,avar1,avar2-avar3)".
    (_:x_0_467 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> _:x_4_467.
    "constraints(avar4,avar1,avar5,avar6)"} => "constraints(avar0,avar1,[avar2|avar5],[avar3|avar6])"}].

<#lemma560> a r:Inference;
  r:gives {
    "constraints(8,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),[some14,some12,some10,some8,some6,some4,some2,some0,some16,some17,some18,some19,some20|some21],[some15,some13,some11,some9,some7,some5,some3,some1,some22,some23|some24])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"arg(8,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),some14-some15)"}]
    [ a r:Fact; r:gives {(8 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> 7}]
    <#lemma464>
  );
  r:rule [ a r:Fact; r:gives {{"arg(avar0,avar1,avar2-avar3)".
    (_:x_0_468 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> _:x_4_468.
    "constraints(avar4,avar1,avar5,avar6)"} => "constraints(avar0,avar1,[avar2|avar5],[avar3|avar6])"}].

<#lemma561> a r:Inference;
  r:gives {
    "board([some25,some26,some27,some28,some29],[4-f(some16-some3,some0-some5,some2-some7,some4-some9,some6-some11,some8-some13,some10-some15,some12-some30),5-f(some17-some5,some16-some7,some0-some9,some2-some11,some4-some13,some6-some15,some8-some30,some10-some31),6-f(some18-some7,some17-some9,some16-some11,some0-some13,some2-some15,some4-some30,some6-some31,some8-some32),7-f(some19-some9,some18-some11,some17-some13,some16-some15,some0-some30,some2-some31,some4-some32,some6-some33),8-f(some20-some11,some19-some13,some18-some15,some17-some30,some16-some31,some0-some32,some2-some33,some4-some34)],3,8,[some14,some12,some10,some8,some6,some4,some2,some0,some16,some17,some18,some19,some20|some21],[some30,some15,some13,some11,some9,some7,some5,some3,some1,some22,some23|some24])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma655>
    <#lemma656>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_469 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_469.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma562> a r:Inference;
  r:gives {
    "queens([2-f(6-some6,1-some7,some8-some9,5-some10,some11-2,8-5,7-7,some12-4),3-f(4-some7,6-some9,1-some10,some8-2,5-5,some11-7,8-4,7-3),4-f(2-some9,4-some10,6-2,1-5,some8-7,5-4,some11-3,8-8),6-f(3-2,some2-5,2-7,4-4,6-3,1-8,some8-6,5-some3),7-f(some1-5,3-7,some2-4,2-3,4-8,6-6,1-some3,some8-some4)],3,[6,3,7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(6-f(3-2,some0-5,2-7,4-4,6-3,1-8,some1-6,5-some2),[2-f(6-some3,1-some4,some1-some5,5-some6,some7-2,8-5,7-7,some8-4),3-f(4-some4,6-some5,1-some6,some1-2,5-5,some7-7,8-4,7-3),4-f(2-some5,4-some6,6-2,1-5,some1-7,5-4,some7-3,8-8),6-f(3-2,some0-5,2-7,4-4,6-3,1-8,some1-6,5-some2),7-f(some9-5,3-7,some0-4,2-3,4-8,6-6,1-some2,some1-some10)],[2-f(6-some3,1-some4,some1-some5,5-some6,some7-2,8-5,7-7,some8-4),3-f(4-some4,6-some5,1-some6,some1-2,5-5,some7-7,8-4,7-3),4-f(2-some5,4-some6,6-2,1-5,some1-7,5-4,some7-3,8-8),7-f(some9-5,3-7,some0-4,2-3,4-8,6-6,1-some2,some1-some10)])"}]
    [ a r:Fact; r:gives {"arg(4,f(3-2,some0-5,2-7,4-4,6-3,1-8,some1-6,5-some2),4-4)"}]
    <#lemma657>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_470 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_470.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma563> a r:Inference;
  r:gives {
    "queens([2-f(some4-some7,1-some8,4-some9,6-some10,8-4,some11-2,7-7,some12-6),3-f(5-some8,some4-some9,1-some10,4-4,6-2,8-7,some11-6,7-3),4-f(some2-some9,5-some10,some4-4,1-2,4-7,6-6,8-3,some11-5),5-f(2-some10,some2-4,5-2,some4-7,1-6,4-3,6-5,8-8),7-f(some1-2,3-7,2-6,some2-3,5-5,some4-8,1-some3,4-some5)],3,[3,7,4,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(3-f(5-some0,some1-some2,1-some3,4-4,6-2,8-7,some4-6,7-3),[2-f(some1-some5,1-some0,4-some2,6-some3,8-4,some4-2,7-7,some6-6),3-f(5-some0,some1-some2,1-some3,4-4,6-2,8-7,some4-6,7-3),4-f(some7-some2,5-some3,some1-4,1-2,4-7,6-6,8-3,some4-5),5-f(2-some3,some7-4,5-2,some1-7,1-6,4-3,6-5,8-8),7-f(some8-2,3-7,2-6,some7-3,5-5,some1-8,1-some9,4-some10)],[2-f(some1-some5,1-some0,4-some2,6-some3,8-4,some4-2,7-7,some6-6),4-f(some7-some2,5-some3,some1-4,1-2,4-7,6-6,8-3,some4-5),5-f(2-some3,some7-4,5-2,some1-7,1-6,4-3,6-5,8-8),7-f(some8-2,3-7,2-6,some7-3,5-5,some1-8,1-some9,4-some10)])"}]
    [ a r:Fact; r:gives {"arg(4,f(5-some0,some1-some2,1-some3,4-4,6-2,8-7,some4-6,7-3),4-4)"}]
    <#lemma658>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_471 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_471.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma564> a r:Inference;
  r:gives {
    "queens([2-f(3-some4,1-some5,some2-some0,7-some1,some3-3,6-6,8-2,some6-4),3-f(4-some5,3-some0,1-some1,some2-3,7-6,some3-2,6-4,8-8),5-f(some7-some1,5-3,4-6,3-2,1-4,some2-8,7-7,some3-5),6-f(2-3,some7-6,5-2,4-4,3-8,1-7,some2-5,7-some8),8-f(some9-2,some10-4,2-8,some7-7,5-5,4-some8,3-some11,1-some12)],3,[6,8,2,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(6-f(2-3,some0-6,5-2,4-4,3-8,1-7,some1-5,7-some2),[2-f(3-some3,1-some4,some1-some5,7-some6,some7-3,6-6,8-2,some8-4),3-f(4-some4,3-some5,1-some6,some1-3,7-6,some7-2,6-4,8-8),5-f(some0-some6,5-3,4-6,3-2,1-4,some1-8,7-7,some7-5),6-f(2-3,some0-6,5-2,4-4,3-8,1-7,some1-5,7-some2),8-f(some9-2,some10-4,2-8,some0-7,5-5,4-some2,3-some11,1-some12)],[2-f(3-some3,1-some4,some1-some5,7-some6,some7-3,6-6,8-2,some8-4),3-f(4-some4,3-some5,1-some6,some1-3,7-6,some7-2,6-4,8-8),5-f(some0-some6,5-3,4-6,3-2,1-4,some1-8,7-7,some7-5),8-f(some9-2,some10-4,2-8,some0-7,5-5,4-some2,3-some11,1-some12)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-3,some0-6,5-2,4-4,3-8,1-7,some1-5,7-some2),4-4)"}]
    <#lemma659>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_472 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_472.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma565> a r:Inference;
  r:gives {
    "queens([2-f(some2-some3,1-some4,7-some5,6-some0,5-5,some6-3,8-2,some7-6),3-f(3-some4,some2-some5,1-some0,7-5,6-3,5-2,some6-6,8-8),4-f(some1-some5,3-some0,some2-5,1-3,7-2,6-6,5-8,some6-4),6-f(2-5,4-3,some1-2,3-6,some2-8,1-4,7-7,6-some8),8-f(some9-2,some10-6,2-8,4-4,some1-7,3-some8,some2-some11,1-some12)],3,[8,2,4,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-2,some1-6,2-8,4-4,some2-7,3-some3,some4-some5,1-some6),[2-f(some4-some7,1-some8,7-some9,6-some10,5-5,some11-3,8-2,some12-6),3-f(3-some8,some4-some9,1-some10,7-5,6-3,5-2,some11-6,8-8),4-f(some2-some9,3-some10,some4-5,1-3,7-2,6-6,5-8,some11-4),6-f(2-5,4-3,some2-2,3-6,some4-8,1-4,7-7,6-some3),8-f(some0-2,some1-6,2-8,4-4,some2-7,3-some3,some4-some5,1-some6)],[2-f(some4-some7,1-some8,7-some9,6-some10,5-5,some11-3,8-2,some12-6),3-f(3-some8,some4-some9,1-some10,7-5,6-3,5-2,some11-6,8-8),4-f(some2-some9,3-some10,some4-5,1-3,7-2,6-6,5-8,some11-4),6-f(2-5,4-3,some2-2,3-6,some4-8,1-4,7-7,6-some3)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-2,some1-6,2-8,4-4,some2-7,3-some3,some4-some5,1-some6),4-4)"}]
    <#lemma660>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_473 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_473.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma566> a r:Inference;
  r:gives {
    "queens([1-f(7-some4,some3-1,5-some5,8-some6,some7-2,6-6,some8-5,some9-3),3-f(2-some5,1-some6,7-2,some3-6,5-5,8-3,some7-some1,6-some2),5-f(4-2,3-6,2-5,1-3,7-some1,some3-some2,5-4,8-8),7-f(some10-5,some0-3,4-some1,3-some2,2-4,1-8,7-7,some3-some11),8-f(some12-3,some10-some1,some0-some2,4-4,3-8,2-7,1-some11,7-some13)],3,[8,3,1,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-3,some1-some2,some3-some4,4-4,3-8,2-7,1-some5,7-some6),[1-f(7-some7,some8-1,5-some9,8-some10,some11-2,6-6,some12-5,some13-3),3-f(2-some9,1-some10,7-2,some8-6,5-5,8-3,some11-some2,6-some4),5-f(4-2,3-6,2-5,1-3,7-some2,some8-some4,5-4,8-8),7-f(some1-5,some3-3,4-some2,3-some4,2-4,1-8,7-7,some8-some5),8-f(some0-3,some1-some2,some3-some4,4-4,3-8,2-7,1-some5,7-some6)],[1-f(7-some7,some8-1,5-some9,8-some10,some11-2,6-6,some12-5,some13-3),3-f(2-some9,1-some10,7-2,some8-6,5-5,8-3,some11-some2,6-some4),5-f(4-2,3-6,2-5,1-3,7-some2,some8-some4,5-4,8-8),7-f(some1-5,some3-3,4-some2,3-some4,2-4,1-8,7-7,some8-some5)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-3,some1-some2,some3-some4,4-4,3-8,2-7,1-some5,7-some6),4-4)"}]
    <#lemma661>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_474 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_474.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma567> a r:Inference;
  r:gives {
    "queens([1-f(some4-some6,7-1,5-some7,4-4,8-some8,some9-2,some10-5,some11-some2),3-f(6-some7,1-4,some4-some8,7-2,5-5,4-some2,8-3,some9-some3),4-f(2-4,6-some8,1-2,some4-5,7-some2,5-3,4-some3,8-8),6-f(some1-2,3-5,2-some2,6-3,1-some3,some4-8,7-7,5-6),8-f(some12-some2,some0-3,some1-some3,3-8,2-7,6-6,1-some5,some4-some13)],3,[1,3,8,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,7-1,5-some2,4-4,8-some3,some4-2,some5-5,some6-some7),[1-f(some0-some1,7-1,5-some2,4-4,8-some3,some4-2,some5-5,some6-some7),3-f(6-some2,1-4,some0-some3,7-2,5-5,4-some7,8-3,some4-some8),4-f(2-4,6-some3,1-2,some0-5,7-some7,5-3,4-some8,8-8),6-f(some9-2,3-5,2-some7,6-3,1-some8,some0-8,7-7,5-6),8-f(some10-some7,some11-3,some9-some8,3-8,2-7,6-6,1-some12,some0-some13)],[3-f(6-some2,1-4,some0-some3,7-2,5-5,4-some7,8-3,some4-some8),4-f(2-4,6-some3,1-2,some0-5,7-some7,5-3,4-some8,8-8),6-f(some9-2,3-5,2-some7,6-3,1-some8,some0-8,7-7,5-6),8-f(some10-some7,some11-3,some9-some8,3-8,2-7,6-6,1-some12,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,7-1,5-some2,4-4,8-some3,some4-2,some5-5,some6-some7),4-4)"}]
    <#lemma662>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_475 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_475.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma568> a r:Inference;
  r:gives {
    "queens([1-f(4-some5,7-1,some6-some7,some8-some9,5-5,8-2,some10-4,some11-some2),3-f(6-some7,1-some9,4-5,7-2,some6-4,some8-some2,5-3,8-8),4-f(2-some9,6-5,1-2,4-4,7-some2,some6-3,some8-8,5-some3),6-f(some1-2,3-4,2-some2,6-3,1-8,4-some3,7-7,some6-6),8-f(some12-some2,some0-3,some1-8,3-some3,2-7,6-6,1-some4,4-some13)],3,[4,1,8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(4-f(2-some0,6-5,1-2,4-4,7-some1,some2-3,some3-8,5-some4),[1-f(4-some5,7-1,some2-some6,some3-some0,5-5,8-2,some7-4,some8-some1),3-f(6-some6,1-some0,4-5,7-2,some2-4,some3-some1,5-3,8-8),4-f(2-some0,6-5,1-2,4-4,7-some1,some2-3,some3-8,5-some4),6-f(some9-2,3-4,2-some1,6-3,1-8,4-some4,7-7,some2-6),8-f(some10-some1,some11-3,some9-8,3-some4,2-7,6-6,1-some12,4-some13)],[1-f(4-some5,7-1,some2-some6,some3-some0,5-5,8-2,some7-4,some8-some1),3-f(6-some6,1-some0,4-5,7-2,some2-4,some3-some1,5-3,8-8),6-f(some9-2,3-4,2-some1,6-3,1-8,4-some4,7-7,some2-6),8-f(some10-some1,some11-3,some9-8,3-some4,2-7,6-6,1-some12,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-some0,6-5,1-2,4-4,7-some1,some2-3,some3-8,5-some4),4-4)"}]
    <#lemma663>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_476 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_476.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma569> a r:Inference;
  r:gives {
    "queens([3-f(6-3,1-some2,some0-some3,5-some5,3-2,8-5,7-7,some4-4),4-f(4-some2,6-some3,1-some5,some0-2,5-5,3-7,8-4,7-some8),5-f(2-some3,4-some5,6-2,1-5,some0-7,5-4,3-some8,8-8),7-f(some9-2,some10-5,2-7,4-4,6-some8,1-8,some0-6,5-some11),8-f(some12-5,some9-7,some10-4,2-some8,4-8,6-6,1-some11,some0-some13)],3,[7,4,8,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(7-f(some0-2,some1-5,2-7,4-4,6-some2,1-8,some3-6,5-some4),[3-f(6-3,1-some5,some3-some6,5-some7,3-2,8-5,7-7,some8-4),4-f(4-some5,6-some6,1-some7,some3-2,5-5,3-7,8-4,7-some2),5-f(2-some6,4-some7,6-2,1-5,some3-7,5-4,3-some2,8-8),7-f(some0-2,some1-5,2-7,4-4,6-some2,1-8,some3-6,5-some4),8-f(some9-5,some0-7,some1-4,2-some2,4-8,6-6,1-some4,some3-some10)],[3-f(6-3,1-some5,some3-some6,5-some7,3-2,8-5,7-7,some8-4),4-f(4-some5,6-some6,1-some7,some3-2,5-5,3-7,8-4,7-some2),5-f(2-some6,4-some7,6-2,1-5,some3-7,5-4,3-some2,8-8),8-f(some9-5,some0-7,some1-4,2-some2,4-8,6-6,1-some4,some3-some10)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-2,some1-5,2-7,4-4,6-some2,1-8,some3-6,5-some4),4-4)"}]
    <#lemma664>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_477 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_477.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma570> a r:Inference;
  r:gives {
    "queens([1-f(7-some8,4-1,6-some9,8-some10,5-5,some11-4,some12-2,some13-some1),3-f(some5-some9,1-some10,7-5,4-4,6-2,8-some1,5-6,some11-3),4-f(some4-some10,some5-5,1-4,7-2,4-some1,6-6,8-3,5-some3),5-f(2-5,some4-4,some5-2,1-some1,7-6,4-3,6-some3,8-8),7-f(some2-2,3-some1,2-6,some4-3,some5-some3,1-8,7-7,4-some6)],3,[3,1,4,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(3-f(some0-some1,1-some2,7-5,4-4,6-2,8-some3,5-6,some4-3),[1-f(7-some5,4-1,6-some1,8-some2,5-5,some4-4,some6-2,some7-some3),3-f(some0-some1,1-some2,7-5,4-4,6-2,8-some3,5-6,some4-3),4-f(some8-some2,some0-5,1-4,7-2,4-some3,6-6,8-3,5-some9),5-f(2-5,some8-4,some0-2,1-some3,7-6,4-3,6-some9,8-8),7-f(some10-2,3-some3,2-6,some8-3,some0-some9,1-8,7-7,4-some11)],[1-f(7-some5,4-1,6-some1,8-some2,5-5,some4-4,some6-2,some7-some3),4-f(some8-some2,some0-5,1-4,7-2,4-some3,6-6,8-3,5-some9),5-f(2-5,some8-4,some0-2,1-some3,7-6,4-3,6-some9,8-8),7-f(some10-2,3-some3,2-6,some8-3,some0-some9,1-8,7-7,4-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,1-some2,7-5,4-4,6-2,8-some3,5-6,some4-3),4-4)"}]
    <#lemma665>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_478 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_478.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma571> a r:Inference;
  r:gives {
    "queens([1-f(3-some6,6-1,some3-some0,some4-some1,8-3,some5-some2,7-7,some7-2),4-f(5-some1,4-3,1-some2,3-7,6-2,some3-4,some4-6,8-8),5-f(some8-3,5-some2,4-7,1-2,3-4,6-6,some3-8,some4-5),6-f(2-some2,some8-7,5-2,4-4,1-6,3-8,6-5,some3-some9),8-f(some10-2,some11-4,2-6,some8-8,5-5,4-some9,1-some12,3-some13)],3,[6,8,5,1,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(6-f(2-some0,some1-7,5-2,4-4,1-6,3-8,6-5,some2-some3),[1-f(3-some4,6-1,some2-some5,some6-some7,8-3,some8-some0,7-7,some9-2),4-f(5-some7,4-3,1-some0,3-7,6-2,some2-4,some6-6,8-8),5-f(some1-3,5-some0,4-7,1-2,3-4,6-6,some2-8,some6-5),6-f(2-some0,some1-7,5-2,4-4,1-6,3-8,6-5,some2-some3),8-f(some10-2,some11-4,2-6,some1-8,5-5,4-some3,1-some12,3-some13)],[1-f(3-some4,6-1,some2-some5,some6-some7,8-3,some8-some0,7-7,some9-2),4-f(5-some7,4-3,1-some0,3-7,6-2,some2-4,some6-6,8-8),5-f(some1-3,5-some0,4-7,1-2,3-4,6-6,some2-8,some6-5),8-f(some10-2,some11-4,2-6,some1-8,5-5,4-some3,1-some12,3-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-some0,some1-7,5-2,4-4,1-6,3-8,6-5,some2-some3),4-4)"}]
    <#lemma666>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_479 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_479.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma572> a r:Inference;
  r:gives {
    "queens([1-f(some2-some4,7-1,6-some5,some3-some6,5-5,8-some1,some7-3,some8-2),3-f(3-some5,1-some6,some2-5,7-some1,6-3,some3-2,5-6,8-8),4-f(some0-some6,3-5,1-some1,some2-3,7-2,6-6,some3-8,5-4),6-f(2-some1,4-3,some0-2,3-6,1-8,some2-4,7-7,6-some9),8-f(some10-2,some11-6,2-8,4-4,some0-7,3-some9,1-some12,some2-some13)],3,[8,1,4,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-2,some1-6,2-8,4-4,some2-7,3-some3,1-some4,some5-some6),[1-f(some5-some7,7-1,6-some8,some9-some10,5-5,8-some11,some12-3,some13-2),3-f(3-some8,1-some10,some5-5,7-some11,6-3,some9-2,5-6,8-8),4-f(some2-some10,3-5,1-some11,some5-3,7-2,6-6,some9-8,5-4),6-f(2-some11,4-3,some2-2,3-6,1-8,some5-4,7-7,6-some3),8-f(some0-2,some1-6,2-8,4-4,some2-7,3-some3,1-some4,some5-some6)],[1-f(some5-some7,7-1,6-some8,some9-some10,5-5,8-some11,some12-3,some13-2),3-f(3-some8,1-some10,some5-5,7-some11,6-3,some9-2,5-6,8-8),4-f(some2-some10,3-5,1-some11,some5-3,7-2,6-6,some9-8,5-4),6-f(2-some11,4-3,some2-2,3-6,1-8,some5-4,7-7,6-some3)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-2,some1-6,2-8,4-4,some2-7,3-some3,1-some4,some5-some6),4-4)"}]
    <#lemma667>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_480 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_480.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma573> a r:Inference;
  r:gives {
    "queens([1-f(7-some5,6-1,5-some6,4-4,8-some7,some8-some1,some9-5,some10-3),3-f(some3-some6,1-4,7-some7,6-some1,5-5,4-3,8-2,some8-6),4-f(3-4,some3-some7,1-some1,7-5,6-3,5-2,4-6,8-8),5-f(some2-some7,3-some1,some3-5,1-3,7-2,6-6,5-8,4-some4),7-f(2-5,some0-3,some2-2,3-6,some3-8,1-some4,7-7,6-some11)],3,[1,3,5,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(7-some0,6-1,5-some1,4-4,8-some2,some3-some4,some5-5,some6-3),[1-f(7-some0,6-1,5-some1,4-4,8-some2,some3-some4,some5-5,some6-3),3-f(some7-some1,1-4,7-some2,6-some4,5-5,4-3,8-2,some3-6),4-f(3-4,some7-some2,1-some4,7-5,6-3,5-2,4-6,8-8),5-f(some8-some2,3-some4,some7-5,1-3,7-2,6-6,5-8,4-some9),7-f(2-5,some10-3,some8-2,3-6,some7-8,1-some9,7-7,6-some11)],[3-f(some7-some1,1-4,7-some2,6-some4,5-5,4-3,8-2,some3-6),4-f(3-4,some7-some2,1-some4,7-5,6-3,5-2,4-6,8-8),5-f(some8-some2,3-some4,some7-5,1-3,7-2,6-6,5-8,4-some9),7-f(2-5,some10-3,some8-2,3-6,some7-8,1-some9,7-7,6-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(7-some0,6-1,5-some1,4-4,8-some2,some3-some4,some5-5,some6-3),4-4)"}]
    <#lemma668>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_481 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_481.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma574> a r:Inference;
  r:gives {
    "queens([2-f(4-2,some3-1,2-some5,8-some6,7-some7,6-6,some8-4,some9-3),4-f(5-some5,1-some6,4-some7,some3-6,2-4,8-3,7-7,6-some2),5-f(3-some6,5-some7,1-6,4-4,some3-3,2-7,8-some2,7-5),6-f(some1-some7,3-6,5-4,1-3,4-7,some3-some2,2-5,8-8),8-f(some10-4,some0-3,some1-7,3-some2,5-5,1-8,4-some4,some3-some11)],3,[5,8,2,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(5-f(3-some0,5-some1,1-6,4-4,some2-3,2-7,8-some3,7-5),[2-f(4-2,some2-1,2-some4,8-some0,7-some1,6-6,some5-4,some6-3),4-f(5-some4,1-some0,4-some1,some2-6,2-4,8-3,7-7,6-some3),5-f(3-some0,5-some1,1-6,4-4,some2-3,2-7,8-some3,7-5),6-f(some7-some1,3-6,5-4,1-3,4-7,some2-some3,2-5,8-8),8-f(some8-4,some9-3,some7-7,3-some3,5-5,1-8,4-some10,some2-some11)],[2-f(4-2,some2-1,2-some4,8-some0,7-some1,6-6,some5-4,some6-3),4-f(5-some4,1-some0,4-some1,some2-6,2-4,8-3,7-7,6-some3),6-f(some7-some1,3-6,5-4,1-3,4-7,some2-some3,2-5,8-8),8-f(some8-4,some9-3,some7-7,3-some3,5-5,1-8,4-some10,some2-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(3-some0,5-some1,1-6,4-4,some2-3,2-7,8-some3,7-5),4-4)"}]
    <#lemma669>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_482 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_482.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma575> a r:Inference;
  r:gives {
    "queens([1-f(some1-some7,3-some0,8-1,7-3,5-5,some3-2,some5-some2,some8-some4),4-f(2-3,1-5,6-2,some1-some2,3-some4,8-some6,7-7,5-4),6-f(some9-2,4-some2,2-some4,1-some6,6-7,some1-4,3-6,8-8),7-f(some10-some2,some9-some4,4-some6,2-7,1-4,6-6,some1-8,3-some11),8-f(some12-some4,some10-some6,some9-7,4-4,2-6,1-8,6-some11,some1-some13)],3,[8,1,7,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-some3,some4-7,4-4,2-6,1-8,6-some5,some6-some7),[1-f(some6-some8,3-some9,8-1,7-3,5-5,some10-2,some11-some12,some13-some1),4-f(2-3,1-5,6-2,some6-some12,3-some1,8-some3,7-7,5-4),6-f(some4-2,4-some12,2-some1,1-some3,6-7,some6-4,3-6,8-8),7-f(some2-some12,some4-some1,4-some3,2-7,1-4,6-6,some6-8,3-some5),8-f(some0-some1,some2-some3,some4-7,4-4,2-6,1-8,6-some5,some6-some7)],[1-f(some6-some8,3-some9,8-1,7-3,5-5,some10-2,some11-some12,some13-some1),4-f(2-3,1-5,6-2,some6-some12,3-some1,8-some3,7-7,5-4),6-f(some4-2,4-some12,2-some1,1-some3,6-7,some6-4,3-6,8-8),7-f(some2-some12,some4-some1,4-some3,2-7,1-4,6-6,some6-8,3-some5)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,some2-some3,some4-7,4-4,2-6,1-8,6-some5,some6-some7),4-4)"}]
    <#lemma670>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_483 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_483.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma576> a r:Inference;
  r:gives {
    "queens([1-f(7-some7,3-some0,6-1,some2-3,some3-some1,some5-2,some6-some4,8-8),4-f(2-3,1-some1,5-2,7-some4,3-8,6-6,some2-5,some3-4),6-f(some8-2,4-some4,2-8,1-6,5-5,7-4,3-some9,6-7),7-f(some10-some4,some8-8,4-6,2-5,1-4,5-some9,7-7,3-some11),8-f(some12-8,some10-6,some8-5,4-4,2-some9,1-7,5-some11,7-some13)],3,[8,6,4,7,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-8,some1-6,some2-5,4-4,2-some3,1-7,5-some4,7-some5),[1-f(7-some6,3-some7,6-1,some8-3,some9-some10,some11-2,some12-some13,8-8),4-f(2-3,1-some10,5-2,7-some13,3-8,6-6,some8-5,some9-4),6-f(some2-2,4-some13,2-8,1-6,5-5,7-4,3-some3,6-7),7-f(some1-some13,some2-8,4-6,2-5,1-4,5-some3,7-7,3-some4),8-f(some0-8,some1-6,some2-5,4-4,2-some3,1-7,5-some4,7-some5)],[1-f(7-some6,3-some7,6-1,some8-3,some9-some10,some11-2,some12-some13,8-8),4-f(2-3,1-some10,5-2,7-some13,3-8,6-6,some8-5,some9-4),6-f(some2-2,4-some13,2-8,1-6,5-5,7-4,3-some3,6-7),7-f(some1-some13,some2-8,4-6,2-5,1-4,5-some3,7-7,3-some4)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-8,some1-6,some2-5,4-4,2-some3,1-7,5-some4,7-some5),4-4)"}]
    <#lemma671>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_484 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_484.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma577> a r:Inference;
  r:gives {
    "queens([1-f(some5-some6,5-some7,8-1,4-4,6-some8,some9-2,some10-6,some11-5),2-f(7-some7,some5-1,5-4,8-some8,4-2,6-6,some9-5,some10-3),4-f(2-4,1-some8,7-2,some5-6,5-5,8-3,4-some2,6-some3),6-f(some1-2,3-6,2-5,1-3,7-some2,some5-some3,5-some4,8-8),8-f(some12-5,some0-3,some1-some2,3-some3,2-some4,1-8,7-7,some5-some13)],3,[1,4,2,8,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,5-some2,8-1,4-4,6-some3,some4-2,some5-6,some6-5),[1-f(some0-some1,5-some2,8-1,4-4,6-some3,some4-2,some5-6,some6-5),2-f(7-some2,some0-1,5-4,8-some3,4-2,6-6,some4-5,some5-3),4-f(2-4,1-some3,7-2,some0-6,5-5,8-3,4-some7,6-some8),6-f(some9-2,3-6,2-5,1-3,7-some7,some0-some8,5-some10,8-8),8-f(some11-5,some12-3,some9-some7,3-some8,2-some10,1-8,7-7,some0-some13)],[2-f(7-some2,some0-1,5-4,8-some3,4-2,6-6,some4-5,some5-3),4-f(2-4,1-some3,7-2,some0-6,5-5,8-3,4-some7,6-some8),6-f(some9-2,3-6,2-5,1-3,7-some7,some0-some8,5-some10,8-8),8-f(some11-5,some12-3,some9-some7,3-some8,2-some10,1-8,7-7,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,5-some2,8-1,4-4,6-some3,some4-2,some5-6,some6-5),4-4)"}]
    <#lemma672>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_485 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_485.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma578> a r:Inference;
  r:gives {
    "queens([1-f(4-some7,some8-some9,8-1,some10-some11,5-5,7-2,some12-4,some13-7),2-f(6-some9,4-1,some8-some11,8-5,some10-2,5-4,7-7,some12-some2),4-f(2-some11,1-5,6-2,4-4,some8-7,8-some2,some10-3,5-some4),6-f(3-2,some3-4,2-7,1-some2,6-3,4-some4,some8-6,8-8),7-f(some1-4,3-7,some3-some2,2-3,1-some4,6-6,4-8,some8-some5)],3,[4,1,7,2,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(4-f(2-some0,1-5,6-2,4-4,some1-7,8-some2,some3-3,5-some4),[1-f(4-some5,some1-some6,8-1,some3-some0,5-5,7-2,some7-4,some8-7),2-f(6-some6,4-1,some1-some0,8-5,some3-2,5-4,7-7,some7-some2),4-f(2-some0,1-5,6-2,4-4,some1-7,8-some2,some3-3,5-some4),6-f(3-2,some9-4,2-7,1-some2,6-3,4-some4,some1-6,8-8),7-f(some10-4,3-7,some9-some2,2-3,1-some4,6-6,4-8,some1-some11)],[1-f(4-some5,some1-some6,8-1,some3-some0,5-5,7-2,some7-4,some8-7),2-f(6-some6,4-1,some1-some0,8-5,some3-2,5-4,7-7,some7-some2),6-f(3-2,some9-4,2-7,1-some2,6-3,4-some4,some1-6,8-8),7-f(some10-4,3-7,some9-some2,2-3,1-some4,6-6,4-8,some1-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-some0,1-5,6-2,4-4,some1-7,8-some2,some3-3,5-some4),4-4)"}]
    <#lemma673>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_486 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_486.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma579> a r:Inference;
  r:gives {
    "queens([1-f(7-some6,3-some0,some1-1,some3-3,8-some2,6-6,some4-2,some7-4),4-f(5-3,1-some2,4-6,7-2,3-4,some1-some5,some3-some8,8-8),5-f(2-some2,5-6,1-2,4-4,7-some5,3-some8,some1-8,some3-5),7-f(some9-2,some10-4,2-some5,5-some8,1-8,4-5,7-7,3-some11),8-f(some12-4,some9-some5,some10-some8,2-8,5-5,1-7,4-some11,7-some13)],3,[5,8,1,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(5-f(2-some0,5-6,1-2,4-4,7-some1,3-some2,some3-8,some4-5),[1-f(7-some5,3-some6,some3-1,some4-3,8-some0,6-6,some7-2,some8-4),4-f(5-3,1-some0,4-6,7-2,3-4,some3-some1,some4-some2,8-8),5-f(2-some0,5-6,1-2,4-4,7-some1,3-some2,some3-8,some4-5),7-f(some9-2,some10-4,2-some1,5-some2,1-8,4-5,7-7,3-some11),8-f(some12-4,some9-some1,some10-some2,2-8,5-5,1-7,4-some11,7-some13)],[1-f(7-some5,3-some6,some3-1,some4-3,8-some0,6-6,some7-2,some8-4),4-f(5-3,1-some0,4-6,7-2,3-4,some3-some1,some4-some2,8-8),7-f(some9-2,some10-4,2-some1,5-some2,1-8,4-5,7-7,3-some11),8-f(some12-4,some9-some1,some10-some2,2-8,5-5,1-7,4-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-some0,5-6,1-2,4-4,7-some1,3-some2,some3-8,some4-5),4-4)"}]
    <#lemma674>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_487 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_487.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma580> a r:Inference;
  r:gives {
    "queens([1-f(some1-some6,3-some0,6-1,8-3,5-5,some3-some2,some5-2,some7-some4),4-f(4-3,1-5,7-some2,some1-2,3-some4,6-6,8-4,5-some8),5-f(2-5,4-some2,1-2,7-some4,some1-6,3-4,6-some8,8-8),7-f(some9-2,some10-some4,2-6,4-4,1-some8,7-8,some1-some11,3-7),8-f(some12-some4,some9-6,some10-4,2-some8,4-8,1-some11,7-7,some1-some13)],3,[7,1,4,8,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(7-f(some0-2,some1-some2,2-6,4-4,1-some3,7-8,some4-some5,3-7),[1-f(some4-some6,3-some7,6-1,8-3,5-5,some8-some9,some10-2,some11-some2),4-f(4-3,1-5,7-some9,some4-2,3-some2,6-6,8-4,5-some3),5-f(2-5,4-some9,1-2,7-some2,some4-6,3-4,6-some3,8-8),7-f(some0-2,some1-some2,2-6,4-4,1-some3,7-8,some4-some5,3-7),8-f(some12-some2,some0-6,some1-4,2-some3,4-8,1-some5,7-7,some4-some13)],[1-f(some4-some6,3-some7,6-1,8-3,5-5,some8-some9,some10-2,some11-some2),4-f(4-3,1-5,7-some9,some4-2,3-some2,6-6,8-4,5-some3),5-f(2-5,4-some9,1-2,7-some2,some4-6,3-4,6-some3,8-8),8-f(some12-some2,some0-6,some1-4,2-some3,4-8,1-some5,7-7,some4-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-2,some1-some2,2-6,4-4,1-some3,7-8,some4-some5,3-7),4-4)"}]
    <#lemma675>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_488 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_488.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma581> a r:Inference;
  r:gives {
    "queens([1-f(5-some6,3-some0,some1-1,some3-3,8-some2,6-6,some5-2,some7-some4),4-f(4-3,1-some2,7-6,5-2,3-some4,some1-5,some3-4,8-8),5-f(2-some2,4-6,1-2,7-some4,5-5,3-4,some1-8,some3-some8),7-f(some9-2,some10-some4,2-5,4-4,1-8,7-some8,5-some11,3-7),8-f(some12-some4,some9-5,some10-4,2-8,4-some8,1-some11,7-7,5-some13)],3,[7,5,1,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(7-f(some0-2,some1-some2,2-5,4-4,1-8,7-some3,5-some4,3-7),[1-f(5-some5,3-some6,some7-1,some8-3,8-some9,6-6,some10-2,some11-some2),4-f(4-3,1-some9,7-6,5-2,3-some2,some7-5,some8-4,8-8),5-f(2-some9,4-6,1-2,7-some2,5-5,3-4,some7-8,some8-some3),7-f(some0-2,some1-some2,2-5,4-4,1-8,7-some3,5-some4,3-7),8-f(some12-some2,some0-5,some1-4,2-8,4-some3,1-some4,7-7,5-some13)],[1-f(5-some5,3-some6,some7-1,some8-3,8-some9,6-6,some10-2,some11-some2),4-f(4-3,1-some9,7-6,5-2,3-some2,some7-5,some8-4,8-8),5-f(2-some9,4-6,1-2,7-some2,5-5,3-4,some7-8,some8-some3),8-f(some12-some2,some0-5,some1-4,2-8,4-some3,1-some4,7-7,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-2,some1-some2,2-5,4-4,1-8,7-some3,5-some4,3-7),4-4)"}]
    <#lemma676>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_489 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_489.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma582> a r:Inference;
  r:gives {
    "queens([1-f(7-some5,6-some6,some2-1,4-4,some3-some0,some7-3,8-2,some8-some1),2-f(3-some6,7-1,6-4,some2-some0,4-3,some3-2,some7-some1,8-8),5-f(2-some0,5-3,1-2,3-some1,7-8,6-6,some2-some4,4-5),7-f(some9-2,some10-some1,2-8,5-6,1-some4,3-5,7-7,6-some11),8-f(some12-some1,some9-8,some10-6,2-some4,5-5,1-7,3-some11,7-some13)],3,[1,8,5,7,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(7-some0,6-some1,some2-1,4-4,some3-some4,some5-3,8-2,some6-some7),[1-f(7-some0,6-some1,some2-1,4-4,some3-some4,some5-3,8-2,some6-some7),2-f(3-some1,7-1,6-4,some2-some4,4-3,some3-2,some5-some7,8-8),5-f(2-some4,5-3,1-2,3-some7,7-8,6-6,some2-some8,4-5),7-f(some9-2,some10-some7,2-8,5-6,1-some8,3-5,7-7,6-some11),8-f(some12-some7,some9-8,some10-6,2-some8,5-5,1-7,3-some11,7-some13)],[2-f(3-some1,7-1,6-4,some2-some4,4-3,some3-2,some5-some7,8-8),5-f(2-some4,5-3,1-2,3-some7,7-8,6-6,some2-some8,4-5),7-f(some9-2,some10-some7,2-8,5-6,1-some8,3-5,7-7,6-some11),8-f(some12-some7,some9-8,some10-6,2-some8,5-5,1-7,3-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(7-some0,6-some1,some2-1,4-4,some3-some4,some5-3,8-2,some6-some7),4-4)"}]
    <#lemma677>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_490 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_490.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma583> a r:Inference;
  r:gives {
    "queens([1-f(7-some5,6-some6,4-1,some2-some0,some3-4,some7-3,some8-2,8-8),2-f(3-some6,7-1,6-some0,4-4,some2-3,some3-2,some7-8,some8-some1),5-f(2-4,5-3,1-2,3-8,7-some1,6-6,4-some4,some2-5),7-f(some9-2,some10-8,2-some1,5-6,1-some4,3-5,7-7,6-some11),8-f(some12-8,some9-some1,some10-6,2-some4,5-5,1-7,3-some11,7-some13)],3,[2,8,5,7,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(2-f(3-some0,7-1,6-some1,4-4,some2-3,some3-2,some4-8,some5-some6),[1-f(7-some7,6-some0,4-1,some2-some1,some3-4,some4-3,some5-2,8-8),2-f(3-some0,7-1,6-some1,4-4,some2-3,some3-2,some4-8,some5-some6),5-f(2-4,5-3,1-2,3-8,7-some6,6-6,4-some8,some2-5),7-f(some9-2,some10-8,2-some6,5-6,1-some8,3-5,7-7,6-some11),8-f(some12-8,some9-some6,some10-6,2-some8,5-5,1-7,3-some11,7-some13)],[1-f(7-some7,6-some0,4-1,some2-some1,some3-4,some4-3,some5-2,8-8),5-f(2-4,5-3,1-2,3-8,7-some6,6-6,4-some8,some2-5),7-f(some9-2,some10-8,2-some6,5-6,1-some8,3-5,7-7,6-some11),8-f(some12-8,some9-some6,some10-6,2-some8,5-5,1-7,3-some11,7-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(3-some0,7-1,6-some1,4-4,some2-3,some3-2,some4-8,some5-some6),4-4)"}]
    <#lemma678>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_491 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_491.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma584> a r:Inference;
  r:gives {
    "queens([1-f(some5-some7,5-some8,7-1,4-4,some9-some10,some11-some12,8-2,some13-5),2-f(6-some8,some5-1,5-4,7-some10,4-some12,some9-2,some11-5,8-8),4-f(some2-4,1-some10,6-some12,some5-2,5-5,7-8,4-3,some9-7),5-f(2-some10,some2-some12,1-2,6-5,some5-8,5-3,7-7,4-6),7-f(some1-2,3-5,2-8,some2-3,1-7,6-6,some5-some3,5-some4)],3,[1,4,7,5,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,5-some2,7-1,4-4,some3-some4,some5-some6,8-2,some7-5),[1-f(some0-some1,5-some2,7-1,4-4,some3-some4,some5-some6,8-2,some7-5),2-f(6-some2,some0-1,5-4,7-some4,4-some6,some3-2,some5-5,8-8),4-f(some8-4,1-some4,6-some6,some0-2,5-5,7-8,4-3,some3-7),5-f(2-some4,some8-some6,1-2,6-5,some0-8,5-3,7-7,4-6),7-f(some9-2,3-5,2-8,some8-3,1-7,6-6,some0-some10,5-some11)],[2-f(6-some2,some0-1,5-4,7-some4,4-some6,some3-2,some5-5,8-8),4-f(some8-4,1-some4,6-some6,some0-2,5-5,7-8,4-3,some3-7),5-f(2-some4,some8-some6,1-2,6-5,some0-8,5-3,7-7,4-6),7-f(some9-2,3-5,2-8,some8-3,1-7,6-6,some0-some10,5-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,5-some2,7-1,4-4,some3-some4,some5-some6,8-2,some7-5),4-4)"}]
    <#lemma679>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_492 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_492.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma585> a r:Inference;
  r:gives {
    "queens([1-f(5-some6,some7-some8,some9-1,4-4,8-some10,7-some11,some12-2,some13-7),2-f(6-some8,5-1,some7-4,some9-some10,4-some11,8-2,7-7,some12-5),4-f(some2-4,1-some10,6-some11,5-2,some7-7,some9-5,4-3,8-8),5-f(2-some10,some2-some11,1-2,6-7,5-5,some7-3,some9-8,4-6),7-f(some1-2,3-7,2-5,some2-3,1-8,6-6,5-some3,some7-some4)],3,[1,5,7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(5-some0,some1-some2,some3-1,4-4,8-some4,7-some5,some6-2,some7-7),[1-f(5-some0,some1-some2,some3-1,4-4,8-some4,7-some5,some6-2,some7-7),2-f(6-some2,5-1,some1-4,some3-some4,4-some5,8-2,7-7,some6-5),4-f(some8-4,1-some4,6-some5,5-2,some1-7,some3-5,4-3,8-8),5-f(2-some4,some8-some5,1-2,6-7,5-5,some1-3,some3-8,4-6),7-f(some9-2,3-7,2-5,some8-3,1-8,6-6,5-some10,some1-some11)],[2-f(6-some2,5-1,some1-4,some3-some4,4-some5,8-2,7-7,some6-5),4-f(some8-4,1-some4,6-some5,5-2,some1-7,some3-5,4-3,8-8),5-f(2-some4,some8-some5,1-2,6-7,5-5,some1-3,some3-8,4-6),7-f(some9-2,3-7,2-5,some8-3,1-8,6-6,5-some10,some1-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(5-some0,some1-some2,some3-1,4-4,8-some4,7-some5,some6-2,some7-7),4-4)"}]
    <#lemma680>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_493 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_493.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma586> a r:Inference;
  r:gives {
    "queens([1-f(7-some8,5-some9,4-1,8-some10,some11-4,6-6,some12-2,some13-5),2-f(some5-some9,7-1,5-some10,4-4,8-6,some11-2,6-5,some12-some2),4-f(some4-some10,1-4,some5-6,7-2,5-5,4-some2,8-3,some11-some3),5-f(2-4,some4-6,1-2,some5-5,7-some2,5-3,4-some3,8-8),7-f(some1-2,3-5,2-some2,some4-3,1-some3,some5-8,7-7,5-some6)],3,[2,4,1,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(2-f(some0-some1,7-1,5-some2,4-4,8-6,some3-2,6-5,some4-some5),[1-f(7-some6,5-some1,4-1,8-some2,some3-4,6-6,some4-2,some7-5),2-f(some0-some1,7-1,5-some2,4-4,8-6,some3-2,6-5,some4-some5),4-f(some8-some2,1-4,some0-6,7-2,5-5,4-some5,8-3,some3-some9),5-f(2-4,some8-6,1-2,some0-5,7-some5,5-3,4-some9,8-8),7-f(some10-2,3-5,2-some5,some8-3,1-some9,some0-8,7-7,5-some11)],[1-f(7-some6,5-some1,4-1,8-some2,some3-4,6-6,some4-2,some7-5),4-f(some8-some2,1-4,some0-6,7-2,5-5,4-some5,8-3,some3-some9),5-f(2-4,some8-6,1-2,some0-5,7-some5,5-3,4-some9,8-8),7-f(some10-2,3-5,2-some5,some8-3,1-some9,some0-8,7-7,5-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,7-1,5-some2,4-4,8-6,some3-2,6-5,some4-some5),4-4)"}]
    <#lemma681>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_494 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_494.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma587> a r:Inference;
  r:gives {
    "queens([1-f(5-some6,3-some1,8-1,7-3,some3-some2,6-6,some5-some4,some7-2),4-f(some8-3,1-some2,some0-6,5-some4,3-2,8-5,7-7,some3-4),5-f(4-some2,some8-6,1-some4,some0-2,5-5,3-7,8-4,7-some9),6-f(2-6,4-some4,some8-2,1-5,some0-7,5-4,3-some9,8-8),8-f(some10-2,some11-5,2-7,4-4,some8-some9,1-8,some0-some12,5-some13)],3,[8,5,1,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-2,some1-5,2-7,4-4,some2-some3,1-8,some4-some5,5-some6),[1-f(5-some7,3-some8,8-1,7-3,some9-some10,6-6,some11-some12,some13-2),4-f(some2-3,1-some10,some4-6,5-some12,3-2,8-5,7-7,some9-4),5-f(4-some10,some2-6,1-some12,some4-2,5-5,3-7,8-4,7-some3),6-f(2-6,4-some12,some2-2,1-5,some4-7,5-4,3-some3,8-8),8-f(some0-2,some1-5,2-7,4-4,some2-some3,1-8,some4-some5,5-some6)],[1-f(5-some7,3-some8,8-1,7-3,some9-some10,6-6,some11-some12,some13-2),4-f(some2-3,1-some10,some4-6,5-some12,3-2,8-5,7-7,some9-4),5-f(4-some10,some2-6,1-some12,some4-2,5-5,3-7,8-4,7-some3),6-f(2-6,4-some12,some2-2,1-5,some4-7,5-4,3-some3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-2,some1-5,2-7,4-4,some2-some3,1-8,some4-some5,5-some6),4-4)"}]
    <#lemma682>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_495 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_495.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma588> a r:Inference;
  r:gives {
    "queens([1-f(some1-some6,3-some0,6-1,8-3,some4-some2,some5-some3,7-7,some7-2),4-f(some8-3,1-some2,5-some3,some1-7,3-2,6-6,8-5,some4-4),5-f(4-some2,some8-some3,1-7,5-2,some1-6,3-5,6-4,8-8),6-f(2-some3,4-7,some8-2,1-6,5-5,some1-4,3-8,6-some9),8-f(some10-2,some11-6,2-5,4-4,some8-8,1-some9,5-some12,some1-some13)],3,[8,6,4,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-2,some1-6,2-5,4-4,some2-8,1-some3,5-some4,some5-some6),[1-f(some5-some7,3-some8,6-1,8-3,some9-some10,some11-some12,7-7,some13-2),4-f(some2-3,1-some10,5-some12,some5-7,3-2,6-6,8-5,some9-4),5-f(4-some10,some2-some12,1-7,5-2,some5-6,3-5,6-4,8-8),6-f(2-some12,4-7,some2-2,1-6,5-5,some5-4,3-8,6-some3),8-f(some0-2,some1-6,2-5,4-4,some2-8,1-some3,5-some4,some5-some6)],[1-f(some5-some7,3-some8,6-1,8-3,some9-some10,some11-some12,7-7,some13-2),4-f(some2-3,1-some10,5-some12,some5-7,3-2,6-6,8-5,some9-4),5-f(4-some10,some2-some12,1-7,5-2,some5-6,3-5,6-4,8-8),6-f(2-some12,4-7,some2-2,1-6,5-5,some5-4,3-8,6-some3)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-2,some1-6,2-5,4-4,some2-8,1-some3,5-some4,some5-some6),4-4)"}]
    <#lemma683>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_496 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_496.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma589> a r:Inference;
  r:gives {
    "queens([1-f(6-some4,some2-some5,some3-1,8-some0,5-5,7-3,some6-some1,some7-7),2-f(3-some5,6-1,some2-some0,some3-5,8-3,5-some1,7-7,some6-2),5-f(some8-5,4-3,1-some1,3-7,6-2,some2-4,some3-6,8-8),6-f(some9-3,some8-some1,4-7,1-2,3-4,6-6,some2-8,some3-some10),7-f(2-some1,some9-7,some8-2,4-4,1-6,3-8,6-some10,some2-some11)],3,[7,1,6,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(7-f(2-some0,some1-7,some2-2,4-4,1-6,3-8,6-some3,some4-some5),[1-f(6-some6,some4-some7,some8-1,8-some9,5-5,7-3,some10-some0,some11-7),2-f(3-some7,6-1,some4-some9,some8-5,8-3,5-some0,7-7,some10-2),5-f(some2-5,4-3,1-some0,3-7,6-2,some4-4,some8-6,8-8),6-f(some1-3,some2-some0,4-7,1-2,3-4,6-6,some4-8,some8-some3),7-f(2-some0,some1-7,some2-2,4-4,1-6,3-8,6-some3,some4-some5)],[1-f(6-some6,some4-some7,some8-1,8-some9,5-5,7-3,some10-some0,some11-7),2-f(3-some7,6-1,some4-some9,some8-5,8-3,5-some0,7-7,some10-2),5-f(some2-5,4-3,1-some0,3-7,6-2,some4-4,some8-6,8-8),6-f(some1-3,some2-some0,4-7,1-2,3-4,6-6,some4-8,some8-some3)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-some0,some1-7,some2-2,4-4,1-6,3-8,6-some3,some4-some5),4-4)"}]
    <#lemma684>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_497 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_497.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma590> a r:Inference;
  r:gives {
    "queens([2-f(6-2,some2-some4,2-1,8-some0,5-5,7-3,some5-some1,some6-7),3-f(3-some4,6-1,some2-some0,2-5,8-3,5-some1,7-7,some5-some3),6-f(some7-5,4-3,1-some1,3-7,6-some3,some2-4,2-6,8-8),7-f(some8-3,some7-some1,4-7,1-some3,3-4,6-6,some2-8,2-some9),8-f(some10-some1,some8-7,some7-some3,4-4,1-6,3-8,6-some9,some2-some11)],3,[8,2,7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-7,some3-some4,4-4,1-6,3-8,6-some5,some6-some7),[2-f(6-2,some6-some8,2-1,8-some9,5-5,7-3,some10-some1,some11-7),3-f(3-some8,6-1,some6-some9,2-5,8-3,5-some1,7-7,some10-some4),6-f(some3-5,4-3,1-some1,3-7,6-some4,some6-4,2-6,8-8),7-f(some2-3,some3-some1,4-7,1-some4,3-4,6-6,some6-8,2-some5),8-f(some0-some1,some2-7,some3-some4,4-4,1-6,3-8,6-some5,some6-some7)],[2-f(6-2,some6-some8,2-1,8-some9,5-5,7-3,some10-some1,some11-7),3-f(3-some8,6-1,some6-some9,2-5,8-3,5-some1,7-7,some10-some4),6-f(some3-5,4-3,1-some1,3-7,6-some4,some6-4,2-6,8-8),7-f(some2-3,some3-some1,4-7,1-some4,3-4,6-6,some6-8,2-some5)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,some2-7,some3-some4,4-4,1-6,3-8,6-some5,some6-some7),4-4)"}]
    <#lemma685>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_498 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_498.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma591> a r:Inference;
  r:gives {
    "queens([2-f(5-2,7-some4,2-1,some2-some0,6-some1,some5-3,some6-6,8-8),3-f(3-some4,5-1,7-some0,2-some1,some2-3,6-6,some5-8,some6-5),6-f(some7-some1,4-3,1-6,3-8,5-5,7-4,2-some3,some2-7),7-f(some8-3,some7-6,4-8,1-5,3-4,5-some3,7-7,2-some9),8-f(some10-6,some8-8,some7-5,4-4,1-some3,3-7,5-some9,7-some11)],3,[8,6,3,7,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-6,some1-8,some2-5,4-4,1-some3,3-7,5-some4,7-some5),[2-f(5-2,7-some6,2-1,some7-some8,6-some9,some10-3,some11-6,8-8),3-f(3-some6,5-1,7-some8,2-some9,some7-3,6-6,some10-8,some11-5),6-f(some2-some9,4-3,1-6,3-8,5-5,7-4,2-some3,some7-7),7-f(some1-3,some2-6,4-8,1-5,3-4,5-some3,7-7,2-some4),8-f(some0-6,some1-8,some2-5,4-4,1-some3,3-7,5-some4,7-some5)],[2-f(5-2,7-some6,2-1,some7-some8,6-some9,some10-3,some11-6,8-8),3-f(3-some6,5-1,7-some8,2-some9,some7-3,6-6,some10-8,some11-5),6-f(some2-some9,4-3,1-6,3-8,5-5,7-4,2-some3,some7-7),7-f(some1-3,some2-6,4-8,1-5,3-4,5-some3,7-7,2-some4)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-6,some1-8,some2-5,4-4,1-some3,3-7,5-some4,7-some5),4-4)"}]
    <#lemma686>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_499 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_499.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma592> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,8-some6,some2-2,some3-1,7-some0,6-6,some7-3,some8-some1),3-f(3-2,5-1,2-some0,8-6,some2-3,some3-some1,7-7,6-5),6-f(some9-6,4-3,1-some1,3-7,5-5,2-4,8-some4,some2-some10),7-f(some11-3,some9-some1,4-7,1-5,3-4,5-some4,2-some10,8-8),8-f(some12-some1,some11-7,some9-5,4-4,1-some4,3-some10,5-8,2-some13)],3,[8,6,1,3,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-7,some3-5,4-4,1-some4,3-some5,5-8,2-some6),[1-f(2-some7,8-some8,some9-2,some10-1,7-some11,6-6,some12-3,some13-some1),3-f(3-2,5-1,2-some11,8-6,some9-3,some10-some1,7-7,6-5),6-f(some3-6,4-3,1-some1,3-7,5-5,2-4,8-some4,some9-some5),7-f(some2-3,some3-some1,4-7,1-5,3-4,5-some4,2-some5,8-8),8-f(some0-some1,some2-7,some3-5,4-4,1-some4,3-some5,5-8,2-some6)],[1-f(2-some7,8-some8,some9-2,some10-1,7-some11,6-6,some12-3,some13-some1),3-f(3-2,5-1,2-some11,8-6,some9-3,some10-some1,7-7,6-5),6-f(some3-6,4-3,1-some1,3-7,5-5,2-4,8-some4,some9-some5),7-f(some2-3,some3-some1,4-7,1-5,3-4,5-some4,2-some5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,some2-7,some3-5,4-4,1-some4,3-some5,5-8,2-some6),4-4)"}]
    <#lemma687>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_500 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_500.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma593> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,4-some6,some7-2,8-1,some8-some9,some10-4,7-7,some11-some2),3-f(6-2,5-1,2-some9,4-4,some7-7,8-some2,some8-3,some10-5),5-f(3-some9,1-4,6-7,5-some2,2-3,4-5,some7-some3,8-8),6-f(some1-4,3-7,1-some2,6-3,5-5,2-some3,4-8,some7-6),8-f(some12-some2,some0-3,some1-5,3-some3,1-8,6-6,5-some4,2-some13)],3,[3,6,8,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(3-f(6-2,5-1,2-some0,4-4,some1-7,8-some2,some3-3,some4-5),[1-f(2-some5,4-some6,some1-2,8-1,some3-some0,some4-4,7-7,some7-some2),3-f(6-2,5-1,2-some0,4-4,some1-7,8-some2,some3-3,some4-5),5-f(3-some0,1-4,6-7,5-some2,2-3,4-5,some1-some8,8-8),6-f(some9-4,3-7,1-some2,6-3,5-5,2-some8,4-8,some1-6),8-f(some10-some2,some11-3,some9-5,3-some8,1-8,6-6,5-some12,2-some13)],[1-f(2-some5,4-some6,some1-2,8-1,some3-some0,some4-4,7-7,some7-some2),5-f(3-some0,1-4,6-7,5-some2,2-3,4-5,some1-some8,8-8),6-f(some9-4,3-7,1-some2,6-3,5-5,2-some8,4-8,some1-6),8-f(some10-some2,some11-3,some9-5,3-some8,1-8,6-6,5-some12,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(6-2,5-1,2-some0,4-4,some1-7,8-some2,some3-3,some4-5),4-4)"}]
    <#lemma688>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_501 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_501.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma594> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,4-some6,7-2,some7-1,some8-some9,some10-4,some11-some1,8-8),3-f(6-2,5-1,2-some9,4-4,7-some1,some7-8,some8-3,some10-5),5-f(3-some9,1-4,6-some1,5-8,2-3,4-5,7-7,some7-some3),6-f(some2-4,3-some1,1-8,6-3,5-5,2-7,4-some3,7-6),8-f(some12-8,some0-3,some2-5,3-7,1-some3,6-6,5-some4,2-some13)],3,[3,6,8,5,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(3-f(6-2,5-1,2-some0,4-4,7-some1,some2-8,some3-3,some4-5),[1-f(2-some5,4-some6,7-2,some2-1,some3-some0,some4-4,some7-some1,8-8),3-f(6-2,5-1,2-some0,4-4,7-some1,some2-8,some3-3,some4-5),5-f(3-some0,1-4,6-some1,5-8,2-3,4-5,7-7,some2-some8),6-f(some9-4,3-some1,1-8,6-3,5-5,2-7,4-some8,7-6),8-f(some10-8,some11-3,some9-5,3-7,1-some8,6-6,5-some12,2-some13)],[1-f(2-some5,4-some6,7-2,some2-1,some3-some0,some4-4,some7-some1,8-8),5-f(3-some0,1-4,6-some1,5-8,2-3,4-5,7-7,some2-some8),6-f(some9-4,3-some1,1-8,6-3,5-5,2-7,4-some8,7-6),8-f(some10-8,some11-3,some9-5,3-7,1-some8,6-6,5-some12,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(6-2,5-1,2-some0,4-4,7-some1,some2-8,some3-3,some4-5),4-4)"}]
    <#lemma689>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_502 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_502.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma595> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,7-some6,some7-2,some8-1,5-5,8-some9,some10-some1,some11-4),3-f(6-2,4-1,2-5,7-some9,some7-some1,some8-4,5-3,8-8),5-f(3-5,1-some9,6-some1,4-4,2-3,7-8,some7-some3,some8-7),6-f(some2-some9,3-some1,1-4,6-3,4-8,2-some3,7-7,some7-6),8-f(some12-4,some0-3,some2-8,3-some3,1-7,6-6,4-some4,2-some13)],3,[5,1,8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(5-f(3-5,1-some0,6-some1,4-4,2-3,7-8,some2-some3,some4-7),[1-f(2-some5,7-some6,some2-2,some4-1,5-5,8-some0,some7-some1,some8-4),3-f(6-2,4-1,2-5,7-some0,some2-some1,some4-4,5-3,8-8),5-f(3-5,1-some0,6-some1,4-4,2-3,7-8,some2-some3,some4-7),6-f(some9-some0,3-some1,1-4,6-3,4-8,2-some3,7-7,some2-6),8-f(some10-4,some11-3,some9-8,3-some3,1-7,6-6,4-some12,2-some13)],[1-f(2-some5,7-some6,some2-2,some4-1,5-5,8-some0,some7-some1,some8-4),3-f(6-2,4-1,2-5,7-some0,some2-some1,some4-4,5-3,8-8),6-f(some9-some0,3-some1,1-4,6-3,4-8,2-some3,7-7,some2-6),8-f(some10-4,some11-3,some9-8,3-some3,1-7,6-6,4-some12,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(3-5,1-some0,6-some1,4-4,2-3,7-8,some2-some3,some4-7),4-4)"}]
    <#lemma690>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_503 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_503.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma596> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,some7-some8,8-2,some9-1,7-some10,6-6,some11-some12,some13-4),3-f(5-2,4-1,2-some10,some7-6,8-some12,some9-4,7-7,6-3),5-f(some2-some10,1-6,5-some12,4-4,2-7,some7-3,8-5,some9-some3),6-f(3-6,some2-some12,1-4,5-7,4-3,2-5,some7-some3,8-8),7-f(some1-some12,3-4,some2-7,1-3,5-5,4-some3,2-8,some7-some4)],3,[5,7,1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(5-f(some0-some1,1-6,5-some2,4-4,2-7,some3-3,8-5,some4-some5),[1-f(2-some6,some3-some7,8-2,some4-1,7-some1,6-6,some8-some2,some9-4),3-f(5-2,4-1,2-some1,some3-6,8-some2,some4-4,7-7,6-3),5-f(some0-some1,1-6,5-some2,4-4,2-7,some3-3,8-5,some4-some5),6-f(3-6,some0-some2,1-4,5-7,4-3,2-5,some3-some5,8-8),7-f(some10-some2,3-4,some0-7,1-3,5-5,4-some5,2-8,some3-some11)],[1-f(2-some6,some3-some7,8-2,some4-1,7-some1,6-6,some8-some2,some9-4),3-f(5-2,4-1,2-some1,some3-6,8-some2,some4-4,7-7,6-3),6-f(3-6,some0-some2,1-4,5-7,4-3,2-5,some3-some5,8-8),7-f(some10-some2,3-4,some0-7,1-3,5-5,4-some5,2-8,some3-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,1-6,5-some2,4-4,2-7,some3-3,8-5,some4-some5),4-4)"}]
    <#lemma691>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_504 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_504.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma597> a r:Inference;
  r:gives {
    "queens([1-f(2-some7,8-some8,7-2,6-1,5-5,some9-some10,some11-some12,some13-6),3-f(4-2,some5-1,2-5,8-some10,7-some12,6-6,5-4,some9-3),5-f(some2-5,1-some10,4-some12,some5-6,2-4,8-3,7-7,6-some3),6-f(3-some10,some2-some12,1-6,4-4,some5-3,2-7,8-some3,7-some4),7-f(some1-some12,3-6,some2-4,1-3,4-7,some5-some3,2-some4,8-8)],3,[6,1,3,5,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(6-f(3-some0,some1-some2,1-6,4-4,some3-3,2-7,8-some4,7-some5),[1-f(2-some6,8-some7,7-2,6-1,5-5,some8-some0,some9-some2,some10-6),3-f(4-2,some3-1,2-5,8-some0,7-some2,6-6,5-4,some8-3),5-f(some1-5,1-some0,4-some2,some3-6,2-4,8-3,7-7,6-some4),6-f(3-some0,some1-some2,1-6,4-4,some3-3,2-7,8-some4,7-some5),7-f(some11-some2,3-6,some1-4,1-3,4-7,some3-some4,2-some5,8-8)],[1-f(2-some6,8-some7,7-2,6-1,5-5,some8-some0,some9-some2,some10-6),3-f(4-2,some3-1,2-5,8-some0,7-some2,6-6,5-4,some8-3),5-f(some1-5,1-some0,4-some2,some3-6,2-4,8-3,7-7,6-some4),7-f(some11-some2,3-6,some1-4,1-3,4-7,some3-some4,2-some5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(4,f(3-some0,some1-some2,1-6,4-4,some3-3,2-7,8-some4,7-some5),4-4)"}]
    <#lemma692>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_505 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_505.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma598> a r:Inference;
  r:gives {
    "queens([2-f(4-some2,some0-3,8-1,3-some3,5-5,7-2,some4-4,some5-7),3-f(6-3,4-1,some0-some3,8-5,3-2,5-4,7-7,some4-some7),5-f(2-some3,1-5,6-2,4-4,some0-7,8-some7,3-some8,5-some9),7-f(some10-2,some11-4,2-7,1-some7,6-some8,4-some9,some0-6,8-8),8-f(some12-4,some10-7,some11-some7,2-some8,1-some9,6-6,4-8,some0-some13)],3,[5,2,8,3,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(5-f(2-some0,1-5,6-2,4-4,some1-7,8-some2,3-some3,5-some4),[2-f(4-some5,some1-3,8-1,3-some0,5-5,7-2,some6-4,some7-7),3-f(6-3,4-1,some1-some0,8-5,3-2,5-4,7-7,some6-some2),5-f(2-some0,1-5,6-2,4-4,some1-7,8-some2,3-some3,5-some4),7-f(some8-2,some9-4,2-7,1-some2,6-some3,4-some4,some1-6,8-8),8-f(some10-4,some8-7,some9-some2,2-some3,1-some4,6-6,4-8,some1-some11)],[2-f(4-some5,some1-3,8-1,3-some0,5-5,7-2,some6-4,some7-7),3-f(6-3,4-1,some1-some0,8-5,3-2,5-4,7-7,some6-some2),7-f(some8-2,some9-4,2-7,1-some2,6-some3,4-some4,some1-6,8-8),8-f(some10-4,some8-7,some9-some2,2-some3,1-some4,6-6,4-8,some1-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-some0,1-5,6-2,4-4,some1-7,8-some2,3-some3,5-some4),4-4)"}]
    <#lemma693>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_506 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_506.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma599> a r:Inference;
  r:gives {
    "queens([1-f(some6-some8,some9-some10,4-some11,8-1,7-4,6-6,some12-2,some13-some1),2-f(some4-some10,some6-some11,some9-1,4-4,8-6,7-2,6-some1,some12-7),3-f(5-some11,some4-1,some6-4,some9-6,4-2,8-some1,7-7,6-3),5-f(2-4,1-6,5-2,some4-some1,some6-7,some9-3,4-5,8-8),7-f(some2-2,3-some1,2-7,1-3,5-5,some4-8,some6-some3,some9-some5)],3,[2,7,1,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(2-f(some0-some1,some2-some3,some4-1,4-4,8-6,7-2,6-some5,some6-7),[1-f(some2-some7,some4-some1,4-some3,8-1,7-4,6-6,some6-2,some8-some5),2-f(some0-some1,some2-some3,some4-1,4-4,8-6,7-2,6-some5,some6-7),3-f(5-some3,some0-1,some2-4,some4-6,4-2,8-some5,7-7,6-3),5-f(2-4,1-6,5-2,some0-some5,some2-7,some4-3,4-5,8-8),7-f(some9-2,3-some5,2-7,1-3,5-5,some0-8,some2-some10,some4-some11)],[1-f(some2-some7,some4-some1,4-some3,8-1,7-4,6-6,some6-2,some8-some5),3-f(5-some3,some0-1,some2-4,some4-6,4-2,8-some5,7-7,6-3),5-f(2-4,1-6,5-2,some0-some5,some2-7,some4-3,4-5,8-8),7-f(some9-2,3-some5,2-7,1-3,5-5,some0-8,some2-some10,some4-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,some2-some3,some4-1,4-4,8-6,7-2,6-some5,some6-7),4-4)"}]
    <#lemma694>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_507 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_507.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma600> a r:Inference;
  r:gives {
    "queens([1-f(some6-some8,4-some9,7-some10,some11-1,5-5,some12-4,8-2,some13-some1),2-f(6-some9,some6-some10,4-1,7-5,some11-4,5-2,some12-some1,8-8),3-f(some3-some10,6-1,some6-5,4-4,7-2,some11-some1,5-8,some12-3),5-f(2-5,1-4,some3-2,6-some1,some6-8,4-3,7-7,some11-6),7-f(some2-2,3-some1,2-8,1-3,some3-7,6-6,some6-some4,4-some5)],3,[3,1,7,5,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(3-f(some0-some1,6-1,some2-5,4-4,7-2,some3-some4,5-8,some5-3),[1-f(some2-some6,4-some7,7-some1,some3-1,5-5,some5-4,8-2,some8-some4),2-f(6-some7,some2-some1,4-1,7-5,some3-4,5-2,some5-some4,8-8),3-f(some0-some1,6-1,some2-5,4-4,7-2,some3-some4,5-8,some5-3),5-f(2-5,1-4,some0-2,6-some4,some2-8,4-3,7-7,some3-6),7-f(some9-2,3-some4,2-8,1-3,some0-7,6-6,some2-some10,4-some11)],[1-f(some2-some6,4-some7,7-some1,some3-1,5-5,some5-4,8-2,some8-some4),2-f(6-some7,some2-some1,4-1,7-5,some3-4,5-2,some5-some4,8-8),5-f(2-5,1-4,some0-2,6-some4,some2-8,4-3,7-7,some3-6),7-f(some9-2,3-some4,2-8,1-3,some0-7,6-6,some2-some10,4-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,6-1,some2-5,4-4,7-2,some3-some4,5-8,some5-3),4-4)"}]
    <#lemma695>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_508 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_508.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma601> a r:Inference;
  r:gives {
    "queens([2-f(some7-some1,5-3,7-1,3-some3,some2-some4,6-6,8-2,some5-5),3-f(some8-3,some7-1,5-some3,7-some4,3-6,some2-2,6-5,8-8),5-f(4-some3,1-some4,some8-6,some7-2,5-5,7-8,3-4,some2-7),6-f(2-some4,4-6,1-2,some8-5,some7-8,5-4,7-7,3-some9),8-f(some10-2,some11-5,2-8,4-4,1-7,some8-some9,some7-some12,5-some13)],3,[8,5,2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-2,some1-5,2-8,4-4,1-7,some2-some3,some4-some5,5-some6),[2-f(some4-some7,5-3,7-1,3-some8,some9-some10,6-6,8-2,some11-5),3-f(some2-3,some4-1,5-some8,7-some10,3-6,some9-2,6-5,8-8),5-f(4-some8,1-some10,some2-6,some4-2,5-5,7-8,3-4,some9-7),6-f(2-some10,4-6,1-2,some2-5,some4-8,5-4,7-7,3-some3),8-f(some0-2,some1-5,2-8,4-4,1-7,some2-some3,some4-some5,5-some6)],[2-f(some4-some7,5-3,7-1,3-some8,some9-some10,6-6,8-2,some11-5),3-f(some2-3,some4-1,5-some8,7-some10,3-6,some9-2,6-5,8-8),5-f(4-some8,1-some10,some2-6,some4-2,5-5,7-8,3-4,some9-7),6-f(2-some10,4-6,1-2,some2-5,some4-8,5-4,7-7,3-some3)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-2,some1-5,2-8,4-4,1-7,some2-some3,some4-some5,5-some6),4-4)"}]
    <#lemma696>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_509 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_509.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma602> a r:Inference;
  r:gives {
    "queens([1-f(3-some6,6-some7,8-some1,5-1,some3-3,some5-5,7-7,some8-2),2-f(some2-some7,3-some1,6-1,8-3,5-5,some3-7,some5-2,7-some4),5-f(4-3,1-5,some0-7,some2-2,3-some4,6-6,8-4,5-some9),6-f(2-5,4-7,1-2,some0-some4,some2-6,3-4,6-some9,8-8),8-f(some10-2,some11-some4,2-6,4-4,1-some9,some0-8,some2-some12,3-some13)],3,[8,2,5,1,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-2,some1-some2,2-6,4-4,1-some3,some4-8,some5-some6,3-some7),[1-f(3-some8,6-some9,8-some10,5-1,some11-3,some12-5,7-7,some13-2),2-f(some5-some9,3-some10,6-1,8-3,5-5,some11-7,some12-2,7-some2),5-f(4-3,1-5,some4-7,some5-2,3-some2,6-6,8-4,5-some3),6-f(2-5,4-7,1-2,some4-some2,some5-6,3-4,6-some3,8-8),8-f(some0-2,some1-some2,2-6,4-4,1-some3,some4-8,some5-some6,3-some7)],[1-f(3-some8,6-some9,8-some10,5-1,some11-3,some12-5,7-7,some13-2),2-f(some5-some9,3-some10,6-1,8-3,5-5,some11-7,some12-2,7-some2),5-f(4-3,1-5,some4-7,some5-2,3-some2,6-6,8-4,5-some3),6-f(2-5,4-7,1-2,some4-some2,some5-6,3-4,6-some3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-2,some1-some2,2-6,4-4,1-some3,some4-8,some5-some6,3-some7),4-4)"}]
    <#lemma697>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_510 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_510.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma603> a r:Inference;
  r:gives {
    "queens([1-f(8-some5,some1-some6,4-some7,some3-1,7-4,6-6,some8-3,some9-2),2-f(5-some6,8-some7,some1-1,4-4,some3-6,7-3,6-2,some8-7),3-f(3-some7,5-1,8-4,some1-6,4-3,some3-2,7-7,6-5),6-f(2-6,some0-3,1-2,3-7,5-5,8-some2,some1-some4,4-some10),8-f(some11-2,some12-7,2-5,some0-some2,1-some4,3-some10,5-some13,8-8)],3,[2,6,1,3,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(2-f(5-some0,8-some1,some2-1,4-4,some3-6,7-3,6-2,some4-7),[1-f(8-some5,some2-some0,4-some1,some3-1,7-4,6-6,some4-3,some6-2),2-f(5-some0,8-some1,some2-1,4-4,some3-6,7-3,6-2,some4-7),3-f(3-some1,5-1,8-4,some2-6,4-3,some3-2,7-7,6-5),6-f(2-6,some7-3,1-2,3-7,5-5,8-some8,some2-some9,4-some10),8-f(some11-2,some12-7,2-5,some7-some8,1-some9,3-some10,5-some13,8-8)],[1-f(8-some5,some2-some0,4-some1,some3-1,7-4,6-6,some4-3,some6-2),3-f(3-some1,5-1,8-4,some2-6,4-3,some3-2,7-7,6-5),6-f(2-6,some7-3,1-2,3-7,5-5,8-some8,some2-some9,4-some10),8-f(some11-2,some12-7,2-5,some7-some8,1-some9,3-some10,5-some13,8-8)])"}]
    [ a r:Fact; r:gives {"arg(4,f(5-some0,8-some1,some2-1,4-4,some3-6,7-3,6-2,some4-7),4-4)"}]
    <#lemma698>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_511 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_511.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma604> a r:Inference;
  r:gives {
    "queens([1-f(6-some5,4-some6,some2-some7,some3-1,5-5,some8-4,8-3,some9-2),2-f(7-some6,6-some7,4-1,some2-5,some3-4,5-3,some8-2,8-8),3-f(3-some7,7-1,6-5,4-4,some2-3,some3-2,5-8,some8-some1),6-f(2-4,some0-3,1-2,3-8,7-some1,6-6,4-some4,some2-some10),8-f(some11-2,some12-8,2-some1,some0-6,1-some4,3-some10,7-7,6-some13)],3,[3,1,6,8,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(3-f(3-some0,7-1,6-5,4-4,some1-3,some2-2,5-8,some3-some4),[1-f(6-some5,4-some6,some1-some0,some2-1,5-5,some3-4,8-3,some7-2),2-f(7-some6,6-some0,4-1,some1-5,some2-4,5-3,some3-2,8-8),3-f(3-some0,7-1,6-5,4-4,some1-3,some2-2,5-8,some3-some4),6-f(2-4,some8-3,1-2,3-8,7-some4,6-6,4-some9,some1-some10),8-f(some11-2,some12-8,2-some4,some8-6,1-some9,3-some10,7-7,6-some13)],[1-f(6-some5,4-some6,some1-some0,some2-1,5-5,some3-4,8-3,some7-2),2-f(7-some6,6-some0,4-1,some1-5,some2-4,5-3,some3-2,8-8),6-f(2-4,some8-3,1-2,3-8,7-some4,6-6,4-some9,some1-some10),8-f(some11-2,some12-8,2-some4,some8-6,1-some9,3-some10,7-7,6-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(3-some0,7-1,6-5,4-4,some1-3,some2-2,5-8,some3-some4),4-4)"}]
    <#lemma699>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_512 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_512.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma605> a r:Inference;
  r:gives {
    "queens([2-f(5-some1,7-3,4-1,3-some2,8-4,6-6,some3-some6,some4-2),3-f(some7-3,5-1,7-some2,4-4,3-6,8-some6,6-2,some3-5),5-f(some8-some2,1-4,some7-6,5-some6,7-2,4-5,3-some9,8-8),6-f(some10-4,some8-6,1-some6,some7-2,5-5,7-some9,4-8,3-7),7-f(2-6,some10-some6,some8-2,1-5,some7-some9,5-8,7-7,4-some11)],3,[3,6,2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(3-f(some0-3,5-1,7-some1,4-4,3-6,8-some2,6-2,some3-5),[2-f(5-some4,7-3,4-1,3-some1,8-4,6-6,some3-some2,some5-2),3-f(some0-3,5-1,7-some1,4-4,3-6,8-some2,6-2,some3-5),5-f(some6-some1,1-4,some0-6,5-some2,7-2,4-5,3-some7,8-8),6-f(some8-4,some6-6,1-some2,some0-2,5-5,7-some7,4-8,3-7),7-f(2-6,some8-some2,some6-2,1-5,some0-some7,5-8,7-7,4-some9)],[2-f(5-some4,7-3,4-1,3-some1,8-4,6-6,some3-some2,some5-2),5-f(some6-some1,1-4,some0-6,5-some2,7-2,4-5,3-some7,8-8),6-f(some8-4,some6-6,1-some2,some0-2,5-5,7-some7,4-8,3-7),7-f(2-6,some8-some2,some6-2,1-5,some0-some7,5-8,7-7,4-some9)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-3,5-1,7-some1,4-4,3-6,8-some2,6-2,some3-5),4-4)"}]
    <#lemma700>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_513 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_513.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma606> a r:Inference;
  r:gives {
    "queens([2-f(4-some2,some0-3,7-1,3-some4,some3-some5,6-6,8-4,some6-2),3-f(5-3,4-1,some0-some4,7-some5,3-6,some3-4,6-2,8-8),5-f(some8-some4,1-some5,5-6,4-4,some0-2,7-8,3-5,some3-7),6-f(some9-some5,some8-6,1-4,5-2,4-8,some0-5,7-7,3-some10),7-f(2-6,some9-4,some8-2,1-8,5-5,4-7,some0-some10,7-some11)],3,[5,7,2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(5-f(some0-some1,1-some2,5-6,4-4,some3-2,7-8,3-5,some4-7),[2-f(4-some5,some3-3,7-1,3-some1,some4-some2,6-6,8-4,some6-2),3-f(5-3,4-1,some3-some1,7-some2,3-6,some4-4,6-2,8-8),5-f(some0-some1,1-some2,5-6,4-4,some3-2,7-8,3-5,some4-7),6-f(some7-some2,some0-6,1-4,5-2,4-8,some3-5,7-7,3-some8),7-f(2-6,some7-4,some0-2,1-8,5-5,4-7,some3-some8,7-some9)],[2-f(4-some5,some3-3,7-1,3-some1,some4-some2,6-6,8-4,some6-2),3-f(5-3,4-1,some3-some1,7-some2,3-6,some4-4,6-2,8-8),6-f(some7-some2,some0-6,1-4,5-2,4-8,some3-5,7-7,3-some8),7-f(2-6,some7-4,some0-2,1-8,5-5,4-7,some3-some8,7-some9)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,1-some2,5-6,4-4,some3-2,7-8,3-5,some4-7),4-4)"}]
    <#lemma701>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_514 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_514.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma607> a r:Inference;
  r:gives {
    "queens([1-f(some1-some5,4-some6,8-some7,some4-1,5-5,7-4,some8-3,some9-7),2-f(6-some6,some1-some7,4-1,8-5,some4-4,5-3,7-7,some8-2),3-f(3-some7,6-1,some1-5,4-4,8-3,some4-7,5-2,7-some2),6-f(some10-4,some0-3,1-7,3-2,6-some2,some1-some3,4-6,8-8),7-f(2-3,some10-7,some0-2,1-some2,3-some3,6-6,some1-8,4-some11)],3,[3,1,7,2,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(3-f(3-some0,6-1,some1-5,4-4,8-3,some2-7,5-2,7-some3),[1-f(some1-some4,4-some5,8-some0,some2-1,5-5,7-4,some6-3,some7-7),2-f(6-some5,some1-some0,4-1,8-5,some2-4,5-3,7-7,some6-2),3-f(3-some0,6-1,some1-5,4-4,8-3,some2-7,5-2,7-some3),6-f(some8-4,some9-3,1-7,3-2,6-some3,some1-some10,4-6,8-8),7-f(2-3,some8-7,some9-2,1-some3,3-some10,6-6,some1-8,4-some11)],[1-f(some1-some4,4-some5,8-some0,some2-1,5-5,7-4,some6-3,some7-7),2-f(6-some5,some1-some0,4-1,8-5,some2-4,5-3,7-7,some6-2),6-f(some8-4,some9-3,1-7,3-2,6-some3,some1-some10,4-6,8-8),7-f(2-3,some8-7,some9-2,1-some3,3-some10,6-6,some1-8,4-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(3-some0,6-1,some1-5,4-4,8-3,some2-7,5-2,7-some3),4-4)"}]
    <#lemma702>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_515 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_515.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma608> a r:Inference;
  r:gives {
    "queens([2-f(3-2,7-some5,2-some0,some2-1,some3-3,6-6,8-some1,some6-4),3-f(4-some5,3-some0,7-1,2-3,some2-6,some3-some1,6-4,8-8),6-f(some7-3,1-6,5-some1,4-4,3-8,7-some4,2-5,some2-7),7-f(some8-6,some7-some1,1-4,5-8,4-some4,3-5,7-7,2-some9),8-f(some10-some1,some8-4,some7-8,1-some4,5-5,4-7,3-some9,7-some11)],3,[6,8,2,7,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(6-f(some0-3,1-6,5-some1,4-4,3-8,7-some2,2-5,some3-7),[2-f(3-2,7-some4,2-some5,some3-1,some6-3,6-6,8-some1,some7-4),3-f(4-some4,3-some5,7-1,2-3,some3-6,some6-some1,6-4,8-8),6-f(some0-3,1-6,5-some1,4-4,3-8,7-some2,2-5,some3-7),7-f(some8-6,some0-some1,1-4,5-8,4-some2,3-5,7-7,2-some9),8-f(some10-some1,some8-4,some0-8,1-some2,5-5,4-7,3-some9,7-some11)],[2-f(3-2,7-some4,2-some5,some3-1,some6-3,6-6,8-some1,some7-4),3-f(4-some4,3-some5,7-1,2-3,some3-6,some6-some1,6-4,8-8),7-f(some8-6,some0-some1,1-4,5-8,4-some2,3-5,7-7,2-some9),8-f(some10-some1,some8-4,some0-8,1-some2,5-5,4-7,3-some9,7-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-3,1-6,5-some1,4-4,3-8,7-some2,2-5,some3-7),4-4)"}]
    <#lemma703>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_516 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_516.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma609> a r:Inference;
  r:gives {
    "queens([2-f(6-2,4-some8,2-some9,8-1,5-5,7-4,some10-some1,some11-7),3-f(some5-some8,6-some9,4-1,2-5,8-4,5-some1,7-7,some10-3),4-f(some4-some9,some5-1,6-5,4-4,2-some1,8-7,5-3,7-some3),6-f(3-5,1-4,some4-some1,some5-7,6-3,4-some3,2-6,8-8),7-f(some2-4,3-some1,1-7,some4-3,some5-some3,6-6,4-8,2-some6)],3,[4,2,7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(4-f(some0-some1,some2-1,6-5,4-4,2-some3,8-7,5-3,7-some4),[2-f(6-2,4-some5,2-some1,8-1,5-5,7-4,some6-some3,some7-7),3-f(some2-some5,6-some1,4-1,2-5,8-4,5-some3,7-7,some6-3),4-f(some0-some1,some2-1,6-5,4-4,2-some3,8-7,5-3,7-some4),6-f(3-5,1-4,some0-some3,some2-7,6-3,4-some4,2-6,8-8),7-f(some8-4,3-some3,1-7,some0-3,some2-some4,6-6,4-8,2-some9)],[2-f(6-2,4-some5,2-some1,8-1,5-5,7-4,some6-some3,some7-7),3-f(some2-some5,6-some1,4-1,2-5,8-4,5-some3,7-7,some6-3),6-f(3-5,1-4,some0-some3,some2-7,6-3,4-some4,2-6,8-8),7-f(some8-4,3-some3,1-7,some0-3,some2-some4,6-6,4-8,2-some9)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,some2-1,6-5,4-4,2-some3,8-7,5-3,7-some4),4-4)"}]
    <#lemma704>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_517 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_517.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma610> a r:Inference;
  r:gives {
    "queens([2-f(6-2,some5-some7,2-some8,5-1,some9-some10,8-5,7-7,some11-4),3-f(4-some7,6-some8,some5-1,2-some10,5-5,some9-7,8-4,7-3),4-f(some2-some8,4-1,6-some10,some5-5,2-7,5-4,some9-3,8-8),6-f(3-some10,1-5,some2-7,4-4,6-3,some5-8,2-6,5-some3),7-f(some1-5,3-7,1-4,some2-3,4-8,6-6,some5-some3,2-some4)],3,[6,3,7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(6-f(3-some0,1-5,some1-7,4-4,6-3,some2-8,2-6,5-some3),[2-f(6-2,some2-some4,2-some5,5-1,some6-some0,8-5,7-7,some7-4),3-f(4-some4,6-some5,some2-1,2-some0,5-5,some6-7,8-4,7-3),4-f(some1-some5,4-1,6-some0,some2-5,2-7,5-4,some6-3,8-8),6-f(3-some0,1-5,some1-7,4-4,6-3,some2-8,2-6,5-some3),7-f(some8-5,3-7,1-4,some1-3,4-8,6-6,some2-some3,2-some9)],[2-f(6-2,some2-some4,2-some5,5-1,some6-some0,8-5,7-7,some7-4),3-f(4-some4,6-some5,some2-1,2-some0,5-5,some6-7,8-4,7-3),4-f(some1-some5,4-1,6-some0,some2-5,2-7,5-4,some6-3,8-8),7-f(some8-5,3-7,1-4,some1-3,4-8,6-6,some2-some3,2-some9)])"}]
    [ a r:Fact; r:gives {"arg(4,f(3-some0,1-5,some1-7,4-4,6-3,some2-8,2-6,5-some3),4-4)"}]
    <#lemma705>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_518 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_518.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma611> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,8-some6,some1-2,6-some0,some3-1,some7-3,7-7,some8-6),3-f(4-2,3-some0,2-1,8-3,some1-7,6-6,some3-4,some7-some2),6-f(some9-3,1-7,5-6,4-4,3-some2,2-some4,8-5,some1-some10),7-f(some11-7,some9-6,1-4,5-some2,4-some4,3-5,2-some10,8-8),8-f(some12-6,some11-4,some9-some2,1-some4,5-5,4-some10,3-8,2-some13)],3,[6,8,3,1,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(6-f(some0-3,1-7,5-6,4-4,3-some1,2-some2,8-5,some3-some4),[1-f(2-some5,8-some6,some3-2,6-some7,some8-1,some9-3,7-7,some10-6),3-f(4-2,3-some7,2-1,8-3,some3-7,6-6,some8-4,some9-some1),6-f(some0-3,1-7,5-6,4-4,3-some1,2-some2,8-5,some3-some4),7-f(some11-7,some0-6,1-4,5-some1,4-some2,3-5,2-some4,8-8),8-f(some12-6,some11-4,some0-some1,1-some2,5-5,4-some4,3-8,2-some13)],[1-f(2-some5,8-some6,some3-2,6-some7,some8-1,some9-3,7-7,some10-6),3-f(4-2,3-some7,2-1,8-3,some3-7,6-6,some8-4,some9-some1),7-f(some11-7,some0-6,1-4,5-some1,4-some2,3-5,2-some4,8-8),8-f(some12-6,some11-4,some0-some1,1-some2,5-5,4-some4,3-8,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-3,1-7,5-6,4-4,3-some1,2-some2,8-5,some3-some4),4-4)"}]
    <#lemma706>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_519 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_519.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma612> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,7-some6,5-2,some2-some0,some3-1,some7-3,some8-5,8-8),3-f(6-2,3-some0,2-1,7-3,5-5,some2-8,some3-some1,some7-4),6-f(some9-3,1-5,4-8,6-some1,3-4,2-some4,7-7,5-6),7-f(some10-5,some9-8,1-some1,4-4,6-some4,3-7,2-6,7-some11),8-f(some12-8,some10-some1,some9-4,1-some4,4-7,6-6,3-some11,2-some13)],3,[7,3,8,6,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(7-f(some0-5,some1-8,1-some2,4-4,6-some3,3-7,2-6,7-some4),[1-f(2-some5,7-some6,5-2,some7-some8,some9-1,some10-3,some11-5,8-8),3-f(6-2,3-some8,2-1,7-3,5-5,some7-8,some9-some2,some10-4),6-f(some1-3,1-5,4-8,6-some2,3-4,2-some3,7-7,5-6),7-f(some0-5,some1-8,1-some2,4-4,6-some3,3-7,2-6,7-some4),8-f(some12-8,some0-some2,some1-4,1-some3,4-7,6-6,3-some4,2-some13)],[1-f(2-some5,7-some6,5-2,some7-some8,some9-1,some10-3,some11-5,8-8),3-f(6-2,3-some8,2-1,7-3,5-5,some7-8,some9-some2,some10-4),6-f(some1-3,1-5,4-8,6-some2,3-4,2-some3,7-7,5-6),8-f(some12-8,some0-some2,some1-4,1-some3,4-7,6-6,3-some4,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-5,some1-8,1-some2,4-4,6-some3,3-7,2-6,7-some4),4-4)"}]
    <#lemma707>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_520 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_520.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma613> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,some3-some7,6-2,4-4,some8-1,8-some1,some9-some2,some10-3),3-f(5-2,7-4,2-1,some3-some1,6-some2,4-3,some8-6,8-8),4-f(3-4,5-1,7-some1,2-some2,some3-3,6-6,4-8,some8-5),7-f(some11-some2,some0-3,1-6,3-8,5-5,7-some4,2-some5,some3-7),8-f(some12-3,some11-6,some0-8,1-5,3-some4,5-some5,7-7,2-some13)],3,[1,7,4,8,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(2-some0,some1-some2,6-2,4-4,some3-1,8-some4,some5-some6,some7-3),[1-f(2-some0,some1-some2,6-2,4-4,some3-1,8-some4,some5-some6,some7-3),3-f(5-2,7-4,2-1,some1-some4,6-some6,4-3,some3-6,8-8),4-f(3-4,5-1,7-some4,2-some6,some1-3,6-6,4-8,some3-5),7-f(some8-some6,some9-3,1-6,3-8,5-5,7-some10,2-some11,some1-7),8-f(some12-3,some8-6,some9-8,1-5,3-some10,5-some11,7-7,2-some13)],[3-f(5-2,7-4,2-1,some1-some4,6-some6,4-3,some3-6,8-8),4-f(3-4,5-1,7-some4,2-some6,some1-3,6-6,4-8,some3-5),7-f(some8-some6,some9-3,1-6,3-8,5-5,7-some10,2-some11,some1-7),8-f(some12-3,some8-6,some9-8,1-5,3-some10,5-some11,7-7,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-some0,some1-some2,6-2,4-4,some3-1,8-some4,some5-some6,some7-3),4-4)"}]
    <#lemma708>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_521 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_521.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma614> a r:Inference;
  r:gives {
    "queens([1-f(2-some7,5-some8,8-2,4-4,7-1,some9-some10,some11-some12,some13-5),3-f(some4-2,6-4,2-1,5-some10,8-some12,4-5,7-7,some9-3),4-f(some3-4,some4-1,6-some10,2-some12,5-5,8-7,4-3,7-some2),6-f(3-some10,1-some12,some3-5,some4-7,6-3,2-some2,5-6,8-8),7-f(some1-some12,3-5,1-7,some3-3,some4-some2,6-6,2-8,5-some5)],3,[1,4,7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(2-some0,5-some1,8-2,4-4,7-1,some2-some3,some4-some5,some6-5),[1-f(2-some0,5-some1,8-2,4-4,7-1,some2-some3,some4-some5,some6-5),3-f(some7-2,6-4,2-1,5-some3,8-some5,4-5,7-7,some2-3),4-f(some8-4,some7-1,6-some3,2-some5,5-5,8-7,4-3,7-some9),6-f(3-some3,1-some5,some8-5,some7-7,6-3,2-some9,5-6,8-8),7-f(some10-some5,3-5,1-7,some8-3,some7-some9,6-6,2-8,5-some11)],[3-f(some7-2,6-4,2-1,5-some3,8-some5,4-5,7-7,some2-3),4-f(some8-4,some7-1,6-some3,2-some5,5-5,8-7,4-3,7-some9),6-f(3-some3,1-some5,some8-5,some7-7,6-3,2-some9,5-6,8-8),7-f(some10-some5,3-5,1-7,some8-3,some7-some9,6-6,2-8,5-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-some0,5-some1,8-2,4-4,7-1,some2-some3,some4-some5,some6-5),4-4)"}]
    <#lemma709>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_522 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_522.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma615> a r:Inference;
  r:gives {
    "queens([2-f(2-some2,some0-3,8-2,3-1,7-some4,6-6,some3-some7,some5-4),4-f(5-2,4-1,2-some4,some0-6,8-some7,3-4,7-7,6-some8),6-f(some9-some4,1-6,5-some7,4-4,2-7,some0-some8,8-5,3-some10),7-f(some11-6,some9-some7,1-4,5-7,4-some8,2-5,some0-some10,8-8),8-f(some12-some7,some11-4,some9-7,1-some8,5-5,4-some10,2-8,some0-some13)],3,[6,8,2,4,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(6-f(some0-some1,1-6,5-some2,4-4,2-7,some3-some4,8-5,3-some5),[2-f(2-some6,some3-3,8-2,3-1,7-some1,6-6,some7-some2,some8-4),4-f(5-2,4-1,2-some1,some3-6,8-some2,3-4,7-7,6-some4),6-f(some0-some1,1-6,5-some2,4-4,2-7,some3-some4,8-5,3-some5),7-f(some9-6,some0-some2,1-4,5-7,4-some4,2-5,some3-some5,8-8),8-f(some10-some2,some9-4,some0-7,1-some4,5-5,4-some5,2-8,some3-some11)],[2-f(2-some6,some3-3,8-2,3-1,7-some1,6-6,some7-some2,some8-4),4-f(5-2,4-1,2-some1,some3-6,8-some2,3-4,7-7,6-some4),7-f(some9-6,some0-some2,1-4,5-7,4-some4,2-5,some3-some5,8-8),8-f(some10-some2,some9-4,some0-7,1-some4,5-5,4-some5,2-8,some3-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,1-6,5-some2,4-4,2-7,some3-some4,8-5,3-some5),4-4)"}]
    <#lemma710>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_523 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_523.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma616> a r:Inference;
  r:gives {
    "queens([2-f(2-some2,some0-3,7-2,3-1,5-5,8-some5,some3-some7,some4-some8),4-f(4-2,6-1,2-5,some0-some5,7-some7,3-some8,5-4,8-8),6-f(some9-5,1-some5,4-some7,6-some8,2-4,some0-8,7-7,3-6),7-f(some10-some5,some9-some7,1-some8,4-4,6-8,2-7,some0-6,7-some11),8-f(some12-some7,some10-some8,some9-4,1-8,4-7,6-6,2-some11,some0-some13)],3,[7,2,8,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(7-f(some0-some1,some2-some3,1-some4,4-4,6-8,2-7,some5-6,7-some6),[2-f(2-some7,some5-3,7-2,3-1,5-5,8-some1,some8-some3,some9-some4),4-f(4-2,6-1,2-5,some5-some1,7-some3,3-some4,5-4,8-8),6-f(some2-5,1-some1,4-some3,6-some4,2-4,some5-8,7-7,3-6),7-f(some0-some1,some2-some3,1-some4,4-4,6-8,2-7,some5-6,7-some6),8-f(some10-some3,some0-some4,some2-4,1-8,4-7,6-6,2-some6,some5-some11)],[2-f(2-some7,some5-3,7-2,3-1,5-5,8-some1,some8-some3,some9-some4),4-f(4-2,6-1,2-5,some5-some1,7-some3,3-some4,5-4,8-8),6-f(some2-5,1-some1,4-some3,6-some4,2-4,some5-8,7-7,3-6),8-f(some10-some3,some0-some4,some2-4,1-8,4-7,6-6,2-some6,some5-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,some2-some3,1-some4,4-4,6-8,2-7,some5-6,7-some6),4-4)"}]
    <#lemma711>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_524 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_524.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma617> a r:Inference;
  r:gives {
    "queens([1-f(4-some7,7-some8,some9-some10,some11-2,some12-1,6-6,8-4,some13-some1),2-f(2-some8,4-some10,7-2,some9-1,some11-6,some12-4,6-some1,8-8),4-f(some3-2,5-1,2-6,4-4,7-some1,some9-8,some11-3,some12-5),6-f(3-6,1-4,some3-some1,5-8,2-3,4-5,7-7,some9-some4),7-f(some2-4,3-some1,1-8,some3-3,5-5,2-7,4-some4,7-some5)],3,[4,7,1,6,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(4-f(some0-2,5-1,2-6,4-4,7-some1,some2-8,some3-3,some4-5),[1-f(4-some5,7-some6,some2-some7,some3-2,some4-1,6-6,8-4,some8-some1),2-f(2-some6,4-some7,7-2,some2-1,some3-6,some4-4,6-some1,8-8),4-f(some0-2,5-1,2-6,4-4,7-some1,some2-8,some3-3,some4-5),6-f(3-6,1-4,some0-some1,5-8,2-3,4-5,7-7,some2-some9),7-f(some10-4,3-some1,1-8,some0-3,5-5,2-7,4-some9,7-some11)],[1-f(4-some5,7-some6,some2-some7,some3-2,some4-1,6-6,8-4,some8-some1),2-f(2-some6,4-some7,7-2,some2-1,some3-6,some4-4,6-some1,8-8),6-f(3-6,1-4,some0-some1,5-8,2-3,4-5,7-7,some2-some9),7-f(some10-4,3-some1,1-8,some0-3,5-5,2-7,4-some9,7-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-2,5-1,2-6,4-4,7-some1,some2-8,some3-3,some4-5),4-4)"}]
    <#lemma712>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_525 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_525.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma618> a r:Inference;
  r:gives {
    "queens([2-f(some7-some1,6-3,4-some2,3-1,7-4,some3-some5,some4-2,8-8),3-f(some8-3,some7-some2,6-1,4-4,3-some5,7-2,some3-8,some4-7),4-f(5-some2,some8-1,some7-4,6-some5,4-2,3-8,7-7,some3-6),6-f(2-4,1-some5,5-2,some8-8,some7-7,6-6,4-5,3-some9),8-f(some10-2,some11-8,2-7,1-6,5-5,some8-some9,some7-some12,6-some13)],3,[3,8,6,4,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(3-f(some0-3,some1-some2,6-1,4-4,3-some3,7-2,some4-8,some5-7),[2-f(some1-some6,6-3,4-some2,3-1,7-4,some4-some3,some5-2,8-8),3-f(some0-3,some1-some2,6-1,4-4,3-some3,7-2,some4-8,some5-7),4-f(5-some2,some0-1,some1-4,6-some3,4-2,3-8,7-7,some4-6),6-f(2-4,1-some3,5-2,some0-8,some1-7,6-6,4-5,3-some7),8-f(some8-2,some9-8,2-7,1-6,5-5,some0-some7,some1-some10,6-some11)],[2-f(some1-some6,6-3,4-some2,3-1,7-4,some4-some3,some5-2,8-8),4-f(5-some2,some0-1,some1-4,6-some3,4-2,3-8,7-7,some4-6),6-f(2-4,1-some3,5-2,some0-8,some1-7,6-6,4-5,3-some7),8-f(some8-2,some9-8,2-7,1-6,5-5,some0-some7,some1-some10,6-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-3,some1-some2,6-1,4-4,3-some3,7-2,some4-8,some5-7),4-4)"}]
    <#lemma713>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_526 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_526.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma619> a r:Inference;
  r:gives {
    "queens([2-f(some6-some1,4-3,7-some2,3-1,5-5,some3-4,8-2,some4-some7),3-f(6-3,some6-some2,4-1,7-5,3-4,5-2,some3-some7,8-8),4-f(some8-some2,6-1,some6-5,4-4,7-2,3-some7,5-8,some3-some9),6-f(2-5,1-4,some8-2,6-some7,some6-8,4-some9,7-7,3-6),8-f(some10-2,some11-some7,2-8,1-some9,some8-7,6-6,some6-some12,4-some13)],3,[4,2,8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(4-f(some0-some1,6-1,some2-5,4-4,7-2,3-some3,5-8,some4-some5),[2-f(some2-some6,4-3,7-some1,3-1,5-5,some4-4,8-2,some7-some3),3-f(6-3,some2-some1,4-1,7-5,3-4,5-2,some4-some3,8-8),4-f(some0-some1,6-1,some2-5,4-4,7-2,3-some3,5-8,some4-some5),6-f(2-5,1-4,some0-2,6-some3,some2-8,4-some5,7-7,3-6),8-f(some8-2,some9-some3,2-8,1-some5,some0-7,6-6,some2-some10,4-some11)],[2-f(some2-some6,4-3,7-some1,3-1,5-5,some4-4,8-2,some7-some3),3-f(6-3,some2-some1,4-1,7-5,3-4,5-2,some4-some3,8-8),6-f(2-5,1-4,some0-2,6-some3,some2-8,4-some5,7-7,3-6),8-f(some8-2,some9-some3,2-8,1-some5,some0-7,6-6,some2-some10,4-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,6-1,some2-5,4-4,7-2,3-some3,5-8,some4-some5),4-4)"}]
    <#lemma714>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_527 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_527.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma620> a r:Inference;
  r:gives {
    "queens([1-f(4-some5,3-some1,8-some2,some3-3,7-1,6-6,some4-4,some6-2),3-f(some7-some2,some0-3,4-1,3-6,8-4,some3-2,7-7,6-some8),4-f(5-3,some7-1,some0-6,4-4,3-2,8-7,some3-some8,7-some9),6-f(2-6,1-4,5-2,some7-7,some0-some8,4-some9,3-5,8-8),8-f(some10-2,some11-7,2-some8,1-some9,5-5,some7-8,some0-some12,4-some13)],3,[4,8,1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(4-f(5-3,some0-1,some1-6,4-4,3-2,8-7,some2-some3,7-some4),[1-f(4-some5,3-some6,8-some7,some2-3,7-1,6-6,some8-4,some9-2),3-f(some0-some7,some1-3,4-1,3-6,8-4,some2-2,7-7,6-some3),4-f(5-3,some0-1,some1-6,4-4,3-2,8-7,some2-some3,7-some4),6-f(2-6,1-4,5-2,some0-7,some1-some3,4-some4,3-5,8-8),8-f(some10-2,some11-7,2-some3,1-some4,5-5,some0-8,some1-some12,4-some13)],[1-f(4-some5,3-some6,8-some7,some2-3,7-1,6-6,some8-4,some9-2),3-f(some0-some7,some1-3,4-1,3-6,8-4,some2-2,7-7,6-some3),6-f(2-6,1-4,5-2,some0-7,some1-some3,4-some4,3-5,8-8),8-f(some10-2,some11-7,2-some3,1-some4,5-5,some0-8,some1-some12,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(5-3,some0-1,some1-6,4-4,3-2,8-7,some2-some3,7-some4),4-4)"}]
    <#lemma715>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_528 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_528.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma621> a r:Inference;
  r:gives {
    "queens([1-f(8-some5,3-some1,5-some2,7-3,some3-1,6-6,some4-5,some6-2),3-f(4-some2,some0-3,8-1,3-6,5-5,7-2,some3-4,6-7),4-f(some7-3,4-1,some0-6,8-5,3-2,5-4,7-7,some3-some8),6-f(2-6,1-5,some7-2,4-4,some0-7,8-some8,3-some9,5-some10),8-f(some11-2,some12-4,2-7,1-some8,some7-some9,4-some10,some0-some13,8-8)],3,[6,3,1,4,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(6-f(2-6,1-5,some0-2,4-4,some1-7,8-some2,3-some3,5-some4),[1-f(8-some5,3-some6,5-some7,7-3,some8-1,6-6,some9-5,some10-2),3-f(4-some7,some1-3,8-1,3-6,5-5,7-2,some8-4,6-7),4-f(some0-3,4-1,some1-6,8-5,3-2,5-4,7-7,some8-some2),6-f(2-6,1-5,some0-2,4-4,some1-7,8-some2,3-some3,5-some4),8-f(some11-2,some12-4,2-7,1-some2,some0-some3,4-some4,some1-some13,8-8)],[1-f(8-some5,3-some6,5-some7,7-3,some8-1,6-6,some9-5,some10-2),3-f(4-some7,some1-3,8-1,3-6,5-5,7-2,some8-4,6-7),4-f(some0-3,4-1,some1-6,8-5,3-2,5-4,7-7,some8-some2),8-f(some11-2,some12-4,2-7,1-some2,some0-some3,4-some4,some1-some13,8-8)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-6,1-5,some0-2,4-4,some1-7,8-some2,3-some3,5-some4),4-4)"}]
    <#lemma716>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_529 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_529.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma622> a r:Inference;
  r:gives {
    "queens([1-f(some1-some5,3-some0,5-some2,some3-3,8-1,6-6,some4-5,some6-2),3-f(4-some2,7-3,some1-1,3-6,5-5,some3-2,8-4,6-some7),4-f(some8-3,4-1,7-6,some1-5,3-2,5-4,some3-some7,8-8),6-f(2-6,1-5,some8-2,4-4,7-some7,some1-8,3-some9,5-some10),8-f(some11-2,some12-4,2-some7,1-8,some8-some9,4-some10,7-7,some1-some13)],3,[6,3,1,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(6-f(2-6,1-5,some0-2,4-4,7-some1,some2-8,3-some3,5-some4),[1-f(some2-some5,3-some6,5-some7,some8-3,8-1,6-6,some9-5,some10-2),3-f(4-some7,7-3,some2-1,3-6,5-5,some8-2,8-4,6-some1),4-f(some0-3,4-1,7-6,some2-5,3-2,5-4,some8-some1,8-8),6-f(2-6,1-5,some0-2,4-4,7-some1,some2-8,3-some3,5-some4),8-f(some11-2,some12-4,2-some1,1-8,some0-some3,4-some4,7-7,some2-some13)],[1-f(some2-some5,3-some6,5-some7,some8-3,8-1,6-6,some9-5,some10-2),3-f(4-some7,7-3,some2-1,3-6,5-5,some8-2,8-4,6-some1),4-f(some0-3,4-1,7-6,some2-5,3-2,5-4,some8-some1,8-8),8-f(some11-2,some12-4,2-some1,1-8,some0-some3,4-some4,7-7,some2-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-6,1-5,some0-2,4-4,7-some1,some2-8,3-some3,5-some4),4-4)"}]
    <#lemma717>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_530 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_530.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma623> a r:Inference;
  r:gives {
    "queens([1-f(some1-some5,7-some6,5-some7,4-4,some3-1,some8-3,8-5,some9-2),2-f(3-some6,some1-some7,7-4,5-1,4-3,some3-5,some8-2,8-8),3-f(6-some7,3-4,some1-1,7-3,5-5,4-2,some3-8,some8-some2),6-f(2-3,1-5,some0-2,6-8,3-some2,some1-some4,7-7,5-6),8-f(some10-2,some11-8,2-some2,1-some4,some0-7,6-6,3-some12,some1-some13)],3,[1,3,8,6,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,7-some2,5-some3,4-4,some4-1,some5-3,8-5,some6-2),[1-f(some0-some1,7-some2,5-some3,4-4,some4-1,some5-3,8-5,some6-2),2-f(3-some2,some0-some3,7-4,5-1,4-3,some4-5,some5-2,8-8),3-f(6-some3,3-4,some0-1,7-3,5-5,4-2,some4-8,some5-some7),6-f(2-3,1-5,some8-2,6-8,3-some7,some0-some9,7-7,5-6),8-f(some10-2,some11-8,2-some7,1-some9,some8-7,6-6,3-some12,some0-some13)],[2-f(3-some2,some0-some3,7-4,5-1,4-3,some4-5,some5-2,8-8),3-f(6-some3,3-4,some0-1,7-3,5-5,4-2,some4-8,some5-some7),6-f(2-3,1-5,some8-2,6-8,3-some7,some0-some9,7-7,5-6),8-f(some10-2,some11-8,2-some7,1-some9,some8-7,6-6,3-some12,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,7-some2,5-some3,4-4,some4-1,some5-3,8-5,some6-2),4-4)"}]
    <#lemma718>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_531 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_531.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma624> a r:Inference;
  r:gives {
    "queens([1-f(6-some4,8-some5,5-some6,4-4,some3-1,7-3,some7-5,some8-7),2-f(3-some5,6-some6,8-4,5-1,4-3,some3-5,7-7,some7-2),3-f(some1-some6,3-4,6-1,8-3,5-5,4-7,some3-2,7-some2),6-f(some9-3,1-5,some0-7,some1-2,3-some2,6-6,8-some10,5-some11),7-f(2-5,some9-7,1-2,some0-some2,some1-6,3-some10,6-some11,8-8)],3,[1,3,6,2,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(6-some0,8-some1,5-some2,4-4,some3-1,7-3,some4-5,some5-7),[1-f(6-some0,8-some1,5-some2,4-4,some3-1,7-3,some4-5,some5-7),2-f(3-some1,6-some2,8-4,5-1,4-3,some3-5,7-7,some4-2),3-f(some6-some2,3-4,6-1,8-3,5-5,4-7,some3-2,7-some7),6-f(some8-3,1-5,some9-7,some6-2,3-some7,6-6,8-some10,5-some11),7-f(2-5,some8-7,1-2,some9-some7,some6-6,3-some10,6-some11,8-8)],[2-f(3-some1,6-some2,8-4,5-1,4-3,some3-5,7-7,some4-2),3-f(some6-some2,3-4,6-1,8-3,5-5,4-7,some3-2,7-some7),6-f(some8-3,1-5,some9-7,some6-2,3-some7,6-6,8-some10,5-some11),7-f(2-5,some8-7,1-2,some9-some7,some6-6,3-some10,6-some11,8-8)])"}]
    [ a r:Fact; r:gives {"arg(4,f(6-some0,8-some1,5-some2,4-4,some3-1,7-3,some4-5,some5-7),4-4)"}]
    <#lemma719>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_532 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_532.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma625> a r:Inference;
  r:gives {
    "queens([1-f(some1-some4,7-some5,some3-some6,4-4,6-1,8-3,some7-6,some8-some2),2-f(3-some5,some1-some6,7-4,some3-1,4-3,6-6,8-some2,some7-2),3-f(5-some6,3-4,some1-1,7-3,some3-6,4-some2,6-2,8-8),6-f(some9-3,1-6,some0-some2,5-2,3-8,some1-5,7-7,some3-some10),7-f(2-6,some9-some2,1-2,some0-8,5-5,3-7,some1-some10,7-some11)],3,[1,7,2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,7-some2,some3-some4,4-4,6-1,8-3,some5-6,some6-some7),[1-f(some0-some1,7-some2,some3-some4,4-4,6-1,8-3,some5-6,some6-some7),2-f(3-some2,some0-some4,7-4,some3-1,4-3,6-6,8-some7,some5-2),3-f(5-some4,3-4,some0-1,7-3,some3-6,4-some7,6-2,8-8),6-f(some8-3,1-6,some9-some7,5-2,3-8,some0-5,7-7,some3-some10),7-f(2-6,some8-some7,1-2,some9-8,5-5,3-7,some0-some10,7-some11)],[2-f(3-some2,some0-some4,7-4,some3-1,4-3,6-6,8-some7,some5-2),3-f(5-some4,3-4,some0-1,7-3,some3-6,4-some7,6-2,8-8),6-f(some8-3,1-6,some9-some7,5-2,3-8,some0-5,7-7,some3-some10),7-f(2-6,some8-some7,1-2,some9-8,5-5,3-7,some0-some10,7-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,7-some2,some3-some4,4-4,6-1,8-3,some5-6,some6-some7),4-4)"}]
    <#lemma720>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_533 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_533.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma626> a r:Inference;
  r:gives {
    "queens([2-f(some1-2,7-some4,2-some5,4-4,6-1,8-3,some6-6,some7-some2),3-f(3-some4,some1-some5,7-4,2-1,4-3,6-6,8-some2,some6-some3),4-f(5-some5,3-4,some1-1,7-3,2-6,4-some2,6-some3,8-8),7-f(some8-3,1-6,some0-some2,5-some3,3-8,some1-5,7-7,2-some9),8-f(some10-6,some8-some2,1-some3,some0-8,5-5,3-7,some1-some9,7-some11)],3,[2,8,3,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(2-f(some0-2,7-some1,2-some2,4-4,6-1,8-3,some3-6,some4-some5),[2-f(some0-2,7-some1,2-some2,4-4,6-1,8-3,some3-6,some4-some5),3-f(3-some1,some0-some2,7-4,2-1,4-3,6-6,8-some5,some3-some6),4-f(5-some2,3-4,some0-1,7-3,2-6,4-some5,6-some6,8-8),7-f(some7-3,1-6,some8-some5,5-some6,3-8,some0-5,7-7,2-some9),8-f(some10-6,some7-some5,1-some6,some8-8,5-5,3-7,some0-some9,7-some11)],[3-f(3-some1,some0-some2,7-4,2-1,4-3,6-6,8-some5,some3-some6),4-f(5-some2,3-4,some0-1,7-3,2-6,4-some5,6-some6,8-8),7-f(some7-3,1-6,some8-some5,5-some6,3-8,some0-5,7-7,2-some9),8-f(some10-6,some7-some5,1-some6,some8-8,5-5,3-7,some0-some9,7-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-2,7-some1,2-some2,4-4,6-1,8-3,some3-6,some4-some5),4-4)"}]
    <#lemma721>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_534 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_534.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma627> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,6-some7,5-2,4-4,8-some8,some9-1,some10-5,some11-some1),3-f(some3-2,7-4,2-some8,6-1,5-5,4-some1,8-3,some9-6),4-f(some2-4,some3-some8,7-1,2-5,6-some1,5-3,4-6,8-8),5-f(3-some8,some2-1,some3-5,7-some1,2-3,6-6,5-8,4-some4),8-f(some12-some1,some0-3,1-6,3-8,some2-some4,some3-some5,7-7,2-some13)],3,[1,3,5,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(2-some0,6-some1,5-2,4-4,8-some2,some3-1,some4-5,some5-some6),[1-f(2-some0,6-some1,5-2,4-4,8-some2,some3-1,some4-5,some5-some6),3-f(some7-2,7-4,2-some2,6-1,5-5,4-some6,8-3,some3-6),4-f(some8-4,some7-some2,7-1,2-5,6-some6,5-3,4-6,8-8),5-f(3-some2,some8-1,some7-5,7-some6,2-3,6-6,5-8,4-some9),8-f(some10-some6,some11-3,1-6,3-8,some8-some9,some7-some12,7-7,2-some13)],[3-f(some7-2,7-4,2-some2,6-1,5-5,4-some6,8-3,some3-6),4-f(some8-4,some7-some2,7-1,2-5,6-some6,5-3,4-6,8-8),5-f(3-some2,some8-1,some7-5,7-some6,2-3,6-6,5-8,4-some9),8-f(some10-some6,some11-3,1-6,3-8,some8-some9,some7-some12,7-7,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-some0,6-some1,5-2,4-4,8-some2,some3-1,some4-5,some5-some6),4-4)"}]
    <#lemma722>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_535 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_535.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma628> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,5-some7,7-2,4-4,some8-some9,8-1,some10-some1,some11-5),3-f(6-2,some3-4,2-some9,5-1,7-some1,4-5,some8-3,8-8),4-f(some2-4,6-some9,some3-1,2-some1,5-5,7-3,4-8,some8-7),5-f(3-some9,some2-1,6-some1,some3-5,2-3,5-8,7-7,4-some4),8-f(some12-5,some0-3,1-8,3-7,some2-some4,6-6,some3-some5,2-some13)],3,[1,4,8,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(2-some0,5-some1,7-2,4-4,some2-some3,8-1,some4-some5,some6-5),[1-f(2-some0,5-some1,7-2,4-4,some2-some3,8-1,some4-some5,some6-5),3-f(6-2,some7-4,2-some3,5-1,7-some5,4-5,some2-3,8-8),4-f(some8-4,6-some3,some7-1,2-some5,5-5,7-3,4-8,some2-7),5-f(3-some3,some8-1,6-some5,some7-5,2-3,5-8,7-7,4-some9),8-f(some10-5,some11-3,1-8,3-7,some8-some9,6-6,some7-some12,2-some13)],[3-f(6-2,some7-4,2-some3,5-1,7-some5,4-5,some2-3,8-8),4-f(some8-4,6-some3,some7-1,2-some5,5-5,7-3,4-8,some2-7),5-f(3-some3,some8-1,6-some5,some7-5,2-3,5-8,7-7,4-some9),8-f(some10-5,some11-3,1-8,3-7,some8-some9,6-6,some7-some12,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-some0,5-some1,7-2,4-4,some2-some3,8-1,some4-some5,some6-5),4-4)"}]
    <#lemma723>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_536 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_536.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma629> a r:Inference;
  r:gives {
    "queens([2-f(2-some2,5-3,some1-2,3-some4,some3-1,8-some6,7-7,some5-5),4-f(4-2,6-some4,2-1,5-some6,some1-7,3-5,some3-4,8-8),5-f(some8-some4,4-1,6-some6,2-7,5-5,some1-4,3-8,some3-some9),7-f(some10-some6,1-7,some8-5,4-4,6-8,2-some9,5-6,some1-some11),8-f(some12-7,some10-5,1-4,some8-8,4-some9,6-6,2-some11,5-some13)],3,[7,5,8,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(7-f(some0-some1,1-7,some2-5,4-4,6-8,2-some3,5-6,some4-some5),[2-f(2-some6,5-3,some4-2,3-some7,some8-1,8-some1,7-7,some9-5),4-f(4-2,6-some7,2-1,5-some1,some4-7,3-5,some8-4,8-8),5-f(some2-some7,4-1,6-some1,2-7,5-5,some4-4,3-8,some8-some3),7-f(some0-some1,1-7,some2-5,4-4,6-8,2-some3,5-6,some4-some5),8-f(some10-7,some0-5,1-4,some2-8,4-some3,6-6,2-some5,5-some11)],[2-f(2-some6,5-3,some4-2,3-some7,some8-1,8-some1,7-7,some9-5),4-f(4-2,6-some7,2-1,5-some1,some4-7,3-5,some8-4,8-8),5-f(some2-some7,4-1,6-some1,2-7,5-5,some4-4,3-8,some8-some3),8-f(some10-7,some0-5,1-4,some2-8,4-some3,6-6,2-some5,5-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,1-7,some2-5,4-4,6-8,2-some3,5-6,some4-some5),4-4)"}]
    <#lemma724>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_537 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_537.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma630> a r:Inference;
  r:gives {
    "queens([2-f(2-some1,7-3,5-2,3-some2,8-1,6-6,some3-5,some4-some6),4-f(some7-2,some8-some2,2-1,7-6,5-5,3-some6,8-some9,6-4),5-f(4-some2,some7-1,some8-6,2-5,7-some6,5-some9,3-4,8-8),7-f(some10-6,1-5,4-some6,some7-some9,some8-4,2-8,7-7,5-some11),8-f(some12-5,some10-some6,1-some9,4-4,some7-8,some8-7,2-some11,7-some13)],3,[8,4,2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-5,some1-some2,1-some3,4-4,some4-8,some5-7,2-some6,7-some7),[2-f(2-some8,7-3,5-2,3-some9,8-1,6-6,some10-5,some11-some2),4-f(some4-2,some5-some9,2-1,7-6,5-5,3-some2,8-some3,6-4),5-f(4-some9,some4-1,some5-6,2-5,7-some2,5-some3,3-4,8-8),7-f(some1-6,1-5,4-some2,some4-some3,some5-4,2-8,7-7,5-some6),8-f(some0-5,some1-some2,1-some3,4-4,some4-8,some5-7,2-some6,7-some7)],[2-f(2-some8,7-3,5-2,3-some9,8-1,6-6,some10-5,some11-some2),4-f(some4-2,some5-some9,2-1,7-6,5-5,3-some2,8-some3,6-4),5-f(4-some9,some4-1,some5-6,2-5,7-some2,5-some3,3-4,8-8),7-f(some1-6,1-5,4-some2,some4-some3,some5-4,2-8,7-7,5-some6)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-5,some1-some2,1-some3,4-4,some4-8,some5-7,2-some6,7-some7),4-4)"}]
    <#lemma725>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_538 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_538.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma631> a r:Inference;
  r:gives {
    "queens([2-f(2-some1,5-3,8-2,3-some2,7-1,6-6,some3-some6,some4-5),4-f(some7-2,some8-some2,2-1,5-6,8-some6,3-5,7-7,6-4),5-f(4-some2,some7-1,some8-6,2-some6,5-5,8-7,3-4,7-some9),7-f(some10-6,1-some6,4-5,some7-7,some8-4,2-some9,5-some11,8-8),8-f(some12-some6,some10-5,1-7,4-4,some7-some9,some8-some11,2-8,5-some13)],3,[8,5,2,4,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-5,1-7,4-4,some3-some4,some5-some6,2-8,5-some7),[2-f(2-some8,5-3,8-2,3-some9,7-1,6-6,some10-some1,some11-5),4-f(some3-2,some5-some9,2-1,5-6,8-some1,3-5,7-7,6-4),5-f(4-some9,some3-1,some5-6,2-some1,5-5,8-7,3-4,7-some4),7-f(some2-6,1-some1,4-5,some3-7,some5-4,2-some4,5-some6,8-8),8-f(some0-some1,some2-5,1-7,4-4,some3-some4,some5-some6,2-8,5-some7)],[2-f(2-some8,5-3,8-2,3-some9,7-1,6-6,some10-some1,some11-5),4-f(some3-2,some5-some9,2-1,5-6,8-some1,3-5,7-7,6-4),5-f(4-some9,some3-1,some5-6,2-some1,5-5,8-7,3-4,7-some4),7-f(some2-6,1-some1,4-5,some3-7,some5-4,2-some4,5-some6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,some2-5,1-7,4-4,some3-some4,some5-some6,2-8,5-some7),4-4)"}]
    <#lemma726>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_539 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_539.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma632> a r:Inference;
  r:gives {
    "queens([1-f(8-some5,some1-some6,6-some7,some3-2,5-5,7-1,some8-3,some9-7),2-f(2-some6,8-some7,some1-2,6-5,some3-1,5-3,7-7,some8-6),4-f(4-2,3-5,2-1,8-3,some1-7,6-6,some3-4,5-some2),7-f(some10-3,1-7,some0-6,4-4,3-some2,2-some4,8-some11,some1-some12),8-f(some13-7,some10-6,1-4,some0-some2,4-some4,3-some11,2-some12,8-8)],3,[7,1,4,2,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(7-f(some0-3,1-7,some1-6,4-4,3-some2,2-some3,8-some4,some5-some6),[1-f(8-some7,some5-some8,6-some9,some10-2,5-5,7-1,some11-3,some12-7),2-f(2-some8,8-some9,some5-2,6-5,some10-1,5-3,7-7,some11-6),4-f(4-2,3-5,2-1,8-3,some5-7,6-6,some10-4,5-some2),7-f(some0-3,1-7,some1-6,4-4,3-some2,2-some3,8-some4,some5-some6),8-f(some13-7,some0-6,1-4,some1-some2,4-some3,3-some4,2-some6,8-8)],[1-f(8-some7,some5-some8,6-some9,some10-2,5-5,7-1,some11-3,some12-7),2-f(2-some8,8-some9,some5-2,6-5,some10-1,5-3,7-7,some11-6),4-f(4-2,3-5,2-1,8-3,some5-7,6-6,some10-4,5-some2),8-f(some13-7,some0-6,1-4,some1-some2,4-some3,3-some4,2-some6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-3,1-7,some1-6,4-4,3-some2,2-some3,8-some4,some5-some6),4-4)"}]
    <#lemma727>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_540 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_540.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma633> a r:Inference;
  r:gives {
    "queens([1-f(some1-some5,8-some6,6-some7,some3-2,5-5,7-1,some8-3,some9-7),2-f(2-some6,some1-some7,8-2,6-5,some3-1,5-3,7-7,some8-6),4-f(some0-2,3-5,2-1,some1-3,8-7,6-6,some3-some2,5-4),7-f(some10-3,1-7,4-6,some0-some2,3-4,2-some4,some1-some11,8-8),8-f(some12-7,some10-6,1-some2,4-4,some0-some4,3-some11,2-8,some1-some13)],3,[8,1,4,2,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-7,some1-6,1-some2,4-4,some3-some4,3-some5,2-8,some6-some7),[1-f(some6-some8,8-some9,6-some10,some11-2,5-5,7-1,some12-3,some13-7),2-f(2-some9,some6-some10,8-2,6-5,some11-1,5-3,7-7,some12-6),4-f(some3-2,3-5,2-1,some6-3,8-7,6-6,some11-some2,5-4),7-f(some1-3,1-7,4-6,some3-some2,3-4,2-some4,some6-some5,8-8),8-f(some0-7,some1-6,1-some2,4-4,some3-some4,3-some5,2-8,some6-some7)],[1-f(some6-some8,8-some9,6-some10,some11-2,5-5,7-1,some12-3,some13-7),2-f(2-some9,some6-some10,8-2,6-5,some11-1,5-3,7-7,some12-6),4-f(some3-2,3-5,2-1,some6-3,8-7,6-6,some11-some2,5-4),7-f(some1-3,1-7,4-6,some3-some2,3-4,2-some4,some6-some5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-7,some1-6,1-some2,4-4,some3-some4,3-some5,2-8,some6-some7),4-4)"}]
    <#lemma728>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_541 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_541.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma634> a r:Inference;
  r:gives {
    "queens([1-f(some4-some6,5-some7,4-some8,8-2,some9-4,some10-1,7-7,some11-5),2-f(2-some7,some4-some8,5-2,4-4,8-1,some9-7,some10-5,7-3),4-f(some1-2,6-4,2-1,some4-7,5-5,4-3,8-some2,some9-some3),5-f(3-4,some1-1,6-7,2-5,some4-3,5-some2,4-some3,8-8),8-f(some12-5,some0-3,1-some2,3-some3,some1-8,6-6,2-some5,some4-some13)],3,[2,4,8,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(2-f(2-some0,some1-some2,5-2,4-4,8-1,some3-7,some4-5,7-3),[1-f(some1-some5,5-some0,4-some2,8-2,some3-4,some4-1,7-7,some6-5),2-f(2-some0,some1-some2,5-2,4-4,8-1,some3-7,some4-5,7-3),4-f(some7-2,6-4,2-1,some1-7,5-5,4-3,8-some8,some3-some9),5-f(3-4,some7-1,6-7,2-5,some1-3,5-some8,4-some9,8-8),8-f(some10-5,some11-3,1-some8,3-some9,some7-8,6-6,2-some12,some1-some13)],[1-f(some1-some5,5-some0,4-some2,8-2,some3-4,some4-1,7-7,some6-5),4-f(some7-2,6-4,2-1,some1-7,5-5,4-3,8-some8,some3-some9),5-f(3-4,some7-1,6-7,2-5,some1-3,5-some8,4-some9,8-8),8-f(some10-5,some11-3,1-some8,3-some9,some7-8,6-6,2-some12,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-some0,some1-some2,5-2,4-4,8-1,some3-7,some4-5,7-3),4-4)"}]
    <#lemma729>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_542 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_542.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma635> a r:Inference;
  r:gives {
    "queens([1-f(some3-some6,6-some7,4-some8,some9-2,8-4,some10-1,7-7,some11-some1),2-f(2-some7,some3-some8,6-2,4-4,some9-1,8-7,some10-some1,7-3),4-f(5-2,some2-4,2-1,some3-7,6-some1,4-3,some9-6,8-8),5-f(3-4,5-1,some2-7,2-some1,some3-3,6-6,4-8,some9-5),8-f(some12-some1,some0-3,1-6,3-8,5-5,some2-some4,2-some5,some3-some13)],3,[2,8,5,1,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(2-f(2-some0,some1-some2,6-2,4-4,some3-1,8-7,some4-some5,7-3),[1-f(some1-some6,6-some0,4-some2,some3-2,8-4,some4-1,7-7,some7-some5),2-f(2-some0,some1-some2,6-2,4-4,some3-1,8-7,some4-some5,7-3),4-f(5-2,some8-4,2-1,some1-7,6-some5,4-3,some3-6,8-8),5-f(3-4,5-1,some8-7,2-some5,some1-3,6-6,4-8,some3-5),8-f(some9-some5,some10-3,1-6,3-8,5-5,some8-some11,2-some12,some1-some13)],[1-f(some1-some6,6-some0,4-some2,some3-2,8-4,some4-1,7-7,some7-some5),4-f(5-2,some8-4,2-1,some1-7,6-some5,4-3,some3-6,8-8),5-f(3-4,5-1,some8-7,2-some5,some1-3,6-6,4-8,some3-5),8-f(some9-some5,some10-3,1-6,3-8,5-5,some8-some11,2-some12,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-some0,some1-some2,6-2,4-4,some3-1,8-7,some4-some5,7-3),4-4)"}]
    <#lemma730>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_543 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_543.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma636> a r:Inference;
  r:gives {
    "queens([1-f(4-some6,some4-some7,some8-some9,8-2,5-5,7-1,some10-4,some11-7),2-f(2-some7,4-some9,some4-2,some8-5,8-1,5-4,7-7,some10-3),4-f(some1-2,6-5,2-1,4-4,some4-7,some8-3,8-some2,5-some3),5-f(3-5,some1-1,6-4,2-7,4-3,some4-some2,some8-some3,8-8),8-f(some12-7,some0-3,1-some2,3-some3,some1-8,6-6,2-some5,4-some13)],3,[4,1,8,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(4-f(some0-2,6-5,2-1,4-4,some1-7,some2-3,8-some3,5-some4),[1-f(4-some5,some1-some6,some2-some7,8-2,5-5,7-1,some8-4,some9-7),2-f(2-some6,4-some7,some1-2,some2-5,8-1,5-4,7-7,some8-3),4-f(some0-2,6-5,2-1,4-4,some1-7,some2-3,8-some3,5-some4),5-f(3-5,some0-1,6-4,2-7,4-3,some1-some3,some2-some4,8-8),8-f(some10-7,some11-3,1-some3,3-some4,some0-8,6-6,2-some12,4-some13)],[1-f(4-some5,some1-some6,some2-some7,8-2,5-5,7-1,some8-4,some9-7),2-f(2-some6,4-some7,some1-2,some2-5,8-1,5-4,7-7,some8-3),5-f(3-5,some0-1,6-4,2-7,4-3,some1-some3,some2-some4,8-8),8-f(some10-7,some11-3,1-some3,3-some4,some0-8,6-6,2-some12,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-2,6-5,2-1,4-4,some1-7,some2-3,8-some3,5-some4),4-4)"}]
    <#lemma731>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_544 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_544.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma637> a r:Inference;
  r:gives {
    "queens([2-f(4-some2,7-3,some1-some4,3-2,some3-1,6-6,8-4,some5-some7),3-f(2-3,4-some4,7-2,some1-1,3-6,some3-4,6-some7,8-8),5-f(some8-2,5-1,2-6,4-4,7-some7,some1-8,3-some9,some3-5),7-f(some10-6,1-4,some8-some7,5-8,2-some9,4-5,7-7,some1-some11),8-f(some12-4,some10-some7,1-8,some8-some9,5-5,2-7,4-some11,7-some13)],3,[5,8,2,7,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(5-f(some0-2,5-1,2-6,4-4,7-some1,some2-8,3-some3,some4-5),[2-f(4-some5,7-3,some2-some6,3-2,some4-1,6-6,8-4,some7-some1),3-f(2-3,4-some6,7-2,some2-1,3-6,some4-4,6-some1,8-8),5-f(some0-2,5-1,2-6,4-4,7-some1,some2-8,3-some3,some4-5),7-f(some8-6,1-4,some0-some1,5-8,2-some3,4-5,7-7,some2-some9),8-f(some10-4,some8-some1,1-8,some0-some3,5-5,2-7,4-some9,7-some11)],[2-f(4-some5,7-3,some2-some6,3-2,some4-1,6-6,8-4,some7-some1),3-f(2-3,4-some6,7-2,some2-1,3-6,some4-4,6-some1,8-8),7-f(some8-6,1-4,some0-some1,5-8,2-some3,4-5,7-7,some2-some9),8-f(some10-4,some8-some1,1-8,some0-some3,5-5,2-7,4-some9,7-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-2,5-1,2-6,4-4,7-some1,some2-8,3-some3,some4-5),4-4)"}]
    <#lemma732>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_545 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_545.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma638> a r:Inference;
  r:gives {
    "queens([1-f(5-some6,3-some0,some2-some1,some3-3,some4-2,8-1,7-7,some7-some5),3-f(2-some1,6-3,5-2,3-1,some2-7,some3-some5,some4-5,8-8),5-f(4-2,some8-1,2-7,6-some5,5-5,3-8,some2-4,some3-6),7-f(some9-7,1-some5,4-5,some8-8,2-4,6-6,5-some10,3-some11),8-f(some12-some5,some9-5,1-8,4-4,some8-6,2-some10,6-some11,5-some13)],3,[8,5,7,1,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-5,1-8,4-4,some3-6,2-some4,6-some5,5-some6),[1-f(5-some7,3-some8,some9-some10,some11-3,some12-2,8-1,7-7,some13-some1),3-f(2-some10,6-3,5-2,3-1,some9-7,some11-some1,some12-5,8-8),5-f(4-2,some3-1,2-7,6-some1,5-5,3-8,some9-4,some11-6),7-f(some2-7,1-some1,4-5,some3-8,2-4,6-6,5-some4,3-some5),8-f(some0-some1,some2-5,1-8,4-4,some3-6,2-some4,6-some5,5-some6)],[1-f(5-some7,3-some8,some9-some10,some11-3,some12-2,8-1,7-7,some13-some1),3-f(2-some10,6-3,5-2,3-1,some9-7,some11-some1,some12-5,8-8),5-f(4-2,some3-1,2-7,6-some1,5-5,3-8,some9-4,some11-6),7-f(some2-7,1-some1,4-5,some3-8,2-4,6-6,5-some4,3-some5)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,some2-5,1-8,4-4,some3-6,2-some4,6-some5,5-some6),4-4)"}]
    <#lemma733>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_546 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_546.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma639> a r:Inference;
  r:gives {
    "queens([1-f(8-some7,6-some8,5-some9,4-4,some10-2,7-1,some11-5,some12-7),2-f(some3-some8,8-some9,6-4,5-2,4-1,some10-5,7-7,some11-3),3-f(2-some9,some3-4,8-2,6-1,5-5,4-7,some10-3,7-6),5-f(3-2,some1-1,2-5,some3-7,8-3,6-6,5-some2,4-some4),8-f(some13-7,some0-3,1-6,3-some2,some1-some4,2-some5,some3-some6,8-8)],3,[1,3,5,2,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(8-some0,6-some1,5-some2,4-4,some3-2,7-1,some4-5,some5-7),[1-f(8-some0,6-some1,5-some2,4-4,some3-2,7-1,some4-5,some5-7),2-f(some6-some1,8-some2,6-4,5-2,4-1,some3-5,7-7,some4-3),3-f(2-some2,some6-4,8-2,6-1,5-5,4-7,some3-3,7-6),5-f(3-2,some7-1,2-5,some6-7,8-3,6-6,5-some8,4-some9),8-f(some10-7,some11-3,1-6,3-some8,some7-some9,2-some12,some6-some13,8-8)],[2-f(some6-some1,8-some2,6-4,5-2,4-1,some3-5,7-7,some4-3),3-f(2-some2,some6-4,8-2,6-1,5-5,4-7,some3-3,7-6),5-f(3-2,some7-1,2-5,some6-7,8-3,6-6,5-some8,4-some9),8-f(some10-7,some11-3,1-6,3-some8,some7-some9,2-some12,some6-some13,8-8)])"}]
    [ a r:Fact; r:gives {"arg(4,f(8-some0,6-some1,5-some2,4-4,some3-2,7-1,some4-5,some5-7),4-4)"}]
    <#lemma734>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_547 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_547.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma640> a r:Inference;
  r:gives {
    "queens([1-f(some3-some7,some5-some8,7-some9,4-4,6-2,8-1,some10-6,some11-some1),2-f(some2-some8,some3-some9,some5-4,7-2,4-1,6-6,8-some1,some10-3),3-f(2-some9,some2-4,some3-2,some5-1,7-6,4-some1,6-3,8-8),5-f(3-2,5-1,2-6,some2-some1,some3-3,some5-8,7-7,4-5),8-f(some12-some1,some0-3,1-8,3-7,5-5,2-some4,some2-some6,some3-some13)],3,[1,8,2,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,some2-some3,7-some4,4-4,6-2,8-1,some5-6,some6-some7),[1-f(some0-some1,some2-some3,7-some4,4-4,6-2,8-1,some5-6,some6-some7),2-f(some8-some3,some0-some4,some2-4,7-2,4-1,6-6,8-some7,some5-3),3-f(2-some4,some8-4,some0-2,some2-1,7-6,4-some7,6-3,8-8),5-f(3-2,5-1,2-6,some8-some7,some0-3,some2-8,7-7,4-5),8-f(some9-some7,some10-3,1-8,3-7,5-5,2-some11,some8-some12,some0-some13)],[2-f(some8-some3,some0-some4,some2-4,7-2,4-1,6-6,8-some7,some5-3),3-f(2-some4,some8-4,some0-2,some2-1,7-6,4-some7,6-3,8-8),5-f(3-2,5-1,2-6,some8-some7,some0-3,some2-8,7-7,4-5),8-f(some9-some7,some10-3,1-8,3-7,5-5,2-some11,some8-some12,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,some2-some3,7-some4,4-4,6-2,8-1,some5-6,some6-some7),4-4)"}]
    <#lemma735>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_548 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_548.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma641> a r:Inference;
  r:gives {
    "queens([1-f(4-some5,3-some0,7-some1,some2-3,5-5,8-1,some4-4,some6-some3),3-f(some7-some1,6-3,4-5,3-1,7-4,some2-some3,5-2,8-8),4-f(some8-3,some7-5,6-1,4-4,3-some3,7-2,some2-8,5-7),5-f(some9-5,some8-1,some7-4,6-some3,4-2,3-8,7-7,some2-6),7-f(2-4,1-some3,some9-2,some8-8,some7-7,6-6,4-some10,3-some11)],3,[4,1,7,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(4-f(some0-3,some1-5,6-1,4-4,3-some2,7-2,some3-8,5-7),[1-f(4-some4,3-some5,7-some6,some3-3,5-5,8-1,some7-4,some8-some2),3-f(some1-some6,6-3,4-5,3-1,7-4,some3-some2,5-2,8-8),4-f(some0-3,some1-5,6-1,4-4,3-some2,7-2,some3-8,5-7),5-f(some9-5,some0-1,some1-4,6-some2,4-2,3-8,7-7,some3-6),7-f(2-4,1-some2,some9-2,some0-8,some1-7,6-6,4-some10,3-some11)],[1-f(4-some4,3-some5,7-some6,some3-3,5-5,8-1,some7-4,some8-some2),3-f(some1-some6,6-3,4-5,3-1,7-4,some3-some2,5-2,8-8),5-f(some9-5,some0-1,some1-4,6-some2,4-2,3-8,7-7,some3-6),7-f(2-4,1-some2,some9-2,some0-8,some1-7,6-6,4-some10,3-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-3,some1-5,6-1,4-4,3-some2,7-2,some3-8,5-7),4-4)"}]
    <#lemma736>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_549 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_549.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma642> a r:Inference;
  r:gives {
    "queens([2-f(5-2,3-some1,2-some2,6-3,8-some3,some4-1,7-7,some5-6),4-f(some6-some2,some0-3,5-some3,3-1,2-7,6-6,8-5,some4-4),5-f(4-3,some6-some3,some0-1,5-7,3-6,2-5,6-4,8-8),6-f(some7-some3,4-1,some6-7,some0-6,5-5,3-4,2-8,6-some8),8-f(some9-7,1-6,some7-5,4-4,some6-8,some0-some8,5-some10,3-some11)],3,[8,6,4,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-7,1-6,some1-5,4-4,some2-8,some3-some4,5-some5,3-some6),[2-f(5-2,3-some7,2-some8,6-3,8-some9,some10-1,7-7,some11-6),4-f(some2-some8,some3-3,5-some9,3-1,2-7,6-6,8-5,some10-4),5-f(4-3,some2-some9,some3-1,5-7,3-6,2-5,6-4,8-8),6-f(some1-some9,4-1,some2-7,some3-6,5-5,3-4,2-8,6-some4),8-f(some0-7,1-6,some1-5,4-4,some2-8,some3-some4,5-some5,3-some6)],[2-f(5-2,3-some7,2-some8,6-3,8-some9,some10-1,7-7,some11-6),4-f(some2-some8,some3-3,5-some9,3-1,2-7,6-6,8-5,some10-4),5-f(4-3,some2-some9,some3-1,5-7,3-6,2-5,6-4,8-8),6-f(some1-some9,4-1,some2-7,some3-6,5-5,3-4,2-8,6-some4)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-7,1-6,some1-5,4-4,some2-8,some3-some4,5-some5,3-some6),4-4)"}]
    <#lemma737>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_550 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_550.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma643> a r:Inference;
  r:gives {
    "queens([1-f(2-some4,6-some5,8-2,4-4,7-some1,some6-3,some7-1,some8-some2),3-f(some0-2,3-4,2-some1,6-3,8-1,4-some2,7-7,some6-6),5-f(some9-some1,5-3,some0-1,3-some2,2-7,6-6,8-some3,4-5),6-f(some10-3,some9-1,5-some2,some0-7,3-6,2-some3,6-5,8-8),8-f(some11-some2,1-7,some10-6,some9-some3,5-5,some0-8,3-some12,2-some13)],3,[1,8,5,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(2-some0,6-some1,8-2,4-4,7-some2,some3-3,some4-1,some5-some6),[1-f(2-some0,6-some1,8-2,4-4,7-some2,some3-3,some4-1,some5-some6),3-f(some7-2,3-4,2-some2,6-3,8-1,4-some6,7-7,some3-6),5-f(some8-some2,5-3,some7-1,3-some6,2-7,6-6,8-some9,4-5),6-f(some10-3,some8-1,5-some6,some7-7,3-6,2-some9,6-5,8-8),8-f(some11-some6,1-7,some10-6,some8-some9,5-5,some7-8,3-some12,2-some13)],[3-f(some7-2,3-4,2-some2,6-3,8-1,4-some6,7-7,some3-6),5-f(some8-some2,5-3,some7-1,3-some6,2-7,6-6,8-some9,4-5),6-f(some10-3,some8-1,5-some6,some7-7,3-6,2-some9,6-5,8-8),8-f(some11-some6,1-7,some10-6,some8-some9,5-5,some7-8,3-some12,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-some0,6-some1,8-2,4-4,7-some2,some3-3,some4-1,some5-some6),4-4)"}]
    <#lemma738>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_551 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_551.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma644> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,4-some7,6-2,8-some8,5-5,some9-4,some10-1,some11-3),3-f(some2-2,7-some8,2-5,4-4,6-1,8-3,5-6,some9-some3),4-f(3-some8,some2-5,7-4,2-1,4-3,6-6,8-some3,5-some4),5-f(some1-5,3-4,some2-1,7-3,2-6,4-some3,6-some4,8-8),8-f(some12-3,1-6,some0-some3,some1-some4,3-8,some2-some5,7-7,2-some13)],3,[3,1,4,8,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(3-f(some0-2,7-some1,2-5,4-4,6-1,8-3,5-6,some2-some3),[1-f(2-some4,4-some5,6-2,8-some1,5-5,some2-4,some6-1,some7-3),3-f(some0-2,7-some1,2-5,4-4,6-1,8-3,5-6,some2-some3),4-f(3-some1,some0-5,7-4,2-1,4-3,6-6,8-some3,5-some8),5-f(some9-5,3-4,some0-1,7-3,2-6,4-some3,6-some8,8-8),8-f(some10-3,1-6,some11-some3,some9-some8,3-8,some0-some12,7-7,2-some13)],[1-f(2-some4,4-some5,6-2,8-some1,5-5,some2-4,some6-1,some7-3),4-f(3-some1,some0-5,7-4,2-1,4-3,6-6,8-some3,5-some8),5-f(some9-5,3-4,some0-1,7-3,2-6,4-some3,6-some8,8-8),8-f(some10-3,1-6,some11-some3,some9-some8,3-8,some0-some12,7-7,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-2,7-some1,2-5,4-4,6-1,8-3,5-6,some2-some3),4-4)"}]
    <#lemma739>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_552 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_552.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma645> a r:Inference;
  r:gives {
    "queens([2-f(2-some2,some0-3,6-2,3-some4,some3-some5,8-1,7-7,some6-4),4-f(5-2,4-some4,2-some5,some0-1,6-7,3-4,some3-6,8-8),5-f(some8-some4,5-some5,4-1,2-7,some0-4,6-6,3-8,some3-5),6-f(some9-some5,some8-1,5-7,4-4,2-6,some0-8,6-5,3-some10),8-f(some11-7,1-4,some9-6,some8-8,5-5,4-some10,2-some12,some0-some13)],3,[6,8,5,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(6-f(some0-some1,some2-1,5-7,4-4,2-6,some3-8,6-5,3-some4),[2-f(2-some5,some3-3,6-2,3-some6,some7-some1,8-1,7-7,some8-4),4-f(5-2,4-some6,2-some1,some3-1,6-7,3-4,some7-6,8-8),5-f(some2-some6,5-some1,4-1,2-7,some3-4,6-6,3-8,some7-5),6-f(some0-some1,some2-1,5-7,4-4,2-6,some3-8,6-5,3-some4),8-f(some9-7,1-4,some0-6,some2-8,5-5,4-some4,2-some10,some3-some11)],[2-f(2-some5,some3-3,6-2,3-some6,some7-some1,8-1,7-7,some8-4),4-f(5-2,4-some6,2-some1,some3-1,6-7,3-4,some7-6,8-8),5-f(some2-some6,5-some1,4-1,2-7,some3-4,6-6,3-8,some7-5),8-f(some9-7,1-4,some0-6,some2-8,5-5,4-some4,2-some10,some3-some11)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,some2-1,5-7,4-4,2-6,some3-8,6-5,3-some4),4-4)"}]
    <#lemma740>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_553 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_553.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma646> a r:Inference;
  r:gives {
    "queens([1-f(5-some8,7-some9,4-some10,some11-2,8-4,6-6,some12-1,some13-some1),2-f(2-some9,5-some10,7-2,4-4,some11-6,8-1,6-some1,some12-5),4-f(some3-2,some4-4,2-6,5-1,7-some1,4-5,some11-3,8-8),5-f(some2-4,some3-6,some4-1,2-some1,5-5,7-3,4-8,some11-7),6-f(3-6,some2-1,some3-some1,some4-5,2-3,5-8,7-7,4-some5)],3,[2,5,1,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(2-f(2-some0,5-some1,7-2,4-4,some2-6,8-1,6-some3,some4-5),[1-f(5-some5,7-some0,4-some1,some2-2,8-4,6-6,some4-1,some6-some3),2-f(2-some0,5-some1,7-2,4-4,some2-6,8-1,6-some3,some4-5),4-f(some7-2,some8-4,2-6,5-1,7-some3,4-5,some2-3,8-8),5-f(some9-4,some7-6,some8-1,2-some3,5-5,7-3,4-8,some2-7),6-f(3-6,some9-1,some7-some3,some8-5,2-3,5-8,7-7,4-some10)],[1-f(5-some5,7-some0,4-some1,some2-2,8-4,6-6,some4-1,some6-some3),4-f(some7-2,some8-4,2-6,5-1,7-some3,4-5,some2-3,8-8),5-f(some9-4,some7-6,some8-1,2-some3,5-5,7-3,4-8,some2-7),6-f(3-6,some9-1,some7-some3,some8-5,2-3,5-8,7-7,4-some10)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-some0,5-some1,7-2,4-4,some2-6,8-1,6-some3,some4-5),4-4)"}]
    <#lemma741>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_554 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_554.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma647> a r:Inference;
  r:gives {
    "queens([1-f(some1-some5,3-some0,8-some2,some3-3,7-2,6-6,some4-1,some6-4),3-f(2-some2,4-3,some1-2,3-6,8-1,some3-4,7-7,6-some7),5-f(some8-2,5-6,2-1,4-4,some1-7,3-some7,8-some9,some3-5),6-f(some10-6,some8-1,5-4,2-7,4-some7,some1-some9,3-5,8-8),8-f(some11-4,1-7,some10-some7,some8-some9,5-5,2-8,4-some12,some1-some13)],3,[5,8,1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(5-f(some0-2,5-6,2-1,4-4,some1-7,3-some2,8-some3,some4-5),[1-f(some1-some5,3-some6,8-some7,some4-3,7-2,6-6,some8-1,some9-4),3-f(2-some7,4-3,some1-2,3-6,8-1,some4-4,7-7,6-some2),5-f(some0-2,5-6,2-1,4-4,some1-7,3-some2,8-some3,some4-5),6-f(some10-6,some0-1,5-4,2-7,4-some2,some1-some3,3-5,8-8),8-f(some11-4,1-7,some10-some2,some0-some3,5-5,2-8,4-some12,some1-some13)],[1-f(some1-some5,3-some6,8-some7,some4-3,7-2,6-6,some8-1,some9-4),3-f(2-some7,4-3,some1-2,3-6,8-1,some4-4,7-7,6-some2),6-f(some10-6,some0-1,5-4,2-7,4-some2,some1-some3,3-5,8-8),8-f(some11-4,1-7,some10-some2,some0-some3,5-5,2-8,4-some12,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-2,5-6,2-1,4-4,some1-7,3-some2,8-some3,some4-5),4-4)"}]
    <#lemma742>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_555 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_555.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma648> a r:Inference;
  r:gives {
    "queens([1-f(some1-some6,3-some0,some3-some2,8-3,7-2,6-6,some5-1,some7-some4),3-f(2-some2,5-3,some1-2,3-6,some3-1,8-some4,7-7,6-5),5-f(4-2,some8-6,2-1,5-some4,some1-7,3-5,some3-4,8-8),6-f(some9-6,4-1,some8-some4,2-7,5-5,some1-4,3-8,some3-some10),8-f(some11-some4,1-7,some9-5,4-4,some8-8,2-some10,5-some12,some1-some13)],3,[8,6,1,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,1-7,some2-5,4-4,some3-8,2-some4,5-some5,some6-some7),[1-f(some6-some8,3-some9,some10-some11,8-3,7-2,6-6,some12-1,some13-some1),3-f(2-some11,5-3,some6-2,3-6,some10-1,8-some1,7-7,6-5),5-f(4-2,some3-6,2-1,5-some1,some6-7,3-5,some10-4,8-8),6-f(some2-6,4-1,some3-some1,2-7,5-5,some6-4,3-8,some10-some4),8-f(some0-some1,1-7,some2-5,4-4,some3-8,2-some4,5-some5,some6-some7)],[1-f(some6-some8,3-some9,some10-some11,8-3,7-2,6-6,some12-1,some13-some1),3-f(2-some11,5-3,some6-2,3-6,some10-1,8-some1,7-7,6-5),5-f(4-2,some3-6,2-1,5-some1,some6-7,3-5,some10-4,8-8),6-f(some2-6,4-1,some3-some1,2-7,5-5,some6-4,3-8,some10-some4)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,1-7,some2-5,4-4,some3-8,2-some4,5-some5,some6-some7),4-4)"}]
    <#lemma743>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_556 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_556.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma649> a r:Inference;
  r:gives {
    "queens([1-f(3-some4,some1-some5,some2-some0,4-4,8-3,7-2,some6-1,some7-7),2-f(5-some5,3-some0,some1-4,some2-3,4-2,8-1,7-7,some6-some3),4-f(2-4,6-3,5-2,3-1,some1-7,some2-some3,4-5,8-8),6-f(some8-2,some9-1,2-7,6-some3,5-5,3-8,some1-some10,some2-6),8-f(some11-7,1-some3,some8-5,some9-8,2-some10,6-6,5-some12,3-some13)],3,[1,6,8,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(3-some0,some1-some2,some3-some4,4-4,8-3,7-2,some5-1,some6-7),[1-f(3-some0,some1-some2,some3-some4,4-4,8-3,7-2,some5-1,some6-7),2-f(5-some2,3-some4,some1-4,some3-3,4-2,8-1,7-7,some5-some7),4-f(2-4,6-3,5-2,3-1,some1-7,some3-some7,4-5,8-8),6-f(some8-2,some9-1,2-7,6-some7,5-5,3-8,some1-some10,some3-6),8-f(some11-7,1-some7,some8-5,some9-8,2-some10,6-6,5-some12,3-some13)],[2-f(5-some2,3-some4,some1-4,some3-3,4-2,8-1,7-7,some5-some7),4-f(2-4,6-3,5-2,3-1,some1-7,some3-some7,4-5,8-8),6-f(some8-2,some9-1,2-7,6-some7,5-5,3-8,some1-some10,some3-6),8-f(some11-7,1-some7,some8-5,some9-8,2-some10,6-6,5-some12,3-some13)])"}]
    [ a r:Fact; r:gives {"arg(4,f(3-some0,some1-some2,some3-some4,4-4,8-3,7-2,some5-1,some6-7),4-4)"}]
    <#lemma744>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_557 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_557.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma650> a r:Inference;
  r:gives {
    "queens([1-f(2-some3,6-some4,8-2,4-4,7-some1,some5-3,some6-some2,some7-1),3-f(5-2,3-4,2-some1,6-3,8-some2,4-1,7-7,some5-6),5-f(some8-some1,some0-3,5-some2,3-1,2-7,6-6,8-5,4-some9),6-f(some10-3,some8-some2,some0-1,5-7,3-6,2-5,6-some9,8-8),7-f(some11-some2,some10-1,some8-7,some0-6,5-5,3-some9,2-8,6-some12)],3,[1,7,5,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(1-f(2-some0,6-some1,8-2,4-4,7-some2,some3-3,some4-some5,some6-1),[1-f(2-some0,6-some1,8-2,4-4,7-some2,some3-3,some4-some5,some6-1),3-f(5-2,3-4,2-some2,6-3,8-some5,4-1,7-7,some3-6),5-f(some7-some2,some8-3,5-some5,3-1,2-7,6-6,8-5,4-some9),6-f(some10-3,some7-some5,some8-1,5-7,3-6,2-5,6-some9,8-8),7-f(some11-some5,some10-1,some7-7,some8-6,5-5,3-some9,2-8,6-some12)],[3-f(5-2,3-4,2-some2,6-3,8-some5,4-1,7-7,some3-6),5-f(some7-some2,some8-3,5-some5,3-1,2-7,6-6,8-5,4-some9),6-f(some10-3,some7-some5,some8-1,5-7,3-6,2-5,6-some9,8-8),7-f(some11-some5,some10-1,some7-7,some8-6,5-5,3-some9,2-8,6-some12)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-some0,6-some1,8-2,4-4,7-some2,some3-3,some4-some5,some6-1),4-4)"}]
    <#lemma745>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_558 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_558.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma651> a r:Inference;
  r:gives {
    "queens([1-f(2-some4,4-some5,8-2,7-some6,5-5,some7-4,some8-3,some9-1),3-f(3-2,6-some6,2-5,4-4,8-3,7-1,5-some2,some7-7),4-f(some1-some6,3-5,6-4,2-3,4-1,8-some2,7-7,5-some3),6-f(some10-4,some0-3,some1-1,3-some2,6-7,2-some3,4-6,8-8),7-f(some11-3,some10-1,some0-some2,some1-7,3-some3,6-6,2-8,4-some12)],3,[3,1,7,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(3-f(3-2,6-some0,2-5,4-4,8-3,7-1,5-some1,some2-7),[1-f(2-some3,4-some4,8-2,7-some0,5-5,some2-4,some5-3,some6-1),3-f(3-2,6-some0,2-5,4-4,8-3,7-1,5-some1,some2-7),4-f(some7-some0,3-5,6-4,2-3,4-1,8-some1,7-7,5-some8),6-f(some9-4,some10-3,some7-1,3-some1,6-7,2-some8,4-6,8-8),7-f(some11-3,some9-1,some10-some1,some7-7,3-some8,6-6,2-8,4-some12)],[1-f(2-some3,4-some4,8-2,7-some0,5-5,some2-4,some5-3,some6-1),4-f(some7-some0,3-5,6-4,2-3,4-1,8-some1,7-7,5-some8),6-f(some9-4,some10-3,some7-1,3-some1,6-7,2-some8,4-6,8-8),7-f(some11-3,some9-1,some10-some1,some7-7,3-some8,6-6,2-8,4-some12)])"}]
    [ a r:Fact; r:gives {"arg(4,f(3-2,6-some0,2-5,4-4,8-3,7-1,5-some1,some2-7),4-4)"}]
    <#lemma746>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_559 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_559.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma652> a r:Inference;
  r:gives {
    "queens([2-f(2-some1,7-3,6-2,3-some2,5-5,8-some5,some3-1,some4-4),4-f(some7-2,4-some2,2-5,7-some5,6-1,3-4,5-6,8-8),5-f(some8-some2,some7-5,4-some5,2-1,7-4,6-6,3-8,5-some9),6-f(some10-5,some8-some5,some7-1,4-4,2-6,7-8,6-some9,3-7),7-f(some11-some5,some10-1,some8-4,some7-6,4-8,2-some9,7-7,6-some12)],3,[6,2,5,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(6-f(some0-5,some1-some2,some3-1,4-4,2-6,7-8,6-some4,3-7),[2-f(2-some5,7-3,6-2,3-some6,5-5,8-some2,some7-1,some8-4),4-f(some3-2,4-some6,2-5,7-some2,6-1,3-4,5-6,8-8),5-f(some1-some6,some3-5,4-some2,2-1,7-4,6-6,3-8,5-some4),6-f(some0-5,some1-some2,some3-1,4-4,2-6,7-8,6-some4,3-7),7-f(some9-some2,some0-1,some1-4,some3-6,4-8,2-some4,7-7,6-some10)],[2-f(2-some5,7-3,6-2,3-some6,5-5,8-some2,some7-1,some8-4),4-f(some3-2,4-some6,2-5,7-some2,6-1,3-4,5-6,8-8),5-f(some1-some6,some3-5,4-some2,2-1,7-4,6-6,3-8,5-some4),7-f(some9-some2,some0-1,some1-4,some3-6,4-8,2-some4,7-7,6-some10)])"}]
    [ a r:Fact; r:gives {"arg(4,f(some0-5,some1-some2,some3-1,4-4,2-6,7-8,6-some4,3-7),4-4)"}]
    <#lemma747>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_560 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_560.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma653> a r:Inference;
  r:gives {
    "queens([2-f(5-some1,7-3,4-some2,3-2,8-4,6-6,some3-1,some4-some6),3-f(2-3,5-some2,7-2,4-4,3-6,8-1,6-some6,some3-5),5-f(some7-2,some8-4,2-6,5-1,7-some6,4-5,3-some9,8-8),6-f(some10-4,some7-6,some8-1,2-some6,5-5,7-some9,4-8,3-7),7-f(some11-6,some10-1,some7-some6,some8-5,2-some9,5-8,7-7,4-some12)],3,[3,6,2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 4}]
    [ a r:Fact; r:gives {"select(3-f(2-3,5-some0,7-2,4-4,3-6,8-1,6-some1,some2-5),[2-f(5-some3,7-3,4-some0,3-2,8-4,6-6,some2-1,some4-some1),3-f(2-3,5-some0,7-2,4-4,3-6,8-1,6-some1,some2-5),5-f(some5-2,some6-4,2-6,5-1,7-some1,4-5,3-some7,8-8),6-f(some8-4,some5-6,some6-1,2-some1,5-5,7-some7,4-8,3-7),7-f(some9-6,some8-1,some5-some1,some6-5,2-some7,5-8,7-7,4-some10)],[2-f(5-some3,7-3,4-some0,3-2,8-4,6-6,some2-1,some4-some1),5-f(some5-2,some6-4,2-6,5-1,7-some1,4-5,3-some7,8-8),6-f(some8-4,some5-6,some6-1,2-some1,5-5,7-some7,4-8,3-7),7-f(some9-6,some8-1,some5-some1,some6-5,2-some7,5-8,7-7,4-some10)])"}]
    [ a r:Fact; r:gives {"arg(4,f(2-3,5-some0,7-2,4-4,3-6,8-1,6-some1,some2-5),4-4)"}]
    <#lemma748>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_561 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_561.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma654> a r:Inference;
  r:gives {
    "constraints(5,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),[some8,some6,some4,some2,some0|some16],[some9,some7,some5,some3,some1|some17])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),some8-some9)"}]
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> 4}]
    <#lemma749>
  );
  r:rule [ a r:Fact; r:gives {{"arg(avar0,avar1,avar2-avar3)".
    (_:x_0_562 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> _:x_4_562.
    "constraints(avar4,avar1,avar5,avar6)"} => "constraints(avar0,avar1,[avar2|avar5],[avar3|avar6])"}].

<#lemma655> a r:Inference;
  r:gives {
    "constraints(8,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),[some14,some12,some10,some8,some6,some4,some2,some0,some16,some17,some18,some19|some20],[some15,some13,some11,some9,some7,some5,some3,some1,some21,some22,some23|some24])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"arg(8,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),some14-some15)"}]
    [ a r:Fact; r:gives {(8 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> 7}]
    <#lemma464>
  );
  r:rule [ a r:Fact; r:gives {{"arg(avar0,avar1,avar2-avar3)".
    (_:x_0_563 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> _:x_4_563.
    "constraints(avar4,avar1,avar5,avar6)"} => "constraints(avar0,avar1,[avar2|avar5],[avar3|avar6])"}].

<#lemma656> a r:Inference;
  r:gives {
    "board([some25,some26,some27,some28],[5-f(some16-some3,some0-some5,some2-some7,some4-some9,some6-some11,some8-some13,some10-some15,some12-some29),6-f(some17-some5,some16-some7,some0-some9,some2-some11,some4-some13,some6-some15,some8-some29,some10-some30),7-f(some18-some7,some17-some9,some16-some11,some0-some13,some2-some15,some4-some29,some6-some30,some8-some31),8-f(some19-some9,some18-some11,some17-some13,some16-some15,some0-some29,some2-some30,some4-some31,some6-some32)],4,8,[some14,some12,some10,some8,some6,some4,some2,some0,some16,some17,some18,some19|some20],[some29,some15,some13,some11,some9,some7,some5,some3,some1,some21,some22,some23|some24])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma750>
    <#lemma751>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_564 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_564.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma657> a r:Inference;
  r:gives {
    "queens([2-f(6-some3,1-some4,some1-some5,5-some6,some7-2,8-5,7-7,some8-4),3-f(4-some4,6-some5,1-some6,some1-2,5-5,some7-7,8-4,7-3),4-f(2-some5,4-some6,6-2,1-5,some1-7,5-4,some7-3,8-8),7-f(some9-5,3-7,some0-4,2-3,4-8,6-6,1-some2,some1-some10)],4,[3,7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(3-f(4-some0,6-some1,1-some2,some3-2,5-5,some4-7,8-4,7-3),[2-f(6-some5,1-some0,some3-some1,5-some2,some4-2,8-5,7-7,some6-4),3-f(4-some0,6-some1,1-some2,some3-2,5-5,some4-7,8-4,7-3),4-f(2-some1,4-some2,6-2,1-5,some3-7,5-4,some4-3,8-8),7-f(some7-5,3-7,some8-4,2-3,4-8,6-6,1-some9,some3-some10)],[2-f(6-some5,1-some0,some3-some1,5-some2,some4-2,8-5,7-7,some6-4),4-f(2-some1,4-some2,6-2,1-5,some3-7,5-4,some4-3,8-8),7-f(some7-5,3-7,some8-4,2-3,4-8,6-6,1-some9,some3-some10)])"}]
    [ a r:Fact; r:gives {"arg(5,f(4-some0,6-some1,1-some2,some3-2,5-5,some4-7,8-4,7-3),5-5)"}]
    <#lemma752>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_565 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_565.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma658> a r:Inference;
  r:gives {
    "queens([2-f(some1-some5,1-some0,4-some2,6-some3,8-4,some4-2,7-7,some6-6),4-f(some7-some2,5-some3,some1-4,1-2,4-7,6-6,8-3,some4-5),5-f(2-some3,some7-4,5-2,some1-7,1-6,4-3,6-5,8-8),7-f(some8-2,3-7,2-6,some7-3,5-5,some1-8,1-some9,4-some10)],4,[7,4,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(7-f(some0-2,3-7,2-6,some1-3,5-5,some2-8,1-some3,4-some4),[2-f(some2-some5,1-some6,4-some7,6-some8,8-4,some9-2,7-7,some10-6),4-f(some1-some7,5-some8,some2-4,1-2,4-7,6-6,8-3,some9-5),5-f(2-some8,some1-4,5-2,some2-7,1-6,4-3,6-5,8-8),7-f(some0-2,3-7,2-6,some1-3,5-5,some2-8,1-some3,4-some4)],[2-f(some2-some5,1-some6,4-some7,6-some8,8-4,some9-2,7-7,some10-6),4-f(some1-some7,5-some8,some2-4,1-2,4-7,6-6,8-3,some9-5),5-f(2-some8,some1-4,5-2,some2-7,1-6,4-3,6-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-2,3-7,2-6,some1-3,5-5,some2-8,1-some3,4-some4),5-5)"}]
    <#lemma753>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_566 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_566.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma659> a r:Inference;
  r:gives {
    "queens([2-f(3-some3,1-some4,some1-some5,7-some6,some7-3,6-6,8-2,some8-4),3-f(4-some4,3-some5,1-some6,some1-3,7-6,some7-2,6-4,8-8),5-f(some0-some6,5-3,4-6,3-2,1-4,some1-8,7-7,some7-5),8-f(some9-2,some10-4,2-8,some0-7,5-5,4-some2,3-some11,1-some12)],4,[8,2,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-2,some1-4,2-8,some2-7,5-5,4-some3,3-some4,1-some5),[2-f(3-some6,1-some7,some8-some9,7-some10,some11-3,6-6,8-2,some12-4),3-f(4-some7,3-some9,1-some10,some8-3,7-6,some11-2,6-4,8-8),5-f(some2-some10,5-3,4-6,3-2,1-4,some8-8,7-7,some11-5),8-f(some0-2,some1-4,2-8,some2-7,5-5,4-some3,3-some4,1-some5)],[2-f(3-some6,1-some7,some8-some9,7-some10,some11-3,6-6,8-2,some12-4),3-f(4-some7,3-some9,1-some10,some8-3,7-6,some11-2,6-4,8-8),5-f(some2-some10,5-3,4-6,3-2,1-4,some8-8,7-7,some11-5)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-2,some1-4,2-8,some2-7,5-5,4-some3,3-some4,1-some5),5-5)"}]
    <#lemma754>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_567 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_567.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma660> a r:Inference;
  r:gives {
    "queens([2-f(some4-some7,1-some8,7-some9,6-some10,5-5,some11-3,8-2,some12-6),3-f(3-some8,some4-some9,1-some10,7-5,6-3,5-2,some11-6,8-8),4-f(some2-some9,3-some10,some4-5,1-3,7-2,6-6,5-8,some11-4),6-f(2-5,4-3,some2-2,3-6,some4-8,1-4,7-7,6-some3)],4,[2,4,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(2-f(some0-some1,1-some2,7-some3,6-some4,5-5,some5-3,8-2,some6-6),[2-f(some0-some1,1-some2,7-some3,6-some4,5-5,some5-3,8-2,some6-6),3-f(3-some2,some0-some3,1-some4,7-5,6-3,5-2,some5-6,8-8),4-f(some7-some3,3-some4,some0-5,1-3,7-2,6-6,5-8,some5-4),6-f(2-5,4-3,some7-2,3-6,some0-8,1-4,7-7,6-some8)],[3-f(3-some2,some0-some3,1-some4,7-5,6-3,5-2,some5-6,8-8),4-f(some7-some3,3-some4,some0-5,1-3,7-2,6-6,5-8,some5-4),6-f(2-5,4-3,some7-2,3-6,some0-8,1-4,7-7,6-some8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,1-some2,7-some3,6-some4,5-5,some5-3,8-2,some6-6),5-5)"}]
    <#lemma755>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_568 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_568.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma661> a r:Inference;
  r:gives {
    "queens([1-f(7-some7,some8-1,5-some9,8-some10,some11-2,6-6,some12-5,some13-3),3-f(2-some9,1-some10,7-2,some8-6,5-5,8-3,some11-some2,6-some4),5-f(4-2,3-6,2-5,1-3,7-some2,some8-some4,5-4,8-8),7-f(some1-5,some3-3,4-some2,3-some4,2-4,1-8,7-7,some8-some5)],4,[3,1,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(3-f(2-some0,1-some1,7-2,some2-6,5-5,8-3,some3-some4,6-some5),[1-f(7-some6,some2-1,5-some0,8-some1,some3-2,6-6,some7-5,some8-3),3-f(2-some0,1-some1,7-2,some2-6,5-5,8-3,some3-some4,6-some5),5-f(4-2,3-6,2-5,1-3,7-some4,some2-some5,5-4,8-8),7-f(some9-5,some10-3,4-some4,3-some5,2-4,1-8,7-7,some2-some11)],[1-f(7-some6,some2-1,5-some0,8-some1,some3-2,6-6,some7-5,some8-3),5-f(4-2,3-6,2-5,1-3,7-some4,some2-some5,5-4,8-8),7-f(some9-5,some10-3,4-some4,3-some5,2-4,1-8,7-7,some2-some11)])"}]
    [ a r:Fact; r:gives {"arg(5,f(2-some0,1-some1,7-2,some2-6,5-5,8-3,some3-some4,6-some5),5-5)"}]
    <#lemma756>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_569 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_569.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma662> a r:Inference;
  r:gives {
    "queens([3-f(6-some2,1-4,some0-some3,7-2,5-5,4-some7,8-3,some4-some8),4-f(2-4,6-some3,1-2,some0-5,7-some7,5-3,4-some8,8-8),6-f(some9-2,3-5,2-some7,6-3,1-some8,some0-8,7-7,5-6),8-f(some10-some7,some11-3,some9-some8,3-8,2-7,6-6,1-some12,some0-some13)],4,[3,8,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(3-f(6-some0,1-4,some1-some2,7-2,5-5,4-some3,8-3,some4-some5),[3-f(6-some0,1-4,some1-some2,7-2,5-5,4-some3,8-3,some4-some5),4-f(2-4,6-some2,1-2,some1-5,7-some3,5-3,4-some5,8-8),6-f(some6-2,3-5,2-some3,6-3,1-some5,some1-8,7-7,5-6),8-f(some7-some3,some8-3,some6-some5,3-8,2-7,6-6,1-some9,some1-some10)],[4-f(2-4,6-some2,1-2,some1-5,7-some3,5-3,4-some5,8-8),6-f(some6-2,3-5,2-some3,6-3,1-some5,some1-8,7-7,5-6),8-f(some7-some3,some8-3,some6-some5,3-8,2-7,6-6,1-some9,some1-some10)])"}]
    [ a r:Fact; r:gives {"arg(5,f(6-some0,1-4,some1-some2,7-2,5-5,4-some3,8-3,some4-some5),5-5)"}]
    <#lemma757>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_570 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_570.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma663> a r:Inference;
  r:gives {
    "queens([1-f(4-some5,7-1,some2-some6,some3-some0,5-5,8-2,some7-4,some8-some1),3-f(6-some6,1-some0,4-5,7-2,some2-4,some3-some1,5-3,8-8),6-f(some9-2,3-4,2-some1,6-3,1-8,4-some4,7-7,some2-6),8-f(some10-some1,some11-3,some9-8,3-some4,2-7,6-6,1-some12,4-some13)],4,[1,8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(4-some0,7-1,some1-some2,some3-some4,5-5,8-2,some5-4,some6-some7),[1-f(4-some0,7-1,some1-some2,some3-some4,5-5,8-2,some5-4,some6-some7),3-f(6-some2,1-some4,4-5,7-2,some1-4,some3-some7,5-3,8-8),6-f(some8-2,3-4,2-some7,6-3,1-8,4-some9,7-7,some1-6),8-f(some10-some7,some11-3,some8-8,3-some9,2-7,6-6,1-some12,4-some13)],[3-f(6-some2,1-some4,4-5,7-2,some1-4,some3-some7,5-3,8-8),6-f(some8-2,3-4,2-some7,6-3,1-8,4-some9,7-7,some1-6),8-f(some10-some7,some11-3,some8-8,3-some9,2-7,6-6,1-some12,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(5,f(4-some0,7-1,some1-some2,some3-some4,5-5,8-2,some5-4,some6-some7),5-5)"}]
    <#lemma758>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_571 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_571.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma664> a r:Inference;
  r:gives {
    "queens([3-f(6-3,1-some5,some3-some6,5-some7,3-2,8-5,7-7,some8-4),4-f(4-some5,6-some6,1-some7,some3-2,5-5,3-7,8-4,7-some2),5-f(2-some6,4-some7,6-2,1-5,some3-7,5-4,3-some2,8-8),8-f(some9-5,some0-7,some1-4,2-some2,4-8,6-6,1-some4,some3-some10)],4,[4,8,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(4-f(4-some0,6-some1,1-some2,some3-2,5-5,3-7,8-4,7-some4),[3-f(6-3,1-some0,some3-some1,5-some2,3-2,8-5,7-7,some5-4),4-f(4-some0,6-some1,1-some2,some3-2,5-5,3-7,8-4,7-some4),5-f(2-some1,4-some2,6-2,1-5,some3-7,5-4,3-some4,8-8),8-f(some6-5,some7-7,some8-4,2-some4,4-8,6-6,1-some9,some3-some10)],[3-f(6-3,1-some0,some3-some1,5-some2,3-2,8-5,7-7,some5-4),5-f(2-some1,4-some2,6-2,1-5,some3-7,5-4,3-some4,8-8),8-f(some6-5,some7-7,some8-4,2-some4,4-8,6-6,1-some9,some3-some10)])"}]
    [ a r:Fact; r:gives {"arg(5,f(4-some0,6-some1,1-some2,some3-2,5-5,3-7,8-4,7-some4),5-5)"}]
    <#lemma759>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_572 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_572.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma665> a r:Inference;
  r:gives {
    "queens([1-f(7-some5,4-1,6-some1,8-some2,5-5,some4-4,some6-2,some7-some3),4-f(some8-some2,some0-5,1-4,7-2,4-some3,6-6,8-3,5-some9),5-f(2-5,some8-4,some0-2,1-some3,7-6,4-3,6-some9,8-8),7-f(some10-2,3-some3,2-6,some8-3,some0-some9,1-8,7-7,4-some11)],4,[1,4,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(7-some0,4-1,6-some1,8-some2,5-5,some3-4,some4-2,some5-some6),[1-f(7-some0,4-1,6-some1,8-some2,5-5,some3-4,some4-2,some5-some6),4-f(some7-some2,some8-5,1-4,7-2,4-some6,6-6,8-3,5-some9),5-f(2-5,some7-4,some8-2,1-some6,7-6,4-3,6-some9,8-8),7-f(some10-2,3-some6,2-6,some7-3,some8-some9,1-8,7-7,4-some11)],[4-f(some7-some2,some8-5,1-4,7-2,4-some6,6-6,8-3,5-some9),5-f(2-5,some7-4,some8-2,1-some6,7-6,4-3,6-some9,8-8),7-f(some10-2,3-some6,2-6,some7-3,some8-some9,1-8,7-7,4-some11)])"}]
    [ a r:Fact; r:gives {"arg(5,f(7-some0,4-1,6-some1,8-some2,5-5,some3-4,some4-2,some5-some6),5-5)"}]
    <#lemma760>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_573 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_573.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma666> a r:Inference;
  r:gives {
    "queens([1-f(3-some4,6-1,some2-some5,some6-some7,8-3,some8-some0,7-7,some9-2),4-f(5-some7,4-3,1-some0,3-7,6-2,some2-4,some6-6,8-8),5-f(some1-3,5-some0,4-7,1-2,3-4,6-6,some2-8,some6-5),8-f(some10-2,some11-4,2-6,some1-8,5-5,4-some3,1-some12,3-some13)],4,[8,5,1,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-2,some1-4,2-6,some2-8,5-5,4-some3,1-some4,3-some5),[1-f(3-some6,6-1,some7-some8,some9-some10,8-3,some11-some12,7-7,some13-2),4-f(5-some10,4-3,1-some12,3-7,6-2,some7-4,some9-6,8-8),5-f(some2-3,5-some12,4-7,1-2,3-4,6-6,some7-8,some9-5),8-f(some0-2,some1-4,2-6,some2-8,5-5,4-some3,1-some4,3-some5)],[1-f(3-some6,6-1,some7-some8,some9-some10,8-3,some11-some12,7-7,some13-2),4-f(5-some10,4-3,1-some12,3-7,6-2,some7-4,some9-6,8-8),5-f(some2-3,5-some12,4-7,1-2,3-4,6-6,some7-8,some9-5)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-2,some1-4,2-6,some2-8,5-5,4-some3,1-some4,3-some5),5-5)"}]
    <#lemma761>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_574 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_574.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma667> a r:Inference;
  r:gives {
    "queens([1-f(some5-some7,7-1,6-some8,some9-some10,5-5,8-some11,some12-3,some13-2),3-f(3-some8,1-some10,some5-5,7-some11,6-3,some9-2,5-6,8-8),4-f(some2-some10,3-5,1-some11,some5-3,7-2,6-6,some9-8,5-4),6-f(2-some11,4-3,some2-2,3-6,1-8,some5-4,7-7,6-some3)],4,[1,4,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,7-1,6-some2,some3-some4,5-5,8-some5,some6-3,some7-2),[1-f(some0-some1,7-1,6-some2,some3-some4,5-5,8-some5,some6-3,some7-2),3-f(3-some2,1-some4,some0-5,7-some5,6-3,some3-2,5-6,8-8),4-f(some8-some4,3-5,1-some5,some0-3,7-2,6-6,some3-8,5-4),6-f(2-some5,4-3,some8-2,3-6,1-8,some0-4,7-7,6-some9)],[3-f(3-some2,1-some4,some0-5,7-some5,6-3,some3-2,5-6,8-8),4-f(some8-some4,3-5,1-some5,some0-3,7-2,6-6,some3-8,5-4),6-f(2-some5,4-3,some8-2,3-6,1-8,some0-4,7-7,6-some9)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,7-1,6-some2,some3-some4,5-5,8-some5,some6-3,some7-2),5-5)"}]
    <#lemma762>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_575 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_575.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma668> a r:Inference;
  r:gives {
    "queens([3-f(some7-some1,1-4,7-some2,6-some4,5-5,4-3,8-2,some3-6),4-f(3-4,some7-some2,1-some4,7-5,6-3,5-2,4-6,8-8),5-f(some8-some2,3-some4,some7-5,1-3,7-2,6-6,5-8,4-some9),7-f(2-5,some10-3,some8-2,3-6,some7-8,1-some9,7-7,6-some11)],4,[3,5,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(3-f(some0-some1,1-4,7-some2,6-some3,5-5,4-3,8-2,some4-6),[3-f(some0-some1,1-4,7-some2,6-some3,5-5,4-3,8-2,some4-6),4-f(3-4,some0-some2,1-some3,7-5,6-3,5-2,4-6,8-8),5-f(some5-some2,3-some3,some0-5,1-3,7-2,6-6,5-8,4-some6),7-f(2-5,some7-3,some5-2,3-6,some0-8,1-some6,7-7,6-some8)],[4-f(3-4,some0-some2,1-some3,7-5,6-3,5-2,4-6,8-8),5-f(some5-some2,3-some3,some0-5,1-3,7-2,6-6,5-8,4-some6),7-f(2-5,some7-3,some5-2,3-6,some0-8,1-some6,7-7,6-some8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,1-4,7-some2,6-some3,5-5,4-3,8-2,some4-6),5-5)"}]
    <#lemma763>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_576 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_576.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma669> a r:Inference;
  r:gives {
    "queens([2-f(4-2,some2-1,2-some4,8-some0,7-some1,6-6,some5-4,some6-3),4-f(5-some4,1-some0,4-some1,some2-6,2-4,8-3,7-7,6-some3),6-f(some7-some1,3-6,5-4,1-3,4-7,some2-some3,2-5,8-8),8-f(some8-4,some9-3,some7-7,3-some3,5-5,1-8,4-some10,some2-some11)],4,[8,2,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-4,some1-3,some2-7,3-some3,5-5,1-8,4-some4,some5-some6),[2-f(4-2,some5-1,2-some7,8-some8,7-some9,6-6,some10-4,some11-3),4-f(5-some7,1-some8,4-some9,some5-6,2-4,8-3,7-7,6-some3),6-f(some2-some9,3-6,5-4,1-3,4-7,some5-some3,2-5,8-8),8-f(some0-4,some1-3,some2-7,3-some3,5-5,1-8,4-some4,some5-some6)],[2-f(4-2,some5-1,2-some7,8-some8,7-some9,6-6,some10-4,some11-3),4-f(5-some7,1-some8,4-some9,some5-6,2-4,8-3,7-7,6-some3),6-f(some2-some9,3-6,5-4,1-3,4-7,some5-some3,2-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-4,some1-3,some2-7,3-some3,5-5,1-8,4-some4,some5-some6),5-5)"}]
    <#lemma764>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_577 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_577.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma670> a r:Inference;
  r:gives {
    "queens([1-f(some6-some8,3-some9,8-1,7-3,5-5,some10-2,some11-some12,some13-some1),4-f(2-3,1-5,6-2,some6-some12,3-some1,8-some3,7-7,5-4),6-f(some4-2,4-some12,2-some1,1-some3,6-7,some6-4,3-6,8-8),7-f(some2-some12,some4-some1,4-some3,2-7,1-4,6-6,some6-8,3-some5)],4,[1,7,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,3-some2,8-1,7-3,5-5,some3-2,some4-some5,some6-some7),[1-f(some0-some1,3-some2,8-1,7-3,5-5,some3-2,some4-some5,some6-some7),4-f(2-3,1-5,6-2,some0-some5,3-some7,8-some8,7-7,5-4),6-f(some9-2,4-some5,2-some7,1-some8,6-7,some0-4,3-6,8-8),7-f(some10-some5,some9-some7,4-some8,2-7,1-4,6-6,some0-8,3-some11)],[4-f(2-3,1-5,6-2,some0-some5,3-some7,8-some8,7-7,5-4),6-f(some9-2,4-some5,2-some7,1-some8,6-7,some0-4,3-6,8-8),7-f(some10-some5,some9-some7,4-some8,2-7,1-4,6-6,some0-8,3-some11)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,3-some2,8-1,7-3,5-5,some3-2,some4-some5,some6-some7),5-5)"}]
    <#lemma765>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_578 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_578.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma671> a r:Inference;
  r:gives {
    "queens([1-f(7-some6,3-some7,6-1,some8-3,some9-some10,some11-2,some12-some13,8-8),4-f(2-3,1-some10,5-2,7-some13,3-8,6-6,some8-5,some9-4),6-f(some2-2,4-some13,2-8,1-6,5-5,7-4,3-some3,6-7),7-f(some1-some13,some2-8,4-6,2-5,1-4,5-some3,7-7,3-some4)],4,[6,4,7,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(6-f(some0-2,4-some1,2-8,1-6,5-5,7-4,3-some2,6-7),[1-f(7-some3,3-some4,6-1,some5-3,some6-some7,some8-2,some9-some1,8-8),4-f(2-3,1-some7,5-2,7-some1,3-8,6-6,some5-5,some6-4),6-f(some0-2,4-some1,2-8,1-6,5-5,7-4,3-some2,6-7),7-f(some10-some1,some0-8,4-6,2-5,1-4,5-some2,7-7,3-some11)],[1-f(7-some3,3-some4,6-1,some5-3,some6-some7,some8-2,some9-some1,8-8),4-f(2-3,1-some7,5-2,7-some1,3-8,6-6,some5-5,some6-4),7-f(some10-some1,some0-8,4-6,2-5,1-4,5-some2,7-7,3-some11)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-2,4-some1,2-8,1-6,5-5,7-4,3-some2,6-7),5-5)"}]
    <#lemma766>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_579 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_579.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma672> a r:Inference;
  r:gives {
    "queens([2-f(7-some2,some0-1,5-4,8-some3,4-2,6-6,some4-5,some5-3),4-f(2-4,1-some3,7-2,some0-6,5-5,8-3,4-some7,6-some8),6-f(some9-2,3-6,2-5,1-3,7-some7,some0-some8,5-some10,8-8),8-f(some11-5,some12-3,some9-some7,3-some8,2-some10,1-8,7-7,some0-some13)],4,[4,2,8,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(4-f(2-4,1-some0,7-2,some1-6,5-5,8-3,4-some2,6-some3),[2-f(7-some4,some1-1,5-4,8-some0,4-2,6-6,some5-5,some6-3),4-f(2-4,1-some0,7-2,some1-6,5-5,8-3,4-some2,6-some3),6-f(some7-2,3-6,2-5,1-3,7-some2,some1-some3,5-some8,8-8),8-f(some9-5,some10-3,some7-some2,3-some3,2-some8,1-8,7-7,some1-some11)],[2-f(7-some4,some1-1,5-4,8-some0,4-2,6-6,some5-5,some6-3),6-f(some7-2,3-6,2-5,1-3,7-some2,some1-some3,5-some8,8-8),8-f(some9-5,some10-3,some7-some2,3-some3,2-some8,1-8,7-7,some1-some11)])"}]
    [ a r:Fact; r:gives {"arg(5,f(2-4,1-some0,7-2,some1-6,5-5,8-3,4-some2,6-some3),5-5)"}]
    <#lemma767>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_580 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_580.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma673> a r:Inference;
  r:gives {
    "queens([1-f(4-some5,some1-some6,8-1,some3-some0,5-5,7-2,some7-4,some8-7),2-f(6-some6,4-1,some1-some0,8-5,some3-2,5-4,7-7,some7-some2),6-f(3-2,some9-4,2-7,1-some2,6-3,4-some4,some1-6,8-8),7-f(some10-4,3-7,some9-some2,2-3,1-some4,6-6,4-8,some1-some11)],4,[1,7,2,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(4-some0,some1-some2,8-1,some3-some4,5-5,7-2,some5-4,some6-7),[1-f(4-some0,some1-some2,8-1,some3-some4,5-5,7-2,some5-4,some6-7),2-f(6-some2,4-1,some1-some4,8-5,some3-2,5-4,7-7,some5-some7),6-f(3-2,some8-4,2-7,1-some7,6-3,4-some9,some1-6,8-8),7-f(some10-4,3-7,some8-some7,2-3,1-some9,6-6,4-8,some1-some11)],[2-f(6-some2,4-1,some1-some4,8-5,some3-2,5-4,7-7,some5-some7),6-f(3-2,some8-4,2-7,1-some7,6-3,4-some9,some1-6,8-8),7-f(some10-4,3-7,some8-some7,2-3,1-some9,6-6,4-8,some1-some11)])"}]
    [ a r:Fact; r:gives {"arg(5,f(4-some0,some1-some2,8-1,some3-some4,5-5,7-2,some5-4,some6-7),5-5)"}]
    <#lemma768>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_581 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_581.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma674> a r:Inference;
  r:gives {
    "queens([1-f(7-some5,3-some6,some3-1,some4-3,8-some0,6-6,some7-2,some8-4),4-f(5-3,1-some0,4-6,7-2,3-4,some3-some1,some4-some2,8-8),7-f(some9-2,some10-4,2-some1,5-some2,1-8,4-5,7-7,3-some11),8-f(some12-4,some9-some1,some10-some2,2-8,5-5,1-7,4-some11,7-some13)],4,[8,1,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-4,some1-some2,some3-some4,2-8,5-5,1-7,4-some5,7-some6),[1-f(7-some7,3-some8,some9-1,some10-3,8-some11,6-6,some12-2,some13-4),4-f(5-3,1-some11,4-6,7-2,3-4,some9-some2,some10-some4,8-8),7-f(some1-2,some3-4,2-some2,5-some4,1-8,4-5,7-7,3-some5),8-f(some0-4,some1-some2,some3-some4,2-8,5-5,1-7,4-some5,7-some6)],[1-f(7-some7,3-some8,some9-1,some10-3,8-some11,6-6,some12-2,some13-4),4-f(5-3,1-some11,4-6,7-2,3-4,some9-some2,some10-some4,8-8),7-f(some1-2,some3-4,2-some2,5-some4,1-8,4-5,7-7,3-some5)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-4,some1-some2,some3-some4,2-8,5-5,1-7,4-some5,7-some6),5-5)"}]
    <#lemma769>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_582 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_582.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma675> a r:Inference;
  r:gives {
    "queens([1-f(some4-some6,3-some7,6-1,8-3,5-5,some8-some9,some10-2,some11-some2),4-f(4-3,1-5,7-some9,some4-2,3-some2,6-6,8-4,5-some3),5-f(2-5,4-some9,1-2,7-some2,some4-6,3-4,6-some3,8-8),8-f(some12-some2,some0-6,some1-4,2-some3,4-8,1-some5,7-7,some4-some13)],4,[1,4,8,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,3-some2,6-1,8-3,5-5,some3-some4,some5-2,some6-some7),[1-f(some0-some1,3-some2,6-1,8-3,5-5,some3-some4,some5-2,some6-some7),4-f(4-3,1-5,7-some4,some0-2,3-some7,6-6,8-4,5-some8),5-f(2-5,4-some4,1-2,7-some7,some0-6,3-4,6-some8,8-8),8-f(some9-some7,some10-6,some11-4,2-some8,4-8,1-some12,7-7,some0-some13)],[4-f(4-3,1-5,7-some4,some0-2,3-some7,6-6,8-4,5-some8),5-f(2-5,4-some4,1-2,7-some7,some0-6,3-4,6-some8,8-8),8-f(some9-some7,some10-6,some11-4,2-some8,4-8,1-some12,7-7,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,3-some2,6-1,8-3,5-5,some3-some4,some5-2,some6-some7),5-5)"}]
    <#lemma770>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_583 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_583.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma676> a r:Inference;
  r:gives {
    "queens([1-f(5-some5,3-some6,some7-1,some8-3,8-some9,6-6,some10-2,some11-some2),4-f(4-3,1-some9,7-6,5-2,3-some2,some7-5,some8-4,8-8),5-f(2-some9,4-6,1-2,7-some2,5-5,3-4,some7-8,some8-some3),8-f(some12-some2,some0-5,some1-4,2-8,4-some3,1-some4,7-7,5-some13)],4,[5,1,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(5-f(2-some0,4-6,1-2,7-some1,5-5,3-4,some2-8,some3-some4),[1-f(5-some5,3-some6,some2-1,some3-3,8-some0,6-6,some7-2,some8-some1),4-f(4-3,1-some0,7-6,5-2,3-some1,some2-5,some3-4,8-8),5-f(2-some0,4-6,1-2,7-some1,5-5,3-4,some2-8,some3-some4),8-f(some9-some1,some10-5,some11-4,2-8,4-some4,1-some12,7-7,5-some13)],[1-f(5-some5,3-some6,some2-1,some3-3,8-some0,6-6,some7-2,some8-some1),4-f(4-3,1-some0,7-6,5-2,3-some1,some2-5,some3-4,8-8),8-f(some9-some1,some10-5,some11-4,2-8,4-some4,1-some12,7-7,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(5,f(2-some0,4-6,1-2,7-some1,5-5,3-4,some2-8,some3-some4),5-5)"}]
    <#lemma771>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_584 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_584.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma677> a r:Inference;
  r:gives {
    "queens([2-f(3-some1,7-1,6-4,some2-some4,4-3,some3-2,some5-some7,8-8),5-f(2-some4,5-3,1-2,3-some7,7-8,6-6,some2-some8,4-5),7-f(some9-2,some10-some7,2-8,5-6,1-some8,3-5,7-7,6-some11),8-f(some12-some7,some9-8,some10-6,2-some8,5-5,1-7,3-some11,7-some13)],4,[8,5,7,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-8,some3-6,2-some4,5-5,1-7,3-some5,7-some6),[2-f(3-some7,7-1,6-4,some8-some9,4-3,some10-2,some11-some1,8-8),5-f(2-some9,5-3,1-2,3-some1,7-8,6-6,some8-some4,4-5),7-f(some2-2,some3-some1,2-8,5-6,1-some4,3-5,7-7,6-some5),8-f(some0-some1,some2-8,some3-6,2-some4,5-5,1-7,3-some5,7-some6)],[2-f(3-some7,7-1,6-4,some8-some9,4-3,some10-2,some11-some1,8-8),5-f(2-some9,5-3,1-2,3-some1,7-8,6-6,some8-some4,4-5),7-f(some2-2,some3-some1,2-8,5-6,1-some4,3-5,7-7,6-some5)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,some2-8,some3-6,2-some4,5-5,1-7,3-some5,7-some6),5-5)"}]
    <#lemma772>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_585 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_585.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma678> a r:Inference;
  r:gives {
    "queens([1-f(7-some7,6-some0,4-1,some2-some1,some3-4,some4-3,some5-2,8-8),5-f(2-4,5-3,1-2,3-8,7-some6,6-6,4-some8,some2-5),7-f(some9-2,some10-8,2-some6,5-6,1-some8,3-5,7-7,6-some11),8-f(some12-8,some9-some6,some10-6,2-some8,5-5,1-7,3-some11,7-some13)],4,[8,5,7,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-8,some1-some2,some3-6,2-some4,5-5,1-7,3-some5,7-some6),[1-f(7-some7,6-some8,4-1,some9-some10,some11-4,some12-3,some13-2,8-8),5-f(2-4,5-3,1-2,3-8,7-some2,6-6,4-some4,some9-5),7-f(some1-2,some3-8,2-some2,5-6,1-some4,3-5,7-7,6-some5),8-f(some0-8,some1-some2,some3-6,2-some4,5-5,1-7,3-some5,7-some6)],[1-f(7-some7,6-some8,4-1,some9-some10,some11-4,some12-3,some13-2,8-8),5-f(2-4,5-3,1-2,3-8,7-some2,6-6,4-some4,some9-5),7-f(some1-2,some3-8,2-some2,5-6,1-some4,3-5,7-7,6-some5)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-8,some1-some2,some3-6,2-some4,5-5,1-7,3-some5,7-some6),5-5)"}]
    <#lemma773>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_586 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_586.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma679> a r:Inference;
  r:gives {
    "queens([2-f(6-some2,some0-1,5-4,7-some4,4-some6,some3-2,some5-5,8-8),4-f(some8-4,1-some4,6-some6,some0-2,5-5,7-8,4-3,some3-7),5-f(2-some4,some8-some6,1-2,6-5,some0-8,5-3,7-7,4-6),7-f(some9-2,3-5,2-8,some8-3,1-7,6-6,some0-some10,5-some11)],4,[4,7,5,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(4-f(some0-4,1-some1,6-some2,some3-2,5-5,7-8,4-3,some4-7),[2-f(6-some5,some3-1,5-4,7-some1,4-some2,some4-2,some6-5,8-8),4-f(some0-4,1-some1,6-some2,some3-2,5-5,7-8,4-3,some4-7),5-f(2-some1,some0-some2,1-2,6-5,some3-8,5-3,7-7,4-6),7-f(some7-2,3-5,2-8,some0-3,1-7,6-6,some3-some8,5-some9)],[2-f(6-some5,some3-1,5-4,7-some1,4-some2,some4-2,some6-5,8-8),5-f(2-some1,some0-some2,1-2,6-5,some3-8,5-3,7-7,4-6),7-f(some7-2,3-5,2-8,some0-3,1-7,6-6,some3-some8,5-some9)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-4,1-some1,6-some2,some3-2,5-5,7-8,4-3,some4-7),5-5)"}]
    <#lemma774>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_587 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_587.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma680> a r:Inference;
  r:gives {
    "queens([2-f(6-some2,5-1,some1-4,some3-some4,4-some5,8-2,7-7,some6-5),4-f(some8-4,1-some4,6-some5,5-2,some1-7,some3-5,4-3,8-8),5-f(2-some4,some8-some5,1-2,6-7,5-5,some1-3,some3-8,4-6),7-f(some9-2,3-7,2-5,some8-3,1-8,6-6,5-some10,some1-some11)],4,[5,7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(5-f(2-some0,some1-some2,1-2,6-7,5-5,some3-3,some4-8,4-6),[2-f(6-some5,5-1,some3-4,some4-some0,4-some2,8-2,7-7,some6-5),4-f(some1-4,1-some0,6-some2,5-2,some3-7,some4-5,4-3,8-8),5-f(2-some0,some1-some2,1-2,6-7,5-5,some3-3,some4-8,4-6),7-f(some7-2,3-7,2-5,some1-3,1-8,6-6,5-some8,some3-some9)],[2-f(6-some5,5-1,some3-4,some4-some0,4-some2,8-2,7-7,some6-5),4-f(some1-4,1-some0,6-some2,5-2,some3-7,some4-5,4-3,8-8),7-f(some7-2,3-7,2-5,some1-3,1-8,6-6,5-some8,some3-some9)])"}]
    [ a r:Fact; r:gives {"arg(5,f(2-some0,some1-some2,1-2,6-7,5-5,some3-3,some4-8,4-6),5-5)"}]
    <#lemma775>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_588 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_588.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma681> a r:Inference;
  r:gives {
    "queens([1-f(7-some6,5-some1,4-1,8-some2,some3-4,6-6,some4-2,some7-5),4-f(some8-some2,1-4,some0-6,7-2,5-5,4-some5,8-3,some3-some9),5-f(2-4,some8-6,1-2,some0-5,7-some5,5-3,4-some9,8-8),7-f(some10-2,3-5,2-some5,some8-3,1-some9,some0-8,7-7,5-some11)],4,[4,1,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(4-f(some0-some1,1-4,some2-6,7-2,5-5,4-some3,8-3,some4-some5),[1-f(7-some6,5-some7,4-1,8-some1,some4-4,6-6,some8-2,some9-5),4-f(some0-some1,1-4,some2-6,7-2,5-5,4-some3,8-3,some4-some5),5-f(2-4,some0-6,1-2,some2-5,7-some3,5-3,4-some5,8-8),7-f(some10-2,3-5,2-some3,some0-3,1-some5,some2-8,7-7,5-some11)],[1-f(7-some6,5-some7,4-1,8-some1,some4-4,6-6,some8-2,some9-5),5-f(2-4,some0-6,1-2,some2-5,7-some3,5-3,4-some5,8-8),7-f(some10-2,3-5,2-some3,some0-3,1-some5,some2-8,7-7,5-some11)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,1-4,some2-6,7-2,5-5,4-some3,8-3,some4-some5),5-5)"}]
    <#lemma776>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_589 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_589.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma682> a r:Inference;
  r:gives {
    "queens([1-f(5-some7,3-some8,8-1,7-3,some9-some10,6-6,some11-some12,some13-2),4-f(some2-3,1-some10,some4-6,5-some12,3-2,8-5,7-7,some9-4),5-f(4-some10,some2-6,1-some12,some4-2,5-5,3-7,8-4,7-some3),6-f(2-6,4-some12,some2-2,1-5,some4-7,5-4,3-some3,8-8)],4,[5,1,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(5-f(4-some0,some1-6,1-some2,some3-2,5-5,3-7,8-4,7-some4),[1-f(5-some5,3-some6,8-1,7-3,some7-some0,6-6,some8-some2,some9-2),4-f(some1-3,1-some0,some3-6,5-some2,3-2,8-5,7-7,some7-4),5-f(4-some0,some1-6,1-some2,some3-2,5-5,3-7,8-4,7-some4),6-f(2-6,4-some2,some1-2,1-5,some3-7,5-4,3-some4,8-8)],[1-f(5-some5,3-some6,8-1,7-3,some7-some0,6-6,some8-some2,some9-2),4-f(some1-3,1-some0,some3-6,5-some2,3-2,8-5,7-7,some7-4),6-f(2-6,4-some2,some1-2,1-5,some3-7,5-4,3-some4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(4-some0,some1-6,1-some2,some3-2,5-5,3-7,8-4,7-some4),5-5)"}]
    <#lemma777>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_590 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_590.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma683> a r:Inference;
  r:gives {
    "queens([1-f(some5-some7,3-some8,6-1,8-3,some9-some10,some11-some12,7-7,some13-2),4-f(some2-3,1-some10,5-some12,some5-7,3-2,6-6,8-5,some9-4),5-f(4-some10,some2-some12,1-7,5-2,some5-6,3-5,6-4,8-8),6-f(2-some12,4-7,some2-2,1-6,5-5,some5-4,3-8,6-some3)],4,[6,4,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(6-f(2-some0,4-7,some1-2,1-6,5-5,some2-4,3-8,6-some3),[1-f(some2-some4,3-some5,6-1,8-3,some6-some7,some8-some0,7-7,some9-2),4-f(some1-3,1-some7,5-some0,some2-7,3-2,6-6,8-5,some6-4),5-f(4-some7,some1-some0,1-7,5-2,some2-6,3-5,6-4,8-8),6-f(2-some0,4-7,some1-2,1-6,5-5,some2-4,3-8,6-some3)],[1-f(some2-some4,3-some5,6-1,8-3,some6-some7,some8-some0,7-7,some9-2),4-f(some1-3,1-some7,5-some0,some2-7,3-2,6-6,8-5,some6-4),5-f(4-some7,some1-some0,1-7,5-2,some2-6,3-5,6-4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(2-some0,4-7,some1-2,1-6,5-5,some2-4,3-8,6-some3),5-5)"}]
    <#lemma778>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_591 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_591.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma684> a r:Inference;
  r:gives {
    "queens([1-f(6-some6,some4-some7,some8-1,8-some9,5-5,7-3,some10-some0,some11-7),2-f(3-some7,6-1,some4-some9,some8-5,8-3,5-some0,7-7,some10-2),5-f(some2-5,4-3,1-some0,3-7,6-2,some4-4,some8-6,8-8),6-f(some1-3,some2-some0,4-7,1-2,3-4,6-6,some4-8,some8-some3)],4,[1,6,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(6-some0,some1-some2,some3-1,8-some4,5-5,7-3,some5-some6,some7-7),[1-f(6-some0,some1-some2,some3-1,8-some4,5-5,7-3,some5-some6,some7-7),2-f(3-some2,6-1,some1-some4,some3-5,8-3,5-some6,7-7,some5-2),5-f(some8-5,4-3,1-some6,3-7,6-2,some1-4,some3-6,8-8),6-f(some9-3,some8-some6,4-7,1-2,3-4,6-6,some1-8,some3-some10)],[2-f(3-some2,6-1,some1-some4,some3-5,8-3,5-some6,7-7,some5-2),5-f(some8-5,4-3,1-some6,3-7,6-2,some1-4,some3-6,8-8),6-f(some9-3,some8-some6,4-7,1-2,3-4,6-6,some1-8,some3-some10)])"}]
    [ a r:Fact; r:gives {"arg(5,f(6-some0,some1-some2,some3-1,8-some4,5-5,7-3,some5-some6,some7-7),5-5)"}]
    <#lemma779>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_592 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_592.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma685> a r:Inference;
  r:gives {
    "queens([2-f(6-2,some6-some8,2-1,8-some9,5-5,7-3,some10-some1,some11-7),3-f(3-some8,6-1,some6-some9,2-5,8-3,5-some1,7-7,some10-some4),6-f(some3-5,4-3,1-some1,3-7,6-some4,some6-4,2-6,8-8),7-f(some2-3,some3-some1,4-7,1-some4,3-4,6-6,some6-8,2-some5)],4,[2,7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(2-f(6-2,some0-some1,2-1,8-some2,5-5,7-3,some3-some4,some5-7),[2-f(6-2,some0-some1,2-1,8-some2,5-5,7-3,some3-some4,some5-7),3-f(3-some1,6-1,some0-some2,2-5,8-3,5-some4,7-7,some3-some6),6-f(some7-5,4-3,1-some4,3-7,6-some6,some0-4,2-6,8-8),7-f(some8-3,some7-some4,4-7,1-some6,3-4,6-6,some0-8,2-some9)],[3-f(3-some1,6-1,some0-some2,2-5,8-3,5-some4,7-7,some3-some6),6-f(some7-5,4-3,1-some4,3-7,6-some6,some0-4,2-6,8-8),7-f(some8-3,some7-some4,4-7,1-some6,3-4,6-6,some0-8,2-some9)])"}]
    [ a r:Fact; r:gives {"arg(5,f(6-2,some0-some1,2-1,8-some2,5-5,7-3,some3-some4,some5-7),5-5)"}]
    <#lemma780>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_593 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_593.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma686> a r:Inference;
  r:gives {
    "queens([2-f(5-2,7-some6,2-1,some7-some8,6-some9,some10-3,some11-6,8-8),3-f(3-some6,5-1,7-some8,2-some9,some7-3,6-6,some10-8,some11-5),6-f(some2-some9,4-3,1-6,3-8,5-5,7-4,2-some3,some7-7),7-f(some1-3,some2-6,4-8,1-5,3-4,5-some3,7-7,2-some4)],4,[6,3,7,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(6-f(some0-some1,4-3,1-6,3-8,5-5,7-4,2-some2,some3-7),[2-f(5-2,7-some4,2-1,some3-some5,6-some1,some6-3,some7-6,8-8),3-f(3-some4,5-1,7-some5,2-some1,some3-3,6-6,some6-8,some7-5),6-f(some0-some1,4-3,1-6,3-8,5-5,7-4,2-some2,some3-7),7-f(some8-3,some0-6,4-8,1-5,3-4,5-some2,7-7,2-some9)],[2-f(5-2,7-some4,2-1,some3-some5,6-some1,some6-3,some7-6,8-8),3-f(3-some4,5-1,7-some5,2-some1,some3-3,6-6,some6-8,some7-5),7-f(some8-3,some0-6,4-8,1-5,3-4,5-some2,7-7,2-some9)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,4-3,1-6,3-8,5-5,7-4,2-some2,some3-7),5-5)"}]
    <#lemma781>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_594 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_594.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma687> a r:Inference;
  r:gives {
    "queens([1-f(2-some7,8-some8,some9-2,some10-1,7-some11,6-6,some12-3,some13-some1),3-f(3-2,5-1,2-some11,8-6,some9-3,some10-some1,7-7,6-5),6-f(some3-6,4-3,1-some1,3-7,5-5,2-4,8-some4,some9-some5),7-f(some2-3,some3-some1,4-7,1-5,3-4,5-some4,2-some5,8-8)],4,[6,1,3,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(6-f(some0-6,4-3,1-some1,3-7,5-5,2-4,8-some2,some3-some4),[1-f(2-some5,8-some6,some3-2,some7-1,7-some8,6-6,some9-3,some10-some1),3-f(3-2,5-1,2-some8,8-6,some3-3,some7-some1,7-7,6-5),6-f(some0-6,4-3,1-some1,3-7,5-5,2-4,8-some2,some3-some4),7-f(some11-3,some0-some1,4-7,1-5,3-4,5-some2,2-some4,8-8)],[1-f(2-some5,8-some6,some3-2,some7-1,7-some8,6-6,some9-3,some10-some1),3-f(3-2,5-1,2-some8,8-6,some3-3,some7-some1,7-7,6-5),7-f(some11-3,some0-some1,4-7,1-5,3-4,5-some2,2-some4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-6,4-3,1-some1,3-7,5-5,2-4,8-some2,some3-some4),5-5)"}]
    <#lemma782>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_595 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_595.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma688> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,4-some6,some1-2,8-1,some3-some0,some4-4,7-7,some7-some2),5-f(3-some0,1-4,6-7,5-some2,2-3,4-5,some1-some8,8-8),6-f(some9-4,3-7,1-some2,6-3,5-5,2-some8,4-8,some1-6),8-f(some10-some2,some11-3,some9-5,3-some8,1-8,6-6,5-some12,2-some13)],4,[6,8,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(6-f(some0-4,3-7,1-some1,6-3,5-5,2-some2,4-8,some3-6),[1-f(2-some4,4-some5,some3-2,8-1,some6-some7,some8-4,7-7,some9-some1),5-f(3-some7,1-4,6-7,5-some1,2-3,4-5,some3-some2,8-8),6-f(some0-4,3-7,1-some1,6-3,5-5,2-some2,4-8,some3-6),8-f(some10-some1,some11-3,some0-5,3-some2,1-8,6-6,5-some12,2-some13)],[1-f(2-some4,4-some5,some3-2,8-1,some6-some7,some8-4,7-7,some9-some1),5-f(3-some7,1-4,6-7,5-some1,2-3,4-5,some3-some2,8-8),8-f(some10-some1,some11-3,some0-5,3-some2,1-8,6-6,5-some12,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-4,3-7,1-some1,6-3,5-5,2-some2,4-8,some3-6),5-5)"}]
    <#lemma783>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_596 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_596.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma689> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,4-some6,7-2,some2-1,some3-some0,some4-4,some7-some1,8-8),5-f(3-some0,1-4,6-some1,5-8,2-3,4-5,7-7,some2-some8),6-f(some9-4,3-some1,1-8,6-3,5-5,2-7,4-some8,7-6),8-f(some10-8,some11-3,some9-5,3-7,1-some8,6-6,5-some12,2-some13)],4,[6,8,5,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(6-f(some0-4,3-some1,1-8,6-3,5-5,2-7,4-some2,7-6),[1-f(2-some3,4-some4,7-2,some5-1,some6-some7,some8-4,some9-some1,8-8),5-f(3-some7,1-4,6-some1,5-8,2-3,4-5,7-7,some5-some2),6-f(some0-4,3-some1,1-8,6-3,5-5,2-7,4-some2,7-6),8-f(some10-8,some11-3,some0-5,3-7,1-some2,6-6,5-some12,2-some13)],[1-f(2-some3,4-some4,7-2,some5-1,some6-some7,some8-4,some9-some1,8-8),5-f(3-some7,1-4,6-some1,5-8,2-3,4-5,7-7,some5-some2),8-f(some10-8,some11-3,some0-5,3-7,1-some2,6-6,5-some12,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-4,3-some1,1-8,6-3,5-5,2-7,4-some2,7-6),5-5)"}]
    <#lemma784>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_597 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_597.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma690> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,7-some6,some2-2,some4-1,5-5,8-some0,some7-some1,some8-4),3-f(6-2,4-1,2-5,7-some0,some2-some1,some4-4,5-3,8-8),6-f(some9-some0,3-some1,1-4,6-3,4-8,2-some3,7-7,some2-6),8-f(some10-4,some11-3,some9-8,3-some3,1-7,6-6,4-some12,2-some13)],4,[1,8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(2-some0,7-some1,some2-2,some3-1,5-5,8-some4,some5-some6,some7-4),[1-f(2-some0,7-some1,some2-2,some3-1,5-5,8-some4,some5-some6,some7-4),3-f(6-2,4-1,2-5,7-some4,some2-some6,some3-4,5-3,8-8),6-f(some8-some4,3-some6,1-4,6-3,4-8,2-some9,7-7,some2-6),8-f(some10-4,some11-3,some8-8,3-some9,1-7,6-6,4-some12,2-some13)],[3-f(6-2,4-1,2-5,7-some4,some2-some6,some3-4,5-3,8-8),6-f(some8-some4,3-some6,1-4,6-3,4-8,2-some9,7-7,some2-6),8-f(some10-4,some11-3,some8-8,3-some9,1-7,6-6,4-some12,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(5,f(2-some0,7-some1,some2-2,some3-1,5-5,8-some4,some5-some6,some7-4),5-5)"}]
    <#lemma785>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_598 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_598.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma691> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,some3-some7,8-2,some4-1,7-some1,6-6,some8-some2,some9-4),3-f(5-2,4-1,2-some1,some3-6,8-some2,some4-4,7-7,6-3),6-f(3-6,some0-some2,1-4,5-7,4-3,2-5,some3-some5,8-8),7-f(some10-some2,3-4,some0-7,1-3,5-5,4-some5,2-8,some3-some11)],4,[7,1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(7-f(some0-some1,3-4,some2-7,1-3,5-5,4-some3,2-8,some4-some5),[1-f(2-some6,some4-some7,8-2,some8-1,7-some9,6-6,some10-some1,some11-4),3-f(5-2,4-1,2-some9,some4-6,8-some1,some8-4,7-7,6-3),6-f(3-6,some2-some1,1-4,5-7,4-3,2-5,some4-some3,8-8),7-f(some0-some1,3-4,some2-7,1-3,5-5,4-some3,2-8,some4-some5)],[1-f(2-some6,some4-some7,8-2,some8-1,7-some9,6-6,some10-some1,some11-4),3-f(5-2,4-1,2-some9,some4-6,8-some1,some8-4,7-7,6-3),6-f(3-6,some2-some1,1-4,5-7,4-3,2-5,some4-some3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,3-4,some2-7,1-3,5-5,4-some3,2-8,some4-some5),5-5)"}]
    <#lemma786>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_599 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_599.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma692> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,8-some7,7-2,6-1,5-5,some8-some0,some9-some2,some10-6),3-f(4-2,some3-1,2-5,8-some0,7-some2,6-6,5-4,some8-3),5-f(some1-5,1-some0,4-some2,some3-6,2-4,8-3,7-7,6-some4),7-f(some11-some2,3-6,some1-4,1-3,4-7,some3-some4,2-some5,8-8)],4,[1,3,5,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(2-some0,8-some1,7-2,6-1,5-5,some2-some3,some4-some5,some6-6),[1-f(2-some0,8-some1,7-2,6-1,5-5,some2-some3,some4-some5,some6-6),3-f(4-2,some7-1,2-5,8-some3,7-some5,6-6,5-4,some2-3),5-f(some8-5,1-some3,4-some5,some7-6,2-4,8-3,7-7,6-some9),7-f(some10-some5,3-6,some8-4,1-3,4-7,some7-some9,2-some11,8-8)],[3-f(4-2,some7-1,2-5,8-some3,7-some5,6-6,5-4,some2-3),5-f(some8-5,1-some3,4-some5,some7-6,2-4,8-3,7-7,6-some9),7-f(some10-some5,3-6,some8-4,1-3,4-7,some7-some9,2-some11,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(2-some0,8-some1,7-2,6-1,5-5,some2-some3,some4-some5,some6-6),5-5)"}]
    <#lemma787>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_600 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_600.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma693> a r:Inference;
  r:gives {
    "queens([2-f(4-some5,some1-3,8-1,3-some0,5-5,7-2,some6-4,some7-7),3-f(6-3,4-1,some1-some0,8-5,3-2,5-4,7-7,some6-some2),7-f(some8-2,some9-4,2-7,1-some2,6-some3,4-some4,some1-6,8-8),8-f(some10-4,some8-7,some9-some2,2-some3,1-some4,6-6,4-8,some1-some11)],4,[2,8,3,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(2-f(4-some0,some1-3,8-1,3-some2,5-5,7-2,some3-4,some4-7),[2-f(4-some0,some1-3,8-1,3-some2,5-5,7-2,some3-4,some4-7),3-f(6-3,4-1,some1-some2,8-5,3-2,5-4,7-7,some3-some5),7-f(some6-2,some7-4,2-7,1-some5,6-some8,4-some9,some1-6,8-8),8-f(some10-4,some6-7,some7-some5,2-some8,1-some9,6-6,4-8,some1-some11)],[3-f(6-3,4-1,some1-some2,8-5,3-2,5-4,7-7,some3-some5),7-f(some6-2,some7-4,2-7,1-some5,6-some8,4-some9,some1-6,8-8),8-f(some10-4,some6-7,some7-some5,2-some8,1-some9,6-6,4-8,some1-some11)])"}]
    [ a r:Fact; r:gives {"arg(5,f(4-some0,some1-3,8-1,3-some2,5-5,7-2,some3-4,some4-7),5-5)"}]
    <#lemma788>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_601 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_601.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma694> a r:Inference;
  r:gives {
    "queens([1-f(some2-some7,some4-some1,4-some3,8-1,7-4,6-6,some6-2,some8-some5),3-f(5-some3,some0-1,some2-4,some4-6,4-2,8-some5,7-7,6-3),5-f(2-4,1-6,5-2,some0-some5,some2-7,some4-3,4-5,8-8),7-f(some9-2,3-some5,2-7,1-3,5-5,some0-8,some2-some10,some4-some11)],4,[7,1,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(7-f(some0-2,3-some1,2-7,1-3,5-5,some2-8,some3-some4,some5-some6),[1-f(some3-some7,some5-some8,4-some9,8-1,7-4,6-6,some10-2,some11-some1),3-f(5-some9,some2-1,some3-4,some5-6,4-2,8-some1,7-7,6-3),5-f(2-4,1-6,5-2,some2-some1,some3-7,some5-3,4-5,8-8),7-f(some0-2,3-some1,2-7,1-3,5-5,some2-8,some3-some4,some5-some6)],[1-f(some3-some7,some5-some8,4-some9,8-1,7-4,6-6,some10-2,some11-some1),3-f(5-some9,some2-1,some3-4,some5-6,4-2,8-some1,7-7,6-3),5-f(2-4,1-6,5-2,some2-some1,some3-7,some5-3,4-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-2,3-some1,2-7,1-3,5-5,some2-8,some3-some4,some5-some6),5-5)"}]
    <#lemma789>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_602 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_602.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma695> a r:Inference;
  r:gives {
    "queens([1-f(some2-some6,4-some7,7-some1,some3-1,5-5,some5-4,8-2,some8-some4),2-f(6-some7,some2-some1,4-1,7-5,some3-4,5-2,some5-some4,8-8),5-f(2-5,1-4,some0-2,6-some4,some2-8,4-3,7-7,some3-6),7-f(some9-2,3-some4,2-8,1-3,some0-7,6-6,some2-some10,4-some11)],4,[1,7,5,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,4-some2,7-some3,some4-1,5-5,some5-4,8-2,some6-some7),[1-f(some0-some1,4-some2,7-some3,some4-1,5-5,some5-4,8-2,some6-some7),2-f(6-some2,some0-some3,4-1,7-5,some4-4,5-2,some5-some7,8-8),5-f(2-5,1-4,some8-2,6-some7,some0-8,4-3,7-7,some4-6),7-f(some9-2,3-some7,2-8,1-3,some8-7,6-6,some0-some10,4-some11)],[2-f(6-some2,some0-some3,4-1,7-5,some4-4,5-2,some5-some7,8-8),5-f(2-5,1-4,some8-2,6-some7,some0-8,4-3,7-7,some4-6),7-f(some9-2,3-some7,2-8,1-3,some8-7,6-6,some0-some10,4-some11)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,4-some2,7-some3,some4-1,5-5,some5-4,8-2,some6-some7),5-5)"}]
    <#lemma790>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_603 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_603.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma696> a r:Inference;
  r:gives {
    "queens([2-f(some4-some7,5-3,7-1,3-some8,some9-some10,6-6,8-2,some11-5),3-f(some2-3,some4-1,5-some8,7-some10,3-6,some9-2,6-5,8-8),5-f(4-some8,1-some10,some2-6,some4-2,5-5,7-8,3-4,some9-7),6-f(2-some10,4-6,1-2,some2-5,some4-8,5-4,7-7,3-some3)],4,[5,2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(5-f(4-some0,1-some1,some2-6,some3-2,5-5,7-8,3-4,some4-7),[2-f(some3-some5,5-3,7-1,3-some0,some4-some1,6-6,8-2,some6-5),3-f(some2-3,some3-1,5-some0,7-some1,3-6,some4-2,6-5,8-8),5-f(4-some0,1-some1,some2-6,some3-2,5-5,7-8,3-4,some4-7),6-f(2-some1,4-6,1-2,some2-5,some3-8,5-4,7-7,3-some7)],[2-f(some3-some5,5-3,7-1,3-some0,some4-some1,6-6,8-2,some6-5),3-f(some2-3,some3-1,5-some0,7-some1,3-6,some4-2,6-5,8-8),6-f(2-some1,4-6,1-2,some2-5,some3-8,5-4,7-7,3-some7)])"}]
    [ a r:Fact; r:gives {"arg(5,f(4-some0,1-some1,some2-6,some3-2,5-5,7-8,3-4,some4-7),5-5)"}]
    <#lemma791>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_604 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_604.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma697> a r:Inference;
  r:gives {
    "queens([1-f(3-some8,6-some9,8-some10,5-1,some11-3,some12-5,7-7,some13-2),2-f(some5-some9,3-some10,6-1,8-3,5-5,some11-7,some12-2,7-some2),5-f(4-3,1-5,some4-7,some5-2,3-some2,6-6,8-4,5-some3),6-f(2-5,4-7,1-2,some4-some2,some5-6,3-4,6-some3,8-8)],4,[2,5,1,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(2-f(some0-some1,3-some2,6-1,8-3,5-5,some3-7,some4-2,7-some5),[1-f(3-some6,6-some1,8-some2,5-1,some3-3,some4-5,7-7,some7-2),2-f(some0-some1,3-some2,6-1,8-3,5-5,some3-7,some4-2,7-some5),5-f(4-3,1-5,some8-7,some0-2,3-some5,6-6,8-4,5-some9),6-f(2-5,4-7,1-2,some8-some5,some0-6,3-4,6-some9,8-8)],[1-f(3-some6,6-some1,8-some2,5-1,some3-3,some4-5,7-7,some7-2),5-f(4-3,1-5,some8-7,some0-2,3-some5,6-6,8-4,5-some9),6-f(2-5,4-7,1-2,some8-some5,some0-6,3-4,6-some9,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,3-some2,6-1,8-3,5-5,some3-7,some4-2,7-some5),5-5)"}]
    <#lemma792>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_605 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_605.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma698> a r:Inference;
  r:gives {
    "queens([1-f(8-some5,some2-some0,4-some1,some3-1,7-4,6-6,some4-3,some6-2),3-f(3-some1,5-1,8-4,some2-6,4-3,some3-2,7-7,6-5),6-f(2-6,some7-3,1-2,3-7,5-5,8-some8,some2-some9,4-some10),8-f(some11-2,some12-7,2-5,some7-some8,1-some9,3-some10,5-some13,8-8)],4,[6,1,3,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(6-f(2-6,some0-3,1-2,3-7,5-5,8-some1,some2-some3,4-some4),[1-f(8-some5,some2-some6,4-some7,some8-1,7-4,6-6,some9-3,some10-2),3-f(3-some7,5-1,8-4,some2-6,4-3,some8-2,7-7,6-5),6-f(2-6,some0-3,1-2,3-7,5-5,8-some1,some2-some3,4-some4),8-f(some11-2,some12-7,2-5,some0-some1,1-some3,3-some4,5-some13,8-8)],[1-f(8-some5,some2-some6,4-some7,some8-1,7-4,6-6,some9-3,some10-2),3-f(3-some7,5-1,8-4,some2-6,4-3,some8-2,7-7,6-5),8-f(some11-2,some12-7,2-5,some0-some1,1-some3,3-some4,5-some13,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(2-6,some0-3,1-2,3-7,5-5,8-some1,some2-some3,4-some4),5-5)"}]
    <#lemma793>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_606 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_606.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma699> a r:Inference;
  r:gives {
    "queens([1-f(6-some5,4-some6,some1-some0,some2-1,5-5,some3-4,8-3,some7-2),2-f(7-some6,6-some0,4-1,some1-5,some2-4,5-3,some3-2,8-8),6-f(2-4,some8-3,1-2,3-8,7-some4,6-6,4-some9,some1-some10),8-f(some11-2,some12-8,2-some4,some8-6,1-some9,3-some10,7-7,6-some13)],4,[1,6,8,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(6-some0,4-some1,some2-some3,some4-1,5-5,some5-4,8-3,some6-2),[1-f(6-some0,4-some1,some2-some3,some4-1,5-5,some5-4,8-3,some6-2),2-f(7-some1,6-some3,4-1,some2-5,some4-4,5-3,some5-2,8-8),6-f(2-4,some7-3,1-2,3-8,7-some8,6-6,4-some9,some2-some10),8-f(some11-2,some12-8,2-some8,some7-6,1-some9,3-some10,7-7,6-some13)],[2-f(7-some1,6-some3,4-1,some2-5,some4-4,5-3,some5-2,8-8),6-f(2-4,some7-3,1-2,3-8,7-some8,6-6,4-some9,some2-some10),8-f(some11-2,some12-8,2-some8,some7-6,1-some9,3-some10,7-7,6-some13)])"}]
    [ a r:Fact; r:gives {"arg(5,f(6-some0,4-some1,some2-some3,some4-1,5-5,some5-4,8-3,some6-2),5-5)"}]
    <#lemma794>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_607 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_607.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma700> a r:Inference;
  r:gives {
    "queens([2-f(5-some4,7-3,4-1,3-some1,8-4,6-6,some3-some2,some5-2),5-f(some6-some1,1-4,some0-6,5-some2,7-2,4-5,3-some7,8-8),6-f(some8-4,some6-6,1-some2,some0-2,5-5,7-some7,4-8,3-7),7-f(2-6,some8-some2,some6-2,1-5,some0-some7,5-8,7-7,4-some9)],4,[6,2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(6-f(some0-4,some1-6,1-some2,some3-2,5-5,7-some4,4-8,3-7),[2-f(5-some5,7-3,4-1,3-some6,8-4,6-6,some7-some2,some8-2),5-f(some1-some6,1-4,some3-6,5-some2,7-2,4-5,3-some4,8-8),6-f(some0-4,some1-6,1-some2,some3-2,5-5,7-some4,4-8,3-7),7-f(2-6,some0-some2,some1-2,1-5,some3-some4,5-8,7-7,4-some9)],[2-f(5-some5,7-3,4-1,3-some6,8-4,6-6,some7-some2,some8-2),5-f(some1-some6,1-4,some3-6,5-some2,7-2,4-5,3-some4,8-8),7-f(2-6,some0-some2,some1-2,1-5,some3-some4,5-8,7-7,4-some9)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-4,some1-6,1-some2,some3-2,5-5,7-some4,4-8,3-7),5-5)"}]
    <#lemma795>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_608 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_608.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma701> a r:Inference;
  r:gives {
    "queens([2-f(4-some5,some3-3,7-1,3-some1,some4-some2,6-6,8-4,some6-2),3-f(5-3,4-1,some3-some1,7-some2,3-6,some4-4,6-2,8-8),6-f(some7-some2,some0-6,1-4,5-2,4-8,some3-5,7-7,3-some8),7-f(2-6,some7-4,some0-2,1-8,5-5,4-7,some3-some8,7-some9)],4,[7,2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(7-f(2-6,some0-4,some1-2,1-8,5-5,4-7,some2-some3,7-some4),[2-f(4-some5,some2-3,7-1,3-some6,some7-some8,6-6,8-4,some9-2),3-f(5-3,4-1,some2-some6,7-some8,3-6,some7-4,6-2,8-8),6-f(some0-some8,some1-6,1-4,5-2,4-8,some2-5,7-7,3-some3),7-f(2-6,some0-4,some1-2,1-8,5-5,4-7,some2-some3,7-some4)],[2-f(4-some5,some2-3,7-1,3-some6,some7-some8,6-6,8-4,some9-2),3-f(5-3,4-1,some2-some6,7-some8,3-6,some7-4,6-2,8-8),6-f(some0-some8,some1-6,1-4,5-2,4-8,some2-5,7-7,3-some3)])"}]
    [ a r:Fact; r:gives {"arg(5,f(2-6,some0-4,some1-2,1-8,5-5,4-7,some2-some3,7-some4),5-5)"}]
    <#lemma796>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_609 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_609.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma702> a r:Inference;
  r:gives {
    "queens([1-f(some1-some4,4-some5,8-some0,some2-1,5-5,7-4,some6-3,some7-7),2-f(6-some5,some1-some0,4-1,8-5,some2-4,5-3,7-7,some6-2),6-f(some8-4,some9-3,1-7,3-2,6-some3,some1-some10,4-6,8-8),7-f(2-3,some8-7,some9-2,1-some3,3-some10,6-6,some1-8,4-some11)],4,[1,7,2,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,4-some2,8-some3,some4-1,5-5,7-4,some5-3,some6-7),[1-f(some0-some1,4-some2,8-some3,some4-1,5-5,7-4,some5-3,some6-7),2-f(6-some2,some0-some3,4-1,8-5,some4-4,5-3,7-7,some5-2),6-f(some7-4,some8-3,1-7,3-2,6-some9,some0-some10,4-6,8-8),7-f(2-3,some7-7,some8-2,1-some9,3-some10,6-6,some0-8,4-some11)],[2-f(6-some2,some0-some3,4-1,8-5,some4-4,5-3,7-7,some5-2),6-f(some7-4,some8-3,1-7,3-2,6-some9,some0-some10,4-6,8-8),7-f(2-3,some7-7,some8-2,1-some9,3-some10,6-6,some0-8,4-some11)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,4-some2,8-some3,some4-1,5-5,7-4,some5-3,some6-7),5-5)"}]
    <#lemma797>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_610 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_610.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma703> a r:Inference;
  r:gives {
    "queens([2-f(3-2,7-some4,2-some5,some3-1,some6-3,6-6,8-some1,some7-4),3-f(4-some4,3-some5,7-1,2-3,some3-6,some6-some1,6-4,8-8),7-f(some8-6,some0-some1,1-4,5-8,4-some2,3-5,7-7,2-some9),8-f(some10-some1,some8-4,some0-8,1-some2,5-5,4-7,3-some9,7-some11)],4,[8,2,7,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-4,some3-8,1-some4,5-5,4-7,3-some5,7-some6),[2-f(3-2,7-some7,2-some8,some9-1,some10-3,6-6,8-some1,some11-4),3-f(4-some7,3-some8,7-1,2-3,some9-6,some10-some1,6-4,8-8),7-f(some2-6,some3-some1,1-4,5-8,4-some4,3-5,7-7,2-some5),8-f(some0-some1,some2-4,some3-8,1-some4,5-5,4-7,3-some5,7-some6)],[2-f(3-2,7-some7,2-some8,some9-1,some10-3,6-6,8-some1,some11-4),3-f(4-some7,3-some8,7-1,2-3,some9-6,some10-some1,6-4,8-8),7-f(some2-6,some3-some1,1-4,5-8,4-some4,3-5,7-7,2-some5)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,some2-4,some3-8,1-some4,5-5,4-7,3-some5,7-some6),5-5)"}]
    <#lemma798>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_611 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_611.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma704> a r:Inference;
  r:gives {
    "queens([2-f(6-2,4-some5,2-some1,8-1,5-5,7-4,some6-some3,some7-7),3-f(some2-some5,6-some1,4-1,2-5,8-4,5-some3,7-7,some6-3),6-f(3-5,1-4,some0-some3,some2-7,6-3,4-some4,2-6,8-8),7-f(some8-4,3-some3,1-7,some0-3,some2-some4,6-6,4-8,2-some9)],4,[2,7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(2-f(6-2,4-some0,2-some1,8-1,5-5,7-4,some2-some3,some4-7),[2-f(6-2,4-some0,2-some1,8-1,5-5,7-4,some2-some3,some4-7),3-f(some5-some0,6-some1,4-1,2-5,8-4,5-some3,7-7,some2-3),6-f(3-5,1-4,some6-some3,some5-7,6-3,4-some7,2-6,8-8),7-f(some8-4,3-some3,1-7,some6-3,some5-some7,6-6,4-8,2-some9)],[3-f(some5-some0,6-some1,4-1,2-5,8-4,5-some3,7-7,some2-3),6-f(3-5,1-4,some6-some3,some5-7,6-3,4-some7,2-6,8-8),7-f(some8-4,3-some3,1-7,some6-3,some5-some7,6-6,4-8,2-some9)])"}]
    [ a r:Fact; r:gives {"arg(5,f(6-2,4-some0,2-some1,8-1,5-5,7-4,some2-some3,some4-7),5-5)"}]
    <#lemma799>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_612 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_612.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma705> a r:Inference;
  r:gives {
    "queens([2-f(6-2,some2-some4,2-some5,5-1,some6-some0,8-5,7-7,some7-4),3-f(4-some4,6-some5,some2-1,2-some0,5-5,some6-7,8-4,7-3),4-f(some1-some5,4-1,6-some0,some2-5,2-7,5-4,some6-3,8-8),7-f(some8-5,3-7,1-4,some1-3,4-8,6-6,some2-some3,2-some9)],4,[3,7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(3-f(4-some0,6-some1,some2-1,2-some3,5-5,some4-7,8-4,7-3),[2-f(6-2,some2-some0,2-some1,5-1,some4-some3,8-5,7-7,some5-4),3-f(4-some0,6-some1,some2-1,2-some3,5-5,some4-7,8-4,7-3),4-f(some6-some1,4-1,6-some3,some2-5,2-7,5-4,some4-3,8-8),7-f(some7-5,3-7,1-4,some6-3,4-8,6-6,some2-some8,2-some9)],[2-f(6-2,some2-some0,2-some1,5-1,some4-some3,8-5,7-7,some5-4),4-f(some6-some1,4-1,6-some3,some2-5,2-7,5-4,some4-3,8-8),7-f(some7-5,3-7,1-4,some6-3,4-8,6-6,some2-some8,2-some9)])"}]
    [ a r:Fact; r:gives {"arg(5,f(4-some0,6-some1,some2-1,2-some3,5-5,some4-7,8-4,7-3),5-5)"}]
    <#lemma800>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_613 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_613.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma706> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,8-some6,some3-2,6-some7,some8-1,some9-3,7-7,some10-6),3-f(4-2,3-some7,2-1,8-3,some3-7,6-6,some8-4,some9-some1),7-f(some11-7,some0-6,1-4,5-some1,4-some2,3-5,2-some4,8-8),8-f(some12-6,some11-4,some0-some1,1-some2,5-5,4-some4,3-8,2-some13)],4,[8,3,1,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-6,some1-4,some2-some3,1-some4,5-5,4-some5,3-8,2-some6),[1-f(2-some7,8-some8,some9-2,6-some10,some11-1,some12-3,7-7,some13-6),3-f(4-2,3-some10,2-1,8-3,some9-7,6-6,some11-4,some12-some3),7-f(some1-7,some2-6,1-4,5-some3,4-some4,3-5,2-some5,8-8),8-f(some0-6,some1-4,some2-some3,1-some4,5-5,4-some5,3-8,2-some6)],[1-f(2-some7,8-some8,some9-2,6-some10,some11-1,some12-3,7-7,some13-6),3-f(4-2,3-some10,2-1,8-3,some9-7,6-6,some11-4,some12-some3),7-f(some1-7,some2-6,1-4,5-some3,4-some4,3-5,2-some5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-6,some1-4,some2-some3,1-some4,5-5,4-some5,3-8,2-some6),5-5)"}]
    <#lemma801>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_614 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_614.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma707> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,7-some6,5-2,some7-some8,some9-1,some10-3,some11-5,8-8),3-f(6-2,3-some8,2-1,7-3,5-5,some7-8,some9-some2,some10-4),6-f(some1-3,1-5,4-8,6-some2,3-4,2-some3,7-7,5-6),8-f(some12-8,some0-some2,some1-4,1-some3,4-7,6-6,3-some4,2-some13)],4,[3,8,6,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(3-f(6-2,3-some0,2-1,7-3,5-5,some1-8,some2-some3,some4-4),[1-f(2-some5,7-some6,5-2,some1-some0,some2-1,some4-3,some7-5,8-8),3-f(6-2,3-some0,2-1,7-3,5-5,some1-8,some2-some3,some4-4),6-f(some8-3,1-5,4-8,6-some3,3-4,2-some9,7-7,5-6),8-f(some10-8,some11-some3,some8-4,1-some9,4-7,6-6,3-some12,2-some13)],[1-f(2-some5,7-some6,5-2,some1-some0,some2-1,some4-3,some7-5,8-8),6-f(some8-3,1-5,4-8,6-some3,3-4,2-some9,7-7,5-6),8-f(some10-8,some11-some3,some8-4,1-some9,4-7,6-6,3-some12,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(5,f(6-2,3-some0,2-1,7-3,5-5,some1-8,some2-some3,some4-4),5-5)"}]
    <#lemma802>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_615 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_615.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma708> a r:Inference;
  r:gives {
    "queens([3-f(5-2,7-4,2-1,some1-some4,6-some6,4-3,some3-6,8-8),4-f(3-4,5-1,7-some4,2-some6,some1-3,6-6,4-8,some3-5),7-f(some8-some6,some9-3,1-6,3-8,5-5,7-some10,2-some11,some1-7),8-f(some12-3,some8-6,some9-8,1-5,3-some10,5-some11,7-7,2-some13)],4,[7,4,8,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(7-f(some0-some1,some2-3,1-6,3-8,5-5,7-some3,2-some4,some5-7),[3-f(5-2,7-4,2-1,some5-some6,6-some1,4-3,some7-6,8-8),4-f(3-4,5-1,7-some6,2-some1,some5-3,6-6,4-8,some7-5),7-f(some0-some1,some2-3,1-6,3-8,5-5,7-some3,2-some4,some5-7),8-f(some8-3,some0-6,some2-8,1-5,3-some3,5-some4,7-7,2-some9)],[3-f(5-2,7-4,2-1,some5-some6,6-some1,4-3,some7-6,8-8),4-f(3-4,5-1,7-some6,2-some1,some5-3,6-6,4-8,some7-5),8-f(some8-3,some0-6,some2-8,1-5,3-some3,5-some4,7-7,2-some9)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,some2-3,1-6,3-8,5-5,7-some3,2-some4,some5-7),5-5)"}]
    <#lemma803>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_616 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_616.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma709> a r:Inference;
  r:gives {
    "queens([3-f(some7-2,6-4,2-1,5-some3,8-some5,4-5,7-7,some2-3),4-f(some8-4,some7-1,6-some3,2-some5,5-5,8-7,4-3,7-some9),6-f(3-some3,1-some5,some8-5,some7-7,6-3,2-some9,5-6,8-8),7-f(some10-some5,3-5,1-7,some8-3,some7-some9,6-6,2-8,5-some11)],4,[4,7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(4-f(some0-4,some1-1,6-some2,2-some3,5-5,8-7,4-3,7-some4),[3-f(some1-2,6-4,2-1,5-some2,8-some3,4-5,7-7,some5-3),4-f(some0-4,some1-1,6-some2,2-some3,5-5,8-7,4-3,7-some4),6-f(3-some2,1-some3,some0-5,some1-7,6-3,2-some4,5-6,8-8),7-f(some6-some3,3-5,1-7,some0-3,some1-some4,6-6,2-8,5-some7)],[3-f(some1-2,6-4,2-1,5-some2,8-some3,4-5,7-7,some5-3),6-f(3-some2,1-some3,some0-5,some1-7,6-3,2-some4,5-6,8-8),7-f(some6-some3,3-5,1-7,some0-3,some1-some4,6-6,2-8,5-some7)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-4,some1-1,6-some2,2-some3,5-5,8-7,4-3,7-some4),5-5)"}]
    <#lemma804>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_617 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_617.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma710> a r:Inference;
  r:gives {
    "queens([2-f(2-some6,some3-3,8-2,3-1,7-some1,6-6,some7-some2,some8-4),4-f(5-2,4-1,2-some1,some3-6,8-some2,3-4,7-7,6-some4),7-f(some9-6,some0-some2,1-4,5-7,4-some4,2-5,some3-some5,8-8),8-f(some10-some2,some9-4,some0-7,1-some4,5-5,4-some5,2-8,some3-some11)],4,[8,2,4,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-4,some3-7,1-some4,5-5,4-some5,2-8,some6-some7),[2-f(2-some8,some6-3,8-2,3-1,7-some9,6-6,some10-some1,some11-4),4-f(5-2,4-1,2-some9,some6-6,8-some1,3-4,7-7,6-some4),7-f(some2-6,some3-some1,1-4,5-7,4-some4,2-5,some6-some5,8-8),8-f(some0-some1,some2-4,some3-7,1-some4,5-5,4-some5,2-8,some6-some7)],[2-f(2-some8,some6-3,8-2,3-1,7-some9,6-6,some10-some1,some11-4),4-f(5-2,4-1,2-some9,some6-6,8-some1,3-4,7-7,6-some4),7-f(some2-6,some3-some1,1-4,5-7,4-some4,2-5,some6-some5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,some2-4,some3-7,1-some4,5-5,4-some5,2-8,some6-some7),5-5)"}]
    <#lemma805>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_618 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_618.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma711> a r:Inference;
  r:gives {
    "queens([2-f(2-some7,some5-3,7-2,3-1,5-5,8-some1,some8-some3,some9-some4),4-f(4-2,6-1,2-5,some5-some1,7-some3,3-some4,5-4,8-8),6-f(some2-5,1-some1,4-some3,6-some4,2-4,some5-8,7-7,3-6),8-f(some10-some3,some0-some4,some2-4,1-8,4-7,6-6,2-some6,some5-some11)],4,[2,8,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(2-f(2-some0,some1-3,7-2,3-1,5-5,8-some2,some3-some4,some5-some6),[2-f(2-some0,some1-3,7-2,3-1,5-5,8-some2,some3-some4,some5-some6),4-f(4-2,6-1,2-5,some1-some2,7-some4,3-some6,5-4,8-8),6-f(some7-5,1-some2,4-some4,6-some6,2-4,some1-8,7-7,3-6),8-f(some8-some4,some9-some6,some7-4,1-8,4-7,6-6,2-some10,some1-some11)],[4-f(4-2,6-1,2-5,some1-some2,7-some4,3-some6,5-4,8-8),6-f(some7-5,1-some2,4-some4,6-some6,2-4,some1-8,7-7,3-6),8-f(some8-some4,some9-some6,some7-4,1-8,4-7,6-6,2-some10,some1-some11)])"}]
    [ a r:Fact; r:gives {"arg(5,f(2-some0,some1-3,7-2,3-1,5-5,8-some2,some3-some4,some5-some6),5-5)"}]
    <#lemma806>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_619 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_619.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma712> a r:Inference;
  r:gives {
    "queens([1-f(4-some5,7-some6,some2-some7,some3-2,some4-1,6-6,8-4,some8-some1),2-f(2-some6,4-some7,7-2,some2-1,some3-6,some4-4,6-some1,8-8),6-f(3-6,1-4,some0-some1,5-8,2-3,4-5,7-7,some2-some9),7-f(some10-4,3-some1,1-8,some0-3,5-5,2-7,4-some9,7-some11)],4,[7,1,6,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(7-f(some0-4,3-some1,1-8,some2-3,5-5,2-7,4-some3,7-some4),[1-f(4-some5,7-some6,some7-some8,some9-2,some10-1,6-6,8-4,some11-some1),2-f(2-some6,4-some8,7-2,some7-1,some9-6,some10-4,6-some1,8-8),6-f(3-6,1-4,some2-some1,5-8,2-3,4-5,7-7,some7-some3),7-f(some0-4,3-some1,1-8,some2-3,5-5,2-7,4-some3,7-some4)],[1-f(4-some5,7-some6,some7-some8,some9-2,some10-1,6-6,8-4,some11-some1),2-f(2-some6,4-some8,7-2,some7-1,some9-6,some10-4,6-some1,8-8),6-f(3-6,1-4,some2-some1,5-8,2-3,4-5,7-7,some7-some3)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-4,3-some1,1-8,some2-3,5-5,2-7,4-some3,7-some4),5-5)"}]
    <#lemma807>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_620 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_620.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma713> a r:Inference;
  r:gives {
    "queens([2-f(some1-some6,6-3,4-some2,3-1,7-4,some4-some3,some5-2,8-8),4-f(5-some2,some0-1,some1-4,6-some3,4-2,3-8,7-7,some4-6),6-f(2-4,1-some3,5-2,some0-8,some1-7,6-6,4-5,3-some7),8-f(some8-2,some9-8,2-7,1-6,5-5,some0-some7,some1-some10,6-some11)],4,[8,6,4,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-2,some1-8,2-7,1-6,5-5,some2-some3,some4-some5,6-some6),[2-f(some4-some7,6-3,4-some8,3-1,7-4,some9-some10,some11-2,8-8),4-f(5-some8,some2-1,some4-4,6-some10,4-2,3-8,7-7,some9-6),6-f(2-4,1-some10,5-2,some2-8,some4-7,6-6,4-5,3-some3),8-f(some0-2,some1-8,2-7,1-6,5-5,some2-some3,some4-some5,6-some6)],[2-f(some4-some7,6-3,4-some8,3-1,7-4,some9-some10,some11-2,8-8),4-f(5-some8,some2-1,some4-4,6-some10,4-2,3-8,7-7,some9-6),6-f(2-4,1-some10,5-2,some2-8,some4-7,6-6,4-5,3-some3)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-2,some1-8,2-7,1-6,5-5,some2-some3,some4-some5,6-some6),5-5)"}]
    <#lemma808>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_621 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_621.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma714> a r:Inference;
  r:gives {
    "queens([2-f(some2-some6,4-3,7-some1,3-1,5-5,some4-4,8-2,some7-some3),3-f(6-3,some2-some1,4-1,7-5,3-4,5-2,some4-some3,8-8),6-f(2-5,1-4,some0-2,6-some3,some2-8,4-some5,7-7,3-6),8-f(some8-2,some9-some3,2-8,1-some5,some0-7,6-6,some2-some10,4-some11)],4,[2,8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(2-f(some0-some1,4-3,7-some2,3-1,5-5,some3-4,8-2,some4-some5),[2-f(some0-some1,4-3,7-some2,3-1,5-5,some3-4,8-2,some4-some5),3-f(6-3,some0-some2,4-1,7-5,3-4,5-2,some3-some5,8-8),6-f(2-5,1-4,some6-2,6-some5,some0-8,4-some7,7-7,3-6),8-f(some8-2,some9-some5,2-8,1-some7,some6-7,6-6,some0-some10,4-some11)],[3-f(6-3,some0-some2,4-1,7-5,3-4,5-2,some3-some5,8-8),6-f(2-5,1-4,some6-2,6-some5,some0-8,4-some7,7-7,3-6),8-f(some8-2,some9-some5,2-8,1-some7,some6-7,6-6,some0-some10,4-some11)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,4-3,7-some2,3-1,5-5,some3-4,8-2,some4-some5),5-5)"}]
    <#lemma809>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_622 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_622.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma715> a r:Inference;
  r:gives {
    "queens([1-f(4-some5,3-some6,8-some7,some2-3,7-1,6-6,some8-4,some9-2),3-f(some0-some7,some1-3,4-1,3-6,8-4,some2-2,7-7,6-some3),6-f(2-6,1-4,5-2,some0-7,some1-some3,4-some4,3-5,8-8),8-f(some10-2,some11-7,2-some3,1-some4,5-5,some0-8,some1-some12,4-some13)],4,[8,1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-2,some1-7,2-some2,1-some3,5-5,some4-8,some5-some6,4-some7),[1-f(4-some8,3-some9,8-some10,some11-3,7-1,6-6,some12-4,some13-2),3-f(some4-some10,some5-3,4-1,3-6,8-4,some11-2,7-7,6-some2),6-f(2-6,1-4,5-2,some4-7,some5-some2,4-some3,3-5,8-8),8-f(some0-2,some1-7,2-some2,1-some3,5-5,some4-8,some5-some6,4-some7)],[1-f(4-some8,3-some9,8-some10,some11-3,7-1,6-6,some12-4,some13-2),3-f(some4-some10,some5-3,4-1,3-6,8-4,some11-2,7-7,6-some2),6-f(2-6,1-4,5-2,some4-7,some5-some2,4-some3,3-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-2,some1-7,2-some2,1-some3,5-5,some4-8,some5-some6,4-some7),5-5)"}]
    <#lemma810>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_623 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_623.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma716> a r:Inference;
  r:gives {
    "queens([1-f(8-some5,3-some6,5-some7,7-3,some8-1,6-6,some9-5,some10-2),3-f(4-some7,some1-3,8-1,3-6,5-5,7-2,some8-4,6-7),4-f(some0-3,4-1,some1-6,8-5,3-2,5-4,7-7,some8-some2),8-f(some11-2,some12-4,2-7,1-some2,some0-some3,4-some4,some1-some13,8-8)],4,[3,1,4,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(3-f(4-some0,some1-3,8-1,3-6,5-5,7-2,some2-4,6-7),[1-f(8-some3,3-some4,5-some0,7-3,some2-1,6-6,some5-5,some6-2),3-f(4-some0,some1-3,8-1,3-6,5-5,7-2,some2-4,6-7),4-f(some7-3,4-1,some1-6,8-5,3-2,5-4,7-7,some2-some8),8-f(some9-2,some10-4,2-7,1-some8,some7-some11,4-some12,some1-some13,8-8)],[1-f(8-some3,3-some4,5-some0,7-3,some2-1,6-6,some5-5,some6-2),4-f(some7-3,4-1,some1-6,8-5,3-2,5-4,7-7,some2-some8),8-f(some9-2,some10-4,2-7,1-some8,some7-some11,4-some12,some1-some13,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(4-some0,some1-3,8-1,3-6,5-5,7-2,some2-4,6-7),5-5)"}]
    <#lemma811>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_624 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_624.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma717> a r:Inference;
  r:gives {
    "queens([1-f(some2-some5,3-some6,5-some7,some8-3,8-1,6-6,some9-5,some10-2),3-f(4-some7,7-3,some2-1,3-6,5-5,some8-2,8-4,6-some1),4-f(some0-3,4-1,7-6,some2-5,3-2,5-4,some8-some1,8-8),8-f(some11-2,some12-4,2-some1,1-8,some0-some3,4-some4,7-7,some2-some13)],4,[3,1,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(3-f(4-some0,7-3,some1-1,3-6,5-5,some2-2,8-4,6-some3),[1-f(some1-some4,3-some5,5-some0,some2-3,8-1,6-6,some6-5,some7-2),3-f(4-some0,7-3,some1-1,3-6,5-5,some2-2,8-4,6-some3),4-f(some8-3,4-1,7-6,some1-5,3-2,5-4,some2-some3,8-8),8-f(some9-2,some10-4,2-some3,1-8,some8-some11,4-some12,7-7,some1-some13)],[1-f(some1-some4,3-some5,5-some0,some2-3,8-1,6-6,some6-5,some7-2),4-f(some8-3,4-1,7-6,some1-5,3-2,5-4,some2-some3,8-8),8-f(some9-2,some10-4,2-some3,1-8,some8-some11,4-some12,7-7,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(5,f(4-some0,7-3,some1-1,3-6,5-5,some2-2,8-4,6-some3),5-5)"}]
    <#lemma812>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_625 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_625.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma718> a r:Inference;
  r:gives {
    "queens([2-f(3-some2,some0-some3,7-4,5-1,4-3,some4-5,some5-2,8-8),3-f(6-some3,3-4,some0-1,7-3,5-5,4-2,some4-8,some5-some7),6-f(2-3,1-5,some8-2,6-8,3-some7,some0-some9,7-7,5-6),8-f(some10-2,some11-8,2-some7,1-some9,some8-7,6-6,3-some12,some0-some13)],4,[3,8,6,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(3-f(6-some0,3-4,some1-1,7-3,5-5,4-2,some2-8,some3-some4),[2-f(3-some5,some1-some0,7-4,5-1,4-3,some2-5,some3-2,8-8),3-f(6-some0,3-4,some1-1,7-3,5-5,4-2,some2-8,some3-some4),6-f(2-3,1-5,some6-2,6-8,3-some4,some1-some7,7-7,5-6),8-f(some8-2,some9-8,2-some4,1-some7,some6-7,6-6,3-some10,some1-some11)],[2-f(3-some5,some1-some0,7-4,5-1,4-3,some2-5,some3-2,8-8),6-f(2-3,1-5,some6-2,6-8,3-some4,some1-some7,7-7,5-6),8-f(some8-2,some9-8,2-some4,1-some7,some6-7,6-6,3-some10,some1-some11)])"}]
    [ a r:Fact; r:gives {"arg(5,f(6-some0,3-4,some1-1,7-3,5-5,4-2,some2-8,some3-some4),5-5)"}]
    <#lemma813>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_626 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_626.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma719> a r:Inference;
  r:gives {
    "queens([2-f(3-some1,6-some2,8-4,5-1,4-3,some3-5,7-7,some4-2),3-f(some6-some2,3-4,6-1,8-3,5-5,4-7,some3-2,7-some7),6-f(some8-3,1-5,some9-7,some6-2,3-some7,6-6,8-some10,5-some11),7-f(2-5,some8-7,1-2,some9-some7,some6-6,3-some10,6-some11,8-8)],4,[3,6,2,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(3-f(some0-some1,3-4,6-1,8-3,5-5,4-7,some2-2,7-some3),[2-f(3-some4,6-some1,8-4,5-1,4-3,some2-5,7-7,some5-2),3-f(some0-some1,3-4,6-1,8-3,5-5,4-7,some2-2,7-some3),6-f(some6-3,1-5,some7-7,some0-2,3-some3,6-6,8-some8,5-some9),7-f(2-5,some6-7,1-2,some7-some3,some0-6,3-some8,6-some9,8-8)],[2-f(3-some4,6-some1,8-4,5-1,4-3,some2-5,7-7,some5-2),6-f(some6-3,1-5,some7-7,some0-2,3-some3,6-6,8-some8,5-some9),7-f(2-5,some6-7,1-2,some7-some3,some0-6,3-some8,6-some9,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,3-4,6-1,8-3,5-5,4-7,some2-2,7-some3),5-5)"}]
    <#lemma814>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_627 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_627.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma720> a r:Inference;
  r:gives {
    "queens([2-f(3-some2,some0-some4,7-4,some3-1,4-3,6-6,8-some7,some5-2),3-f(5-some4,3-4,some0-1,7-3,some3-6,4-some7,6-2,8-8),6-f(some8-3,1-6,some9-some7,5-2,3-8,some0-5,7-7,some3-some10),7-f(2-6,some8-some7,1-2,some9-8,5-5,3-7,some0-some10,7-some11)],4,[7,2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(7-f(2-6,some0-some1,1-2,some2-8,5-5,3-7,some3-some4,7-some5),[2-f(3-some6,some3-some7,7-4,some8-1,4-3,6-6,8-some1,some9-2),3-f(5-some7,3-4,some3-1,7-3,some8-6,4-some1,6-2,8-8),6-f(some0-3,1-6,some2-some1,5-2,3-8,some3-5,7-7,some8-some4),7-f(2-6,some0-some1,1-2,some2-8,5-5,3-7,some3-some4,7-some5)],[2-f(3-some6,some3-some7,7-4,some8-1,4-3,6-6,8-some1,some9-2),3-f(5-some7,3-4,some3-1,7-3,some8-6,4-some1,6-2,8-8),6-f(some0-3,1-6,some2-some1,5-2,3-8,some3-5,7-7,some8-some4)])"}]
    [ a r:Fact; r:gives {"arg(5,f(2-6,some0-some1,1-2,some2-8,5-5,3-7,some3-some4,7-some5),5-5)"}]
    <#lemma815>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_628 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_628.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma721> a r:Inference;
  r:gives {
    "queens([3-f(3-some1,some0-some2,7-4,2-1,4-3,6-6,8-some5,some3-some6),4-f(5-some2,3-4,some0-1,7-3,2-6,4-some5,6-some6,8-8),7-f(some7-3,1-6,some8-some5,5-some6,3-8,some0-5,7-7,2-some9),8-f(some10-6,some7-some5,1-some6,some8-8,5-5,3-7,some0-some9,7-some11)],4,[8,3,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-6,some1-some2,1-some3,some4-8,5-5,3-7,some5-some6,7-some7),[3-f(3-some8,some5-some9,7-4,2-1,4-3,6-6,8-some2,some10-some3),4-f(5-some9,3-4,some5-1,7-3,2-6,4-some2,6-some3,8-8),7-f(some1-3,1-6,some4-some2,5-some3,3-8,some5-5,7-7,2-some6),8-f(some0-6,some1-some2,1-some3,some4-8,5-5,3-7,some5-some6,7-some7)],[3-f(3-some8,some5-some9,7-4,2-1,4-3,6-6,8-some2,some10-some3),4-f(5-some9,3-4,some5-1,7-3,2-6,4-some2,6-some3,8-8),7-f(some1-3,1-6,some4-some2,5-some3,3-8,some5-5,7-7,2-some6)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-6,some1-some2,1-some3,some4-8,5-5,3-7,some5-some6,7-some7),5-5)"}]
    <#lemma816>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_629 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_629.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma722> a r:Inference;
  r:gives {
    "queens([3-f(some7-2,7-4,2-some2,6-1,5-5,4-some6,8-3,some3-6),4-f(some8-4,some7-some2,7-1,2-5,6-some6,5-3,4-6,8-8),5-f(3-some2,some8-1,some7-5,7-some6,2-3,6-6,5-8,4-some9),8-f(some10-some6,some11-3,1-6,3-8,some8-some9,some7-some12,7-7,2-some13)],4,[3,5,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(3-f(some0-2,7-4,2-some1,6-1,5-5,4-some2,8-3,some3-6),[3-f(some0-2,7-4,2-some1,6-1,5-5,4-some2,8-3,some3-6),4-f(some4-4,some0-some1,7-1,2-5,6-some2,5-3,4-6,8-8),5-f(3-some1,some4-1,some0-5,7-some2,2-3,6-6,5-8,4-some5),8-f(some6-some2,some7-3,1-6,3-8,some4-some5,some0-some8,7-7,2-some9)],[4-f(some4-4,some0-some1,7-1,2-5,6-some2,5-3,4-6,8-8),5-f(3-some1,some4-1,some0-5,7-some2,2-3,6-6,5-8,4-some5),8-f(some6-some2,some7-3,1-6,3-8,some4-some5,some0-some8,7-7,2-some9)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-2,7-4,2-some1,6-1,5-5,4-some2,8-3,some3-6),5-5)"}]
    <#lemma817>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_630 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_630.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma723> a r:Inference;
  r:gives {
    "queens([3-f(6-2,some7-4,2-some3,5-1,7-some5,4-5,some2-3,8-8),4-f(some8-4,6-some3,some7-1,2-some5,5-5,7-3,4-8,some2-7),5-f(3-some3,some8-1,6-some5,some7-5,2-3,5-8,7-7,4-some9),8-f(some10-5,some11-3,1-8,3-7,some8-some9,6-6,some7-some12,2-some13)],4,[4,8,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(4-f(some0-4,6-some1,some2-1,2-some3,5-5,7-3,4-8,some4-7),[3-f(6-2,some2-4,2-some1,5-1,7-some3,4-5,some4-3,8-8),4-f(some0-4,6-some1,some2-1,2-some3,5-5,7-3,4-8,some4-7),5-f(3-some1,some0-1,6-some3,some2-5,2-3,5-8,7-7,4-some5),8-f(some6-5,some7-3,1-8,3-7,some0-some5,6-6,some2-some8,2-some9)],[3-f(6-2,some2-4,2-some1,5-1,7-some3,4-5,some4-3,8-8),5-f(3-some1,some0-1,6-some3,some2-5,2-3,5-8,7-7,4-some5),8-f(some6-5,some7-3,1-8,3-7,some0-some5,6-6,some2-some8,2-some9)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-4,6-some1,some2-1,2-some3,5-5,7-3,4-8,some4-7),5-5)"}]
    <#lemma818>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_631 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_631.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma724> a r:Inference;
  r:gives {
    "queens([2-f(2-some6,5-3,some4-2,3-some7,some8-1,8-some1,7-7,some9-5),4-f(4-2,6-some7,2-1,5-some1,some4-7,3-5,some8-4,8-8),5-f(some2-some7,4-1,6-some1,2-7,5-5,some4-4,3-8,some8-some3),8-f(some10-7,some0-5,1-4,some2-8,4-some3,6-6,2-some5,5-some11)],4,[5,8,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(5-f(some0-some1,4-1,6-some2,2-7,5-5,some3-4,3-8,some4-some5),[2-f(2-some6,5-3,some3-2,3-some1,some4-1,8-some2,7-7,some7-5),4-f(4-2,6-some1,2-1,5-some2,some3-7,3-5,some4-4,8-8),5-f(some0-some1,4-1,6-some2,2-7,5-5,some3-4,3-8,some4-some5),8-f(some8-7,some9-5,1-4,some0-8,4-some5,6-6,2-some10,5-some11)],[2-f(2-some6,5-3,some3-2,3-some1,some4-1,8-some2,7-7,some7-5),4-f(4-2,6-some1,2-1,5-some2,some3-7,3-5,some4-4,8-8),8-f(some8-7,some9-5,1-4,some0-8,4-some5,6-6,2-some10,5-some11)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,4-1,6-some2,2-7,5-5,some3-4,3-8,some4-some5),5-5)"}]
    <#lemma819>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_632 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_632.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma725> a r:Inference;
  r:gives {
    "queens([2-f(2-some8,7-3,5-2,3-some9,8-1,6-6,some10-5,some11-some2),4-f(some4-2,some5-some9,2-1,7-6,5-5,3-some2,8-some3,6-4),5-f(4-some9,some4-1,some5-6,2-5,7-some2,5-some3,3-4,8-8),7-f(some1-6,1-5,4-some2,some4-some3,some5-4,2-8,7-7,5-some6)],4,[4,2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(4-f(some0-2,some1-some2,2-1,7-6,5-5,3-some3,8-some4,6-4),[2-f(2-some5,7-3,5-2,3-some2,8-1,6-6,some6-5,some7-some3),4-f(some0-2,some1-some2,2-1,7-6,5-5,3-some3,8-some4,6-4),5-f(4-some2,some0-1,some1-6,2-5,7-some3,5-some4,3-4,8-8),7-f(some8-6,1-5,4-some3,some0-some4,some1-4,2-8,7-7,5-some9)],[2-f(2-some5,7-3,5-2,3-some2,8-1,6-6,some6-5,some7-some3),5-f(4-some2,some0-1,some1-6,2-5,7-some3,5-some4,3-4,8-8),7-f(some8-6,1-5,4-some3,some0-some4,some1-4,2-8,7-7,5-some9)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-2,some1-some2,2-1,7-6,5-5,3-some3,8-some4,6-4),5-5)"}]
    <#lemma820>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_633 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_633.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma726> a r:Inference;
  r:gives {
    "queens([2-f(2-some8,5-3,8-2,3-some9,7-1,6-6,some10-some1,some11-5),4-f(some3-2,some5-some9,2-1,5-6,8-some1,3-5,7-7,6-4),5-f(4-some9,some3-1,some5-6,2-some1,5-5,8-7,3-4,7-some4),7-f(some2-6,1-some1,4-5,some3-7,some5-4,2-some4,5-some6,8-8)],4,[5,2,4,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(5-f(4-some0,some1-1,some2-6,2-some3,5-5,8-7,3-4,7-some4),[2-f(2-some5,5-3,8-2,3-some0,7-1,6-6,some6-some3,some7-5),4-f(some1-2,some2-some0,2-1,5-6,8-some3,3-5,7-7,6-4),5-f(4-some0,some1-1,some2-6,2-some3,5-5,8-7,3-4,7-some4),7-f(some8-6,1-some3,4-5,some1-7,some2-4,2-some4,5-some9,8-8)],[2-f(2-some5,5-3,8-2,3-some0,7-1,6-6,some6-some3,some7-5),4-f(some1-2,some2-some0,2-1,5-6,8-some3,3-5,7-7,6-4),7-f(some8-6,1-some3,4-5,some1-7,some2-4,2-some4,5-some9,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(4-some0,some1-1,some2-6,2-some3,5-5,8-7,3-4,7-some4),5-5)"}]
    <#lemma821>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_634 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_634.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma727> a r:Inference;
  r:gives {
    "queens([1-f(8-some7,some5-some8,6-some9,some10-2,5-5,7-1,some11-3,some12-7),2-f(2-some8,8-some9,some5-2,6-5,some10-1,5-3,7-7,some11-6),4-f(4-2,3-5,2-1,8-3,some5-7,6-6,some10-4,5-some2),8-f(some13-7,some0-6,1-4,some1-some2,4-some3,3-some4,2-some6,8-8)],4,[1,4,2,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(8-some0,some1-some2,6-some3,some4-2,5-5,7-1,some5-3,some6-7),[1-f(8-some0,some1-some2,6-some3,some4-2,5-5,7-1,some5-3,some6-7),2-f(2-some2,8-some3,some1-2,6-5,some4-1,5-3,7-7,some5-6),4-f(4-2,3-5,2-1,8-3,some1-7,6-6,some4-4,5-some7),8-f(some8-7,some9-6,1-4,some10-some7,4-some11,3-some12,2-some13,8-8)],[2-f(2-some2,8-some3,some1-2,6-5,some4-1,5-3,7-7,some5-6),4-f(4-2,3-5,2-1,8-3,some1-7,6-6,some4-4,5-some7),8-f(some8-7,some9-6,1-4,some10-some7,4-some11,3-some12,2-some13,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(8-some0,some1-some2,6-some3,some4-2,5-5,7-1,some5-3,some6-7),5-5)"}]
    <#lemma822>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_635 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_635.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma728> a r:Inference;
  r:gives {
    "queens([1-f(some6-some8,8-some9,6-some10,some11-2,5-5,7-1,some12-3,some13-7),2-f(2-some9,some6-some10,8-2,6-5,some11-1,5-3,7-7,some12-6),4-f(some3-2,3-5,2-1,some6-3,8-7,6-6,some11-some2,5-4),7-f(some1-3,1-7,4-6,some3-some2,3-4,2-some4,some6-some5,8-8)],4,[1,4,2,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,8-some2,6-some3,some4-2,5-5,7-1,some5-3,some6-7),[1-f(some0-some1,8-some2,6-some3,some4-2,5-5,7-1,some5-3,some6-7),2-f(2-some2,some0-some3,8-2,6-5,some4-1,5-3,7-7,some5-6),4-f(some7-2,3-5,2-1,some0-3,8-7,6-6,some4-some8,5-4),7-f(some9-3,1-7,4-6,some7-some8,3-4,2-some10,some0-some11,8-8)],[2-f(2-some2,some0-some3,8-2,6-5,some4-1,5-3,7-7,some5-6),4-f(some7-2,3-5,2-1,some0-3,8-7,6-6,some4-some8,5-4),7-f(some9-3,1-7,4-6,some7-some8,3-4,2-some10,some0-some11,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,8-some2,6-some3,some4-2,5-5,7-1,some5-3,some6-7),5-5)"}]
    <#lemma823>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_636 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_636.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma729> a r:Inference;
  r:gives {
    "queens([1-f(some1-some5,5-some0,4-some2,8-2,some3-4,some4-1,7-7,some6-5),4-f(some7-2,6-4,2-1,some1-7,5-5,4-3,8-some8,some3-some9),5-f(3-4,some7-1,6-7,2-5,some1-3,5-some8,4-some9,8-8),8-f(some10-5,some11-3,1-some8,3-some9,some7-8,6-6,2-some12,some1-some13)],4,[4,8,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(4-f(some0-2,6-4,2-1,some1-7,5-5,4-3,8-some2,some3-some4),[1-f(some1-some5,5-some6,4-some7,8-2,some3-4,some8-1,7-7,some9-5),4-f(some0-2,6-4,2-1,some1-7,5-5,4-3,8-some2,some3-some4),5-f(3-4,some0-1,6-7,2-5,some1-3,5-some2,4-some4,8-8),8-f(some10-5,some11-3,1-some2,3-some4,some0-8,6-6,2-some12,some1-some13)],[1-f(some1-some5,5-some6,4-some7,8-2,some3-4,some8-1,7-7,some9-5),5-f(3-4,some0-1,6-7,2-5,some1-3,5-some2,4-some4,8-8),8-f(some10-5,some11-3,1-some2,3-some4,some0-8,6-6,2-some12,some1-some13)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-2,6-4,2-1,some1-7,5-5,4-3,8-some2,some3-some4),5-5)"}]
    <#lemma824>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_637 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_637.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma730> a r:Inference;
  r:gives {
    "queens([1-f(some1-some6,6-some0,4-some2,some3-2,8-4,some4-1,7-7,some7-some5),4-f(5-2,some8-4,2-1,some1-7,6-some5,4-3,some3-6,8-8),5-f(3-4,5-1,some8-7,2-some5,some1-3,6-6,4-8,some3-5),8-f(some9-some5,some10-3,1-6,3-8,5-5,some8-some11,2-some12,some1-some13)],4,[8,5,1,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-3,1-6,3-8,5-5,some3-some4,2-some5,some6-some7),[1-f(some6-some8,6-some9,4-some10,some11-2,8-4,some12-1,7-7,some13-some1),4-f(5-2,some3-4,2-1,some6-7,6-some1,4-3,some11-6,8-8),5-f(3-4,5-1,some3-7,2-some1,some6-3,6-6,4-8,some11-5),8-f(some0-some1,some2-3,1-6,3-8,5-5,some3-some4,2-some5,some6-some7)],[1-f(some6-some8,6-some9,4-some10,some11-2,8-4,some12-1,7-7,some13-some1),4-f(5-2,some3-4,2-1,some6-7,6-some1,4-3,some11-6,8-8),5-f(3-4,5-1,some3-7,2-some1,some6-3,6-6,4-8,some11-5)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,some2-3,1-6,3-8,5-5,some3-some4,2-some5,some6-some7),5-5)"}]
    <#lemma825>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_638 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_638.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma731> a r:Inference;
  r:gives {
    "queens([1-f(4-some5,some1-some6,some2-some7,8-2,5-5,7-1,some8-4,some9-7),2-f(2-some6,4-some7,some1-2,some2-5,8-1,5-4,7-7,some8-3),5-f(3-5,some0-1,6-4,2-7,4-3,some1-some3,some2-some4,8-8),8-f(some10-7,some11-3,1-some3,3-some4,some0-8,6-6,2-some12,4-some13)],4,[1,8,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(4-some0,some1-some2,some3-some4,8-2,5-5,7-1,some5-4,some6-7),[1-f(4-some0,some1-some2,some3-some4,8-2,5-5,7-1,some5-4,some6-7),2-f(2-some2,4-some4,some1-2,some3-5,8-1,5-4,7-7,some5-3),5-f(3-5,some7-1,6-4,2-7,4-3,some1-some8,some3-some9,8-8),8-f(some10-7,some11-3,1-some8,3-some9,some7-8,6-6,2-some12,4-some13)],[2-f(2-some2,4-some4,some1-2,some3-5,8-1,5-4,7-7,some5-3),5-f(3-5,some7-1,6-4,2-7,4-3,some1-some8,some3-some9,8-8),8-f(some10-7,some11-3,1-some8,3-some9,some7-8,6-6,2-some12,4-some13)])"}]
    [ a r:Fact; r:gives {"arg(5,f(4-some0,some1-some2,some3-some4,8-2,5-5,7-1,some5-4,some6-7),5-5)"}]
    <#lemma826>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_639 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_639.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma732> a r:Inference;
  r:gives {
    "queens([2-f(4-some5,7-3,some2-some6,3-2,some4-1,6-6,8-4,some7-some1),3-f(2-3,4-some6,7-2,some2-1,3-6,some4-4,6-some1,8-8),7-f(some8-6,1-4,some0-some1,5-8,2-some3,4-5,7-7,some2-some9),8-f(some10-4,some8-some1,1-8,some0-some3,5-5,2-7,4-some9,7-some11)],4,[8,2,7,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-4,some1-some2,1-8,some3-some4,5-5,2-7,4-some5,7-some6),[2-f(4-some7,7-3,some8-some9,3-2,some10-1,6-6,8-4,some11-some2),3-f(2-3,4-some9,7-2,some8-1,3-6,some10-4,6-some2,8-8),7-f(some1-6,1-4,some3-some2,5-8,2-some4,4-5,7-7,some8-some5),8-f(some0-4,some1-some2,1-8,some3-some4,5-5,2-7,4-some5,7-some6)],[2-f(4-some7,7-3,some8-some9,3-2,some10-1,6-6,8-4,some11-some2),3-f(2-3,4-some9,7-2,some8-1,3-6,some10-4,6-some2,8-8),7-f(some1-6,1-4,some3-some2,5-8,2-some4,4-5,7-7,some8-some5)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-4,some1-some2,1-8,some3-some4,5-5,2-7,4-some5,7-some6),5-5)"}]
    <#lemma827>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_640 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_640.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma733> a r:Inference;
  r:gives {
    "queens([1-f(5-some7,3-some8,some9-some10,some11-3,some12-2,8-1,7-7,some13-some1),3-f(2-some10,6-3,5-2,3-1,some9-7,some11-some1,some12-5,8-8),5-f(4-2,some3-1,2-7,6-some1,5-5,3-8,some9-4,some11-6),7-f(some2-7,1-some1,4-5,some3-8,2-4,6-6,5-some4,3-some5)],4,[5,7,1,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(5-f(4-2,some0-1,2-7,6-some1,5-5,3-8,some2-4,some3-6),[1-f(5-some4,3-some5,some2-some6,some3-3,some7-2,8-1,7-7,some8-some1),3-f(2-some6,6-3,5-2,3-1,some2-7,some3-some1,some7-5,8-8),5-f(4-2,some0-1,2-7,6-some1,5-5,3-8,some2-4,some3-6),7-f(some9-7,1-some1,4-5,some0-8,2-4,6-6,5-some10,3-some11)],[1-f(5-some4,3-some5,some2-some6,some3-3,some7-2,8-1,7-7,some8-some1),3-f(2-some6,6-3,5-2,3-1,some2-7,some3-some1,some7-5,8-8),7-f(some9-7,1-some1,4-5,some0-8,2-4,6-6,5-some10,3-some11)])"}]
    [ a r:Fact; r:gives {"arg(5,f(4-2,some0-1,2-7,6-some1,5-5,3-8,some2-4,some3-6),5-5)"}]
    <#lemma828>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_641 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_641.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma734> a r:Inference;
  r:gives {
    "queens([2-f(some6-some1,8-some2,6-4,5-2,4-1,some3-5,7-7,some4-3),3-f(2-some2,some6-4,8-2,6-1,5-5,4-7,some3-3,7-6),5-f(3-2,some7-1,2-5,some6-7,8-3,6-6,5-some8,4-some9),8-f(some10-7,some11-3,1-6,3-some8,some7-some9,2-some12,some6-some13,8-8)],4,[3,5,2,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(3-f(2-some0,some1-4,8-2,6-1,5-5,4-7,some2-3,7-6),[2-f(some1-some3,8-some0,6-4,5-2,4-1,some2-5,7-7,some4-3),3-f(2-some0,some1-4,8-2,6-1,5-5,4-7,some2-3,7-6),5-f(3-2,some5-1,2-5,some1-7,8-3,6-6,5-some6,4-some7),8-f(some8-7,some9-3,1-6,3-some6,some5-some7,2-some10,some1-some11,8-8)],[2-f(some1-some3,8-some0,6-4,5-2,4-1,some2-5,7-7,some4-3),5-f(3-2,some5-1,2-5,some1-7,8-3,6-6,5-some6,4-some7),8-f(some8-7,some9-3,1-6,3-some6,some5-some7,2-some10,some1-some11,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(2-some0,some1-4,8-2,6-1,5-5,4-7,some2-3,7-6),5-5)"}]
    <#lemma829>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_642 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_642.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma735> a r:Inference;
  r:gives {
    "queens([2-f(some8-some3,some0-some4,some2-4,7-2,4-1,6-6,8-some7,some5-3),3-f(2-some4,some8-4,some0-2,some2-1,7-6,4-some7,6-3,8-8),5-f(3-2,5-1,2-6,some8-some7,some0-3,some2-8,7-7,4-5),8-f(some9-some7,some10-3,1-8,3-7,5-5,2-some11,some8-some12,some0-some13)],4,[8,2,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-3,1-8,3-7,5-5,2-some3,some4-some5,some6-some7),[2-f(some4-some8,some6-some9,some10-4,7-2,4-1,6-6,8-some1,some11-3),3-f(2-some9,some4-4,some6-2,some10-1,7-6,4-some1,6-3,8-8),5-f(3-2,5-1,2-6,some4-some1,some6-3,some10-8,7-7,4-5),8-f(some0-some1,some2-3,1-8,3-7,5-5,2-some3,some4-some5,some6-some7)],[2-f(some4-some8,some6-some9,some10-4,7-2,4-1,6-6,8-some1,some11-3),3-f(2-some9,some4-4,some6-2,some10-1,7-6,4-some1,6-3,8-8),5-f(3-2,5-1,2-6,some4-some1,some6-3,some10-8,7-7,4-5)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,some2-3,1-8,3-7,5-5,2-some3,some4-some5,some6-some7),5-5)"}]
    <#lemma830>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_643 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_643.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma736> a r:Inference;
  r:gives {
    "queens([1-f(4-some4,3-some5,7-some6,some3-3,5-5,8-1,some7-4,some8-some2),3-f(some1-some6,6-3,4-5,3-1,7-4,some3-some2,5-2,8-8),5-f(some9-5,some0-1,some1-4,6-some2,4-2,3-8,7-7,some3-6),7-f(2-4,1-some2,some9-2,some0-8,some1-7,6-6,4-some10,3-some11)],4,[1,7,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(4-some0,3-some1,7-some2,some3-3,5-5,8-1,some4-4,some5-some6),[1-f(4-some0,3-some1,7-some2,some3-3,5-5,8-1,some4-4,some5-some6),3-f(some7-some2,6-3,4-5,3-1,7-4,some3-some6,5-2,8-8),5-f(some8-5,some9-1,some7-4,6-some6,4-2,3-8,7-7,some3-6),7-f(2-4,1-some6,some8-2,some9-8,some7-7,6-6,4-some10,3-some11)],[3-f(some7-some2,6-3,4-5,3-1,7-4,some3-some6,5-2,8-8),5-f(some8-5,some9-1,some7-4,6-some6,4-2,3-8,7-7,some3-6),7-f(2-4,1-some6,some8-2,some9-8,some7-7,6-6,4-some10,3-some11)])"}]
    [ a r:Fact; r:gives {"arg(5,f(4-some0,3-some1,7-some2,some3-3,5-5,8-1,some4-4,some5-some6),5-5)"}]
    <#lemma831>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_644 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_644.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma737> a r:Inference;
  r:gives {
    "queens([2-f(5-2,3-some7,2-some8,6-3,8-some9,some10-1,7-7,some11-6),4-f(some2-some8,some3-3,5-some9,3-1,2-7,6-6,8-5,some10-4),5-f(4-3,some2-some9,some3-1,5-7,3-6,2-5,6-4,8-8),6-f(some1-some9,4-1,some2-7,some3-6,5-5,3-4,2-8,6-some4)],4,[6,4,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(6-f(some0-some1,4-1,some2-7,some3-6,5-5,3-4,2-8,6-some4),[2-f(5-2,3-some5,2-some6,6-3,8-some1,some7-1,7-7,some8-6),4-f(some2-some6,some3-3,5-some1,3-1,2-7,6-6,8-5,some7-4),5-f(4-3,some2-some1,some3-1,5-7,3-6,2-5,6-4,8-8),6-f(some0-some1,4-1,some2-7,some3-6,5-5,3-4,2-8,6-some4)],[2-f(5-2,3-some5,2-some6,6-3,8-some1,some7-1,7-7,some8-6),4-f(some2-some6,some3-3,5-some1,3-1,2-7,6-6,8-5,some7-4),5-f(4-3,some2-some1,some3-1,5-7,3-6,2-5,6-4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,4-1,some2-7,some3-6,5-5,3-4,2-8,6-some4),5-5)"}]
    <#lemma832>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_645 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_645.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma738> a r:Inference;
  r:gives {
    "queens([3-f(some7-2,3-4,2-some2,6-3,8-1,4-some6,7-7,some3-6),5-f(some8-some2,5-3,some7-1,3-some6,2-7,6-6,8-some9,4-5),6-f(some10-3,some8-1,5-some6,some7-7,3-6,2-some9,6-5,8-8),8-f(some11-some6,1-7,some10-6,some8-some9,5-5,some7-8,3-some12,2-some13)],4,[8,5,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,1-7,some2-6,some3-some4,5-5,some5-8,3-some6,2-some7),[3-f(some5-2,3-4,2-some8,6-3,8-1,4-some1,7-7,some9-6),5-f(some3-some8,5-3,some5-1,3-some1,2-7,6-6,8-some4,4-5),6-f(some2-3,some3-1,5-some1,some5-7,3-6,2-some4,6-5,8-8),8-f(some0-some1,1-7,some2-6,some3-some4,5-5,some5-8,3-some6,2-some7)],[3-f(some5-2,3-4,2-some8,6-3,8-1,4-some1,7-7,some9-6),5-f(some3-some8,5-3,some5-1,3-some1,2-7,6-6,8-some4,4-5),6-f(some2-3,some3-1,5-some1,some5-7,3-6,2-some4,6-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,1-7,some2-6,some3-some4,5-5,some5-8,3-some6,2-some7),5-5)"}]
    <#lemma833>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_646 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_646.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma739> a r:Inference;
  r:gives {
    "queens([1-f(2-some4,4-some5,6-2,8-some1,5-5,some2-4,some6-1,some7-3),4-f(3-some1,some0-5,7-4,2-1,4-3,6-6,8-some3,5-some8),5-f(some9-5,3-4,some0-1,7-3,2-6,4-some3,6-some8,8-8),8-f(some10-3,1-6,some11-some3,some9-some8,3-8,some0-some12,7-7,2-some13)],4,[1,4,8,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(2-some0,4-some1,6-2,8-some2,5-5,some3-4,some4-1,some5-3),[1-f(2-some0,4-some1,6-2,8-some2,5-5,some3-4,some4-1,some5-3),4-f(3-some2,some6-5,7-4,2-1,4-3,6-6,8-some7,5-some8),5-f(some9-5,3-4,some6-1,7-3,2-6,4-some7,6-some8,8-8),8-f(some10-3,1-6,some11-some7,some9-some8,3-8,some6-some12,7-7,2-some13)],[4-f(3-some2,some6-5,7-4,2-1,4-3,6-6,8-some7,5-some8),5-f(some9-5,3-4,some6-1,7-3,2-6,4-some7,6-some8,8-8),8-f(some10-3,1-6,some11-some7,some9-some8,3-8,some6-some12,7-7,2-some13)])"}]
    [ a r:Fact; r:gives {"arg(5,f(2-some0,4-some1,6-2,8-some2,5-5,some3-4,some4-1,some5-3),5-5)"}]
    <#lemma834>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_647 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_647.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma740> a r:Inference;
  r:gives {
    "queens([2-f(2-some5,some3-3,6-2,3-some6,some7-some1,8-1,7-7,some8-4),4-f(5-2,4-some6,2-some1,some3-1,6-7,3-4,some7-6,8-8),5-f(some2-some6,5-some1,4-1,2-7,some3-4,6-6,3-8,some7-5),8-f(some9-7,1-4,some0-6,some2-8,5-5,4-some4,2-some10,some3-some11)],4,[8,5,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-7,1-4,some1-6,some2-8,5-5,4-some3,2-some4,some5-some6),[2-f(2-some7,some5-3,6-2,3-some8,some9-some10,8-1,7-7,some11-4),4-f(5-2,4-some8,2-some10,some5-1,6-7,3-4,some9-6,8-8),5-f(some2-some8,5-some10,4-1,2-7,some5-4,6-6,3-8,some9-5),8-f(some0-7,1-4,some1-6,some2-8,5-5,4-some3,2-some4,some5-some6)],[2-f(2-some7,some5-3,6-2,3-some8,some9-some10,8-1,7-7,some11-4),4-f(5-2,4-some8,2-some10,some5-1,6-7,3-4,some9-6,8-8),5-f(some2-some8,5-some10,4-1,2-7,some5-4,6-6,3-8,some9-5)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-7,1-4,some1-6,some2-8,5-5,4-some3,2-some4,some5-some6),5-5)"}]
    <#lemma835>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_648 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_648.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma741> a r:Inference;
  r:gives {
    "queens([1-f(5-some5,7-some0,4-some1,some2-2,8-4,6-6,some4-1,some6-some3),4-f(some7-2,some8-4,2-6,5-1,7-some3,4-5,some2-3,8-8),5-f(some9-4,some7-6,some8-1,2-some3,5-5,7-3,4-8,some2-7),6-f(3-6,some9-1,some7-some3,some8-5,2-3,5-8,7-7,4-some10)],4,[5,1,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(5-f(some0-4,some1-6,some2-1,2-some3,5-5,7-3,4-8,some4-7),[1-f(5-some5,7-some6,4-some7,some4-2,8-4,6-6,some8-1,some9-some3),4-f(some1-2,some2-4,2-6,5-1,7-some3,4-5,some4-3,8-8),5-f(some0-4,some1-6,some2-1,2-some3,5-5,7-3,4-8,some4-7),6-f(3-6,some0-1,some1-some3,some2-5,2-3,5-8,7-7,4-some10)],[1-f(5-some5,7-some6,4-some7,some4-2,8-4,6-6,some8-1,some9-some3),4-f(some1-2,some2-4,2-6,5-1,7-some3,4-5,some4-3,8-8),6-f(3-6,some0-1,some1-some3,some2-5,2-3,5-8,7-7,4-some10)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-4,some1-6,some2-1,2-some3,5-5,7-3,4-8,some4-7),5-5)"}]
    <#lemma836>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_649 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_649.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma742> a r:Inference;
  r:gives {
    "queens([1-f(some1-some5,3-some6,8-some7,some4-3,7-2,6-6,some8-1,some9-4),3-f(2-some7,4-3,some1-2,3-6,8-1,some4-4,7-7,6-some2),6-f(some10-6,some0-1,5-4,2-7,4-some2,some1-some3,3-5,8-8),8-f(some11-4,1-7,some10-some2,some0-some3,5-5,2-8,4-some12,some1-some13)],4,[8,1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(8-f(some0-4,1-7,some1-some2,some3-some4,5-5,2-8,4-some5,some6-some7),[1-f(some6-some8,3-some9,8-some10,some11-3,7-2,6-6,some12-1,some13-4),3-f(2-some10,4-3,some6-2,3-6,8-1,some11-4,7-7,6-some2),6-f(some1-6,some3-1,5-4,2-7,4-some2,some6-some4,3-5,8-8),8-f(some0-4,1-7,some1-some2,some3-some4,5-5,2-8,4-some5,some6-some7)],[1-f(some6-some8,3-some9,8-some10,some11-3,7-2,6-6,some12-1,some13-4),3-f(2-some10,4-3,some6-2,3-6,8-1,some11-4,7-7,6-some2),6-f(some1-6,some3-1,5-4,2-7,4-some2,some6-some4,3-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-4,1-7,some1-some2,some3-some4,5-5,2-8,4-some5,some6-some7),5-5)"}]
    <#lemma837>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_650 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_650.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma743> a r:Inference;
  r:gives {
    "queens([1-f(some6-some8,3-some9,some10-some11,8-3,7-2,6-6,some12-1,some13-some1),3-f(2-some11,5-3,some6-2,3-6,some10-1,8-some1,7-7,6-5),5-f(4-2,some3-6,2-1,5-some1,some6-7,3-5,some10-4,8-8),6-f(some2-6,4-1,some3-some1,2-7,5-5,some6-4,3-8,some10-some4)],4,[6,1,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(6-f(some0-6,4-1,some1-some2,2-7,5-5,some3-4,3-8,some4-some5),[1-f(some3-some6,3-some7,some4-some8,8-3,7-2,6-6,some9-1,some10-some2),3-f(2-some8,5-3,some3-2,3-6,some4-1,8-some2,7-7,6-5),5-f(4-2,some1-6,2-1,5-some2,some3-7,3-5,some4-4,8-8),6-f(some0-6,4-1,some1-some2,2-7,5-5,some3-4,3-8,some4-some5)],[1-f(some3-some6,3-some7,some4-some8,8-3,7-2,6-6,some9-1,some10-some2),3-f(2-some8,5-3,some3-2,3-6,some4-1,8-some2,7-7,6-5),5-f(4-2,some1-6,2-1,5-some2,some3-7,3-5,some4-4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-6,4-1,some1-some2,2-7,5-5,some3-4,3-8,some4-some5),5-5)"}]
    <#lemma838>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_651 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_651.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma744> a r:Inference;
  r:gives {
    "queens([2-f(5-some2,3-some4,some1-4,some3-3,4-2,8-1,7-7,some5-some7),4-f(2-4,6-3,5-2,3-1,some1-7,some3-some7,4-5,8-8),6-f(some8-2,some9-1,2-7,6-some7,5-5,3-8,some1-some10,some3-6),8-f(some11-7,1-some7,some8-5,some9-8,2-some10,6-6,5-some12,3-some13)],4,[6,8,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(6-f(some0-2,some1-1,2-7,6-some2,5-5,3-8,some3-some4,some5-6),[2-f(5-some6,3-some7,some3-4,some5-3,4-2,8-1,7-7,some8-some2),4-f(2-4,6-3,5-2,3-1,some3-7,some5-some2,4-5,8-8),6-f(some0-2,some1-1,2-7,6-some2,5-5,3-8,some3-some4,some5-6),8-f(some9-7,1-some2,some0-5,some1-8,2-some4,6-6,5-some10,3-some11)],[2-f(5-some6,3-some7,some3-4,some5-3,4-2,8-1,7-7,some8-some2),4-f(2-4,6-3,5-2,3-1,some3-7,some5-some2,4-5,8-8),8-f(some9-7,1-some2,some0-5,some1-8,2-some4,6-6,5-some10,3-some11)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-2,some1-1,2-7,6-some2,5-5,3-8,some3-some4,some5-6),5-5)"}]
    <#lemma839>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_652 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_652.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma745> a r:Inference;
  r:gives {
    "queens([3-f(5-2,3-4,2-some2,6-3,8-some5,4-1,7-7,some3-6),5-f(some7-some2,some8-3,5-some5,3-1,2-7,6-6,8-5,4-some9),6-f(some10-3,some7-some5,some8-1,5-7,3-6,2-5,6-some9,8-8),7-f(some11-some5,some10-1,some7-7,some8-6,5-5,3-some9,2-8,6-some12)],4,[7,5,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(7-f(some0-some1,some2-1,some3-7,some4-6,5-5,3-some5,2-8,6-some6),[3-f(5-2,3-4,2-some7,6-3,8-some1,4-1,7-7,some8-6),5-f(some3-some7,some4-3,5-some1,3-1,2-7,6-6,8-5,4-some5),6-f(some2-3,some3-some1,some4-1,5-7,3-6,2-5,6-some5,8-8),7-f(some0-some1,some2-1,some3-7,some4-6,5-5,3-some5,2-8,6-some6)],[3-f(5-2,3-4,2-some7,6-3,8-some1,4-1,7-7,some8-6),5-f(some3-some7,some4-3,5-some1,3-1,2-7,6-6,8-5,4-some5),6-f(some2-3,some3-some1,some4-1,5-7,3-6,2-5,6-some5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-some1,some2-1,some3-7,some4-6,5-5,3-some5,2-8,6-some6),5-5)"}]
    <#lemma840>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_653 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_653.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma746> a r:Inference;
  r:gives {
    "queens([1-f(2-some3,4-some4,8-2,7-some0,5-5,some2-4,some5-3,some6-1),4-f(some7-some0,3-5,6-4,2-3,4-1,8-some1,7-7,5-some8),6-f(some9-4,some10-3,some7-1,3-some1,6-7,2-some8,4-6,8-8),7-f(some11-3,some9-1,some10-some1,some7-7,3-some8,6-6,2-8,4-some12)],4,[1,7,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(1-f(2-some0,4-some1,8-2,7-some2,5-5,some3-4,some4-3,some5-1),[1-f(2-some0,4-some1,8-2,7-some2,5-5,some3-4,some4-3,some5-1),4-f(some6-some2,3-5,6-4,2-3,4-1,8-some7,7-7,5-some8),6-f(some9-4,some10-3,some6-1,3-some7,6-7,2-some8,4-6,8-8),7-f(some11-3,some9-1,some10-some7,some6-7,3-some8,6-6,2-8,4-some12)],[4-f(some6-some2,3-5,6-4,2-3,4-1,8-some7,7-7,5-some8),6-f(some9-4,some10-3,some6-1,3-some7,6-7,2-some8,4-6,8-8),7-f(some11-3,some9-1,some10-some7,some6-7,3-some8,6-6,2-8,4-some12)])"}]
    [ a r:Fact; r:gives {"arg(5,f(2-some0,4-some1,8-2,7-some2,5-5,some3-4,some4-3,some5-1),5-5)"}]
    <#lemma841>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_654 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_654.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma747> a r:Inference;
  r:gives {
    "queens([2-f(2-some5,7-3,6-2,3-some6,5-5,8-some2,some7-1,some8-4),4-f(some3-2,4-some6,2-5,7-some2,6-1,3-4,5-6,8-8),5-f(some1-some6,some3-5,4-some2,2-1,7-4,6-6,3-8,5-some4),7-f(some9-some2,some0-1,some1-4,some3-6,4-8,2-some4,7-7,6-some10)],4,[2,5,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(2-f(2-some0,7-3,6-2,3-some1,5-5,8-some2,some3-1,some4-4),[2-f(2-some0,7-3,6-2,3-some1,5-5,8-some2,some3-1,some4-4),4-f(some5-2,4-some1,2-5,7-some2,6-1,3-4,5-6,8-8),5-f(some6-some1,some5-5,4-some2,2-1,7-4,6-6,3-8,5-some7),7-f(some8-some2,some9-1,some6-4,some5-6,4-8,2-some7,7-7,6-some10)],[4-f(some5-2,4-some1,2-5,7-some2,6-1,3-4,5-6,8-8),5-f(some6-some1,some5-5,4-some2,2-1,7-4,6-6,3-8,5-some7),7-f(some8-some2,some9-1,some6-4,some5-6,4-8,2-some7,7-7,6-some10)])"}]
    [ a r:Fact; r:gives {"arg(5,f(2-some0,7-3,6-2,3-some1,5-5,8-some2,some3-1,some4-4),5-5)"}]
    <#lemma842>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_655 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_655.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma748> a r:Inference;
  r:gives {
    "queens([2-f(5-some3,7-3,4-some0,3-2,8-4,6-6,some2-1,some4-some1),5-f(some5-2,some6-4,2-6,5-1,7-some1,4-5,3-some7,8-8),6-f(some8-4,some5-6,some6-1,2-some1,5-5,7-some7,4-8,3-7),7-f(some9-6,some8-1,some5-some1,some6-5,2-some7,5-8,7-7,4-some10)],4,[6,2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 5}]
    [ a r:Fact; r:gives {"select(6-f(some0-4,some1-6,some2-1,2-some3,5-5,7-some4,4-8,3-7),[2-f(5-some5,7-3,4-some6,3-2,8-4,6-6,some7-1,some8-some3),5-f(some1-2,some2-4,2-6,5-1,7-some3,4-5,3-some4,8-8),6-f(some0-4,some1-6,some2-1,2-some3,5-5,7-some4,4-8,3-7),7-f(some9-6,some0-1,some1-some3,some2-5,2-some4,5-8,7-7,4-some10)],[2-f(5-some5,7-3,4-some6,3-2,8-4,6-6,some7-1,some8-some3),5-f(some1-2,some2-4,2-6,5-1,7-some3,4-5,3-some4,8-8),7-f(some9-6,some0-1,some1-some3,some2-5,2-some4,5-8,7-7,4-some10)])"}]
    [ a r:Fact; r:gives {"arg(5,f(some0-4,some1-6,some2-1,2-some3,5-5,7-some4,4-8,3-7),5-5)"}]
    <#lemma843>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_656 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_656.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma749> a r:Inference;
  r:gives {
    "constraints(4,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),[some6,some4,some2,some0|some16],[some7,some5,some3,some1|some17])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"arg(4,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),some6-some7)"}]
    [ a r:Fact; r:gives {(4 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> 3}]
    <#lemma844>
  );
  r:rule [ a r:Fact; r:gives {{"arg(avar0,avar1,avar2-avar3)".
    (_:x_0_657 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> _:x_4_657.
    "constraints(avar4,avar1,avar5,avar6)"} => "constraints(avar0,avar1,[avar2|avar5],[avar3|avar6])"}].

<#lemma750> a r:Inference;
  r:gives {
    "constraints(8,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),[some14,some12,some10,some8,some6,some4,some2,some0,some16,some17,some18|some19],[some15,some13,some11,some9,some7,some5,some3,some1,some20,some21,some22,some23|some24])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"arg(8,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),some14-some15)"}]
    [ a r:Fact; r:gives {(8 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> 7}]
    <#lemma464>
  );
  r:rule [ a r:Fact; r:gives {{"arg(avar0,avar1,avar2-avar3)".
    (_:x_0_658 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> _:x_4_658.
    "constraints(avar4,avar1,avar5,avar6)"} => "constraints(avar0,avar1,[avar2|avar5],[avar3|avar6])"}].

<#lemma751> a r:Inference;
  r:gives {
    "board([some25,some26,some27],[6-f(some16-some3,some0-some5,some2-some7,some4-some9,some6-some11,some8-some13,some10-some15,some12-some28),7-f(some17-some5,some16-some7,some0-some9,some2-some11,some4-some13,some6-some15,some8-some28,some10-some29),8-f(some18-some7,some17-some9,some16-some11,some0-some13,some2-some15,some4-some28,some6-some29,some8-some30)],5,8,[some14,some12,some10,some8,some6,some4,some2,some0,some16,some17,some18|some19],[some28,some15,some13,some11,some9,some7,some5,some3,some1,some20,some21,some22,some23|some24])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma845>
    <#lemma846>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_659 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_659.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma752> a r:Inference;
  r:gives {
    "queens([2-f(6-some5,1-some0,some3-some1,5-some2,some4-2,8-5,7-7,some6-4),4-f(2-some1,4-some2,6-2,1-5,some3-7,5-4,some4-3,8-8),7-f(some7-5,3-7,some8-4,2-3,4-8,6-6,1-some9,some3-some10)],5,[7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(7-f(some0-5,3-7,some1-4,2-3,4-8,6-6,1-some2,some3-some4),[2-f(6-some5,1-some6,some3-some7,5-some8,some9-2,8-5,7-7,some10-4),4-f(2-some7,4-some8,6-2,1-5,some3-7,5-4,some9-3,8-8),7-f(some0-5,3-7,some1-4,2-3,4-8,6-6,1-some2,some3-some4)],[2-f(6-some5,1-some6,some3-some7,5-some8,some9-2,8-5,7-7,some10-4),4-f(2-some7,4-some8,6-2,1-5,some3-7,5-4,some9-3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-5,3-7,some1-4,2-3,4-8,6-6,1-some2,some3-some4),6-6)"}]
    <#lemma847>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_660 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_660.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma753> a r:Inference;
  r:gives {
    "queens([2-f(some2-some5,1-some6,4-some7,6-some8,8-4,some9-2,7-7,some10-6),4-f(some1-some7,5-some8,some2-4,1-2,4-7,6-6,8-3,some9-5),5-f(2-some8,some1-4,5-2,some2-7,1-6,4-3,6-5,8-8)],5,[4,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(4-f(some0-some1,5-some2,some3-4,1-2,4-7,6-6,8-3,some4-5),[2-f(some3-some5,1-some6,4-some1,6-some2,8-4,some4-2,7-7,some7-6),4-f(some0-some1,5-some2,some3-4,1-2,4-7,6-6,8-3,some4-5),5-f(2-some2,some0-4,5-2,some3-7,1-6,4-3,6-5,8-8)],[2-f(some3-some5,1-some6,4-some1,6-some2,8-4,some4-2,7-7,some7-6),5-f(2-some2,some0-4,5-2,some3-7,1-6,4-3,6-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,5-some2,some3-4,1-2,4-7,6-6,8-3,some4-5),6-6)"}]
    <#lemma848>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_661 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_661.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma754> a r:Inference;
  r:gives {
    "queens([2-f(3-some6,1-some7,some8-some9,7-some10,some11-3,6-6,8-2,some12-4),3-f(4-some7,3-some9,1-some10,some8-3,7-6,some11-2,6-4,8-8),5-f(some2-some10,5-3,4-6,3-2,1-4,some8-8,7-7,some11-5)],5,[2,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(2-f(3-some0,1-some1,some2-some3,7-some4,some5-3,6-6,8-2,some6-4),[2-f(3-some0,1-some1,some2-some3,7-some4,some5-3,6-6,8-2,some6-4),3-f(4-some1,3-some3,1-some4,some2-3,7-6,some5-2,6-4,8-8),5-f(some7-some4,5-3,4-6,3-2,1-4,some2-8,7-7,some5-5)],[3-f(4-some1,3-some3,1-some4,some2-3,7-6,some5-2,6-4,8-8),5-f(some7-some4,5-3,4-6,3-2,1-4,some2-8,7-7,some5-5)])"}]
    [ a r:Fact; r:gives {"arg(6,f(3-some0,1-some1,some2-some3,7-some4,some5-3,6-6,8-2,some6-4),6-6)"}]
    <#lemma849>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_662 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_662.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma755> a r:Inference;
  r:gives {
    "queens([3-f(3-some2,some0-some3,1-some4,7-5,6-3,5-2,some5-6,8-8),4-f(some7-some3,3-some4,some0-5,1-3,7-2,6-6,5-8,some5-4),6-f(2-5,4-3,some7-2,3-6,some0-8,1-4,7-7,6-some8)],5,[4,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(4-f(some0-some1,3-some2,some3-5,1-3,7-2,6-6,5-8,some4-4),[3-f(3-some5,some3-some1,1-some2,7-5,6-3,5-2,some4-6,8-8),4-f(some0-some1,3-some2,some3-5,1-3,7-2,6-6,5-8,some4-4),6-f(2-5,4-3,some0-2,3-6,some3-8,1-4,7-7,6-some6)],[3-f(3-some5,some3-some1,1-some2,7-5,6-3,5-2,some4-6,8-8),6-f(2-5,4-3,some0-2,3-6,some3-8,1-4,7-7,6-some6)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,3-some2,some3-5,1-3,7-2,6-6,5-8,some4-4),6-6)"}]
    <#lemma850>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_663 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_663.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma756> a r:Inference;
  r:gives {
    "queens([1-f(7-some6,some2-1,5-some0,8-some1,some3-2,6-6,some7-5,some8-3),5-f(4-2,3-6,2-5,1-3,7-some4,some2-some5,5-4,8-8),7-f(some9-5,some10-3,4-some4,3-some5,2-4,1-8,7-7,some2-some11)],5,[1,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(1-f(7-some0,some1-1,5-some2,8-some3,some4-2,6-6,some5-5,some6-3),[1-f(7-some0,some1-1,5-some2,8-some3,some4-2,6-6,some5-5,some6-3),5-f(4-2,3-6,2-5,1-3,7-some7,some1-some8,5-4,8-8),7-f(some9-5,some10-3,4-some7,3-some8,2-4,1-8,7-7,some1-some11)],[5-f(4-2,3-6,2-5,1-3,7-some7,some1-some8,5-4,8-8),7-f(some9-5,some10-3,4-some7,3-some8,2-4,1-8,7-7,some1-some11)])"}]
    [ a r:Fact; r:gives {"arg(6,f(7-some0,some1-1,5-some2,8-some3,some4-2,6-6,some5-5,some6-3),6-6)"}]
    <#lemma851>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_664 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_664.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma757> a r:Inference;
  r:gives {
    "queens([4-f(2-4,6-some2,1-2,some1-5,7-some3,5-3,4-some5,8-8),6-f(some6-2,3-5,2-some3,6-3,1-some5,some1-8,7-7,5-6),8-f(some7-some3,some8-3,some6-some5,3-8,2-7,6-6,1-some9,some1-some10)],5,[8,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-3,some3-some4,3-8,2-7,6-6,1-some5,some6-some7),[4-f(2-4,6-some8,1-2,some6-5,7-some1,5-3,4-some4,8-8),6-f(some3-2,3-5,2-some1,6-3,1-some4,some6-8,7-7,5-6),8-f(some0-some1,some2-3,some3-some4,3-8,2-7,6-6,1-some5,some6-some7)],[4-f(2-4,6-some8,1-2,some6-5,7-some1,5-3,4-some4,8-8),6-f(some3-2,3-5,2-some1,6-3,1-some4,some6-8,7-7,5-6)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,some2-3,some3-some4,3-8,2-7,6-6,1-some5,some6-some7),6-6)"}]
    <#lemma852>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_665 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_665.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma758> a r:Inference;
  r:gives {
    "queens([3-f(6-some2,1-some4,4-5,7-2,some1-4,some3-some7,5-3,8-8),6-f(some8-2,3-4,2-some7,6-3,1-8,4-some9,7-7,some1-6),8-f(some10-some7,some11-3,some8-8,3-some9,2-7,6-6,1-some12,4-some13)],5,[8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-3,some3-8,3-some4,2-7,6-6,1-some5,4-some6),[3-f(6-some7,1-some8,4-5,7-2,some9-4,some10-some1,5-3,8-8),6-f(some3-2,3-4,2-some1,6-3,1-8,4-some4,7-7,some9-6),8-f(some0-some1,some2-3,some3-8,3-some4,2-7,6-6,1-some5,4-some6)],[3-f(6-some7,1-some8,4-5,7-2,some9-4,some10-some1,5-3,8-8),6-f(some3-2,3-4,2-some1,6-3,1-8,4-some4,7-7,some9-6)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,some2-3,some3-8,3-some4,2-7,6-6,1-some5,4-some6),6-6)"}]
    <#lemma853>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_666 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_666.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma759> a r:Inference;
  r:gives {
    "queens([3-f(6-3,1-some0,some3-some1,5-some2,3-2,8-5,7-7,some5-4),5-f(2-some1,4-some2,6-2,1-5,some3-7,5-4,3-some4,8-8),8-f(some6-5,some7-7,some8-4,2-some4,4-8,6-6,1-some9,some3-some10)],5,[8,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(8-f(some0-5,some1-7,some2-4,2-some3,4-8,6-6,1-some4,some5-some6),[3-f(6-3,1-some7,some5-some8,5-some9,3-2,8-5,7-7,some10-4),5-f(2-some8,4-some9,6-2,1-5,some5-7,5-4,3-some3,8-8),8-f(some0-5,some1-7,some2-4,2-some3,4-8,6-6,1-some4,some5-some6)],[3-f(6-3,1-some7,some5-some8,5-some9,3-2,8-5,7-7,some10-4),5-f(2-some8,4-some9,6-2,1-5,some5-7,5-4,3-some3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-5,some1-7,some2-4,2-some3,4-8,6-6,1-some4,some5-some6),6-6)"}]
    <#lemma854>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_667 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_667.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma760> a r:Inference;
  r:gives {
    "queens([4-f(some7-some2,some8-5,1-4,7-2,4-some6,6-6,8-3,5-some9),5-f(2-5,some7-4,some8-2,1-some6,7-6,4-3,6-some9,8-8),7-f(some10-2,3-some6,2-6,some7-3,some8-some9,1-8,7-7,4-some11)],5,[4,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(4-f(some0-some1,some2-5,1-4,7-2,4-some3,6-6,8-3,5-some4),[4-f(some0-some1,some2-5,1-4,7-2,4-some3,6-6,8-3,5-some4),5-f(2-5,some0-4,some2-2,1-some3,7-6,4-3,6-some4,8-8),7-f(some5-2,3-some3,2-6,some0-3,some2-some4,1-8,7-7,4-some6)],[5-f(2-5,some0-4,some2-2,1-some3,7-6,4-3,6-some4,8-8),7-f(some5-2,3-some3,2-6,some0-3,some2-some4,1-8,7-7,4-some6)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,some2-5,1-4,7-2,4-some3,6-6,8-3,5-some4),6-6)"}]
    <#lemma855>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_668 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_668.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma761> a r:Inference;
  r:gives {
    "queens([1-f(3-some6,6-1,some7-some8,some9-some10,8-3,some11-some12,7-7,some13-2),4-f(5-some10,4-3,1-some12,3-7,6-2,some7-4,some9-6,8-8),5-f(some2-3,5-some12,4-7,1-2,3-4,6-6,some7-8,some9-5)],5,[5,1,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(5-f(some0-3,5-some1,4-7,1-2,3-4,6-6,some2-8,some3-5),[1-f(3-some4,6-1,some2-some5,some3-some6,8-3,some7-some1,7-7,some8-2),4-f(5-some6,4-3,1-some1,3-7,6-2,some2-4,some3-6,8-8),5-f(some0-3,5-some1,4-7,1-2,3-4,6-6,some2-8,some3-5)],[1-f(3-some4,6-1,some2-some5,some3-some6,8-3,some7-some1,7-7,some8-2),4-f(5-some6,4-3,1-some1,3-7,6-2,some2-4,some3-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-3,5-some1,4-7,1-2,3-4,6-6,some2-8,some3-5),6-6)"}]
    <#lemma856>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_669 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_669.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma762> a r:Inference;
  r:gives {
    "queens([3-f(3-some2,1-some4,some0-5,7-some5,6-3,some3-2,5-6,8-8),4-f(some8-some4,3-5,1-some5,some0-3,7-2,6-6,some3-8,5-4),6-f(2-some5,4-3,some8-2,3-6,1-8,some0-4,7-7,6-some9)],5,[4,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(4-f(some0-some1,3-5,1-some2,some3-3,7-2,6-6,some4-8,5-4),[3-f(3-some5,1-some1,some3-5,7-some2,6-3,some4-2,5-6,8-8),4-f(some0-some1,3-5,1-some2,some3-3,7-2,6-6,some4-8,5-4),6-f(2-some2,4-3,some0-2,3-6,1-8,some3-4,7-7,6-some6)],[3-f(3-some5,1-some1,some3-5,7-some2,6-3,some4-2,5-6,8-8),6-f(2-some2,4-3,some0-2,3-6,1-8,some3-4,7-7,6-some6)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,3-5,1-some2,some3-3,7-2,6-6,some4-8,5-4),6-6)"}]
    <#lemma857>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_670 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_670.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma763> a r:Inference;
  r:gives {
    "queens([4-f(3-4,some0-some2,1-some3,7-5,6-3,5-2,4-6,8-8),5-f(some5-some2,3-some3,some0-5,1-3,7-2,6-6,5-8,4-some6),7-f(2-5,some7-3,some5-2,3-6,some0-8,1-some6,7-7,6-some8)],5,[5,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(5-f(some0-some1,3-some2,some3-5,1-3,7-2,6-6,5-8,4-some4),[4-f(3-4,some3-some1,1-some2,7-5,6-3,5-2,4-6,8-8),5-f(some0-some1,3-some2,some3-5,1-3,7-2,6-6,5-8,4-some4),7-f(2-5,some5-3,some0-2,3-6,some3-8,1-some4,7-7,6-some6)],[4-f(3-4,some3-some1,1-some2,7-5,6-3,5-2,4-6,8-8),7-f(2-5,some5-3,some0-2,3-6,some3-8,1-some4,7-7,6-some6)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,3-some2,some3-5,1-3,7-2,6-6,5-8,4-some4),6-6)"}]
    <#lemma858>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_671 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_671.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma764> a r:Inference;
  r:gives {
    "queens([2-f(4-2,some5-1,2-some7,8-some8,7-some9,6-6,some10-4,some11-3),4-f(5-some7,1-some8,4-some9,some5-6,2-4,8-3,7-7,6-some3),6-f(some2-some9,3-6,5-4,1-3,4-7,some5-some3,2-5,8-8)],5,[2,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(2-f(4-2,some0-1,2-some1,8-some2,7-some3,6-6,some4-4,some5-3),[2-f(4-2,some0-1,2-some1,8-some2,7-some3,6-6,some4-4,some5-3),4-f(5-some1,1-some2,4-some3,some0-6,2-4,8-3,7-7,6-some6),6-f(some7-some3,3-6,5-4,1-3,4-7,some0-some6,2-5,8-8)],[4-f(5-some1,1-some2,4-some3,some0-6,2-4,8-3,7-7,6-some6),6-f(some7-some3,3-6,5-4,1-3,4-7,some0-some6,2-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(4-2,some0-1,2-some1,8-some2,7-some3,6-6,some4-4,some5-3),6-6)"}]
    <#lemma859>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_672 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_672.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma765> a r:Inference;
  r:gives {
    "queens([4-f(2-3,1-5,6-2,some0-some5,3-some7,8-some8,7-7,5-4),6-f(some9-2,4-some5,2-some7,1-some8,6-7,some0-4,3-6,8-8),7-f(some10-some5,some9-some7,4-some8,2-7,1-4,6-6,some0-8,3-some11)],5,[7,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(7-f(some0-some1,some2-some3,4-some4,2-7,1-4,6-6,some5-8,3-some6),[4-f(2-3,1-5,6-2,some5-some1,3-some3,8-some4,7-7,5-4),6-f(some2-2,4-some1,2-some3,1-some4,6-7,some5-4,3-6,8-8),7-f(some0-some1,some2-some3,4-some4,2-7,1-4,6-6,some5-8,3-some6)],[4-f(2-3,1-5,6-2,some5-some1,3-some3,8-some4,7-7,5-4),6-f(some2-2,4-some1,2-some3,1-some4,6-7,some5-4,3-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,some2-some3,4-some4,2-7,1-4,6-6,some5-8,3-some6),6-6)"}]
    <#lemma860>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_673 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_673.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma766> a r:Inference;
  r:gives {
    "queens([1-f(7-some3,3-some4,6-1,some5-3,some6-some7,some8-2,some9-some1,8-8),4-f(2-3,1-some7,5-2,7-some1,3-8,6-6,some5-5,some6-4),7-f(some10-some1,some0-8,4-6,2-5,1-4,5-some2,7-7,3-some11)],5,[4,7,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(4-f(2-3,1-some0,5-2,7-some1,3-8,6-6,some2-5,some3-4),[1-f(7-some4,3-some5,6-1,some2-3,some3-some0,some6-2,some7-some1,8-8),4-f(2-3,1-some0,5-2,7-some1,3-8,6-6,some2-5,some3-4),7-f(some8-some1,some9-8,4-6,2-5,1-4,5-some10,7-7,3-some11)],[1-f(7-some4,3-some5,6-1,some2-3,some3-some0,some6-2,some7-some1,8-8),7-f(some8-some1,some9-8,4-6,2-5,1-4,5-some10,7-7,3-some11)])"}]
    [ a r:Fact; r:gives {"arg(6,f(2-3,1-some0,5-2,7-some1,3-8,6-6,some2-5,some3-4),6-6)"}]
    <#lemma861>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_674 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_674.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma767> a r:Inference;
  r:gives {
    "queens([2-f(7-some4,some1-1,5-4,8-some0,4-2,6-6,some5-5,some6-3),6-f(some7-2,3-6,2-5,1-3,7-some2,some1-some3,5-some8,8-8),8-f(some9-5,some10-3,some7-some2,3-some3,2-some8,1-8,7-7,some1-some11)],5,[2,8,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(2-f(7-some0,some1-1,5-4,8-some2,4-2,6-6,some3-5,some4-3),[2-f(7-some0,some1-1,5-4,8-some2,4-2,6-6,some3-5,some4-3),6-f(some5-2,3-6,2-5,1-3,7-some6,some1-some7,5-some8,8-8),8-f(some9-5,some10-3,some5-some6,3-some7,2-some8,1-8,7-7,some1-some11)],[6-f(some5-2,3-6,2-5,1-3,7-some6,some1-some7,5-some8,8-8),8-f(some9-5,some10-3,some5-some6,3-some7,2-some8,1-8,7-7,some1-some11)])"}]
    [ a r:Fact; r:gives {"arg(6,f(7-some0,some1-1,5-4,8-some2,4-2,6-6,some3-5,some4-3),6-6)"}]
    <#lemma862>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_675 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_675.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma768> a r:Inference;
  r:gives {
    "queens([2-f(6-some2,4-1,some1-some4,8-5,some3-2,5-4,7-7,some5-some7),6-f(3-2,some8-4,2-7,1-some7,6-3,4-some9,some1-6,8-8),7-f(some10-4,3-7,some8-some7,2-3,1-some9,6-6,4-8,some1-some11)],5,[7,2,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(7-f(some0-4,3-7,some1-some2,2-3,1-some3,6-6,4-8,some4-some5),[2-f(6-some6,4-1,some4-some7,8-5,some8-2,5-4,7-7,some9-some2),6-f(3-2,some1-4,2-7,1-some2,6-3,4-some3,some4-6,8-8),7-f(some0-4,3-7,some1-some2,2-3,1-some3,6-6,4-8,some4-some5)],[2-f(6-some6,4-1,some4-some7,8-5,some8-2,5-4,7-7,some9-some2),6-f(3-2,some1-4,2-7,1-some2,6-3,4-some3,some4-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-4,3-7,some1-some2,2-3,1-some3,6-6,4-8,some4-some5),6-6)"}]
    <#lemma863>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_676 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_676.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma769> a r:Inference;
  r:gives {
    "queens([1-f(7-some7,3-some8,some9-1,some10-3,8-some11,6-6,some12-2,some13-4),4-f(5-3,1-some11,4-6,7-2,3-4,some9-some2,some10-some4,8-8),7-f(some1-2,some3-4,2-some2,5-some4,1-8,4-5,7-7,3-some5)],5,[1,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(1-f(7-some0,3-some1,some2-1,some3-3,8-some4,6-6,some5-2,some6-4),[1-f(7-some0,3-some1,some2-1,some3-3,8-some4,6-6,some5-2,some6-4),4-f(5-3,1-some4,4-6,7-2,3-4,some2-some7,some3-some8,8-8),7-f(some9-2,some10-4,2-some7,5-some8,1-8,4-5,7-7,3-some11)],[4-f(5-3,1-some4,4-6,7-2,3-4,some2-some7,some3-some8,8-8),7-f(some9-2,some10-4,2-some7,5-some8,1-8,4-5,7-7,3-some11)])"}]
    [ a r:Fact; r:gives {"arg(6,f(7-some0,3-some1,some2-1,some3-3,8-some4,6-6,some5-2,some6-4),6-6)"}]
    <#lemma864>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_677 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_677.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma770> a r:Inference;
  r:gives {
    "queens([4-f(4-3,1-5,7-some4,some0-2,3-some7,6-6,8-4,5-some8),5-f(2-5,4-some4,1-2,7-some7,some0-6,3-4,6-some8,8-8),8-f(some9-some7,some10-6,some11-4,2-some8,4-8,1-some12,7-7,some0-some13)],5,[4,8,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(4-f(4-3,1-5,7-some0,some1-2,3-some2,6-6,8-4,5-some3),[4-f(4-3,1-5,7-some0,some1-2,3-some2,6-6,8-4,5-some3),5-f(2-5,4-some0,1-2,7-some2,some1-6,3-4,6-some3,8-8),8-f(some4-some2,some5-6,some6-4,2-some3,4-8,1-some7,7-7,some1-some8)],[5-f(2-5,4-some0,1-2,7-some2,some1-6,3-4,6-some3,8-8),8-f(some4-some2,some5-6,some6-4,2-some3,4-8,1-some7,7-7,some1-some8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(4-3,1-5,7-some0,some1-2,3-some2,6-6,8-4,5-some3),6-6)"}]
    <#lemma865>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_678 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_678.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma771> a r:Inference;
  r:gives {
    "queens([1-f(5-some5,3-some6,some2-1,some3-3,8-some0,6-6,some7-2,some8-some1),4-f(4-3,1-some0,7-6,5-2,3-some1,some2-5,some3-4,8-8),8-f(some9-some1,some10-5,some11-4,2-8,4-some4,1-some12,7-7,5-some13)],5,[1,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(1-f(5-some0,3-some1,some2-1,some3-3,8-some4,6-6,some5-2,some6-some7),[1-f(5-some0,3-some1,some2-1,some3-3,8-some4,6-6,some5-2,some6-some7),4-f(4-3,1-some4,7-6,5-2,3-some7,some2-5,some3-4,8-8),8-f(some8-some7,some9-5,some10-4,2-8,4-some11,1-some12,7-7,5-some13)],[4-f(4-3,1-some4,7-6,5-2,3-some7,some2-5,some3-4,8-8),8-f(some8-some7,some9-5,some10-4,2-8,4-some11,1-some12,7-7,5-some13)])"}]
    [ a r:Fact; r:gives {"arg(6,f(5-some0,3-some1,some2-1,some3-3,8-some4,6-6,some5-2,some6-some7),6-6)"}]
    <#lemma866>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_679 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_679.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma772> a r:Inference;
  r:gives {
    "queens([2-f(3-some7,7-1,6-4,some8-some9,4-3,some10-2,some11-some1,8-8),5-f(2-some9,5-3,1-2,3-some1,7-8,6-6,some8-some4,4-5),7-f(some2-2,some3-some1,2-8,5-6,1-some4,3-5,7-7,6-some5)],5,[5,7,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(5-f(2-some0,5-3,1-2,3-some1,7-8,6-6,some2-some3,4-5),[2-f(3-some4,7-1,6-4,some2-some0,4-3,some5-2,some6-some1,8-8),5-f(2-some0,5-3,1-2,3-some1,7-8,6-6,some2-some3,4-5),7-f(some7-2,some8-some1,2-8,5-6,1-some3,3-5,7-7,6-some9)],[2-f(3-some4,7-1,6-4,some2-some0,4-3,some5-2,some6-some1,8-8),7-f(some7-2,some8-some1,2-8,5-6,1-some3,3-5,7-7,6-some9)])"}]
    [ a r:Fact; r:gives {"arg(6,f(2-some0,5-3,1-2,3-some1,7-8,6-6,some2-some3,4-5),6-6)"}]
    <#lemma867>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_680 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_680.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma773> a r:Inference;
  r:gives {
    "queens([1-f(7-some7,6-some8,4-1,some9-some10,some11-4,some12-3,some13-2,8-8),5-f(2-4,5-3,1-2,3-8,7-some2,6-6,4-some4,some9-5),7-f(some1-2,some3-8,2-some2,5-6,1-some4,3-5,7-7,6-some5)],5,[5,7,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(5-f(2-4,5-3,1-2,3-8,7-some0,6-6,4-some1,some2-5),[1-f(7-some3,6-some4,4-1,some2-some5,some6-4,some7-3,some8-2,8-8),5-f(2-4,5-3,1-2,3-8,7-some0,6-6,4-some1,some2-5),7-f(some9-2,some10-8,2-some0,5-6,1-some1,3-5,7-7,6-some11)],[1-f(7-some3,6-some4,4-1,some2-some5,some6-4,some7-3,some8-2,8-8),7-f(some9-2,some10-8,2-some0,5-6,1-some1,3-5,7-7,6-some11)])"}]
    [ a r:Fact; r:gives {"arg(6,f(2-4,5-3,1-2,3-8,7-some0,6-6,4-some1,some2-5),6-6)"}]
    <#lemma868>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_681 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_681.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma774> a r:Inference;
  r:gives {
    "queens([2-f(6-some5,some3-1,5-4,7-some1,4-some2,some4-2,some6-5,8-8),5-f(2-some1,some0-some2,1-2,6-5,some3-8,5-3,7-7,4-6),7-f(some7-2,3-5,2-8,some0-3,1-7,6-6,some3-some8,5-some9)],5,[7,5,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(7-f(some0-2,3-5,2-8,some1-3,1-7,6-6,some2-some3,5-some4),[2-f(6-some5,some2-1,5-4,7-some6,4-some7,some8-2,some9-5,8-8),5-f(2-some6,some1-some7,1-2,6-5,some2-8,5-3,7-7,4-6),7-f(some0-2,3-5,2-8,some1-3,1-7,6-6,some2-some3,5-some4)],[2-f(6-some5,some2-1,5-4,7-some6,4-some7,some8-2,some9-5,8-8),5-f(2-some6,some1-some7,1-2,6-5,some2-8,5-3,7-7,4-6)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-2,3-5,2-8,some1-3,1-7,6-6,some2-some3,5-some4),6-6)"}]
    <#lemma869>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_682 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_682.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma775> a r:Inference;
  r:gives {
    "queens([2-f(6-some5,5-1,some3-4,some4-some0,4-some2,8-2,7-7,some6-5),4-f(some1-4,1-some0,6-some2,5-2,some3-7,some4-5,4-3,8-8),7-f(some7-2,3-7,2-5,some1-3,1-8,6-6,5-some8,some3-some9)],5,[7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(7-f(some0-2,3-7,2-5,some1-3,1-8,6-6,5-some2,some3-some4),[2-f(6-some5,5-1,some3-4,some6-some7,4-some8,8-2,7-7,some9-5),4-f(some1-4,1-some7,6-some8,5-2,some3-7,some6-5,4-3,8-8),7-f(some0-2,3-7,2-5,some1-3,1-8,6-6,5-some2,some3-some4)],[2-f(6-some5,5-1,some3-4,some6-some7,4-some8,8-2,7-7,some9-5),4-f(some1-4,1-some7,6-some8,5-2,some3-7,some6-5,4-3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-2,3-7,2-5,some1-3,1-8,6-6,5-some2,some3-some4),6-6)"}]
    <#lemma870>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_683 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_683.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma776> a r:Inference;
  r:gives {
    "queens([1-f(7-some6,5-some7,4-1,8-some1,some4-4,6-6,some8-2,some9-5),5-f(2-4,some0-6,1-2,some2-5,7-some3,5-3,4-some5,8-8),7-f(some10-2,3-5,2-some3,some0-3,1-some5,some2-8,7-7,5-some11)],5,[1,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(1-f(7-some0,5-some1,4-1,8-some2,some3-4,6-6,some4-2,some5-5),[1-f(7-some0,5-some1,4-1,8-some2,some3-4,6-6,some4-2,some5-5),5-f(2-4,some6-6,1-2,some7-5,7-some8,5-3,4-some9,8-8),7-f(some10-2,3-5,2-some8,some6-3,1-some9,some7-8,7-7,5-some11)],[5-f(2-4,some6-6,1-2,some7-5,7-some8,5-3,4-some9,8-8),7-f(some10-2,3-5,2-some8,some6-3,1-some9,some7-8,7-7,5-some11)])"}]
    [ a r:Fact; r:gives {"arg(6,f(7-some0,5-some1,4-1,8-some2,some3-4,6-6,some4-2,some5-5),6-6)"}]
    <#lemma871>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_684 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_684.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma777> a r:Inference;
  r:gives {
    "queens([1-f(5-some5,3-some6,8-1,7-3,some7-some0,6-6,some8-some2,some9-2),4-f(some1-3,1-some0,some3-6,5-some2,3-2,8-5,7-7,some7-4),6-f(2-6,4-some2,some1-2,1-5,some3-7,5-4,3-some4,8-8)],5,[1,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(1-f(5-some0,3-some1,8-1,7-3,some2-some3,6-6,some4-some5,some6-2),[1-f(5-some0,3-some1,8-1,7-3,some2-some3,6-6,some4-some5,some6-2),4-f(some7-3,1-some3,some8-6,5-some5,3-2,8-5,7-7,some2-4),6-f(2-6,4-some5,some7-2,1-5,some8-7,5-4,3-some9,8-8)],[4-f(some7-3,1-some3,some8-6,5-some5,3-2,8-5,7-7,some2-4),6-f(2-6,4-some5,some7-2,1-5,some8-7,5-4,3-some9,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(5-some0,3-some1,8-1,7-3,some2-some3,6-6,some4-some5,some6-2),6-6)"}]
    <#lemma872>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_685 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_685.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma778> a r:Inference;
  r:gives {
    "queens([1-f(some2-some4,3-some5,6-1,8-3,some6-some7,some8-some0,7-7,some9-2),4-f(some1-3,1-some7,5-some0,some2-7,3-2,6-6,8-5,some6-4),5-f(4-some7,some1-some0,1-7,5-2,some2-6,3-5,6-4,8-8)],5,[4,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(4-f(some0-3,1-some1,5-some2,some3-7,3-2,6-6,8-5,some4-4),[1-f(some3-some5,3-some6,6-1,8-3,some4-some1,some7-some2,7-7,some8-2),4-f(some0-3,1-some1,5-some2,some3-7,3-2,6-6,8-5,some4-4),5-f(4-some1,some0-some2,1-7,5-2,some3-6,3-5,6-4,8-8)],[1-f(some3-some5,3-some6,6-1,8-3,some4-some1,some7-some2,7-7,some8-2),5-f(4-some1,some0-some2,1-7,5-2,some3-6,3-5,6-4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-3,1-some1,5-some2,some3-7,3-2,6-6,8-5,some4-4),6-6)"}]
    <#lemma873>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_686 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_686.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma779> a r:Inference;
  r:gives {
    "queens([2-f(3-some2,6-1,some1-some4,some3-5,8-3,5-some6,7-7,some5-2),5-f(some8-5,4-3,1-some6,3-7,6-2,some1-4,some3-6,8-8),6-f(some9-3,some8-some6,4-7,1-2,3-4,6-6,some1-8,some3-some10)],5,[6,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(6-f(some0-3,some1-some2,4-7,1-2,3-4,6-6,some3-8,some4-some5),[2-f(3-some6,6-1,some3-some7,some4-5,8-3,5-some2,7-7,some8-2),5-f(some1-5,4-3,1-some2,3-7,6-2,some3-4,some4-6,8-8),6-f(some0-3,some1-some2,4-7,1-2,3-4,6-6,some3-8,some4-some5)],[2-f(3-some6,6-1,some3-some7,some4-5,8-3,5-some2,7-7,some8-2),5-f(some1-5,4-3,1-some2,3-7,6-2,some3-4,some4-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-3,some1-some2,4-7,1-2,3-4,6-6,some3-8,some4-some5),6-6)"}]
    <#lemma874>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_687 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_687.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma780> a r:Inference;
  r:gives {
    "queens([3-f(3-some1,6-1,some0-some2,2-5,8-3,5-some4,7-7,some3-some6),6-f(some7-5,4-3,1-some4,3-7,6-some6,some0-4,2-6,8-8),7-f(some8-3,some7-some4,4-7,1-some6,3-4,6-6,some0-8,2-some9)],5,[7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(7-f(some0-3,some1-some2,4-7,1-some3,3-4,6-6,some4-8,2-some5),[3-f(3-some6,6-1,some4-some7,2-5,8-3,5-some2,7-7,some8-some3),6-f(some1-5,4-3,1-some2,3-7,6-some3,some4-4,2-6,8-8),7-f(some0-3,some1-some2,4-7,1-some3,3-4,6-6,some4-8,2-some5)],[3-f(3-some6,6-1,some4-some7,2-5,8-3,5-some2,7-7,some8-some3),6-f(some1-5,4-3,1-some2,3-7,6-some3,some4-4,2-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-3,some1-some2,4-7,1-some3,3-4,6-6,some4-8,2-some5),6-6)"}]
    <#lemma875>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_688 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_688.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma781> a r:Inference;
  r:gives {
    "queens([2-f(5-2,7-some4,2-1,some3-some5,6-some1,some6-3,some7-6,8-8),3-f(3-some4,5-1,7-some5,2-some1,some3-3,6-6,some6-8,some7-5),7-f(some8-3,some0-6,4-8,1-5,3-4,5-some2,7-7,2-some9)],5,[3,7,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(3-f(3-some0,5-1,7-some1,2-some2,some3-3,6-6,some4-8,some5-5),[2-f(5-2,7-some0,2-1,some3-some1,6-some2,some4-3,some5-6,8-8),3-f(3-some0,5-1,7-some1,2-some2,some3-3,6-6,some4-8,some5-5),7-f(some6-3,some7-6,4-8,1-5,3-4,5-some8,7-7,2-some9)],[2-f(5-2,7-some0,2-1,some3-some1,6-some2,some4-3,some5-6,8-8),7-f(some6-3,some7-6,4-8,1-5,3-4,5-some8,7-7,2-some9)])"}]
    [ a r:Fact; r:gives {"arg(6,f(3-some0,5-1,7-some1,2-some2,some3-3,6-6,some4-8,some5-5),6-6)"}]
    <#lemma876>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_689 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_689.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma782> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,8-some6,some3-2,some7-1,7-some8,6-6,some9-3,some10-some1),3-f(3-2,5-1,2-some8,8-6,some3-3,some7-some1,7-7,6-5),7-f(some11-3,some0-some1,4-7,1-5,3-4,5-some2,2-some4,8-8)],5,[1,3,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(1-f(2-some0,8-some1,some2-2,some3-1,7-some4,6-6,some5-3,some6-some7),[1-f(2-some0,8-some1,some2-2,some3-1,7-some4,6-6,some5-3,some6-some7),3-f(3-2,5-1,2-some4,8-6,some2-3,some3-some7,7-7,6-5),7-f(some8-3,some9-some7,4-7,1-5,3-4,5-some10,2-some11,8-8)],[3-f(3-2,5-1,2-some4,8-6,some2-3,some3-some7,7-7,6-5),7-f(some8-3,some9-some7,4-7,1-5,3-4,5-some10,2-some11,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(2-some0,8-some1,some2-2,some3-1,7-some4,6-6,some5-3,some6-some7),6-6)"}]
    <#lemma877>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_690 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_690.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma783> a r:Inference;
  r:gives {
    "queens([1-f(2-some4,4-some5,some3-2,8-1,some6-some7,some8-4,7-7,some9-some1),5-f(3-some7,1-4,6-7,5-some1,2-3,4-5,some3-some2,8-8),8-f(some10-some1,some11-3,some0-5,3-some2,1-8,6-6,5-some12,2-some13)],5,[8,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-3,some3-5,3-some4,1-8,6-6,5-some5,2-some6),[1-f(2-some7,4-some8,some9-2,8-1,some10-some11,some12-4,7-7,some13-some1),5-f(3-some11,1-4,6-7,5-some1,2-3,4-5,some9-some4,8-8),8-f(some0-some1,some2-3,some3-5,3-some4,1-8,6-6,5-some5,2-some6)],[1-f(2-some7,4-some8,some9-2,8-1,some10-some11,some12-4,7-7,some13-some1),5-f(3-some11,1-4,6-7,5-some1,2-3,4-5,some9-some4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,some2-3,some3-5,3-some4,1-8,6-6,5-some5,2-some6),6-6)"}]
    <#lemma878>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_691 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_691.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma784> a r:Inference;
  r:gives {
    "queens([1-f(2-some3,4-some4,7-2,some5-1,some6-some7,some8-4,some9-some1,8-8),5-f(3-some7,1-4,6-some1,5-8,2-3,4-5,7-7,some5-some2),8-f(some10-8,some11-3,some0-5,3-7,1-some2,6-6,5-some12,2-some13)],5,[8,5,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(8-f(some0-8,some1-3,some2-5,3-7,1-some3,6-6,5-some4,2-some5),[1-f(2-some6,4-some7,7-2,some8-1,some9-some10,some11-4,some12-some13,8-8),5-f(3-some10,1-4,6-some13,5-8,2-3,4-5,7-7,some8-some3),8-f(some0-8,some1-3,some2-5,3-7,1-some3,6-6,5-some4,2-some5)],[1-f(2-some6,4-some7,7-2,some8-1,some9-some10,some11-4,some12-some13,8-8),5-f(3-some10,1-4,6-some13,5-8,2-3,4-5,7-7,some8-some3)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-8,some1-3,some2-5,3-7,1-some3,6-6,5-some4,2-some5),6-6)"}]
    <#lemma879>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_692 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_692.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma785> a r:Inference;
  r:gives {
    "queens([3-f(6-2,4-1,2-5,7-some4,some2-some6,some3-4,5-3,8-8),6-f(some8-some4,3-some6,1-4,6-3,4-8,2-some9,7-7,some2-6),8-f(some10-4,some11-3,some8-8,3-some9,1-7,6-6,4-some12,2-some13)],5,[8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(8-f(some0-4,some1-3,some2-8,3-some3,1-7,6-6,4-some4,2-some5),[3-f(6-2,4-1,2-5,7-some6,some7-some8,some9-4,5-3,8-8),6-f(some2-some6,3-some8,1-4,6-3,4-8,2-some3,7-7,some7-6),8-f(some0-4,some1-3,some2-8,3-some3,1-7,6-6,4-some4,2-some5)],[3-f(6-2,4-1,2-5,7-some6,some7-some8,some9-4,5-3,8-8),6-f(some2-some6,3-some8,1-4,6-3,4-8,2-some3,7-7,some7-6)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-4,some1-3,some2-8,3-some3,1-7,6-6,4-some4,2-some5),6-6)"}]
    <#lemma880>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_693 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_693.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma786> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,some4-some7,8-2,some8-1,7-some9,6-6,some10-some1,some11-4),3-f(5-2,4-1,2-some9,some4-6,8-some1,some8-4,7-7,6-3),6-f(3-6,some2-some1,1-4,5-7,4-3,2-5,some4-some3,8-8)],5,[1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(1-f(2-some0,some1-some2,8-2,some3-1,7-some4,6-6,some5-some6,some7-4),[1-f(2-some0,some1-some2,8-2,some3-1,7-some4,6-6,some5-some6,some7-4),3-f(5-2,4-1,2-some4,some1-6,8-some6,some3-4,7-7,6-3),6-f(3-6,some8-some6,1-4,5-7,4-3,2-5,some1-some9,8-8)],[3-f(5-2,4-1,2-some4,some1-6,8-some6,some3-4,7-7,6-3),6-f(3-6,some8-some6,1-4,5-7,4-3,2-5,some1-some9,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(2-some0,some1-some2,8-2,some3-1,7-some4,6-6,some5-some6,some7-4),6-6)"}]
    <#lemma881>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_694 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_694.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma787> a r:Inference;
  r:gives {
    "queens([3-f(4-2,some7-1,2-5,8-some3,7-some5,6-6,5-4,some2-3),5-f(some8-5,1-some3,4-some5,some7-6,2-4,8-3,7-7,6-some9),7-f(some10-some5,3-6,some8-4,1-3,4-7,some7-some9,2-some11,8-8)],5,[3,5,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(3-f(4-2,some0-1,2-5,8-some1,7-some2,6-6,5-4,some3-3),[3-f(4-2,some0-1,2-5,8-some1,7-some2,6-6,5-4,some3-3),5-f(some4-5,1-some1,4-some2,some0-6,2-4,8-3,7-7,6-some5),7-f(some6-some2,3-6,some4-4,1-3,4-7,some0-some5,2-some7,8-8)],[5-f(some4-5,1-some1,4-some2,some0-6,2-4,8-3,7-7,6-some5),7-f(some6-some2,3-6,some4-4,1-3,4-7,some0-some5,2-some7,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(4-2,some0-1,2-5,8-some1,7-some2,6-6,5-4,some3-3),6-6)"}]
    <#lemma882>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_695 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_695.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma788> a r:Inference;
  r:gives {
    "queens([3-f(6-3,4-1,some1-some2,8-5,3-2,5-4,7-7,some3-some5),7-f(some6-2,some7-4,2-7,1-some5,6-some8,4-some9,some1-6,8-8),8-f(some10-4,some6-7,some7-some5,2-some8,1-some9,6-6,4-8,some1-some11)],5,[8,3,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(8-f(some0-4,some1-7,some2-some3,2-some4,1-some5,6-6,4-8,some6-some7),[3-f(6-3,4-1,some6-some8,8-5,3-2,5-4,7-7,some9-some3),7-f(some1-2,some2-4,2-7,1-some3,6-some4,4-some5,some6-6,8-8),8-f(some0-4,some1-7,some2-some3,2-some4,1-some5,6-6,4-8,some6-some7)],[3-f(6-3,4-1,some6-some8,8-5,3-2,5-4,7-7,some9-some3),7-f(some1-2,some2-4,2-7,1-some3,6-some4,4-some5,some6-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-4,some1-7,some2-some3,2-some4,1-some5,6-6,4-8,some6-some7),6-6)"}]
    <#lemma883>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_696 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_696.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma789> a r:Inference;
  r:gives {
    "queens([1-f(some3-some7,some5-some8,4-some9,8-1,7-4,6-6,some10-2,some11-some1),3-f(5-some9,some2-1,some3-4,some5-6,4-2,8-some1,7-7,6-3),5-f(2-4,1-6,5-2,some2-some1,some3-7,some5-3,4-5,8-8)],5,[1,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,some2-some3,4-some4,8-1,7-4,6-6,some5-2,some6-some7),[1-f(some0-some1,some2-some3,4-some4,8-1,7-4,6-6,some5-2,some6-some7),3-f(5-some4,some8-1,some0-4,some2-6,4-2,8-some7,7-7,6-3),5-f(2-4,1-6,5-2,some8-some7,some0-7,some2-3,4-5,8-8)],[3-f(5-some4,some8-1,some0-4,some2-6,4-2,8-some7,7-7,6-3),5-f(2-4,1-6,5-2,some8-some7,some0-7,some2-3,4-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,some2-some3,4-some4,8-1,7-4,6-6,some5-2,some6-some7),6-6)"}]
    <#lemma884>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_697 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_697.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma790> a r:Inference;
  r:gives {
    "queens([2-f(6-some2,some0-some3,4-1,7-5,some4-4,5-2,some5-some7,8-8),5-f(2-5,1-4,some8-2,6-some7,some0-8,4-3,7-7,some4-6),7-f(some9-2,3-some7,2-8,1-3,some8-7,6-6,some0-some10,4-some11)],5,[7,5,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(7-f(some0-2,3-some1,2-8,1-3,some2-7,6-6,some3-some4,4-some5),[2-f(6-some6,some3-some7,4-1,7-5,some8-4,5-2,some9-some1,8-8),5-f(2-5,1-4,some2-2,6-some1,some3-8,4-3,7-7,some8-6),7-f(some0-2,3-some1,2-8,1-3,some2-7,6-6,some3-some4,4-some5)],[2-f(6-some6,some3-some7,4-1,7-5,some8-4,5-2,some9-some1,8-8),5-f(2-5,1-4,some2-2,6-some1,some3-8,4-3,7-7,some8-6)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-2,3-some1,2-8,1-3,some2-7,6-6,some3-some4,4-some5),6-6)"}]
    <#lemma885>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_698 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_698.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma791> a r:Inference;
  r:gives {
    "queens([2-f(some3-some5,5-3,7-1,3-some0,some4-some1,6-6,8-2,some6-5),3-f(some2-3,some3-1,5-some0,7-some1,3-6,some4-2,6-5,8-8),6-f(2-some1,4-6,1-2,some2-5,some3-8,5-4,7-7,3-some7)],5,[2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(2-f(some0-some1,5-3,7-1,3-some2,some3-some4,6-6,8-2,some5-5),[2-f(some0-some1,5-3,7-1,3-some2,some3-some4,6-6,8-2,some5-5),3-f(some6-3,some0-1,5-some2,7-some4,3-6,some3-2,6-5,8-8),6-f(2-some4,4-6,1-2,some6-5,some0-8,5-4,7-7,3-some7)],[3-f(some6-3,some0-1,5-some2,7-some4,3-6,some3-2,6-5,8-8),6-f(2-some4,4-6,1-2,some6-5,some0-8,5-4,7-7,3-some7)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,5-3,7-1,3-some2,some3-some4,6-6,8-2,some5-5),6-6)"}]
    <#lemma886>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_699 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_699.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma792> a r:Inference;
  r:gives {
    "queens([1-f(3-some6,6-some1,8-some2,5-1,some3-3,some4-5,7-7,some7-2),5-f(4-3,1-5,some8-7,some0-2,3-some5,6-6,8-4,5-some9),6-f(2-5,4-7,1-2,some8-some5,some0-6,3-4,6-some9,8-8)],5,[5,1,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(5-f(4-3,1-5,some0-7,some1-2,3-some2,6-6,8-4,5-some3),[1-f(3-some4,6-some5,8-some6,5-1,some7-3,some8-5,7-7,some9-2),5-f(4-3,1-5,some0-7,some1-2,3-some2,6-6,8-4,5-some3),6-f(2-5,4-7,1-2,some0-some2,some1-6,3-4,6-some3,8-8)],[1-f(3-some4,6-some5,8-some6,5-1,some7-3,some8-5,7-7,some9-2),6-f(2-5,4-7,1-2,some0-some2,some1-6,3-4,6-some3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(4-3,1-5,some0-7,some1-2,3-some2,6-6,8-4,5-some3),6-6)"}]
    <#lemma887>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_700 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_700.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma793> a r:Inference;
  r:gives {
    "queens([1-f(8-some5,some2-some6,4-some7,some8-1,7-4,6-6,some9-3,some10-2),3-f(3-some7,5-1,8-4,some2-6,4-3,some8-2,7-7,6-5),8-f(some11-2,some12-7,2-5,some0-some1,1-some3,3-some4,5-some13,8-8)],5,[1,3,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(1-f(8-some0,some1-some2,4-some3,some4-1,7-4,6-6,some5-3,some6-2),[1-f(8-some0,some1-some2,4-some3,some4-1,7-4,6-6,some5-3,some6-2),3-f(3-some3,5-1,8-4,some1-6,4-3,some4-2,7-7,6-5),8-f(some7-2,some8-7,2-5,some9-some10,1-some11,3-some12,5-some13,8-8)],[3-f(3-some3,5-1,8-4,some1-6,4-3,some4-2,7-7,6-5),8-f(some7-2,some8-7,2-5,some9-some10,1-some11,3-some12,5-some13,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(8-some0,some1-some2,4-some3,some4-1,7-4,6-6,some5-3,some6-2),6-6)"}]
    <#lemma888>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_701 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_701.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma794> a r:Inference;
  r:gives {
    "queens([2-f(7-some1,6-some3,4-1,some2-5,some4-4,5-3,some5-2,8-8),6-f(2-4,some7-3,1-2,3-8,7-some8,6-6,4-some9,some2-some10),8-f(some11-2,some12-8,2-some8,some7-6,1-some9,3-some10,7-7,6-some13)],5,[6,8,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(6-f(2-4,some0-3,1-2,3-8,7-some1,6-6,4-some2,some3-some4),[2-f(7-some5,6-some6,4-1,some3-5,some7-4,5-3,some8-2,8-8),6-f(2-4,some0-3,1-2,3-8,7-some1,6-6,4-some2,some3-some4),8-f(some9-2,some10-8,2-some1,some0-6,1-some2,3-some4,7-7,6-some11)],[2-f(7-some5,6-some6,4-1,some3-5,some7-4,5-3,some8-2,8-8),8-f(some9-2,some10-8,2-some1,some0-6,1-some2,3-some4,7-7,6-some11)])"}]
    [ a r:Fact; r:gives {"arg(6,f(2-4,some0-3,1-2,3-8,7-some1,6-6,4-some2,some3-some4),6-6)"}]
    <#lemma889>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_702 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_702.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma795> a r:Inference;
  r:gives {
    "queens([2-f(5-some5,7-3,4-1,3-some6,8-4,6-6,some7-some2,some8-2),5-f(some1-some6,1-4,some3-6,5-some2,7-2,4-5,3-some4,8-8),7-f(2-6,some0-some2,some1-2,1-5,some3-some4,5-8,7-7,4-some9)],5,[2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(2-f(5-some0,7-3,4-1,3-some1,8-4,6-6,some2-some3,some4-2),[2-f(5-some0,7-3,4-1,3-some1,8-4,6-6,some2-some3,some4-2),5-f(some5-some1,1-4,some6-6,5-some3,7-2,4-5,3-some7,8-8),7-f(2-6,some8-some3,some5-2,1-5,some6-some7,5-8,7-7,4-some9)],[5-f(some5-some1,1-4,some6-6,5-some3,7-2,4-5,3-some7,8-8),7-f(2-6,some8-some3,some5-2,1-5,some6-some7,5-8,7-7,4-some9)])"}]
    [ a r:Fact; r:gives {"arg(6,f(5-some0,7-3,4-1,3-some1,8-4,6-6,some2-some3,some4-2),6-6)"}]
    <#lemma890>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_703 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_703.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma796> a r:Inference;
  r:gives {
    "queens([2-f(4-some5,some2-3,7-1,3-some6,some7-some8,6-6,8-4,some9-2),3-f(5-3,4-1,some2-some6,7-some8,3-6,some7-4,6-2,8-8),6-f(some0-some8,some1-6,1-4,5-2,4-8,some2-5,7-7,3-some3)],5,[2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(2-f(4-some0,some1-3,7-1,3-some2,some3-some4,6-6,8-4,some5-2),[2-f(4-some0,some1-3,7-1,3-some2,some3-some4,6-6,8-4,some5-2),3-f(5-3,4-1,some1-some2,7-some4,3-6,some3-4,6-2,8-8),6-f(some6-some4,some7-6,1-4,5-2,4-8,some1-5,7-7,3-some8)],[3-f(5-3,4-1,some1-some2,7-some4,3-6,some3-4,6-2,8-8),6-f(some6-some4,some7-6,1-4,5-2,4-8,some1-5,7-7,3-some8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(4-some0,some1-3,7-1,3-some2,some3-some4,6-6,8-4,some5-2),6-6)"}]
    <#lemma891>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_704 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_704.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma797> a r:Inference;
  r:gives {
    "queens([2-f(6-some2,some0-some3,4-1,8-5,some4-4,5-3,7-7,some5-2),6-f(some7-4,some8-3,1-7,3-2,6-some9,some0-some10,4-6,8-8),7-f(2-3,some7-7,some8-2,1-some9,3-some10,6-6,some0-8,4-some11)],5,[7,2,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(7-f(2-3,some0-7,some1-2,1-some2,3-some3,6-6,some4-8,4-some5),[2-f(6-some6,some4-some7,4-1,8-5,some8-4,5-3,7-7,some9-2),6-f(some0-4,some1-3,1-7,3-2,6-some2,some4-some3,4-6,8-8),7-f(2-3,some0-7,some1-2,1-some2,3-some3,6-6,some4-8,4-some5)],[2-f(6-some6,some4-some7,4-1,8-5,some8-4,5-3,7-7,some9-2),6-f(some0-4,some1-3,1-7,3-2,6-some2,some4-some3,4-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(2-3,some0-7,some1-2,1-some2,3-some3,6-6,some4-8,4-some5),6-6)"}]
    <#lemma892>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_705 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_705.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma798> a r:Inference;
  r:gives {
    "queens([2-f(3-2,7-some7,2-some8,some9-1,some10-3,6-6,8-some1,some11-4),3-f(4-some7,3-some8,7-1,2-3,some9-6,some10-some1,6-4,8-8),7-f(some2-6,some3-some1,1-4,5-8,4-some4,3-5,7-7,2-some5)],5,[2,7,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(2-f(3-2,7-some0,2-some1,some2-1,some3-3,6-6,8-some4,some5-4),[2-f(3-2,7-some0,2-some1,some2-1,some3-3,6-6,8-some4,some5-4),3-f(4-some0,3-some1,7-1,2-3,some2-6,some3-some4,6-4,8-8),7-f(some6-6,some7-some4,1-4,5-8,4-some8,3-5,7-7,2-some9)],[3-f(4-some0,3-some1,7-1,2-3,some2-6,some3-some4,6-4,8-8),7-f(some6-6,some7-some4,1-4,5-8,4-some8,3-5,7-7,2-some9)])"}]
    [ a r:Fact; r:gives {"arg(6,f(3-2,7-some0,2-some1,some2-1,some3-3,6-6,8-some4,some5-4),6-6)"}]
    <#lemma893>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_706 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_706.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma799> a r:Inference;
  r:gives {
    "queens([3-f(some5-some0,6-some1,4-1,2-5,8-4,5-some3,7-7,some2-3),6-f(3-5,1-4,some6-some3,some5-7,6-3,4-some7,2-6,8-8),7-f(some8-4,3-some3,1-7,some6-3,some5-some7,6-6,4-8,2-some9)],5,[7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(7-f(some0-4,3-some1,1-7,some2-3,some3-some4,6-6,4-8,2-some5),[3-f(some3-some6,6-some7,4-1,2-5,8-4,5-some1,7-7,some8-3),6-f(3-5,1-4,some2-some1,some3-7,6-3,4-some4,2-6,8-8),7-f(some0-4,3-some1,1-7,some2-3,some3-some4,6-6,4-8,2-some5)],[3-f(some3-some6,6-some7,4-1,2-5,8-4,5-some1,7-7,some8-3),6-f(3-5,1-4,some2-some1,some3-7,6-3,4-some4,2-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-4,3-some1,1-7,some2-3,some3-some4,6-6,4-8,2-some5),6-6)"}]
    <#lemma894>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_707 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_707.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma800> a r:Inference;
  r:gives {
    "queens([2-f(6-2,some2-some0,2-some1,5-1,some4-some3,8-5,7-7,some5-4),4-f(some6-some1,4-1,6-some3,some2-5,2-7,5-4,some4-3,8-8),7-f(some7-5,3-7,1-4,some6-3,4-8,6-6,some2-some8,2-some9)],5,[7,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(7-f(some0-5,3-7,1-4,some1-3,4-8,6-6,some2-some3,2-some4),[2-f(6-2,some2-some5,2-some6,5-1,some7-some8,8-5,7-7,some9-4),4-f(some1-some6,4-1,6-some8,some2-5,2-7,5-4,some7-3,8-8),7-f(some0-5,3-7,1-4,some1-3,4-8,6-6,some2-some3,2-some4)],[2-f(6-2,some2-some5,2-some6,5-1,some7-some8,8-5,7-7,some9-4),4-f(some1-some6,4-1,6-some8,some2-5,2-7,5-4,some7-3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-5,3-7,1-4,some1-3,4-8,6-6,some2-some3,2-some4),6-6)"}]
    <#lemma895>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_708 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_708.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma801> a r:Inference;
  r:gives {
    "queens([1-f(2-some7,8-some8,some9-2,6-some10,some11-1,some12-3,7-7,some13-6),3-f(4-2,3-some10,2-1,8-3,some9-7,6-6,some11-4,some12-some3),7-f(some1-7,some2-6,1-4,5-some3,4-some4,3-5,2-some5,8-8)],5,[3,1,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(3-f(4-2,3-some0,2-1,8-3,some1-7,6-6,some2-4,some3-some4),[1-f(2-some5,8-some6,some1-2,6-some0,some2-1,some3-3,7-7,some7-6),3-f(4-2,3-some0,2-1,8-3,some1-7,6-6,some2-4,some3-some4),7-f(some8-7,some9-6,1-4,5-some4,4-some10,3-5,2-some11,8-8)],[1-f(2-some5,8-some6,some1-2,6-some0,some2-1,some3-3,7-7,some7-6),7-f(some8-7,some9-6,1-4,5-some4,4-some10,3-5,2-some11,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(4-2,3-some0,2-1,8-3,some1-7,6-6,some2-4,some3-some4),6-6)"}]
    <#lemma896>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_709 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_709.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma802> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,7-some6,5-2,some1-some0,some2-1,some4-3,some7-5,8-8),6-f(some8-3,1-5,4-8,6-some3,3-4,2-some9,7-7,5-6),8-f(some10-8,some11-some3,some8-4,1-some9,4-7,6-6,3-some12,2-some13)],5,[8,6,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(8-f(some0-8,some1-some2,some3-4,1-some4,4-7,6-6,3-some5,2-some6),[1-f(2-some7,7-some8,5-2,some9-some10,some11-1,some12-3,some13-5,8-8),6-f(some3-3,1-5,4-8,6-some2,3-4,2-some4,7-7,5-6),8-f(some0-8,some1-some2,some3-4,1-some4,4-7,6-6,3-some5,2-some6)],[1-f(2-some7,7-some8,5-2,some9-some10,some11-1,some12-3,some13-5,8-8),6-f(some3-3,1-5,4-8,6-some2,3-4,2-some4,7-7,5-6)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-8,some1-some2,some3-4,1-some4,4-7,6-6,3-some5,2-some6),6-6)"}]
    <#lemma897>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_710 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_710.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma803> a r:Inference;
  r:gives {
    "queens([3-f(5-2,7-4,2-1,some5-some6,6-some1,4-3,some7-6,8-8),4-f(3-4,5-1,7-some6,2-some1,some5-3,6-6,4-8,some7-5),8-f(some8-3,some0-6,some2-8,1-5,3-some3,5-some4,7-7,2-some9)],5,[4,8,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(4-f(3-4,5-1,7-some0,2-some1,some2-3,6-6,4-8,some3-5),[3-f(5-2,7-4,2-1,some2-some0,6-some1,4-3,some3-6,8-8),4-f(3-4,5-1,7-some0,2-some1,some2-3,6-6,4-8,some3-5),8-f(some4-3,some5-6,some6-8,1-5,3-some7,5-some8,7-7,2-some9)],[3-f(5-2,7-4,2-1,some2-some0,6-some1,4-3,some3-6,8-8),8-f(some4-3,some5-6,some6-8,1-5,3-some7,5-some8,7-7,2-some9)])"}]
    [ a r:Fact; r:gives {"arg(6,f(3-4,5-1,7-some0,2-some1,some2-3,6-6,4-8,some3-5),6-6)"}]
    <#lemma898>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_711 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_711.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma804> a r:Inference;
  r:gives {
    "queens([3-f(some1-2,6-4,2-1,5-some2,8-some3,4-5,7-7,some5-3),6-f(3-some2,1-some3,some0-5,some1-7,6-3,2-some4,5-6,8-8),7-f(some6-some3,3-5,1-7,some0-3,some1-some4,6-6,2-8,5-some7)],5,[7,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(7-f(some0-some1,3-5,1-7,some2-3,some3-some4,6-6,2-8,5-some5),[3-f(some3-2,6-4,2-1,5-some6,8-some1,4-5,7-7,some7-3),6-f(3-some6,1-some1,some2-5,some3-7,6-3,2-some4,5-6,8-8),7-f(some0-some1,3-5,1-7,some2-3,some3-some4,6-6,2-8,5-some5)],[3-f(some3-2,6-4,2-1,5-some6,8-some1,4-5,7-7,some7-3),6-f(3-some6,1-some1,some2-5,some3-7,6-3,2-some4,5-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,3-5,1-7,some2-3,some3-some4,6-6,2-8,5-some5),6-6)"}]
    <#lemma899>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_712 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_712.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma805> a r:Inference;
  r:gives {
    "queens([2-f(2-some8,some6-3,8-2,3-1,7-some9,6-6,some10-some1,some11-4),4-f(5-2,4-1,2-some9,some6-6,8-some1,3-4,7-7,6-some4),7-f(some2-6,some3-some1,1-4,5-7,4-some4,2-5,some6-some5,8-8)],5,[2,4,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(2-f(2-some0,some1-3,8-2,3-1,7-some2,6-6,some3-some4,some5-4),[2-f(2-some0,some1-3,8-2,3-1,7-some2,6-6,some3-some4,some5-4),4-f(5-2,4-1,2-some2,some1-6,8-some4,3-4,7-7,6-some6),7-f(some7-6,some8-some4,1-4,5-7,4-some6,2-5,some1-some9,8-8)],[4-f(5-2,4-1,2-some2,some1-6,8-some4,3-4,7-7,6-some6),7-f(some7-6,some8-some4,1-4,5-7,4-some6,2-5,some1-some9,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(2-some0,some1-3,8-2,3-1,7-some2,6-6,some3-some4,some5-4),6-6)"}]
    <#lemma900>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_713 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_713.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma806> a r:Inference;
  r:gives {
    "queens([4-f(4-2,6-1,2-5,some1-some2,7-some4,3-some6,5-4,8-8),6-f(some7-5,1-some2,4-some4,6-some6,2-4,some1-8,7-7,3-6),8-f(some8-some4,some9-some6,some7-4,1-8,4-7,6-6,2-some10,some1-some11)],5,[8,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-some3,some4-4,1-8,4-7,6-6,2-some5,some6-some7),[4-f(4-2,6-1,2-5,some6-some8,7-some1,3-some3,5-4,8-8),6-f(some4-5,1-some8,4-some1,6-some3,2-4,some6-8,7-7,3-6),8-f(some0-some1,some2-some3,some4-4,1-8,4-7,6-6,2-some5,some6-some7)],[4-f(4-2,6-1,2-5,some6-some8,7-some1,3-some3,5-4,8-8),6-f(some4-5,1-some8,4-some1,6-some3,2-4,some6-8,7-7,3-6)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,some2-some3,some4-4,1-8,4-7,6-6,2-some5,some6-some7),6-6)"}]
    <#lemma901>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_714 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_714.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma807> a r:Inference;
  r:gives {
    "queens([1-f(4-some5,7-some6,some7-some8,some9-2,some10-1,6-6,8-4,some11-some1),2-f(2-some6,4-some8,7-2,some7-1,some9-6,some10-4,6-some1,8-8),6-f(3-6,1-4,some2-some1,5-8,2-3,4-5,7-7,some7-some3)],5,[1,6,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(1-f(4-some0,7-some1,some2-some3,some4-2,some5-1,6-6,8-4,some6-some7),[1-f(4-some0,7-some1,some2-some3,some4-2,some5-1,6-6,8-4,some6-some7),2-f(2-some1,4-some3,7-2,some2-1,some4-6,some5-4,6-some7,8-8),6-f(3-6,1-4,some8-some7,5-8,2-3,4-5,7-7,some2-some9)],[2-f(2-some1,4-some3,7-2,some2-1,some4-6,some5-4,6-some7,8-8),6-f(3-6,1-4,some8-some7,5-8,2-3,4-5,7-7,some2-some9)])"}]
    [ a r:Fact; r:gives {"arg(6,f(4-some0,7-some1,some2-some3,some4-2,some5-1,6-6,8-4,some6-some7),6-6)"}]
    <#lemma902>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_715 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_715.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma808> a r:Inference;
  r:gives {
    "queens([2-f(some4-some7,6-3,4-some8,3-1,7-4,some9-some10,some11-2,8-8),4-f(5-some8,some2-1,some4-4,6-some10,4-2,3-8,7-7,some9-6),6-f(2-4,1-some10,5-2,some2-8,some4-7,6-6,4-5,3-some3)],5,[6,4,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(6-f(2-4,1-some0,5-2,some1-8,some2-7,6-6,4-5,3-some3),[2-f(some2-some4,6-3,4-some5,3-1,7-4,some6-some0,some7-2,8-8),4-f(5-some5,some1-1,some2-4,6-some0,4-2,3-8,7-7,some6-6),6-f(2-4,1-some0,5-2,some1-8,some2-7,6-6,4-5,3-some3)],[2-f(some2-some4,6-3,4-some5,3-1,7-4,some6-some0,some7-2,8-8),4-f(5-some5,some1-1,some2-4,6-some0,4-2,3-8,7-7,some6-6)])"}]
    [ a r:Fact; r:gives {"arg(6,f(2-4,1-some0,5-2,some1-8,some2-7,6-6,4-5,3-some3),6-6)"}]
    <#lemma903>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_716 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_716.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma809> a r:Inference;
  r:gives {
    "queens([3-f(6-3,some0-some2,4-1,7-5,3-4,5-2,some3-some5,8-8),6-f(2-5,1-4,some6-2,6-some5,some0-8,4-some7,7-7,3-6),8-f(some8-2,some9-some5,2-8,1-some7,some6-7,6-6,some0-some10,4-some11)],5,[8,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(8-f(some0-2,some1-some2,2-8,1-some3,some4-7,6-6,some5-some6,4-some7),[3-f(6-3,some5-some8,4-1,7-5,3-4,5-2,some9-some2,8-8),6-f(2-5,1-4,some4-2,6-some2,some5-8,4-some3,7-7,3-6),8-f(some0-2,some1-some2,2-8,1-some3,some4-7,6-6,some5-some6,4-some7)],[3-f(6-3,some5-some8,4-1,7-5,3-4,5-2,some9-some2,8-8),6-f(2-5,1-4,some4-2,6-some2,some5-8,4-some3,7-7,3-6)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-2,some1-some2,2-8,1-some3,some4-7,6-6,some5-some6,4-some7),6-6)"}]
    <#lemma904>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_717 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_717.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma810> a r:Inference;
  r:gives {
    "queens([1-f(4-some8,3-some9,8-some10,some11-3,7-1,6-6,some12-4,some13-2),3-f(some4-some10,some5-3,4-1,3-6,8-4,some11-2,7-7,6-some2),6-f(2-6,1-4,5-2,some4-7,some5-some2,4-some3,3-5,8-8)],5,[1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(1-f(4-some0,3-some1,8-some2,some3-3,7-1,6-6,some4-4,some5-2),[1-f(4-some0,3-some1,8-some2,some3-3,7-1,6-6,some4-4,some5-2),3-f(some6-some2,some7-3,4-1,3-6,8-4,some3-2,7-7,6-some8),6-f(2-6,1-4,5-2,some6-7,some7-some8,4-some9,3-5,8-8)],[3-f(some6-some2,some7-3,4-1,3-6,8-4,some3-2,7-7,6-some8),6-f(2-6,1-4,5-2,some6-7,some7-some8,4-some9,3-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(4-some0,3-some1,8-some2,some3-3,7-1,6-6,some4-4,some5-2),6-6)"}]
    <#lemma905>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_718 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_718.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma811> a r:Inference;
  r:gives {
    "queens([1-f(8-some3,3-some4,5-some0,7-3,some2-1,6-6,some5-5,some6-2),4-f(some7-3,4-1,some1-6,8-5,3-2,5-4,7-7,some2-some8),8-f(some9-2,some10-4,2-7,1-some8,some7-some11,4-some12,some1-some13,8-8)],5,[1,4,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(1-f(8-some0,3-some1,5-some2,7-3,some3-1,6-6,some4-5,some5-2),[1-f(8-some0,3-some1,5-some2,7-3,some3-1,6-6,some4-5,some5-2),4-f(some6-3,4-1,some7-6,8-5,3-2,5-4,7-7,some3-some8),8-f(some9-2,some10-4,2-7,1-some8,some6-some11,4-some12,some7-some13,8-8)],[4-f(some6-3,4-1,some7-6,8-5,3-2,5-4,7-7,some3-some8),8-f(some9-2,some10-4,2-7,1-some8,some6-some11,4-some12,some7-some13,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(8-some0,3-some1,5-some2,7-3,some3-1,6-6,some4-5,some5-2),6-6)"}]
    <#lemma906>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_719 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_719.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma812> a r:Inference;
  r:gives {
    "queens([1-f(some1-some4,3-some5,5-some0,some2-3,8-1,6-6,some6-5,some7-2),4-f(some8-3,4-1,7-6,some1-5,3-2,5-4,some2-some3,8-8),8-f(some9-2,some10-4,2-some3,1-8,some8-some11,4-some12,7-7,some1-some13)],5,[1,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,3-some2,5-some3,some4-3,8-1,6-6,some5-5,some6-2),[1-f(some0-some1,3-some2,5-some3,some4-3,8-1,6-6,some5-5,some6-2),4-f(some7-3,4-1,7-6,some0-5,3-2,5-4,some4-some8,8-8),8-f(some9-2,some10-4,2-some8,1-8,some7-some11,4-some12,7-7,some0-some13)],[4-f(some7-3,4-1,7-6,some0-5,3-2,5-4,some4-some8,8-8),8-f(some9-2,some10-4,2-some8,1-8,some7-some11,4-some12,7-7,some0-some13)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,3-some2,5-some3,some4-3,8-1,6-6,some5-5,some6-2),6-6)"}]
    <#lemma907>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_720 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_720.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma813> a r:Inference;
  r:gives {
    "queens([2-f(3-some5,some1-some0,7-4,5-1,4-3,some2-5,some3-2,8-8),6-f(2-3,1-5,some6-2,6-8,3-some4,some1-some7,7-7,5-6),8-f(some8-2,some9-8,2-some4,1-some7,some6-7,6-6,3-some10,some1-some11)],5,[8,6,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(8-f(some0-2,some1-8,2-some2,1-some3,some4-7,6-6,3-some5,some6-some7),[2-f(3-some8,some6-some9,7-4,5-1,4-3,some10-5,some11-2,8-8),6-f(2-3,1-5,some4-2,6-8,3-some2,some6-some3,7-7,5-6),8-f(some0-2,some1-8,2-some2,1-some3,some4-7,6-6,3-some5,some6-some7)],[2-f(3-some8,some6-some9,7-4,5-1,4-3,some10-5,some11-2,8-8),6-f(2-3,1-5,some4-2,6-8,3-some2,some6-some3,7-7,5-6)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-2,some1-8,2-some2,1-some3,some4-7,6-6,3-some5,some6-some7),6-6)"}]
    <#lemma908>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_721 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_721.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma814> a r:Inference;
  r:gives {
    "queens([2-f(3-some4,6-some1,8-4,5-1,4-3,some2-5,7-7,some5-2),6-f(some6-3,1-5,some7-7,some0-2,3-some3,6-6,8-some8,5-some9),7-f(2-5,some6-7,1-2,some7-some3,some0-6,3-some8,6-some9,8-8)],5,[6,2,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(6-f(some0-3,1-5,some1-7,some2-2,3-some3,6-6,8-some4,5-some5),[2-f(3-some6,6-some7,8-4,5-1,4-3,some8-5,7-7,some9-2),6-f(some0-3,1-5,some1-7,some2-2,3-some3,6-6,8-some4,5-some5),7-f(2-5,some0-7,1-2,some1-some3,some2-6,3-some4,6-some5,8-8)],[2-f(3-some6,6-some7,8-4,5-1,4-3,some8-5,7-7,some9-2),7-f(2-5,some0-7,1-2,some1-some3,some2-6,3-some4,6-some5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-3,1-5,some1-7,some2-2,3-some3,6-6,8-some4,5-some5),6-6)"}]
    <#lemma909>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_722 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_722.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma815> a r:Inference;
  r:gives {
    "queens([2-f(3-some6,some3-some7,7-4,some8-1,4-3,6-6,8-some1,some9-2),3-f(5-some7,3-4,some3-1,7-3,some8-6,4-some1,6-2,8-8),6-f(some0-3,1-6,some2-some1,5-2,3-8,some3-5,7-7,some8-some4)],5,[2,6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(2-f(3-some0,some1-some2,7-4,some3-1,4-3,6-6,8-some4,some5-2),[2-f(3-some0,some1-some2,7-4,some3-1,4-3,6-6,8-some4,some5-2),3-f(5-some2,3-4,some1-1,7-3,some3-6,4-some4,6-2,8-8),6-f(some6-3,1-6,some7-some4,5-2,3-8,some1-5,7-7,some3-some8)],[3-f(5-some2,3-4,some1-1,7-3,some3-6,4-some4,6-2,8-8),6-f(some6-3,1-6,some7-some4,5-2,3-8,some1-5,7-7,some3-some8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(3-some0,some1-some2,7-4,some3-1,4-3,6-6,8-some4,some5-2),6-6)"}]
    <#lemma910>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_723 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_723.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma816> a r:Inference;
  r:gives {
    "queens([3-f(3-some8,some5-some9,7-4,2-1,4-3,6-6,8-some2,some10-some3),4-f(5-some9,3-4,some5-1,7-3,2-6,4-some2,6-some3,8-8),7-f(some1-3,1-6,some4-some2,5-some3,3-8,some5-5,7-7,2-some6)],5,[3,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(3-f(3-some0,some1-some2,7-4,2-1,4-3,6-6,8-some3,some4-some5),[3-f(3-some0,some1-some2,7-4,2-1,4-3,6-6,8-some3,some4-some5),4-f(5-some2,3-4,some1-1,7-3,2-6,4-some3,6-some5,8-8),7-f(some6-3,1-6,some7-some3,5-some5,3-8,some1-5,7-7,2-some8)],[4-f(5-some2,3-4,some1-1,7-3,2-6,4-some3,6-some5,8-8),7-f(some6-3,1-6,some7-some3,5-some5,3-8,some1-5,7-7,2-some8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(3-some0,some1-some2,7-4,2-1,4-3,6-6,8-some3,some4-some5),6-6)"}]
    <#lemma911>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_724 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_724.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma817> a r:Inference;
  r:gives {
    "queens([4-f(some4-4,some0-some1,7-1,2-5,6-some2,5-3,4-6,8-8),5-f(3-some1,some4-1,some0-5,7-some2,2-3,6-6,5-8,4-some5),8-f(some6-some2,some7-3,1-6,3-8,some4-some5,some0-some8,7-7,2-some9)],5,[5,8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(5-f(3-some0,some1-1,some2-5,7-some3,2-3,6-6,5-8,4-some4),[4-f(some1-4,some2-some0,7-1,2-5,6-some3,5-3,4-6,8-8),5-f(3-some0,some1-1,some2-5,7-some3,2-3,6-6,5-8,4-some4),8-f(some5-some3,some6-3,1-6,3-8,some1-some4,some2-some7,7-7,2-some8)],[4-f(some1-4,some2-some0,7-1,2-5,6-some3,5-3,4-6,8-8),8-f(some5-some3,some6-3,1-6,3-8,some1-some4,some2-some7,7-7,2-some8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(3-some0,some1-1,some2-5,7-some3,2-3,6-6,5-8,4-some4),6-6)"}]
    <#lemma912>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_725 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_725.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma818> a r:Inference;
  r:gives {
    "queens([3-f(6-2,some2-4,2-some1,5-1,7-some3,4-5,some4-3,8-8),5-f(3-some1,some0-1,6-some3,some2-5,2-3,5-8,7-7,4-some5),8-f(some6-5,some7-3,1-8,3-7,some0-some5,6-6,some2-some8,2-some9)],5,[8,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(8-f(some0-5,some1-3,1-8,3-7,some2-some3,6-6,some4-some5,2-some6),[3-f(6-2,some4-4,2-some7,5-1,7-some8,4-5,some9-3,8-8),5-f(3-some7,some2-1,6-some8,some4-5,2-3,5-8,7-7,4-some3),8-f(some0-5,some1-3,1-8,3-7,some2-some3,6-6,some4-some5,2-some6)],[3-f(6-2,some4-4,2-some7,5-1,7-some8,4-5,some9-3,8-8),5-f(3-some7,some2-1,6-some8,some4-5,2-3,5-8,7-7,4-some3)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-5,some1-3,1-8,3-7,some2-some3,6-6,some4-some5,2-some6),6-6)"}]
    <#lemma913>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_726 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_726.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma819> a r:Inference;
  r:gives {
    "queens([2-f(2-some6,5-3,some3-2,3-some1,some4-1,8-some2,7-7,some7-5),4-f(4-2,6-some1,2-1,5-some2,some3-7,3-5,some4-4,8-8),8-f(some8-7,some9-5,1-4,some0-8,4-some5,6-6,2-some10,5-some11)],5,[8,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(8-f(some0-7,some1-5,1-4,some2-8,4-some3,6-6,2-some4,5-some5),[2-f(2-some6,5-3,some7-2,3-some8,some9-1,8-some10,7-7,some11-5),4-f(4-2,6-some8,2-1,5-some10,some7-7,3-5,some9-4,8-8),8-f(some0-7,some1-5,1-4,some2-8,4-some3,6-6,2-some4,5-some5)],[2-f(2-some6,5-3,some7-2,3-some8,some9-1,8-some10,7-7,some11-5),4-f(4-2,6-some8,2-1,5-some10,some7-7,3-5,some9-4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-7,some1-5,1-4,some2-8,4-some3,6-6,2-some4,5-some5),6-6)"}]
    <#lemma914>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_727 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_727.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma820> a r:Inference;
  r:gives {
    "queens([2-f(2-some5,7-3,5-2,3-some2,8-1,6-6,some6-5,some7-some3),5-f(4-some2,some0-1,some1-6,2-5,7-some3,5-some4,3-4,8-8),7-f(some8-6,1-5,4-some3,some0-some4,some1-4,2-8,7-7,5-some9)],5,[2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(2-f(2-some0,7-3,5-2,3-some1,8-1,6-6,some2-5,some3-some4),[2-f(2-some0,7-3,5-2,3-some1,8-1,6-6,some2-5,some3-some4),5-f(4-some1,some5-1,some6-6,2-5,7-some4,5-some7,3-4,8-8),7-f(some8-6,1-5,4-some4,some5-some7,some6-4,2-8,7-7,5-some9)],[5-f(4-some1,some5-1,some6-6,2-5,7-some4,5-some7,3-4,8-8),7-f(some8-6,1-5,4-some4,some5-some7,some6-4,2-8,7-7,5-some9)])"}]
    [ a r:Fact; r:gives {"arg(6,f(2-some0,7-3,5-2,3-some1,8-1,6-6,some2-5,some3-some4),6-6)"}]
    <#lemma915>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_728 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_728.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma821> a r:Inference;
  r:gives {
    "queens([2-f(2-some5,5-3,8-2,3-some0,7-1,6-6,some6-some3,some7-5),4-f(some1-2,some2-some0,2-1,5-6,8-some3,3-5,7-7,6-4),7-f(some8-6,1-some3,4-5,some1-7,some2-4,2-some4,5-some9,8-8)],5,[2,4,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(2-f(2-some0,5-3,8-2,3-some1,7-1,6-6,some2-some3,some4-5),[2-f(2-some0,5-3,8-2,3-some1,7-1,6-6,some2-some3,some4-5),4-f(some5-2,some6-some1,2-1,5-6,8-some3,3-5,7-7,6-4),7-f(some7-6,1-some3,4-5,some5-7,some6-4,2-some8,5-some9,8-8)],[4-f(some5-2,some6-some1,2-1,5-6,8-some3,3-5,7-7,6-4),7-f(some7-6,1-some3,4-5,some5-7,some6-4,2-some8,5-some9,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(2-some0,5-3,8-2,3-some1,7-1,6-6,some2-some3,some4-5),6-6)"}]
    <#lemma916>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_729 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_729.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma822> a r:Inference;
  r:gives {
    "queens([2-f(2-some2,8-some3,some1-2,6-5,some4-1,5-3,7-7,some5-6),4-f(4-2,3-5,2-1,8-3,some1-7,6-6,some4-4,5-some7),8-f(some8-7,some9-6,1-4,some10-some7,4-some11,3-some12,2-some13,8-8)],5,[4,2,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(4-f(4-2,3-5,2-1,8-3,some0-7,6-6,some1-4,5-some2),[2-f(2-some3,8-some4,some0-2,6-5,some1-1,5-3,7-7,some5-6),4-f(4-2,3-5,2-1,8-3,some0-7,6-6,some1-4,5-some2),8-f(some6-7,some7-6,1-4,some8-some2,4-some9,3-some10,2-some11,8-8)],[2-f(2-some3,8-some4,some0-2,6-5,some1-1,5-3,7-7,some5-6),8-f(some6-7,some7-6,1-4,some8-some2,4-some9,3-some10,2-some11,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(4-2,3-5,2-1,8-3,some0-7,6-6,some1-4,5-some2),6-6)"}]
    <#lemma917>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_730 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_730.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma823> a r:Inference;
  r:gives {
    "queens([2-f(2-some2,some0-some3,8-2,6-5,some4-1,5-3,7-7,some5-6),4-f(some7-2,3-5,2-1,some0-3,8-7,6-6,some4-some8,5-4),7-f(some9-3,1-7,4-6,some7-some8,3-4,2-some10,some0-some11,8-8)],5,[4,2,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(4-f(some0-2,3-5,2-1,some1-3,8-7,6-6,some2-some3,5-4),[2-f(2-some4,some1-some5,8-2,6-5,some2-1,5-3,7-7,some6-6),4-f(some0-2,3-5,2-1,some1-3,8-7,6-6,some2-some3,5-4),7-f(some7-3,1-7,4-6,some0-some3,3-4,2-some8,some1-some9,8-8)],[2-f(2-some4,some1-some5,8-2,6-5,some2-1,5-3,7-7,some6-6),7-f(some7-3,1-7,4-6,some0-some3,3-4,2-some8,some1-some9,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-2,3-5,2-1,some1-3,8-7,6-6,some2-some3,5-4),6-6)"}]
    <#lemma918>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_731 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_731.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma824> a r:Inference;
  r:gives {
    "queens([1-f(some1-some5,5-some6,4-some7,8-2,some3-4,some8-1,7-7,some9-5),5-f(3-4,some0-1,6-7,2-5,some1-3,5-some2,4-some4,8-8),8-f(some10-5,some11-3,1-some2,3-some4,some0-8,6-6,2-some12,some1-some13)],5,[8,1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(8-f(some0-5,some1-3,1-some2,3-some3,some4-8,6-6,2-some5,some6-some7),[1-f(some6-some8,5-some9,4-some10,8-2,some11-4,some12-1,7-7,some13-5),5-f(3-4,some4-1,6-7,2-5,some6-3,5-some2,4-some3,8-8),8-f(some0-5,some1-3,1-some2,3-some3,some4-8,6-6,2-some5,some6-some7)],[1-f(some6-some8,5-some9,4-some10,8-2,some11-4,some12-1,7-7,some13-5),5-f(3-4,some4-1,6-7,2-5,some6-3,5-some2,4-some3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-5,some1-3,1-some2,3-some3,some4-8,6-6,2-some5,some6-some7),6-6)"}]
    <#lemma919>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_732 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_732.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma825> a r:Inference;
  r:gives {
    "queens([1-f(some6-some8,6-some9,4-some10,some11-2,8-4,some12-1,7-7,some13-some1),4-f(5-2,some3-4,2-1,some6-7,6-some1,4-3,some11-6,8-8),5-f(3-4,5-1,some3-7,2-some1,some6-3,6-6,4-8,some11-5)],5,[5,1,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(5-f(3-4,5-1,some0-7,2-some1,some2-3,6-6,4-8,some3-5),[1-f(some2-some4,6-some5,4-some6,some3-2,8-4,some7-1,7-7,some8-some1),4-f(5-2,some0-4,2-1,some2-7,6-some1,4-3,some3-6,8-8),5-f(3-4,5-1,some0-7,2-some1,some2-3,6-6,4-8,some3-5)],[1-f(some2-some4,6-some5,4-some6,some3-2,8-4,some7-1,7-7,some8-some1),4-f(5-2,some0-4,2-1,some2-7,6-some1,4-3,some3-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(3-4,5-1,some0-7,2-some1,some2-3,6-6,4-8,some3-5),6-6)"}]
    <#lemma920>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_733 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_733.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma826> a r:Inference;
  r:gives {
    "queens([2-f(2-some2,4-some4,some1-2,some3-5,8-1,5-4,7-7,some5-3),5-f(3-5,some7-1,6-4,2-7,4-3,some1-some8,some3-some9,8-8),8-f(some10-7,some11-3,1-some8,3-some9,some7-8,6-6,2-some12,4-some13)],5,[8,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(8-f(some0-7,some1-3,1-some2,3-some3,some4-8,6-6,2-some5,4-some6),[2-f(2-some7,4-some8,some9-2,some10-5,8-1,5-4,7-7,some11-3),5-f(3-5,some4-1,6-4,2-7,4-3,some9-some2,some10-some3,8-8),8-f(some0-7,some1-3,1-some2,3-some3,some4-8,6-6,2-some5,4-some6)],[2-f(2-some7,4-some8,some9-2,some10-5,8-1,5-4,7-7,some11-3),5-f(3-5,some4-1,6-4,2-7,4-3,some9-some2,some10-some3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-7,some1-3,1-some2,3-some3,some4-8,6-6,2-some5,4-some6),6-6)"}]
    <#lemma921>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_734 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_734.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma827> a r:Inference;
  r:gives {
    "queens([2-f(4-some7,7-3,some8-some9,3-2,some10-1,6-6,8-4,some11-some2),3-f(2-3,4-some9,7-2,some8-1,3-6,some10-4,6-some2,8-8),7-f(some1-6,1-4,some3-some2,5-8,2-some4,4-5,7-7,some8-some5)],5,[2,7,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(2-f(4-some0,7-3,some1-some2,3-2,some3-1,6-6,8-4,some4-some5),[2-f(4-some0,7-3,some1-some2,3-2,some3-1,6-6,8-4,some4-some5),3-f(2-3,4-some2,7-2,some1-1,3-6,some3-4,6-some5,8-8),7-f(some6-6,1-4,some7-some5,5-8,2-some8,4-5,7-7,some1-some9)],[3-f(2-3,4-some2,7-2,some1-1,3-6,some3-4,6-some5,8-8),7-f(some6-6,1-4,some7-some5,5-8,2-some8,4-5,7-7,some1-some9)])"}]
    [ a r:Fact; r:gives {"arg(6,f(4-some0,7-3,some1-some2,3-2,some3-1,6-6,8-4,some4-some5),6-6)"}]
    <#lemma922>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_735 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_735.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma828> a r:Inference;
  r:gives {
    "queens([1-f(5-some4,3-some5,some2-some6,some3-3,some7-2,8-1,7-7,some8-some1),3-f(2-some6,6-3,5-2,3-1,some2-7,some3-some1,some7-5,8-8),7-f(some9-7,1-some1,4-5,some0-8,2-4,6-6,5-some10,3-some11)],5,[7,1,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(7-f(some0-7,1-some1,4-5,some2-8,2-4,6-6,5-some3,3-some4),[1-f(5-some5,3-some6,some7-some8,some9-3,some10-2,8-1,7-7,some11-some1),3-f(2-some8,6-3,5-2,3-1,some7-7,some9-some1,some10-5,8-8),7-f(some0-7,1-some1,4-5,some2-8,2-4,6-6,5-some3,3-some4)],[1-f(5-some5,3-some6,some7-some8,some9-3,some10-2,8-1,7-7,some11-some1),3-f(2-some8,6-3,5-2,3-1,some7-7,some9-some1,some10-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-7,1-some1,4-5,some2-8,2-4,6-6,5-some3,3-some4),6-6)"}]
    <#lemma923>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_736 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_736.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma829> a r:Inference;
  r:gives {
    "queens([2-f(some1-some3,8-some0,6-4,5-2,4-1,some2-5,7-7,some4-3),5-f(3-2,some5-1,2-5,some1-7,8-3,6-6,5-some6,4-some7),8-f(some8-7,some9-3,1-6,3-some6,some5-some7,2-some10,some1-some11,8-8)],5,[5,2,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(5-f(3-2,some0-1,2-5,some1-7,8-3,6-6,5-some2,4-some3),[2-f(some1-some4,8-some5,6-4,5-2,4-1,some6-5,7-7,some7-3),5-f(3-2,some0-1,2-5,some1-7,8-3,6-6,5-some2,4-some3),8-f(some8-7,some9-3,1-6,3-some2,some0-some3,2-some10,some1-some11,8-8)],[2-f(some1-some4,8-some5,6-4,5-2,4-1,some6-5,7-7,some7-3),8-f(some8-7,some9-3,1-6,3-some2,some0-some3,2-some10,some1-some11,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(3-2,some0-1,2-5,some1-7,8-3,6-6,5-some2,4-some3),6-6)"}]
    <#lemma924>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_737 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_737.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma830> a r:Inference;
  r:gives {
    "queens([2-f(some4-some8,some6-some9,some10-4,7-2,4-1,6-6,8-some1,some11-3),3-f(2-some9,some4-4,some6-2,some10-1,7-6,4-some1,6-3,8-8),5-f(3-2,5-1,2-6,some4-some1,some6-3,some10-8,7-7,4-5)],5,[2,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(2-f(some0-some1,some2-some3,some4-4,7-2,4-1,6-6,8-some5,some6-3),[2-f(some0-some1,some2-some3,some4-4,7-2,4-1,6-6,8-some5,some6-3),3-f(2-some3,some0-4,some2-2,some4-1,7-6,4-some5,6-3,8-8),5-f(3-2,5-1,2-6,some0-some5,some2-3,some4-8,7-7,4-5)],[3-f(2-some3,some0-4,some2-2,some4-1,7-6,4-some5,6-3,8-8),5-f(3-2,5-1,2-6,some0-some5,some2-3,some4-8,7-7,4-5)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,some2-some3,some4-4,7-2,4-1,6-6,8-some5,some6-3),6-6)"}]
    <#lemma925>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_738 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_738.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma831> a r:Inference;
  r:gives {
    "queens([3-f(some7-some2,6-3,4-5,3-1,7-4,some3-some6,5-2,8-8),5-f(some8-5,some9-1,some7-4,6-some6,4-2,3-8,7-7,some3-6),7-f(2-4,1-some6,some8-2,some9-8,some7-7,6-6,4-some10,3-some11)],5,[7,5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(7-f(2-4,1-some0,some1-2,some2-8,some3-7,6-6,4-some4,3-some5),[3-f(some3-some6,6-3,4-5,3-1,7-4,some7-some0,5-2,8-8),5-f(some1-5,some2-1,some3-4,6-some0,4-2,3-8,7-7,some7-6),7-f(2-4,1-some0,some1-2,some2-8,some3-7,6-6,4-some4,3-some5)],[3-f(some3-some6,6-3,4-5,3-1,7-4,some7-some0,5-2,8-8),5-f(some1-5,some2-1,some3-4,6-some0,4-2,3-8,7-7,some7-6)])"}]
    [ a r:Fact; r:gives {"arg(6,f(2-4,1-some0,some1-2,some2-8,some3-7,6-6,4-some4,3-some5),6-6)"}]
    <#lemma926>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_739 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_739.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma832> a r:Inference;
  r:gives {
    "queens([2-f(5-2,3-some5,2-some6,6-3,8-some1,some7-1,7-7,some8-6),4-f(some2-some6,some3-3,5-some1,3-1,2-7,6-6,8-5,some7-4),5-f(4-3,some2-some1,some3-1,5-7,3-6,2-5,6-4,8-8)],5,[4,2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(4-f(some0-some1,some2-3,5-some3,3-1,2-7,6-6,8-5,some4-4),[2-f(5-2,3-some5,2-some1,6-3,8-some3,some4-1,7-7,some6-6),4-f(some0-some1,some2-3,5-some3,3-1,2-7,6-6,8-5,some4-4),5-f(4-3,some0-some3,some2-1,5-7,3-6,2-5,6-4,8-8)],[2-f(5-2,3-some5,2-some1,6-3,8-some3,some4-1,7-7,some6-6),5-f(4-3,some0-some3,some2-1,5-7,3-6,2-5,6-4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,some2-3,5-some3,3-1,2-7,6-6,8-5,some4-4),6-6)"}]
    <#lemma927>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_740 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_740.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma833> a r:Inference;
  r:gives {
    "queens([3-f(some5-2,3-4,2-some8,6-3,8-1,4-some1,7-7,some9-6),5-f(some3-some8,5-3,some5-1,3-some1,2-7,6-6,8-some4,4-5),6-f(some2-3,some3-1,5-some1,some5-7,3-6,2-some4,6-5,8-8)],5,[5,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(5-f(some0-some1,5-3,some2-1,3-some3,2-7,6-6,8-some4,4-5),[3-f(some2-2,3-4,2-some1,6-3,8-1,4-some3,7-7,some5-6),5-f(some0-some1,5-3,some2-1,3-some3,2-7,6-6,8-some4,4-5),6-f(some6-3,some0-1,5-some3,some2-7,3-6,2-some4,6-5,8-8)],[3-f(some2-2,3-4,2-some1,6-3,8-1,4-some3,7-7,some5-6),6-f(some6-3,some0-1,5-some3,some2-7,3-6,2-some4,6-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,5-3,some2-1,3-some3,2-7,6-6,8-some4,4-5),6-6)"}]
    <#lemma928>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_741 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_741.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma834> a r:Inference;
  r:gives {
    "queens([4-f(3-some2,some6-5,7-4,2-1,4-3,6-6,8-some7,5-some8),5-f(some9-5,3-4,some6-1,7-3,2-6,4-some7,6-some8,8-8),8-f(some10-3,1-6,some11-some7,some9-some8,3-8,some6-some12,7-7,2-some13)],5,[4,8,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(4-f(3-some0,some1-5,7-4,2-1,4-3,6-6,8-some2,5-some3),[4-f(3-some0,some1-5,7-4,2-1,4-3,6-6,8-some2,5-some3),5-f(some4-5,3-4,some1-1,7-3,2-6,4-some2,6-some3,8-8),8-f(some5-3,1-6,some6-some2,some4-some3,3-8,some1-some7,7-7,2-some8)],[5-f(some4-5,3-4,some1-1,7-3,2-6,4-some2,6-some3,8-8),8-f(some5-3,1-6,some6-some2,some4-some3,3-8,some1-some7,7-7,2-some8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(3-some0,some1-5,7-4,2-1,4-3,6-6,8-some2,5-some3),6-6)"}]
    <#lemma929>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_742 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_742.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma835> a r:Inference;
  r:gives {
    "queens([2-f(2-some7,some5-3,6-2,3-some8,some9-some10,8-1,7-7,some11-4),4-f(5-2,4-some8,2-some10,some5-1,6-7,3-4,some9-6,8-8),5-f(some2-some8,5-some10,4-1,2-7,some5-4,6-6,3-8,some9-5)],5,[5,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(5-f(some0-some1,5-some2,4-1,2-7,some3-4,6-6,3-8,some4-5),[2-f(2-some5,some3-3,6-2,3-some1,some4-some2,8-1,7-7,some6-4),4-f(5-2,4-some1,2-some2,some3-1,6-7,3-4,some4-6,8-8),5-f(some0-some1,5-some2,4-1,2-7,some3-4,6-6,3-8,some4-5)],[2-f(2-some5,some3-3,6-2,3-some1,some4-some2,8-1,7-7,some6-4),4-f(5-2,4-some1,2-some2,some3-1,6-7,3-4,some4-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,5-some2,4-1,2-7,some3-4,6-6,3-8,some4-5),6-6)"}]
    <#lemma930>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_743 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_743.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma836> a r:Inference;
  r:gives {
    "queens([1-f(5-some5,7-some6,4-some7,some4-2,8-4,6-6,some8-1,some9-some3),4-f(some1-2,some2-4,2-6,5-1,7-some3,4-5,some4-3,8-8),6-f(3-6,some0-1,some1-some3,some2-5,2-3,5-8,7-7,4-some10)],5,[1,6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(1-f(5-some0,7-some1,4-some2,some3-2,8-4,6-6,some4-1,some5-some6),[1-f(5-some0,7-some1,4-some2,some3-2,8-4,6-6,some4-1,some5-some6),4-f(some7-2,some8-4,2-6,5-1,7-some6,4-5,some3-3,8-8),6-f(3-6,some9-1,some7-some6,some8-5,2-3,5-8,7-7,4-some10)],[4-f(some7-2,some8-4,2-6,5-1,7-some6,4-5,some3-3,8-8),6-f(3-6,some9-1,some7-some6,some8-5,2-3,5-8,7-7,4-some10)])"}]
    [ a r:Fact; r:gives {"arg(6,f(5-some0,7-some1,4-some2,some3-2,8-4,6-6,some4-1,some5-some6),6-6)"}]
    <#lemma931>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_744 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_744.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma837> a r:Inference;
  r:gives {
    "queens([1-f(some6-some8,3-some9,8-some10,some11-3,7-2,6-6,some12-1,some13-4),3-f(2-some10,4-3,some6-2,3-6,8-1,some11-4,7-7,6-some2),6-f(some1-6,some3-1,5-4,2-7,4-some2,some6-some4,3-5,8-8)],5,[1,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,3-some2,8-some3,some4-3,7-2,6-6,some5-1,some6-4),[1-f(some0-some1,3-some2,8-some3,some4-3,7-2,6-6,some5-1,some6-4),3-f(2-some3,4-3,some0-2,3-6,8-1,some4-4,7-7,6-some7),6-f(some8-6,some9-1,5-4,2-7,4-some7,some0-some10,3-5,8-8)],[3-f(2-some3,4-3,some0-2,3-6,8-1,some4-4,7-7,6-some7),6-f(some8-6,some9-1,5-4,2-7,4-some7,some0-some10,3-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,3-some2,8-some3,some4-3,7-2,6-6,some5-1,some6-4),6-6)"}]
    <#lemma932>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_745 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_745.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma838> a r:Inference;
  r:gives {
    "queens([1-f(some3-some6,3-some7,some4-some8,8-3,7-2,6-6,some9-1,some10-some2),3-f(2-some8,5-3,some3-2,3-6,some4-1,8-some2,7-7,6-5),5-f(4-2,some1-6,2-1,5-some2,some3-7,3-5,some4-4,8-8)],5,[1,3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,3-some2,some3-some4,8-3,7-2,6-6,some5-1,some6-some7),[1-f(some0-some1,3-some2,some3-some4,8-3,7-2,6-6,some5-1,some6-some7),3-f(2-some4,5-3,some0-2,3-6,some3-1,8-some7,7-7,6-5),5-f(4-2,some8-6,2-1,5-some7,some0-7,3-5,some3-4,8-8)],[3-f(2-some4,5-3,some0-2,3-6,some3-1,8-some7,7-7,6-5),5-f(4-2,some8-6,2-1,5-some7,some0-7,3-5,some3-4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,3-some2,some3-some4,8-3,7-2,6-6,some5-1,some6-some7),6-6)"}]
    <#lemma933>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_746 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_746.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma839> a r:Inference;
  r:gives {
    "queens([2-f(5-some6,3-some7,some3-4,some5-3,4-2,8-1,7-7,some8-some2),4-f(2-4,6-3,5-2,3-1,some3-7,some5-some2,4-5,8-8),8-f(some9-7,1-some2,some0-5,some1-8,2-some4,6-6,5-some10,3-some11)],5,[8,2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(8-f(some0-7,1-some1,some2-5,some3-8,2-some4,6-6,5-some5,3-some6),[2-f(5-some7,3-some8,some9-4,some10-3,4-2,8-1,7-7,some11-some1),4-f(2-4,6-3,5-2,3-1,some9-7,some10-some1,4-5,8-8),8-f(some0-7,1-some1,some2-5,some3-8,2-some4,6-6,5-some5,3-some6)],[2-f(5-some7,3-some8,some9-4,some10-3,4-2,8-1,7-7,some11-some1),4-f(2-4,6-3,5-2,3-1,some9-7,some10-some1,4-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-7,1-some1,some2-5,some3-8,2-some4,6-6,5-some5,3-some6),6-6)"}]
    <#lemma934>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_747 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_747.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma840> a r:Inference;
  r:gives {
    "queens([3-f(5-2,3-4,2-some7,6-3,8-some1,4-1,7-7,some8-6),5-f(some3-some7,some4-3,5-some1,3-1,2-7,6-6,8-5,4-some5),6-f(some2-3,some3-some1,some4-1,5-7,3-6,2-5,6-some5,8-8)],5,[5,3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(5-f(some0-some1,some2-3,5-some3,3-1,2-7,6-6,8-5,4-some4),[3-f(5-2,3-4,2-some1,6-3,8-some3,4-1,7-7,some5-6),5-f(some0-some1,some2-3,5-some3,3-1,2-7,6-6,8-5,4-some4),6-f(some6-3,some0-some3,some2-1,5-7,3-6,2-5,6-some4,8-8)],[3-f(5-2,3-4,2-some1,6-3,8-some3,4-1,7-7,some5-6),6-f(some6-3,some0-some3,some2-1,5-7,3-6,2-5,6-some4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,some2-3,5-some3,3-1,2-7,6-6,8-5,4-some4),6-6)"}]
    <#lemma935>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_748 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_748.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma841> a r:Inference;
  r:gives {
    "queens([4-f(some6-some2,3-5,6-4,2-3,4-1,8-some7,7-7,5-some8),6-f(some9-4,some10-3,some6-1,3-some7,6-7,2-some8,4-6,8-8),7-f(some11-3,some9-1,some10-some7,some6-7,3-some8,6-6,2-8,4-some12)],5,[7,4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(7-f(some0-3,some1-1,some2-some3,some4-7,3-some5,6-6,2-8,4-some6),[4-f(some4-some7,3-5,6-4,2-3,4-1,8-some3,7-7,5-some5),6-f(some1-4,some2-3,some4-1,3-some3,6-7,2-some5,4-6,8-8),7-f(some0-3,some1-1,some2-some3,some4-7,3-some5,6-6,2-8,4-some6)],[4-f(some4-some7,3-5,6-4,2-3,4-1,8-some3,7-7,5-some5),6-f(some1-4,some2-3,some4-1,3-some3,6-7,2-some5,4-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-3,some1-1,some2-some3,some4-7,3-some5,6-6,2-8,4-some6),6-6)"}]
    <#lemma936>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_749 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_749.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma842> a r:Inference;
  r:gives {
    "queens([4-f(some5-2,4-some1,2-5,7-some2,6-1,3-4,5-6,8-8),5-f(some6-some1,some5-5,4-some2,2-1,7-4,6-6,3-8,5-some7),7-f(some8-some2,some9-1,some6-4,some5-6,4-8,2-some7,7-7,6-some10)],5,[5,7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(5-f(some0-some1,some2-5,4-some3,2-1,7-4,6-6,3-8,5-some4),[4-f(some2-2,4-some1,2-5,7-some3,6-1,3-4,5-6,8-8),5-f(some0-some1,some2-5,4-some3,2-1,7-4,6-6,3-8,5-some4),7-f(some5-some3,some6-1,some0-4,some2-6,4-8,2-some4,7-7,6-some7)],[4-f(some2-2,4-some1,2-5,7-some3,6-1,3-4,5-6,8-8),7-f(some5-some3,some6-1,some0-4,some2-6,4-8,2-some4,7-7,6-some7)])"}]
    [ a r:Fact; r:gives {"arg(6,f(some0-some1,some2-5,4-some3,2-1,7-4,6-6,3-8,5-some4),6-6)"}]
    <#lemma937>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_750 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_750.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma843> a r:Inference;
  r:gives {
    "queens([2-f(5-some5,7-3,4-some6,3-2,8-4,6-6,some7-1,some8-some3),5-f(some1-2,some2-4,2-6,5-1,7-some3,4-5,3-some4,8-8),7-f(some9-6,some0-1,some1-some3,some2-5,2-some4,5-8,7-7,4-some10)],5,[2,7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(5 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 6}]
    [ a r:Fact; r:gives {"select(2-f(5-some0,7-3,4-some1,3-2,8-4,6-6,some2-1,some3-some4),[2-f(5-some0,7-3,4-some1,3-2,8-4,6-6,some2-1,some3-some4),5-f(some5-2,some6-4,2-6,5-1,7-some4,4-5,3-some7,8-8),7-f(some8-6,some9-1,some5-some4,some6-5,2-some7,5-8,7-7,4-some10)],[5-f(some5-2,some6-4,2-6,5-1,7-some4,4-5,3-some7,8-8),7-f(some8-6,some9-1,some5-some4,some6-5,2-some7,5-8,7-7,4-some10)])"}]
    [ a r:Fact; r:gives {"arg(6,f(5-some0,7-3,4-some1,3-2,8-4,6-6,some2-1,some3-some4),6-6)"}]
    <#lemma938>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_751 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_751.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma844> a r:Inference;
  r:gives {
    "constraints(3,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),[some4,some2,some0|some16],[some5,some3,some1|some17])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"arg(3,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),some4-some5)"}]
    [ a r:Fact; r:gives {(3 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> 2}]
    <#lemma939>
  );
  r:rule [ a r:Fact; r:gives {{"arg(avar0,avar1,avar2-avar3)".
    (_:x_0_752 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> _:x_4_752.
    "constraints(avar4,avar1,avar5,avar6)"} => "constraints(avar0,avar1,[avar2|avar5],[avar3|avar6])"}].

<#lemma845> a r:Inference;
  r:gives {
    "constraints(8,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),[some14,some12,some10,some8,some6,some4,some2,some0,some16,some17|some18],[some15,some13,some11,some9,some7,some5,some3,some1,some19,some20,some21,some22,some23|some24])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"arg(8,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),some14-some15)"}]
    [ a r:Fact; r:gives {(8 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> 7}]
    <#lemma464>
  );
  r:rule [ a r:Fact; r:gives {{"arg(avar0,avar1,avar2-avar3)".
    (_:x_0_753 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> _:x_4_753.
    "constraints(avar4,avar1,avar5,avar6)"} => "constraints(avar0,avar1,[avar2|avar5],[avar3|avar6])"}].

<#lemma846> a r:Inference;
  r:gives {
    "board([some25,some26],[7-f(some16-some3,some0-some5,some2-some7,some4-some9,some6-some11,some8-some13,some10-some15,some12-some27),8-f(some17-some5,some16-some7,some0-some9,some2-some11,some4-some13,some6-some15,some8-some27,some10-some28)],6,8,[some14,some12,some10,some8,some6,some4,some2,some0,some16,some17|some18],[some27,some15,some13,some11,some9,some7,some5,some3,some1,some19,some20,some21,some22,some23|some24])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma940>
    <#lemma941>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_754 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_754.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma847> a r:Inference;
  r:gives {
    "queens([2-f(6-some5,1-some6,some3-some7,5-some8,some9-2,8-5,7-7,some10-4),4-f(2-some7,4-some8,6-2,1-5,some3-7,5-4,some9-3,8-8)],6,[2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(2-f(6-some0,1-some1,some2-some3,5-some4,some5-2,8-5,7-7,some6-4),[2-f(6-some0,1-some1,some2-some3,5-some4,some5-2,8-5,7-7,some6-4),4-f(2-some3,4-some4,6-2,1-5,some2-7,5-4,some5-3,8-8)],[4-f(2-some3,4-some4,6-2,1-5,some2-7,5-4,some5-3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(6-some0,1-some1,some2-some3,5-some4,some5-2,8-5,7-7,some6-4),7-7)"}]
    <#lemma942>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_755 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_755.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma848> a r:Inference;
  r:gives {
    "queens([2-f(some3-some5,1-some6,4-some1,6-some2,8-4,some4-2,7-7,some7-6),5-f(2-some2,some0-4,5-2,some3-7,1-6,4-3,6-5,8-8)],6,[2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(2-f(some0-some1,1-some2,4-some3,6-some4,8-4,some5-2,7-7,some6-6),[2-f(some0-some1,1-some2,4-some3,6-some4,8-4,some5-2,7-7,some6-6),5-f(2-some4,some7-4,5-2,some0-7,1-6,4-3,6-5,8-8)],[5-f(2-some4,some7-4,5-2,some0-7,1-6,4-3,6-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-some1,1-some2,4-some3,6-some4,8-4,some5-2,7-7,some6-6),7-7)"}]
    <#lemma943>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_756 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_756.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma849> a r:Inference;
  r:gives {
    "queens([3-f(4-some1,3-some3,1-some4,some2-3,7-6,some5-2,6-4,8-8),5-f(some7-some4,5-3,4-6,3-2,1-4,some2-8,7-7,some5-5)],6,[5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(5-f(some0-some1,5-3,4-6,3-2,1-4,some2-8,7-7,some3-5),[3-f(4-some4,3-some5,1-some1,some2-3,7-6,some3-2,6-4,8-8),5-f(some0-some1,5-3,4-6,3-2,1-4,some2-8,7-7,some3-5)],[3-f(4-some4,3-some5,1-some1,some2-3,7-6,some3-2,6-4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-some1,5-3,4-6,3-2,1-4,some2-8,7-7,some3-5),7-7)"}]
    <#lemma944>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_757 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_757.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma850> a r:Inference;
  r:gives {
    "queens([3-f(3-some5,some3-some1,1-some2,7-5,6-3,5-2,some4-6,8-8),6-f(2-5,4-3,some0-2,3-6,some3-8,1-4,7-7,6-some6)],6,[6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(6-f(2-5,4-3,some0-2,3-6,some1-8,1-4,7-7,6-some2),[3-f(3-some3,some1-some4,1-some5,7-5,6-3,5-2,some6-6,8-8),6-f(2-5,4-3,some0-2,3-6,some1-8,1-4,7-7,6-some2)],[3-f(3-some3,some1-some4,1-some5,7-5,6-3,5-2,some6-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-5,4-3,some0-2,3-6,some1-8,1-4,7-7,6-some2),7-7)"}]
    <#lemma945>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_758 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_758.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma851> a r:Inference;
  r:gives {
    "queens([5-f(4-2,3-6,2-5,1-3,7-some7,some1-some8,5-4,8-8),7-f(some9-5,some10-3,4-some7,3-some8,2-4,1-8,7-7,some1-some11)],6,[7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(7-f(some0-5,some1-3,4-some2,3-some3,2-4,1-8,7-7,some4-some5),[5-f(4-2,3-6,2-5,1-3,7-some2,some4-some3,5-4,8-8),7-f(some0-5,some1-3,4-some2,3-some3,2-4,1-8,7-7,some4-some5)],[5-f(4-2,3-6,2-5,1-3,7-some2,some4-some3,5-4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-5,some1-3,4-some2,3-some3,2-4,1-8,7-7,some4-some5),7-7)"}]
    <#lemma946>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_759 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_759.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma852> a r:Inference;
  r:gives {
    "queens([4-f(2-4,6-some8,1-2,some6-5,7-some1,5-3,4-some4,8-8),6-f(some3-2,3-5,2-some1,6-3,1-some4,some6-8,7-7,5-6)],6,[6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(6-f(some0-2,3-5,2-some1,6-3,1-some2,some3-8,7-7,5-6),[4-f(2-4,6-some4,1-2,some3-5,7-some1,5-3,4-some2,8-8),6-f(some0-2,3-5,2-some1,6-3,1-some2,some3-8,7-7,5-6)],[4-f(2-4,6-some4,1-2,some3-5,7-some1,5-3,4-some2,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-2,3-5,2-some1,6-3,1-some2,some3-8,7-7,5-6),7-7)"}]
    <#lemma947>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_760 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_760.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma853> a r:Inference;
  r:gives {
    "queens([3-f(6-some7,1-some8,4-5,7-2,some9-4,some10-some1,5-3,8-8),6-f(some3-2,3-4,2-some1,6-3,1-8,4-some4,7-7,some9-6)],6,[6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(6-f(some0-2,3-4,2-some1,6-3,1-8,4-some2,7-7,some3-6),[3-f(6-some4,1-some5,4-5,7-2,some3-4,some6-some1,5-3,8-8),6-f(some0-2,3-4,2-some1,6-3,1-8,4-some2,7-7,some3-6)],[3-f(6-some4,1-some5,4-5,7-2,some3-4,some6-some1,5-3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-2,3-4,2-some1,6-3,1-8,4-some2,7-7,some3-6),7-7)"}]
    <#lemma948>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_761 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_761.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma854> a r:Inference;
  r:gives {
    "queens([3-f(6-3,1-some7,some5-some8,5-some9,3-2,8-5,7-7,some10-4),5-f(2-some8,4-some9,6-2,1-5,some5-7,5-4,3-some3,8-8)],6,[3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(3-f(6-3,1-some0,some1-some2,5-some3,3-2,8-5,7-7,some4-4),[3-f(6-3,1-some0,some1-some2,5-some3,3-2,8-5,7-7,some4-4),5-f(2-some2,4-some3,6-2,1-5,some1-7,5-4,3-some5,8-8)],[5-f(2-some2,4-some3,6-2,1-5,some1-7,5-4,3-some5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(6-3,1-some0,some1-some2,5-some3,3-2,8-5,7-7,some4-4),7-7)"}]
    <#lemma949>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_762 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_762.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma855> a r:Inference;
  r:gives {
    "queens([5-f(2-5,some0-4,some2-2,1-some3,7-6,4-3,6-some4,8-8),7-f(some5-2,3-some3,2-6,some0-3,some2-some4,1-8,7-7,4-some6)],6,[7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(7-f(some0-2,3-some1,2-6,some2-3,some3-some4,1-8,7-7,4-some5),[5-f(2-5,some2-4,some3-2,1-some1,7-6,4-3,6-some4,8-8),7-f(some0-2,3-some1,2-6,some2-3,some3-some4,1-8,7-7,4-some5)],[5-f(2-5,some2-4,some3-2,1-some1,7-6,4-3,6-some4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-2,3-some1,2-6,some2-3,some3-some4,1-8,7-7,4-some5),7-7)"}]
    <#lemma950>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_763 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_763.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma856> a r:Inference;
  r:gives {
    "queens([1-f(3-some4,6-1,some2-some5,some3-some6,8-3,some7-some1,7-7,some8-2),4-f(5-some6,4-3,1-some1,3-7,6-2,some2-4,some3-6,8-8)],6,[1,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(1-f(3-some0,6-1,some1-some2,some3-some4,8-3,some5-some6,7-7,some7-2),[1-f(3-some0,6-1,some1-some2,some3-some4,8-3,some5-some6,7-7,some7-2),4-f(5-some4,4-3,1-some6,3-7,6-2,some1-4,some3-6,8-8)],[4-f(5-some4,4-3,1-some6,3-7,6-2,some1-4,some3-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(3-some0,6-1,some1-some2,some3-some4,8-3,some5-some6,7-7,some7-2),7-7)"}]
    <#lemma951>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_764 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_764.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma857> a r:Inference;
  r:gives {
    "queens([3-f(3-some5,1-some1,some3-5,7-some2,6-3,some4-2,5-6,8-8),6-f(2-some2,4-3,some0-2,3-6,1-8,some3-4,7-7,6-some6)],6,[6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(6-f(2-some0,4-3,some1-2,3-6,1-8,some2-4,7-7,6-some3),[3-f(3-some4,1-some5,some2-5,7-some0,6-3,some6-2,5-6,8-8),6-f(2-some0,4-3,some1-2,3-6,1-8,some2-4,7-7,6-some3)],[3-f(3-some4,1-some5,some2-5,7-some0,6-3,some6-2,5-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-some0,4-3,some1-2,3-6,1-8,some2-4,7-7,6-some3),7-7)"}]
    <#lemma952>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_765 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_765.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma858> a r:Inference;
  r:gives {
    "queens([4-f(3-4,some3-some1,1-some2,7-5,6-3,5-2,4-6,8-8),7-f(2-5,some5-3,some0-2,3-6,some3-8,1-some4,7-7,6-some6)],6,[7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(7-f(2-5,some0-3,some1-2,3-6,some2-8,1-some3,7-7,6-some4),[4-f(3-4,some2-some5,1-some6,7-5,6-3,5-2,4-6,8-8),7-f(2-5,some0-3,some1-2,3-6,some2-8,1-some3,7-7,6-some4)],[4-f(3-4,some2-some5,1-some6,7-5,6-3,5-2,4-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-5,some0-3,some1-2,3-6,some2-8,1-some3,7-7,6-some4),7-7)"}]
    <#lemma953>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_766 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_766.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma859> a r:Inference;
  r:gives {
    "queens([4-f(5-some1,1-some2,4-some3,some0-6,2-4,8-3,7-7,6-some6),6-f(some7-some3,3-6,5-4,1-3,4-7,some0-some6,2-5,8-8)],6,[4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(4-f(5-some0,1-some1,4-some2,some3-6,2-4,8-3,7-7,6-some4),[4-f(5-some0,1-some1,4-some2,some3-6,2-4,8-3,7-7,6-some4),6-f(some5-some2,3-6,5-4,1-3,4-7,some3-some4,2-5,8-8)],[6-f(some5-some2,3-6,5-4,1-3,4-7,some3-some4,2-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(5-some0,1-some1,4-some2,some3-6,2-4,8-3,7-7,6-some4),7-7)"}]
    <#lemma954>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_767 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_767.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma860> a r:Inference;
  r:gives {
    "queens([4-f(2-3,1-5,6-2,some5-some1,3-some3,8-some4,7-7,5-4),6-f(some2-2,4-some1,2-some3,1-some4,6-7,some5-4,3-6,8-8)],6,[4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(4-f(2-3,1-5,6-2,some0-some1,3-some2,8-some3,7-7,5-4),[4-f(2-3,1-5,6-2,some0-some1,3-some2,8-some3,7-7,5-4),6-f(some4-2,4-some1,2-some2,1-some3,6-7,some0-4,3-6,8-8)],[6-f(some4-2,4-some1,2-some2,1-some3,6-7,some0-4,3-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-3,1-5,6-2,some0-some1,3-some2,8-some3,7-7,5-4),7-7)"}]
    <#lemma955>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_768 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_768.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma861> a r:Inference;
  r:gives {
    "queens([1-f(7-some4,3-some5,6-1,some2-3,some3-some0,some6-2,some7-some1,8-8),7-f(some8-some1,some9-8,4-6,2-5,1-4,5-some10,7-7,3-some11)],6,[7,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(7-f(some0-some1,some2-8,4-6,2-5,1-4,5-some3,7-7,3-some4),[1-f(7-some5,3-some6,6-1,some7-3,some8-some9,some10-2,some11-some1,8-8),7-f(some0-some1,some2-8,4-6,2-5,1-4,5-some3,7-7,3-some4)],[1-f(7-some5,3-some6,6-1,some7-3,some8-some9,some10-2,some11-some1,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-some1,some2-8,4-6,2-5,1-4,5-some3,7-7,3-some4),7-7)"}]
    <#lemma956>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_769 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_769.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma862> a r:Inference;
  r:gives {
    "queens([6-f(some5-2,3-6,2-5,1-3,7-some6,some1-some7,5-some8,8-8),8-f(some9-5,some10-3,some5-some6,3-some7,2-some8,1-8,7-7,some1-some11)],6,[8,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(8-f(some0-5,some1-3,some2-some3,3-some4,2-some5,1-8,7-7,some6-some7),[6-f(some2-2,3-6,2-5,1-3,7-some3,some6-some4,5-some5,8-8),8-f(some0-5,some1-3,some2-some3,3-some4,2-some5,1-8,7-7,some6-some7)],[6-f(some2-2,3-6,2-5,1-3,7-some3,some6-some4,5-some5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-5,some1-3,some2-some3,3-some4,2-some5,1-8,7-7,some6-some7),7-7)"}]
    <#lemma957>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_770 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_770.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma863> a r:Inference;
  r:gives {
    "queens([2-f(6-some6,4-1,some4-some7,8-5,some8-2,5-4,7-7,some9-some2),6-f(3-2,some1-4,2-7,1-some2,6-3,4-some3,some4-6,8-8)],6,[2,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(2-f(6-some0,4-1,some1-some2,8-5,some3-2,5-4,7-7,some4-some5),[2-f(6-some0,4-1,some1-some2,8-5,some3-2,5-4,7-7,some4-some5),6-f(3-2,some6-4,2-7,1-some5,6-3,4-some7,some1-6,8-8)],[6-f(3-2,some6-4,2-7,1-some5,6-3,4-some7,some1-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(6-some0,4-1,some1-some2,8-5,some3-2,5-4,7-7,some4-some5),7-7)"}]
    <#lemma958>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_771 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_771.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma864> a r:Inference;
  r:gives {
    "queens([4-f(5-3,1-some4,4-6,7-2,3-4,some2-some7,some3-some8,8-8),7-f(some9-2,some10-4,2-some7,5-some8,1-8,4-5,7-7,3-some11)],6,[7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(7-f(some0-2,some1-4,2-some2,5-some3,1-8,4-5,7-7,3-some4),[4-f(5-3,1-some5,4-6,7-2,3-4,some6-some2,some7-some3,8-8),7-f(some0-2,some1-4,2-some2,5-some3,1-8,4-5,7-7,3-some4)],[4-f(5-3,1-some5,4-6,7-2,3-4,some6-some2,some7-some3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-2,some1-4,2-some2,5-some3,1-8,4-5,7-7,3-some4),7-7)"}]
    <#lemma959>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_772 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_772.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma865> a r:Inference;
  r:gives {
    "queens([5-f(2-5,4-some0,1-2,7-some2,some1-6,3-4,6-some3,8-8),8-f(some4-some2,some5-6,some6-4,2-some3,4-8,1-some7,7-7,some1-some8)],6,[8,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-6,some3-4,2-some4,4-8,1-some5,7-7,some6-some7),[5-f(2-5,4-some8,1-2,7-some1,some6-6,3-4,6-some4,8-8),8-f(some0-some1,some2-6,some3-4,2-some4,4-8,1-some5,7-7,some6-some7)],[5-f(2-5,4-some8,1-2,7-some1,some6-6,3-4,6-some4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-some1,some2-6,some3-4,2-some4,4-8,1-some5,7-7,some6-some7),7-7)"}]
    <#lemma960>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_773 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_773.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma866> a r:Inference;
  r:gives {
    "queens([4-f(4-3,1-some4,7-6,5-2,3-some7,some2-5,some3-4,8-8),8-f(some8-some7,some9-5,some10-4,2-8,4-some11,1-some12,7-7,5-some13)],6,[8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-5,some3-4,2-8,4-some4,1-some5,7-7,5-some6),[4-f(4-3,1-some7,7-6,5-2,3-some1,some8-5,some9-4,8-8),8-f(some0-some1,some2-5,some3-4,2-8,4-some4,1-some5,7-7,5-some6)],[4-f(4-3,1-some7,7-6,5-2,3-some1,some8-5,some9-4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-some1,some2-5,some3-4,2-8,4-some4,1-some5,7-7,5-some6),7-7)"}]
    <#lemma961>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_774 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_774.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma867> a r:Inference;
  r:gives {
    "queens([2-f(3-some4,7-1,6-4,some2-some0,4-3,some5-2,some6-some1,8-8),7-f(some7-2,some8-some1,2-8,5-6,1-some3,3-5,7-7,6-some9)],6,[7,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(7-f(some0-2,some1-some2,2-8,5-6,1-some3,3-5,7-7,6-some4),[2-f(3-some5,7-1,6-4,some6-some7,4-3,some8-2,some9-some2,8-8),7-f(some0-2,some1-some2,2-8,5-6,1-some3,3-5,7-7,6-some4)],[2-f(3-some5,7-1,6-4,some6-some7,4-3,some8-2,some9-some2,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-2,some1-some2,2-8,5-6,1-some3,3-5,7-7,6-some4),7-7)"}]
    <#lemma962>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_775 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_775.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma868> a r:Inference;
  r:gives {
    "queens([1-f(7-some3,6-some4,4-1,some2-some5,some6-4,some7-3,some8-2,8-8),7-f(some9-2,some10-8,2-some0,5-6,1-some1,3-5,7-7,6-some11)],6,[7,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(7-f(some0-2,some1-8,2-some2,5-6,1-some3,3-5,7-7,6-some4),[1-f(7-some5,6-some6,4-1,some7-some8,some9-4,some10-3,some11-2,8-8),7-f(some0-2,some1-8,2-some2,5-6,1-some3,3-5,7-7,6-some4)],[1-f(7-some5,6-some6,4-1,some7-some8,some9-4,some10-3,some11-2,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-2,some1-8,2-some2,5-6,1-some3,3-5,7-7,6-some4),7-7)"}]
    <#lemma963>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_776 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_776.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma869> a r:Inference;
  r:gives {
    "queens([2-f(6-some5,some2-1,5-4,7-some6,4-some7,some8-2,some9-5,8-8),5-f(2-some6,some1-some7,1-2,6-5,some2-8,5-3,7-7,4-6)],6,[5,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(5-f(2-some0,some1-some2,1-2,6-5,some3-8,5-3,7-7,4-6),[2-f(6-some4,some3-1,5-4,7-some0,4-some2,some5-2,some6-5,8-8),5-f(2-some0,some1-some2,1-2,6-5,some3-8,5-3,7-7,4-6)],[2-f(6-some4,some3-1,5-4,7-some0,4-some2,some5-2,some6-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-some0,some1-some2,1-2,6-5,some3-8,5-3,7-7,4-6),7-7)"}]
    <#lemma964>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_777 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_777.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma870> a r:Inference;
  r:gives {
    "queens([2-f(6-some5,5-1,some3-4,some6-some7,4-some8,8-2,7-7,some9-5),4-f(some1-4,1-some7,6-some8,5-2,some3-7,some6-5,4-3,8-8)],6,[2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(2-f(6-some0,5-1,some1-4,some2-some3,4-some4,8-2,7-7,some5-5),[2-f(6-some0,5-1,some1-4,some2-some3,4-some4,8-2,7-7,some5-5),4-f(some6-4,1-some3,6-some4,5-2,some1-7,some2-5,4-3,8-8)],[4-f(some6-4,1-some3,6-some4,5-2,some1-7,some2-5,4-3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(6-some0,5-1,some1-4,some2-some3,4-some4,8-2,7-7,some5-5),7-7)"}]
    <#lemma965>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_778 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_778.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma871> a r:Inference;
  r:gives {
    "queens([5-f(2-4,some6-6,1-2,some7-5,7-some8,5-3,4-some9,8-8),7-f(some10-2,3-5,2-some8,some6-3,1-some9,some7-8,7-7,5-some11)],6,[7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(7-f(some0-2,3-5,2-some1,some2-3,1-some3,some4-8,7-7,5-some5),[5-f(2-4,some2-6,1-2,some4-5,7-some1,5-3,4-some3,8-8),7-f(some0-2,3-5,2-some1,some2-3,1-some3,some4-8,7-7,5-some5)],[5-f(2-4,some2-6,1-2,some4-5,7-some1,5-3,4-some3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-2,3-5,2-some1,some2-3,1-some3,some4-8,7-7,5-some5),7-7)"}]
    <#lemma966>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_779 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_779.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma872> a r:Inference;
  r:gives {
    "queens([4-f(some7-3,1-some3,some8-6,5-some5,3-2,8-5,7-7,some2-4),6-f(2-6,4-some5,some7-2,1-5,some8-7,5-4,3-some9,8-8)],6,[4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(4-f(some0-3,1-some1,some2-6,5-some3,3-2,8-5,7-7,some4-4),[4-f(some0-3,1-some1,some2-6,5-some3,3-2,8-5,7-7,some4-4),6-f(2-6,4-some3,some0-2,1-5,some2-7,5-4,3-some5,8-8)],[6-f(2-6,4-some3,some0-2,1-5,some2-7,5-4,3-some5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-3,1-some1,some2-6,5-some3,3-2,8-5,7-7,some4-4),7-7)"}]
    <#lemma967>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_780 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_780.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma873> a r:Inference;
  r:gives {
    "queens([1-f(some3-some5,3-some6,6-1,8-3,some4-some1,some7-some2,7-7,some8-2),5-f(4-some1,some0-some2,1-7,5-2,some3-6,3-5,6-4,8-8)],6,[1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,3-some2,6-1,8-3,some3-some4,some5-some6,7-7,some7-2),[1-f(some0-some1,3-some2,6-1,8-3,some3-some4,some5-some6,7-7,some7-2),5-f(4-some4,some8-some6,1-7,5-2,some0-6,3-5,6-4,8-8)],[5-f(4-some4,some8-some6,1-7,5-2,some0-6,3-5,6-4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-some1,3-some2,6-1,8-3,some3-some4,some5-some6,7-7,some7-2),7-7)"}]
    <#lemma968>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_781 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_781.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma874> a r:Inference;
  r:gives {
    "queens([2-f(3-some6,6-1,some3-some7,some4-5,8-3,5-some2,7-7,some8-2),5-f(some1-5,4-3,1-some2,3-7,6-2,some3-4,some4-6,8-8)],6,[2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(2-f(3-some0,6-1,some1-some2,some3-5,8-3,5-some4,7-7,some5-2),[2-f(3-some0,6-1,some1-some2,some3-5,8-3,5-some4,7-7,some5-2),5-f(some6-5,4-3,1-some4,3-7,6-2,some1-4,some3-6,8-8)],[5-f(some6-5,4-3,1-some4,3-7,6-2,some1-4,some3-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(3-some0,6-1,some1-some2,some3-5,8-3,5-some4,7-7,some5-2),7-7)"}]
    <#lemma969>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_782 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_782.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma875> a r:Inference;
  r:gives {
    "queens([3-f(3-some6,6-1,some4-some7,2-5,8-3,5-some2,7-7,some8-some3),6-f(some1-5,4-3,1-some2,3-7,6-some3,some4-4,2-6,8-8)],6,[3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(3-f(3-some0,6-1,some1-some2,2-5,8-3,5-some3,7-7,some4-some5),[3-f(3-some0,6-1,some1-some2,2-5,8-3,5-some3,7-7,some4-some5),6-f(some6-5,4-3,1-some3,3-7,6-some5,some1-4,2-6,8-8)],[6-f(some6-5,4-3,1-some3,3-7,6-some5,some1-4,2-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(3-some0,6-1,some1-some2,2-5,8-3,5-some3,7-7,some4-some5),7-7)"}]
    <#lemma970>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_783 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_783.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma876> a r:Inference;
  r:gives {
    "queens([2-f(5-2,7-some0,2-1,some3-some1,6-some2,some4-3,some5-6,8-8),7-f(some6-3,some7-6,4-8,1-5,3-4,5-some8,7-7,2-some9)],6,[7,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(7-f(some0-3,some1-6,4-8,1-5,3-4,5-some2,7-7,2-some3),[2-f(5-2,7-some4,2-1,some5-some6,6-some7,some8-3,some9-6,8-8),7-f(some0-3,some1-6,4-8,1-5,3-4,5-some2,7-7,2-some3)],[2-f(5-2,7-some4,2-1,some5-some6,6-some7,some8-3,some9-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-3,some1-6,4-8,1-5,3-4,5-some2,7-7,2-some3),7-7)"}]
    <#lemma971>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_784 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_784.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma877> a r:Inference;
  r:gives {
    "queens([3-f(3-2,5-1,2-some4,8-6,some2-3,some3-some7,7-7,6-5),7-f(some8-3,some9-some7,4-7,1-5,3-4,5-some10,2-some11,8-8)],6,[3,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(3-f(3-2,5-1,2-some0,8-6,some1-3,some2-some3,7-7,6-5),[3-f(3-2,5-1,2-some0,8-6,some1-3,some2-some3,7-7,6-5),7-f(some4-3,some5-some3,4-7,1-5,3-4,5-some6,2-some7,8-8)],[7-f(some4-3,some5-some3,4-7,1-5,3-4,5-some6,2-some7,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(3-2,5-1,2-some0,8-6,some1-3,some2-some3,7-7,6-5),7-7)"}]
    <#lemma972>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_785 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_785.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma878> a r:Inference;
  r:gives {
    "queens([1-f(2-some7,4-some8,some9-2,8-1,some10-some11,some12-4,7-7,some13-some1),5-f(3-some11,1-4,6-7,5-some1,2-3,4-5,some9-some4,8-8)],6,[1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(1-f(2-some0,4-some1,some2-2,8-1,some3-some4,some5-4,7-7,some6-some7),[1-f(2-some0,4-some1,some2-2,8-1,some3-some4,some5-4,7-7,some6-some7),5-f(3-some4,1-4,6-7,5-some7,2-3,4-5,some2-some8,8-8)],[5-f(3-some4,1-4,6-7,5-some7,2-3,4-5,some2-some8,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-some0,4-some1,some2-2,8-1,some3-some4,some5-4,7-7,some6-some7),7-7)"}]
    <#lemma973>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_786 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_786.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma879> a r:Inference;
  r:gives {
    "queens([1-f(2-some6,4-some7,7-2,some8-1,some9-some10,some11-4,some12-some13,8-8),5-f(3-some10,1-4,6-some13,5-8,2-3,4-5,7-7,some8-some3)],6,[5,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(5-f(3-some0,1-4,6-some1,5-8,2-3,4-5,7-7,some2-some3),[1-f(2-some4,4-some5,7-2,some2-1,some6-some0,some7-4,some8-some1,8-8),5-f(3-some0,1-4,6-some1,5-8,2-3,4-5,7-7,some2-some3)],[1-f(2-some4,4-some5,7-2,some2-1,some6-some0,some7-4,some8-some1,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(3-some0,1-4,6-some1,5-8,2-3,4-5,7-7,some2-some3),7-7)"}]
    <#lemma974>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_787 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_787.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma880> a r:Inference;
  r:gives {
    "queens([3-f(6-2,4-1,2-5,7-some6,some7-some8,some9-4,5-3,8-8),6-f(some2-some6,3-some8,1-4,6-3,4-8,2-some3,7-7,some7-6)],6,[6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(6-f(some0-some1,3-some2,1-4,6-3,4-8,2-some3,7-7,some4-6),[3-f(6-2,4-1,2-5,7-some1,some4-some2,some5-4,5-3,8-8),6-f(some0-some1,3-some2,1-4,6-3,4-8,2-some3,7-7,some4-6)],[3-f(6-2,4-1,2-5,7-some1,some4-some2,some5-4,5-3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-some1,3-some2,1-4,6-3,4-8,2-some3,7-7,some4-6),7-7)"}]
    <#lemma975>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_788 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_788.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma881> a r:Inference;
  r:gives {
    "queens([3-f(5-2,4-1,2-some4,some1-6,8-some6,some3-4,7-7,6-3),6-f(3-6,some8-some6,1-4,5-7,4-3,2-5,some1-some9,8-8)],6,[3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(3-f(5-2,4-1,2-some0,some1-6,8-some2,some3-4,7-7,6-3),[3-f(5-2,4-1,2-some0,some1-6,8-some2,some3-4,7-7,6-3),6-f(3-6,some4-some2,1-4,5-7,4-3,2-5,some1-some5,8-8)],[6-f(3-6,some4-some2,1-4,5-7,4-3,2-5,some1-some5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(5-2,4-1,2-some0,some1-6,8-some2,some3-4,7-7,6-3),7-7)"}]
    <#lemma976>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_789 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_789.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma882> a r:Inference;
  r:gives {
    "queens([5-f(some4-5,1-some1,4-some2,some0-6,2-4,8-3,7-7,6-some5),7-f(some6-some2,3-6,some4-4,1-3,4-7,some0-some5,2-some7,8-8)],6,[5,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(5-f(some0-5,1-some1,4-some2,some3-6,2-4,8-3,7-7,6-some4),[5-f(some0-5,1-some1,4-some2,some3-6,2-4,8-3,7-7,6-some4),7-f(some5-some2,3-6,some0-4,1-3,4-7,some3-some4,2-some6,8-8)],[7-f(some5-some2,3-6,some0-4,1-3,4-7,some3-some4,2-some6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-5,1-some1,4-some2,some3-6,2-4,8-3,7-7,6-some4),7-7)"}]
    <#lemma977>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_790 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_790.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma883> a r:Inference;
  r:gives {
    "queens([3-f(6-3,4-1,some6-some8,8-5,3-2,5-4,7-7,some9-some3),7-f(some1-2,some2-4,2-7,1-some3,6-some4,4-some5,some6-6,8-8)],6,[3,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(3-f(6-3,4-1,some0-some1,8-5,3-2,5-4,7-7,some2-some3),[3-f(6-3,4-1,some0-some1,8-5,3-2,5-4,7-7,some2-some3),7-f(some4-2,some5-4,2-7,1-some3,6-some6,4-some7,some0-6,8-8)],[7-f(some4-2,some5-4,2-7,1-some3,6-some6,4-some7,some0-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(6-3,4-1,some0-some1,8-5,3-2,5-4,7-7,some2-some3),7-7)"}]
    <#lemma978>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_791 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_791.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma884> a r:Inference;
  r:gives {
    "queens([3-f(5-some4,some8-1,some0-4,some2-6,4-2,8-some7,7-7,6-3),5-f(2-4,1-6,5-2,some8-some7,some0-7,some2-3,4-5,8-8)],6,[3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(3-f(5-some0,some1-1,some2-4,some3-6,4-2,8-some4,7-7,6-3),[3-f(5-some0,some1-1,some2-4,some3-6,4-2,8-some4,7-7,6-3),5-f(2-4,1-6,5-2,some1-some4,some2-7,some3-3,4-5,8-8)],[5-f(2-4,1-6,5-2,some1-some4,some2-7,some3-3,4-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(5-some0,some1-1,some2-4,some3-6,4-2,8-some4,7-7,6-3),7-7)"}]
    <#lemma979>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_792 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_792.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma885> a r:Inference;
  r:gives {
    "queens([2-f(6-some6,some3-some7,4-1,7-5,some8-4,5-2,some9-some1,8-8),5-f(2-5,1-4,some2-2,6-some1,some3-8,4-3,7-7,some8-6)],6,[5,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(5-f(2-5,1-4,some0-2,6-some1,some2-8,4-3,7-7,some3-6),[2-f(6-some4,some2-some5,4-1,7-5,some3-4,5-2,some6-some1,8-8),5-f(2-5,1-4,some0-2,6-some1,some2-8,4-3,7-7,some3-6)],[2-f(6-some4,some2-some5,4-1,7-5,some3-4,5-2,some6-some1,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-5,1-4,some0-2,6-some1,some2-8,4-3,7-7,some3-6),7-7)"}]
    <#lemma980>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_793 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_793.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma886> a r:Inference;
  r:gives {
    "queens([3-f(some6-3,some0-1,5-some2,7-some4,3-6,some3-2,6-5,8-8),6-f(2-some4,4-6,1-2,some6-5,some0-8,5-4,7-7,3-some7)],6,[6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(6-f(2-some0,4-6,1-2,some1-5,some2-8,5-4,7-7,3-some3),[3-f(some1-3,some2-1,5-some4,7-some0,3-6,some5-2,6-5,8-8),6-f(2-some0,4-6,1-2,some1-5,some2-8,5-4,7-7,3-some3)],[3-f(some1-3,some2-1,5-some4,7-some0,3-6,some5-2,6-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-some0,4-6,1-2,some1-5,some2-8,5-4,7-7,3-some3),7-7)"}]
    <#lemma981>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_794 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_794.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma887> a r:Inference;
  r:gives {
    "queens([1-f(3-some4,6-some5,8-some6,5-1,some7-3,some8-5,7-7,some9-2),6-f(2-5,4-7,1-2,some0-some2,some1-6,3-4,6-some3,8-8)],6,[1,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(1-f(3-some0,6-some1,8-some2,5-1,some3-3,some4-5,7-7,some5-2),[1-f(3-some0,6-some1,8-some2,5-1,some3-3,some4-5,7-7,some5-2),6-f(2-5,4-7,1-2,some6-some7,some8-6,3-4,6-some9,8-8)],[6-f(2-5,4-7,1-2,some6-some7,some8-6,3-4,6-some9,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(3-some0,6-some1,8-some2,5-1,some3-3,some4-5,7-7,some5-2),7-7)"}]
    <#lemma982>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_795 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_795.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma888> a r:Inference;
  r:gives {
    "queens([3-f(3-some3,5-1,8-4,some1-6,4-3,some4-2,7-7,6-5),8-f(some7-2,some8-7,2-5,some9-some10,1-some11,3-some12,5-some13,8-8)],6,[3,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(3-f(3-some0,5-1,8-4,some1-6,4-3,some2-2,7-7,6-5),[3-f(3-some0,5-1,8-4,some1-6,4-3,some2-2,7-7,6-5),8-f(some3-2,some4-7,2-5,some5-some6,1-some7,3-some8,5-some9,8-8)],[8-f(some3-2,some4-7,2-5,some5-some6,1-some7,3-some8,5-some9,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(3-some0,5-1,8-4,some1-6,4-3,some2-2,7-7,6-5),7-7)"}]
    <#lemma983>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_796 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_796.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma889> a r:Inference;
  r:gives {
    "queens([2-f(7-some5,6-some6,4-1,some3-5,some7-4,5-3,some8-2,8-8),8-f(some9-2,some10-8,2-some1,some0-6,1-some2,3-some4,7-7,6-some11)],6,[8,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(8-f(some0-2,some1-8,2-some2,some3-6,1-some4,3-some5,7-7,6-some6),[2-f(7-some7,6-some8,4-1,some9-5,some10-4,5-3,some11-2,8-8),8-f(some0-2,some1-8,2-some2,some3-6,1-some4,3-some5,7-7,6-some6)],[2-f(7-some7,6-some8,4-1,some9-5,some10-4,5-3,some11-2,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-2,some1-8,2-some2,some3-6,1-some4,3-some5,7-7,6-some6),7-7)"}]
    <#lemma984>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_797 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_797.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma890> a r:Inference;
  r:gives {
    "queens([5-f(some5-some1,1-4,some6-6,5-some3,7-2,4-5,3-some7,8-8),7-f(2-6,some8-some3,some5-2,1-5,some6-some7,5-8,7-7,4-some9)],6,[7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(7-f(2-6,some0-some1,some2-2,1-5,some3-some4,5-8,7-7,4-some5),[5-f(some2-some6,1-4,some3-6,5-some1,7-2,4-5,3-some4,8-8),7-f(2-6,some0-some1,some2-2,1-5,some3-some4,5-8,7-7,4-some5)],[5-f(some2-some6,1-4,some3-6,5-some1,7-2,4-5,3-some4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-6,some0-some1,some2-2,1-5,some3-some4,5-8,7-7,4-some5),7-7)"}]
    <#lemma985>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_798 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_798.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma891> a r:Inference;
  r:gives {
    "queens([3-f(5-3,4-1,some1-some2,7-some4,3-6,some3-4,6-2,8-8),6-f(some6-some4,some7-6,1-4,5-2,4-8,some1-5,7-7,3-some8)],6,[6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(6-f(some0-some1,some2-6,1-4,5-2,4-8,some3-5,7-7,3-some4),[3-f(5-3,4-1,some3-some5,7-some1,3-6,some6-4,6-2,8-8),6-f(some0-some1,some2-6,1-4,5-2,4-8,some3-5,7-7,3-some4)],[3-f(5-3,4-1,some3-some5,7-some1,3-6,some6-4,6-2,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-some1,some2-6,1-4,5-2,4-8,some3-5,7-7,3-some4),7-7)"}]
    <#lemma986>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_799 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_799.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma892> a r:Inference;
  r:gives {
    "queens([2-f(6-some6,some4-some7,4-1,8-5,some8-4,5-3,7-7,some9-2),6-f(some0-4,some1-3,1-7,3-2,6-some2,some4-some3,4-6,8-8)],6,[2,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(2-f(6-some0,some1-some2,4-1,8-5,some3-4,5-3,7-7,some4-2),[2-f(6-some0,some1-some2,4-1,8-5,some3-4,5-3,7-7,some4-2),6-f(some5-4,some6-3,1-7,3-2,6-some7,some1-some8,4-6,8-8)],[6-f(some5-4,some6-3,1-7,3-2,6-some7,some1-some8,4-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(6-some0,some1-some2,4-1,8-5,some3-4,5-3,7-7,some4-2),7-7)"}]
    <#lemma987>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_800 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_800.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma893> a r:Inference;
  r:gives {
    "queens([3-f(4-some0,3-some1,7-1,2-3,some2-6,some3-some4,6-4,8-8),7-f(some6-6,some7-some4,1-4,5-8,4-some8,3-5,7-7,2-some9)],6,[7,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(7-f(some0-6,some1-some2,1-4,5-8,4-some3,3-5,7-7,2-some4),[3-f(4-some5,3-some6,7-1,2-3,some7-6,some8-some2,6-4,8-8),7-f(some0-6,some1-some2,1-4,5-8,4-some3,3-5,7-7,2-some4)],[3-f(4-some5,3-some6,7-1,2-3,some7-6,some8-some2,6-4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-6,some1-some2,1-4,5-8,4-some3,3-5,7-7,2-some4),7-7)"}]
    <#lemma988>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_801 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_801.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma894> a r:Inference;
  r:gives {
    "queens([3-f(some3-some6,6-some7,4-1,2-5,8-4,5-some1,7-7,some8-3),6-f(3-5,1-4,some2-some1,some3-7,6-3,4-some4,2-6,8-8)],6,[3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(3-f(some0-some1,6-some2,4-1,2-5,8-4,5-some3,7-7,some4-3),[3-f(some0-some1,6-some2,4-1,2-5,8-4,5-some3,7-7,some4-3),6-f(3-5,1-4,some5-some3,some0-7,6-3,4-some6,2-6,8-8)],[6-f(3-5,1-4,some5-some3,some0-7,6-3,4-some6,2-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-some1,6-some2,4-1,2-5,8-4,5-some3,7-7,some4-3),7-7)"}]
    <#lemma989>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_802 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_802.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma895> a r:Inference;
  r:gives {
    "queens([2-f(6-2,some2-some5,2-some6,5-1,some7-some8,8-5,7-7,some9-4),4-f(some1-some6,4-1,6-some8,some2-5,2-7,5-4,some7-3,8-8)],6,[2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(2-f(6-2,some0-some1,2-some2,5-1,some3-some4,8-5,7-7,some5-4),[2-f(6-2,some0-some1,2-some2,5-1,some3-some4,8-5,7-7,some5-4),4-f(some6-some2,4-1,6-some4,some0-5,2-7,5-4,some3-3,8-8)],[4-f(some6-some2,4-1,6-some4,some0-5,2-7,5-4,some3-3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(6-2,some0-some1,2-some2,5-1,some3-some4,8-5,7-7,some5-4),7-7)"}]
    <#lemma990>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_803 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_803.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma896> a r:Inference;
  r:gives {
    "queens([1-f(2-some5,8-some6,some1-2,6-some0,some2-1,some3-3,7-7,some7-6),7-f(some8-7,some9-6,1-4,5-some4,4-some10,3-5,2-some11,8-8)],6,[1,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(1-f(2-some0,8-some1,some2-2,6-some3,some4-1,some5-3,7-7,some6-6),[1-f(2-some0,8-some1,some2-2,6-some3,some4-1,some5-3,7-7,some6-6),7-f(some7-7,some8-6,1-4,5-some9,4-some10,3-5,2-some11,8-8)],[7-f(some7-7,some8-6,1-4,5-some9,4-some10,3-5,2-some11,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-some0,8-some1,some2-2,6-some3,some4-1,some5-3,7-7,some6-6),7-7)"}]
    <#lemma991>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_804 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_804.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma897> a r:Inference;
  r:gives {
    "queens([1-f(2-some7,7-some8,5-2,some9-some10,some11-1,some12-3,some13-5,8-8),6-f(some3-3,1-5,4-8,6-some2,3-4,2-some4,7-7,5-6)],6,[6,1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(6-f(some0-3,1-5,4-8,6-some1,3-4,2-some2,7-7,5-6),[1-f(2-some3,7-some4,5-2,some5-some6,some7-1,some8-3,some9-5,8-8),6-f(some0-3,1-5,4-8,6-some1,3-4,2-some2,7-7,5-6)],[1-f(2-some3,7-some4,5-2,some5-some6,some7-1,some8-3,some9-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-3,1-5,4-8,6-some1,3-4,2-some2,7-7,5-6),7-7)"}]
    <#lemma992>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_805 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_805.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma898> a r:Inference;
  r:gives {
    "queens([3-f(5-2,7-4,2-1,some2-some0,6-some1,4-3,some3-6,8-8),8-f(some4-3,some5-6,some6-8,1-5,3-some7,5-some8,7-7,2-some9)],6,[8,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(8-f(some0-3,some1-6,some2-8,1-5,3-some3,5-some4,7-7,2-some5),[3-f(5-2,7-4,2-1,some6-some7,6-some8,4-3,some9-6,8-8),8-f(some0-3,some1-6,some2-8,1-5,3-some3,5-some4,7-7,2-some5)],[3-f(5-2,7-4,2-1,some6-some7,6-some8,4-3,some9-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-3,some1-6,some2-8,1-5,3-some3,5-some4,7-7,2-some5),7-7)"}]
    <#lemma993>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_806 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_806.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma899> a r:Inference;
  r:gives {
    "queens([3-f(some3-2,6-4,2-1,5-some6,8-some1,4-5,7-7,some7-3),6-f(3-some6,1-some1,some2-5,some3-7,6-3,2-some4,5-6,8-8)],6,[3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(3-f(some0-2,6-4,2-1,5-some1,8-some2,4-5,7-7,some3-3),[3-f(some0-2,6-4,2-1,5-some1,8-some2,4-5,7-7,some3-3),6-f(3-some1,1-some2,some4-5,some0-7,6-3,2-some5,5-6,8-8)],[6-f(3-some1,1-some2,some4-5,some0-7,6-3,2-some5,5-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-2,6-4,2-1,5-some1,8-some2,4-5,7-7,some3-3),7-7)"}]
    <#lemma994>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_807 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_807.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma900> a r:Inference;
  r:gives {
    "queens([4-f(5-2,4-1,2-some2,some1-6,8-some4,3-4,7-7,6-some6),7-f(some7-6,some8-some4,1-4,5-7,4-some6,2-5,some1-some9,8-8)],6,[4,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(4-f(5-2,4-1,2-some0,some1-6,8-some2,3-4,7-7,6-some3),[4-f(5-2,4-1,2-some0,some1-6,8-some2,3-4,7-7,6-some3),7-f(some4-6,some5-some2,1-4,5-7,4-some3,2-5,some1-some6,8-8)],[7-f(some4-6,some5-some2,1-4,5-7,4-some3,2-5,some1-some6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(5-2,4-1,2-some0,some1-6,8-some2,3-4,7-7,6-some3),7-7)"}]
    <#lemma995>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_808 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_808.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma901> a r:Inference;
  r:gives {
    "queens([4-f(4-2,6-1,2-5,some6-some8,7-some1,3-some3,5-4,8-8),6-f(some4-5,1-some8,4-some1,6-some3,2-4,some6-8,7-7,3-6)],6,[6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(6-f(some0-5,1-some1,4-some2,6-some3,2-4,some4-8,7-7,3-6),[4-f(4-2,6-1,2-5,some4-some1,7-some2,3-some3,5-4,8-8),6-f(some0-5,1-some1,4-some2,6-some3,2-4,some4-8,7-7,3-6)],[4-f(4-2,6-1,2-5,some4-some1,7-some2,3-some3,5-4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-5,1-some1,4-some2,6-some3,2-4,some4-8,7-7,3-6),7-7)"}]
    <#lemma996>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_809 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_809.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma902> a r:Inference;
  r:gives {
    "queens([2-f(2-some1,4-some3,7-2,some2-1,some4-6,some5-4,6-some7,8-8),6-f(3-6,1-4,some8-some7,5-8,2-3,4-5,7-7,some2-some9)],6,[6,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(6-f(3-6,1-4,some0-some1,5-8,2-3,4-5,7-7,some2-some3),[2-f(2-some4,4-some5,7-2,some2-1,some6-6,some7-4,6-some1,8-8),6-f(3-6,1-4,some0-some1,5-8,2-3,4-5,7-7,some2-some3)],[2-f(2-some4,4-some5,7-2,some2-1,some6-6,some7-4,6-some1,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(3-6,1-4,some0-some1,5-8,2-3,4-5,7-7,some2-some3),7-7)"}]
    <#lemma997>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_810 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_810.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma903> a r:Inference;
  r:gives {
    "queens([2-f(some2-some4,6-3,4-some5,3-1,7-4,some6-some0,some7-2,8-8),4-f(5-some5,some1-1,some2-4,6-some0,4-2,3-8,7-7,some6-6)],6,[4,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(4-f(5-some0,some1-1,some2-4,6-some3,4-2,3-8,7-7,some4-6),[2-f(some2-some5,6-3,4-some0,3-1,7-4,some4-some3,some6-2,8-8),4-f(5-some0,some1-1,some2-4,6-some3,4-2,3-8,7-7,some4-6)],[2-f(some2-some5,6-3,4-some0,3-1,7-4,some4-some3,some6-2,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(5-some0,some1-1,some2-4,6-some3,4-2,3-8,7-7,some4-6),7-7)"}]
    <#lemma998>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_811 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_811.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma904> a r:Inference;
  r:gives {
    "queens([3-f(6-3,some5-some8,4-1,7-5,3-4,5-2,some9-some2,8-8),6-f(2-5,1-4,some4-2,6-some2,some5-8,4-some3,7-7,3-6)],6,[6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(6-f(2-5,1-4,some0-2,6-some1,some2-8,4-some3,7-7,3-6),[3-f(6-3,some2-some4,4-1,7-5,3-4,5-2,some5-some1,8-8),6-f(2-5,1-4,some0-2,6-some1,some2-8,4-some3,7-7,3-6)],[3-f(6-3,some2-some4,4-1,7-5,3-4,5-2,some5-some1,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-5,1-4,some0-2,6-some1,some2-8,4-some3,7-7,3-6),7-7)"}]
    <#lemma999>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_812 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_812.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma905> a r:Inference;
  r:gives {
    "queens([3-f(some6-some2,some7-3,4-1,3-6,8-4,some3-2,7-7,6-some8),6-f(2-6,1-4,5-2,some6-7,some7-some8,4-some9,3-5,8-8)],6,[3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(3-f(some0-some1,some2-3,4-1,3-6,8-4,some3-2,7-7,6-some4),[3-f(some0-some1,some2-3,4-1,3-6,8-4,some3-2,7-7,6-some4),6-f(2-6,1-4,5-2,some0-7,some2-some4,4-some5,3-5,8-8)],[6-f(2-6,1-4,5-2,some0-7,some2-some4,4-some5,3-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-some1,some2-3,4-1,3-6,8-4,some3-2,7-7,6-some4),7-7)"}]
    <#lemma1000>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_813 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_813.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma906> a r:Inference;
  r:gives {
    "queens([4-f(some6-3,4-1,some7-6,8-5,3-2,5-4,7-7,some3-some8),8-f(some9-2,some10-4,2-7,1-some8,some6-some11,4-some12,some7-some13,8-8)],6,[4,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(4-f(some0-3,4-1,some1-6,8-5,3-2,5-4,7-7,some2-some3),[4-f(some0-3,4-1,some1-6,8-5,3-2,5-4,7-7,some2-some3),8-f(some4-2,some5-4,2-7,1-some3,some0-some6,4-some7,some1-some8,8-8)],[8-f(some4-2,some5-4,2-7,1-some3,some0-some6,4-some7,some1-some8,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-3,4-1,some1-6,8-5,3-2,5-4,7-7,some2-some3),7-7)"}]
    <#lemma1001>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_814 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_814.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma907> a r:Inference;
  r:gives {
    "queens([4-f(some7-3,4-1,7-6,some0-5,3-2,5-4,some4-some8,8-8),8-f(some9-2,some10-4,2-some8,1-8,some7-some11,4-some12,7-7,some0-some13)],6,[8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(8-f(some0-2,some1-4,2-some2,1-8,some3-some4,4-some5,7-7,some6-some7),[4-f(some3-3,4-1,7-6,some6-5,3-2,5-4,some8-some2,8-8),8-f(some0-2,some1-4,2-some2,1-8,some3-some4,4-some5,7-7,some6-some7)],[4-f(some3-3,4-1,7-6,some6-5,3-2,5-4,some8-some2,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-2,some1-4,2-some2,1-8,some3-some4,4-some5,7-7,some6-some7),7-7)"}]
    <#lemma1002>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_815 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_815.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma908> a r:Inference;
  r:gives {
    "queens([2-f(3-some8,some6-some9,7-4,5-1,4-3,some10-5,some11-2,8-8),6-f(2-3,1-5,some4-2,6-8,3-some2,some6-some3,7-7,5-6)],6,[6,2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(6-f(2-3,1-5,some0-2,6-8,3-some1,some2-some3,7-7,5-6),[2-f(3-some4,some2-some5,7-4,5-1,4-3,some6-5,some7-2,8-8),6-f(2-3,1-5,some0-2,6-8,3-some1,some2-some3,7-7,5-6)],[2-f(3-some4,some2-some5,7-4,5-1,4-3,some6-5,some7-2,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-3,1-5,some0-2,6-8,3-some1,some2-some3,7-7,5-6),7-7)"}]
    <#lemma1003>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_816 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_816.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma909> a r:Inference;
  r:gives {
    "queens([2-f(3-some6,6-some7,8-4,5-1,4-3,some8-5,7-7,some9-2),7-f(2-5,some0-7,1-2,some1-some3,some2-6,3-some4,6-some5,8-8)],6,[2,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(2-f(3-some0,6-some1,8-4,5-1,4-3,some2-5,7-7,some3-2),[2-f(3-some0,6-some1,8-4,5-1,4-3,some2-5,7-7,some3-2),7-f(2-5,some4-7,1-2,some5-some6,some7-6,3-some8,6-some9,8-8)],[7-f(2-5,some4-7,1-2,some5-some6,some7-6,3-some8,6-some9,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(3-some0,6-some1,8-4,5-1,4-3,some2-5,7-7,some3-2),7-7)"}]
    <#lemma1004>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_817 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_817.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma910> a r:Inference;
  r:gives {
    "queens([3-f(5-some2,3-4,some1-1,7-3,some3-6,4-some4,6-2,8-8),6-f(some6-3,1-6,some7-some4,5-2,3-8,some1-5,7-7,some3-some8)],6,[6,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(6-f(some0-3,1-6,some1-some2,5-2,3-8,some3-5,7-7,some4-some5),[3-f(5-some6,3-4,some3-1,7-3,some4-6,4-some2,6-2,8-8),6-f(some0-3,1-6,some1-some2,5-2,3-8,some3-5,7-7,some4-some5)],[3-f(5-some6,3-4,some3-1,7-3,some4-6,4-some2,6-2,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-3,1-6,some1-some2,5-2,3-8,some3-5,7-7,some4-some5),7-7)"}]
    <#lemma1005>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_818 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_818.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma911> a r:Inference;
  r:gives {
    "queens([4-f(5-some2,3-4,some1-1,7-3,2-6,4-some3,6-some5,8-8),7-f(some6-3,1-6,some7-some3,5-some5,3-8,some1-5,7-7,2-some8)],6,[7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(7-f(some0-3,1-6,some1-some2,5-some3,3-8,some4-5,7-7,2-some5),[4-f(5-some6,3-4,some4-1,7-3,2-6,4-some2,6-some3,8-8),7-f(some0-3,1-6,some1-some2,5-some3,3-8,some4-5,7-7,2-some5)],[4-f(5-some6,3-4,some4-1,7-3,2-6,4-some2,6-some3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-3,1-6,some1-some2,5-some3,3-8,some4-5,7-7,2-some5),7-7)"}]
    <#lemma1006>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_819 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_819.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma912> a r:Inference;
  r:gives {
    "queens([4-f(some1-4,some2-some0,7-1,2-5,6-some3,5-3,4-6,8-8),8-f(some5-some3,some6-3,1-6,3-8,some1-some4,some2-some7,7-7,2-some8)],6,[8,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(8-f(some0-some1,some2-3,1-6,3-8,some3-some4,some5-some6,7-7,2-some7),[4-f(some3-4,some5-some8,7-1,2-5,6-some1,5-3,4-6,8-8),8-f(some0-some1,some2-3,1-6,3-8,some3-some4,some5-some6,7-7,2-some7)],[4-f(some3-4,some5-some8,7-1,2-5,6-some1,5-3,4-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-some1,some2-3,1-6,3-8,some3-some4,some5-some6,7-7,2-some7),7-7)"}]
    <#lemma1007>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_820 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_820.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma913> a r:Inference;
  r:gives {
    "queens([3-f(6-2,some4-4,2-some7,5-1,7-some8,4-5,some9-3,8-8),5-f(3-some7,some2-1,6-some8,some4-5,2-3,5-8,7-7,4-some3)],6,[5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(5-f(3-some0,some1-1,6-some2,some3-5,2-3,5-8,7-7,4-some4),[3-f(6-2,some3-4,2-some0,5-1,7-some2,4-5,some5-3,8-8),5-f(3-some0,some1-1,6-some2,some3-5,2-3,5-8,7-7,4-some4)],[3-f(6-2,some3-4,2-some0,5-1,7-some2,4-5,some5-3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(3-some0,some1-1,6-some2,some3-5,2-3,5-8,7-7,4-some4),7-7)"}]
    <#lemma1008>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_821 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_821.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma914> a r:Inference;
  r:gives {
    "queens([2-f(2-some6,5-3,some7-2,3-some8,some9-1,8-some10,7-7,some11-5),4-f(4-2,6-some8,2-1,5-some10,some7-7,3-5,some9-4,8-8)],6,[2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(2-f(2-some0,5-3,some1-2,3-some2,some3-1,8-some4,7-7,some5-5),[2-f(2-some0,5-3,some1-2,3-some2,some3-1,8-some4,7-7,some5-5),4-f(4-2,6-some2,2-1,5-some4,some1-7,3-5,some3-4,8-8)],[4-f(4-2,6-some2,2-1,5-some4,some1-7,3-5,some3-4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-some0,5-3,some1-2,3-some2,some3-1,8-some4,7-7,some5-5),7-7)"}]
    <#lemma1009>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_822 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_822.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma915> a r:Inference;
  r:gives {
    "queens([5-f(4-some1,some5-1,some6-6,2-5,7-some4,5-some7,3-4,8-8),7-f(some8-6,1-5,4-some4,some5-some7,some6-4,2-8,7-7,5-some9)],6,[7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(7-f(some0-6,1-5,4-some1,some2-some3,some4-4,2-8,7-7,5-some5),[5-f(4-some6,some2-1,some4-6,2-5,7-some1,5-some3,3-4,8-8),7-f(some0-6,1-5,4-some1,some2-some3,some4-4,2-8,7-7,5-some5)],[5-f(4-some6,some2-1,some4-6,2-5,7-some1,5-some3,3-4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-6,1-5,4-some1,some2-some3,some4-4,2-8,7-7,5-some5),7-7)"}]
    <#lemma1010>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_823 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_823.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma916> a r:Inference;
  r:gives {
    "queens([4-f(some5-2,some6-some1,2-1,5-6,8-some3,3-5,7-7,6-4),7-f(some7-6,1-some3,4-5,some5-7,some6-4,2-some8,5-some9,8-8)],6,[4,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(4-f(some0-2,some1-some2,2-1,5-6,8-some3,3-5,7-7,6-4),[4-f(some0-2,some1-some2,2-1,5-6,8-some3,3-5,7-7,6-4),7-f(some4-6,1-some3,4-5,some0-7,some1-4,2-some5,5-some6,8-8)],[7-f(some4-6,1-some3,4-5,some0-7,some1-4,2-some5,5-some6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-2,some1-some2,2-1,5-6,8-some3,3-5,7-7,6-4),7-7)"}]
    <#lemma1011>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_824 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_824.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma917> a r:Inference;
  r:gives {
    "queens([2-f(2-some3,8-some4,some0-2,6-5,some1-1,5-3,7-7,some5-6),8-f(some6-7,some7-6,1-4,some8-some2,4-some9,3-some10,2-some11,8-8)],6,[2,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(2-f(2-some0,8-some1,some2-2,6-5,some3-1,5-3,7-7,some4-6),[2-f(2-some0,8-some1,some2-2,6-5,some3-1,5-3,7-7,some4-6),8-f(some5-7,some6-6,1-4,some7-some8,4-some9,3-some10,2-some11,8-8)],[8-f(some5-7,some6-6,1-4,some7-some8,4-some9,3-some10,2-some11,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-some0,8-some1,some2-2,6-5,some3-1,5-3,7-7,some4-6),7-7)"}]
    <#lemma1012>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_825 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_825.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma918> a r:Inference;
  r:gives {
    "queens([2-f(2-some4,some1-some5,8-2,6-5,some2-1,5-3,7-7,some6-6),7-f(some7-3,1-7,4-6,some0-some3,3-4,2-some8,some1-some9,8-8)],6,[2,7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(2-f(2-some0,some1-some2,8-2,6-5,some3-1,5-3,7-7,some4-6),[2-f(2-some0,some1-some2,8-2,6-5,some3-1,5-3,7-7,some4-6),7-f(some5-3,1-7,4-6,some6-some7,3-4,2-some8,some1-some9,8-8)],[7-f(some5-3,1-7,4-6,some6-some7,3-4,2-some8,some1-some9,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-some0,some1-some2,8-2,6-5,some3-1,5-3,7-7,some4-6),7-7)"}]
    <#lemma1013>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_826 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_826.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma919> a r:Inference;
  r:gives {
    "queens([1-f(some6-some8,5-some9,4-some10,8-2,some11-4,some12-1,7-7,some13-5),5-f(3-4,some4-1,6-7,2-5,some6-3,5-some2,4-some3,8-8)],6,[1,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,5-some2,4-some3,8-2,some4-4,some5-1,7-7,some6-5),[1-f(some0-some1,5-some2,4-some3,8-2,some4-4,some5-1,7-7,some6-5),5-f(3-4,some7-1,6-7,2-5,some0-3,5-some8,4-some9,8-8)],[5-f(3-4,some7-1,6-7,2-5,some0-3,5-some8,4-some9,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-some1,5-some2,4-some3,8-2,some4-4,some5-1,7-7,some6-5),7-7)"}]
    <#lemma1014>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_827 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_827.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma920> a r:Inference;
  r:gives {
    "queens([1-f(some2-some4,6-some5,4-some6,some3-2,8-4,some7-1,7-7,some8-some1),4-f(5-2,some0-4,2-1,some2-7,6-some1,4-3,some3-6,8-8)],6,[1,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(1-f(some0-some1,6-some2,4-some3,some4-2,8-4,some5-1,7-7,some6-some7),[1-f(some0-some1,6-some2,4-some3,some4-2,8-4,some5-1,7-7,some6-some7),4-f(5-2,some8-4,2-1,some0-7,6-some7,4-3,some4-6,8-8)],[4-f(5-2,some8-4,2-1,some0-7,6-some7,4-3,some4-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-some1,6-some2,4-some3,some4-2,8-4,some5-1,7-7,some6-some7),7-7)"}]
    <#lemma1015>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_828 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_828.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma921> a r:Inference;
  r:gives {
    "queens([2-f(2-some7,4-some8,some9-2,some10-5,8-1,5-4,7-7,some11-3),5-f(3-5,some4-1,6-4,2-7,4-3,some9-some2,some10-some3,8-8)],6,[2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(2-f(2-some0,4-some1,some2-2,some3-5,8-1,5-4,7-7,some4-3),[2-f(2-some0,4-some1,some2-2,some3-5,8-1,5-4,7-7,some4-3),5-f(3-5,some5-1,6-4,2-7,4-3,some2-some6,some3-some7,8-8)],[5-f(3-5,some5-1,6-4,2-7,4-3,some2-some6,some3-some7,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-some0,4-some1,some2-2,some3-5,8-1,5-4,7-7,some4-3),7-7)"}]
    <#lemma1016>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_829 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_829.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma922> a r:Inference;
  r:gives {
    "queens([3-f(2-3,4-some2,7-2,some1-1,3-6,some3-4,6-some5,8-8),7-f(some6-6,1-4,some7-some5,5-8,2-some8,4-5,7-7,some1-some9)],6,[7,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(7-f(some0-6,1-4,some1-some2,5-8,2-some3,4-5,7-7,some4-some5),[3-f(2-3,4-some6,7-2,some4-1,3-6,some7-4,6-some2,8-8),7-f(some0-6,1-4,some1-some2,5-8,2-some3,4-5,7-7,some4-some5)],[3-f(2-3,4-some6,7-2,some4-1,3-6,some7-4,6-some2,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-6,1-4,some1-some2,5-8,2-some3,4-5,7-7,some4-some5),7-7)"}]
    <#lemma1017>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_830 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_830.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma923> a r:Inference;
  r:gives {
    "queens([1-f(5-some5,3-some6,some7-some8,some9-3,some10-2,8-1,7-7,some11-some1),3-f(2-some8,6-3,5-2,3-1,some7-7,some9-some1,some10-5,8-8)],6,[1,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(1-f(5-some0,3-some1,some2-some3,some4-3,some5-2,8-1,7-7,some6-some7),[1-f(5-some0,3-some1,some2-some3,some4-3,some5-2,8-1,7-7,some6-some7),3-f(2-some3,6-3,5-2,3-1,some2-7,some4-some7,some5-5,8-8)],[3-f(2-some3,6-3,5-2,3-1,some2-7,some4-some7,some5-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(5-some0,3-some1,some2-some3,some4-3,some5-2,8-1,7-7,some6-some7),7-7)"}]
    <#lemma1018>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_831 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_831.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma924> a r:Inference;
  r:gives {
    "queens([2-f(some1-some4,8-some5,6-4,5-2,4-1,some6-5,7-7,some7-3),8-f(some8-7,some9-3,1-6,3-some2,some0-some3,2-some10,some1-some11,8-8)],6,[2,8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(2-f(some0-some1,8-some2,6-4,5-2,4-1,some3-5,7-7,some4-3),[2-f(some0-some1,8-some2,6-4,5-2,4-1,some3-5,7-7,some4-3),8-f(some5-7,some6-3,1-6,3-some7,some8-some9,2-some10,some0-some11,8-8)],[8-f(some5-7,some6-3,1-6,3-some7,some8-some9,2-some10,some0-some11,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-some1,8-some2,6-4,5-2,4-1,some3-5,7-7,some4-3),7-7)"}]
    <#lemma1019>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_832 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_832.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma925> a r:Inference;
  r:gives {
    "queens([3-f(2-some3,some0-4,some2-2,some4-1,7-6,4-some5,6-3,8-8),5-f(3-2,5-1,2-6,some0-some5,some2-3,some4-8,7-7,4-5)],6,[5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(5-f(3-2,5-1,2-6,some0-some1,some2-3,some3-8,7-7,4-5),[3-f(2-some4,some0-4,some2-2,some3-1,7-6,4-some1,6-3,8-8),5-f(3-2,5-1,2-6,some0-some1,some2-3,some3-8,7-7,4-5)],[3-f(2-some4,some0-4,some2-2,some3-1,7-6,4-some1,6-3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(3-2,5-1,2-6,some0-some1,some2-3,some3-8,7-7,4-5),7-7)"}]
    <#lemma1020>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_833 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_833.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma926> a r:Inference;
  r:gives {
    "queens([3-f(some3-some6,6-3,4-5,3-1,7-4,some7-some0,5-2,8-8),5-f(some1-5,some2-1,some3-4,6-some0,4-2,3-8,7-7,some7-6)],6,[5,3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(5-f(some0-5,some1-1,some2-4,6-some3,4-2,3-8,7-7,some4-6),[3-f(some2-some5,6-3,4-5,3-1,7-4,some4-some3,5-2,8-8),5-f(some0-5,some1-1,some2-4,6-some3,4-2,3-8,7-7,some4-6)],[3-f(some2-some5,6-3,4-5,3-1,7-4,some4-some3,5-2,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-5,some1-1,some2-4,6-some3,4-2,3-8,7-7,some4-6),7-7)"}]
    <#lemma1021>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_834 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_834.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma927> a r:Inference;
  r:gives {
    "queens([2-f(5-2,3-some5,2-some1,6-3,8-some3,some4-1,7-7,some6-6),5-f(4-3,some0-some3,some2-1,5-7,3-6,2-5,6-4,8-8)],6,[2,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(2-f(5-2,3-some0,2-some1,6-3,8-some2,some3-1,7-7,some4-6),[2-f(5-2,3-some0,2-some1,6-3,8-some2,some3-1,7-7,some4-6),5-f(4-3,some5-some2,some6-1,5-7,3-6,2-5,6-4,8-8)],[5-f(4-3,some5-some2,some6-1,5-7,3-6,2-5,6-4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(5-2,3-some0,2-some1,6-3,8-some2,some3-1,7-7,some4-6),7-7)"}]
    <#lemma1022>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_835 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_835.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma928> a r:Inference;
  r:gives {
    "queens([3-f(some2-2,3-4,2-some1,6-3,8-1,4-some3,7-7,some5-6),6-f(some6-3,some0-1,5-some3,some2-7,3-6,2-some4,6-5,8-8)],6,[3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(3-f(some0-2,3-4,2-some1,6-3,8-1,4-some2,7-7,some3-6),[3-f(some0-2,3-4,2-some1,6-3,8-1,4-some2,7-7,some3-6),6-f(some4-3,some5-1,5-some2,some0-7,3-6,2-some6,6-5,8-8)],[6-f(some4-3,some5-1,5-some2,some0-7,3-6,2-some6,6-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-2,3-4,2-some1,6-3,8-1,4-some2,7-7,some3-6),7-7)"}]
    <#lemma1023>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_836 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_836.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma929> a r:Inference;
  r:gives {
    "queens([5-f(some4-5,3-4,some1-1,7-3,2-6,4-some2,6-some3,8-8),8-f(some5-3,1-6,some6-some2,some4-some3,3-8,some1-some7,7-7,2-some8)],6,[8,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(8-f(some0-3,1-6,some1-some2,some3-some4,3-8,some5-some6,7-7,2-some7),[5-f(some3-5,3-4,some5-1,7-3,2-6,4-some2,6-some4,8-8),8-f(some0-3,1-6,some1-some2,some3-some4,3-8,some5-some6,7-7,2-some7)],[5-f(some3-5,3-4,some5-1,7-3,2-6,4-some2,6-some4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-3,1-6,some1-some2,some3-some4,3-8,some5-some6,7-7,2-some7),7-7)"}]
    <#lemma1024>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_837 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_837.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma930> a r:Inference;
  r:gives {
    "queens([2-f(2-some5,some3-3,6-2,3-some1,some4-some2,8-1,7-7,some6-4),4-f(5-2,4-some1,2-some2,some3-1,6-7,3-4,some4-6,8-8)],6,[2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(2-f(2-some0,some1-3,6-2,3-some2,some3-some4,8-1,7-7,some5-4),[2-f(2-some0,some1-3,6-2,3-some2,some3-some4,8-1,7-7,some5-4),4-f(5-2,4-some2,2-some4,some1-1,6-7,3-4,some3-6,8-8)],[4-f(5-2,4-some2,2-some4,some1-1,6-7,3-4,some3-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-some0,some1-3,6-2,3-some2,some3-some4,8-1,7-7,some5-4),7-7)"}]
    <#lemma1025>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_838 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_838.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma931> a r:Inference;
  r:gives {
    "queens([4-f(some7-2,some8-4,2-6,5-1,7-some6,4-5,some3-3,8-8),6-f(3-6,some9-1,some7-some6,some8-5,2-3,5-8,7-7,4-some10)],6,[6,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(6-f(3-6,some0-1,some1-some2,some3-5,2-3,5-8,7-7,4-some4),[4-f(some1-2,some3-4,2-6,5-1,7-some2,4-5,some5-3,8-8),6-f(3-6,some0-1,some1-some2,some3-5,2-3,5-8,7-7,4-some4)],[4-f(some1-2,some3-4,2-6,5-1,7-some2,4-5,some5-3,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(3-6,some0-1,some1-some2,some3-5,2-3,5-8,7-7,4-some4),7-7)"}]
    <#lemma1026>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_839 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_839.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma932> a r:Inference;
  r:gives {
    "queens([3-f(2-some3,4-3,some0-2,3-6,8-1,some4-4,7-7,6-some7),6-f(some8-6,some9-1,5-4,2-7,4-some7,some0-some10,3-5,8-8)],6,[3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(3-f(2-some0,4-3,some1-2,3-6,8-1,some2-4,7-7,6-some3),[3-f(2-some0,4-3,some1-2,3-6,8-1,some2-4,7-7,6-some3),6-f(some4-6,some5-1,5-4,2-7,4-some3,some1-some6,3-5,8-8)],[6-f(some4-6,some5-1,5-4,2-7,4-some3,some1-some6,3-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-some0,4-3,some1-2,3-6,8-1,some2-4,7-7,6-some3),7-7)"}]
    <#lemma1027>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_840 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_840.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma933> a r:Inference;
  r:gives {
    "queens([3-f(2-some4,5-3,some0-2,3-6,some3-1,8-some7,7-7,6-5),5-f(4-2,some8-6,2-1,5-some7,some0-7,3-5,some3-4,8-8)],6,[3,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(3-f(2-some0,5-3,some1-2,3-6,some2-1,8-some3,7-7,6-5),[3-f(2-some0,5-3,some1-2,3-6,some2-1,8-some3,7-7,6-5),5-f(4-2,some4-6,2-1,5-some3,some1-7,3-5,some2-4,8-8)],[5-f(4-2,some4-6,2-1,5-some3,some1-7,3-5,some2-4,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(2-some0,5-3,some1-2,3-6,some2-1,8-some3,7-7,6-5),7-7)"}]
    <#lemma1028>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_841 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_841.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma934> a r:Inference;
  r:gives {
    "queens([2-f(5-some7,3-some8,some9-4,some10-3,4-2,8-1,7-7,some11-some1),4-f(2-4,6-3,5-2,3-1,some9-7,some10-some1,4-5,8-8)],6,[2,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(2-f(5-some0,3-some1,some2-4,some3-3,4-2,8-1,7-7,some4-some5),[2-f(5-some0,3-some1,some2-4,some3-3,4-2,8-1,7-7,some4-some5),4-f(2-4,6-3,5-2,3-1,some2-7,some3-some5,4-5,8-8)],[4-f(2-4,6-3,5-2,3-1,some2-7,some3-some5,4-5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(5-some0,3-some1,some2-4,some3-3,4-2,8-1,7-7,some4-some5),7-7)"}]
    <#lemma1029>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_842 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_842.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma935> a r:Inference;
  r:gives {
    "queens([3-f(5-2,3-4,2-some1,6-3,8-some3,4-1,7-7,some5-6),6-f(some6-3,some0-some3,some2-1,5-7,3-6,2-5,6-some4,8-8)],6,[3,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(3-f(5-2,3-4,2-some0,6-3,8-some1,4-1,7-7,some2-6),[3-f(5-2,3-4,2-some0,6-3,8-some1,4-1,7-7,some2-6),6-f(some3-3,some4-some1,some5-1,5-7,3-6,2-5,6-some6,8-8)],[6-f(some3-3,some4-some1,some5-1,5-7,3-6,2-5,6-some6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(5-2,3-4,2-some0,6-3,8-some1,4-1,7-7,some2-6),7-7)"}]
    <#lemma1030>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_843 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_843.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma936> a r:Inference;
  r:gives {
    "queens([4-f(some4-some7,3-5,6-4,2-3,4-1,8-some3,7-7,5-some5),6-f(some1-4,some2-3,some4-1,3-some3,6-7,2-some5,4-6,8-8)],6,[4,6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(4-f(some0-some1,3-5,6-4,2-3,4-1,8-some2,7-7,5-some3),[4-f(some0-some1,3-5,6-4,2-3,4-1,8-some2,7-7,5-some3),6-f(some4-4,some5-3,some0-1,3-some2,6-7,2-some3,4-6,8-8)],[6-f(some4-4,some5-3,some0-1,3-some2,6-7,2-some3,4-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-some1,3-5,6-4,2-3,4-1,8-some2,7-7,5-some3),7-7)"}]
    <#lemma1031>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_844 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_844.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma937> a r:Inference;
  r:gives {
    "queens([4-f(some2-2,4-some1,2-5,7-some3,6-1,3-4,5-6,8-8),7-f(some5-some3,some6-1,some0-4,some2-6,4-8,2-some4,7-7,6-some7)],6,[7,4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(7-f(some0-some1,some2-1,some3-4,some4-6,4-8,2-some5,7-7,6-some6),[4-f(some4-2,4-some7,2-5,7-some1,6-1,3-4,5-6,8-8),7-f(some0-some1,some2-1,some3-4,some4-6,4-8,2-some5,7-7,6-some6)],[4-f(some4-2,4-some7,2-5,7-some1,6-1,3-4,5-6,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-some1,some2-1,some3-4,some4-6,4-8,2-some5,7-7,6-some6),7-7)"}]
    <#lemma1032>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_845 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_845.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma938> a r:Inference;
  r:gives {
    "queens([5-f(some5-2,some6-4,2-6,5-1,7-some4,4-5,3-some7,8-8),7-f(some8-6,some9-1,some5-some4,some6-5,2-some7,5-8,7-7,4-some10)],6,[7,5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(6 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 7}]
    [ a r:Fact; r:gives {"select(7-f(some0-6,some1-1,some2-some3,some4-5,2-some5,5-8,7-7,4-some6),[5-f(some2-2,some4-4,2-6,5-1,7-some3,4-5,3-some5,8-8),7-f(some0-6,some1-1,some2-some3,some4-5,2-some5,5-8,7-7,4-some6)],[5-f(some2-2,some4-4,2-6,5-1,7-some3,4-5,3-some5,8-8)])"}]
    [ a r:Fact; r:gives {"arg(7,f(some0-6,some1-1,some2-some3,some4-5,2-some5,5-8,7-7,4-some6),7-7)"}]
    <#lemma1033>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_846 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_846.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma939> a r:Inference;
  r:gives {
    "constraints(2,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),[some2,some0|some16],[some3,some1|some17])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"arg(2,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),some2-some3)"}]
    [ a r:Fact; r:gives {(2 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> 1}]
    <#lemma1034>
  );
  r:rule [ a r:Fact; r:gives {{"arg(avar0,avar1,avar2-avar3)".
    (_:x_0_847 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> _:x_4_847.
    "constraints(avar4,avar1,avar5,avar6)"} => "constraints(avar0,avar1,[avar2|avar5],[avar3|avar6])"}].

<#lemma940> a r:Inference;
  r:gives {
    "constraints(8,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),[some14,some12,some10,some8,some6,some4,some2,some0,some16|some17],[some15,some13,some11,some9,some7,some5,some3,some1,some18,some19,some20,some21,some22,some23|some24])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"arg(8,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),some14-some15)"}]
    [ a r:Fact; r:gives {(8 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> 7}]
    <#lemma464>
  );
  r:rule [ a r:Fact; r:gives {{"arg(avar0,avar1,avar2-avar3)".
    (_:x_0_848 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> _:x_4_848.
    "constraints(avar4,avar1,avar5,avar6)"} => "constraints(avar0,avar1,[avar2|avar5],[avar3|avar6])"}].

<#lemma941> a r:Inference;
  r:gives {
    "board([some25],[8-f(some16-some3,some0-some5,some2-some7,some4-some9,some6-some11,some8-some13,some10-some15,some12-some26)],7,8,[some14,some12,some10,some8,some6,some4,some2,some0,some16|some17],[some26,some15,some13,some11,some9,some7,some5,some3,some1,some18,some19,some20,some21,some22,some23|some24])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"functor(f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),f,8)"}]
    <#lemma1035>
    <#lemma1036>
  );
  r:rule [ a r:Fact; r:gives {"board([avar9|avar6],[avar0-avar2|avar7],avar1,avar3,[avar10|avar4],avar5)" <= {(_:x_1_849 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_849.
    "functor(avar2,f,avar3)".
    "constraints(avar3,avar2,avar4,avar5)".
    "board(avar6,avar7,avar0,avar3,avar4,[avar8|avar5])"}}].

<#lemma942> a r:Inference;
  r:gives {
    "queens([4-f(2-some3,4-some4,6-2,1-5,some2-7,5-4,some5-3,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(2-some0,4-some1,6-2,1-5,some2-7,5-4,some3-3,8-8),[4-f(2-some0,4-some1,6-2,1-5,some2-7,5-4,some3-3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-some0,4-some1,6-2,1-5,some2-7,5-4,some3-3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_850 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_850.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma943> a r:Inference;
  r:gives {
    "queens([5-f(2-some4,some7-4,5-2,some0-7,1-6,4-3,6-5,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(2-some0,some1-4,5-2,some2-7,1-6,4-3,6-5,8-8),[5-f(2-some0,some1-4,5-2,some2-7,1-6,4-3,6-5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-some0,some1-4,5-2,some2-7,1-6,4-3,6-5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_851 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_851.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma944> a r:Inference;
  r:gives {
    "queens([3-f(4-some4,3-some5,1-some1,some2-3,7-6,some3-2,6-4,8-8)],7,[3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(3-f(4-some0,3-some1,1-some2,some3-3,7-6,some4-2,6-4,8-8),[3-f(4-some0,3-some1,1-some2,some3-3,7-6,some4-2,6-4,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(4-some0,3-some1,1-some2,some3-3,7-6,some4-2,6-4,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_852 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_852.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma945> a r:Inference;
  r:gives {
    "queens([3-f(3-some3,some1-some4,1-some5,7-5,6-3,5-2,some6-6,8-8)],7,[3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(3-f(3-some0,some1-some2,1-some3,7-5,6-3,5-2,some4-6,8-8),[3-f(3-some0,some1-some2,1-some3,7-5,6-3,5-2,some4-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(3-some0,some1-some2,1-some3,7-5,6-3,5-2,some4-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_853 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_853.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma946> a r:Inference;
  r:gives {
    "queens([5-f(4-2,3-6,2-5,1-3,7-some2,some4-some3,5-4,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(4-2,3-6,2-5,1-3,7-some0,some1-some2,5-4,8-8),[5-f(4-2,3-6,2-5,1-3,7-some0,some1-some2,5-4,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(4-2,3-6,2-5,1-3,7-some0,some1-some2,5-4,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_854 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_854.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma947> a r:Inference;
  r:gives {
    "queens([4-f(2-4,6-some4,1-2,some3-5,7-some1,5-3,4-some2,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(2-4,6-some0,1-2,some1-5,7-some2,5-3,4-some3,8-8),[4-f(2-4,6-some0,1-2,some1-5,7-some2,5-3,4-some3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-4,6-some0,1-2,some1-5,7-some2,5-3,4-some3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_855 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_855.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma948> a r:Inference;
  r:gives {
    "queens([3-f(6-some4,1-some5,4-5,7-2,some3-4,some6-some1,5-3,8-8)],7,[3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(3-f(6-some0,1-some1,4-5,7-2,some2-4,some3-some4,5-3,8-8),[3-f(6-some0,1-some1,4-5,7-2,some2-4,some3-some4,5-3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(6-some0,1-some1,4-5,7-2,some2-4,some3-some4,5-3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_856 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_856.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma949> a r:Inference;
  r:gives {
    "queens([5-f(2-some2,4-some3,6-2,1-5,some1-7,5-4,3-some5,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(2-some0,4-some1,6-2,1-5,some2-7,5-4,3-some3,8-8),[5-f(2-some0,4-some1,6-2,1-5,some2-7,5-4,3-some3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-some0,4-some1,6-2,1-5,some2-7,5-4,3-some3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_857 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_857.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma950> a r:Inference;
  r:gives {
    "queens([5-f(2-5,some2-4,some3-2,1-some1,7-6,4-3,6-some4,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(2-5,some0-4,some1-2,1-some2,7-6,4-3,6-some3,8-8),[5-f(2-5,some0-4,some1-2,1-some2,7-6,4-3,6-some3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-5,some0-4,some1-2,1-some2,7-6,4-3,6-some3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_858 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_858.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma951> a r:Inference;
  r:gives {
    "queens([4-f(5-some4,4-3,1-some6,3-7,6-2,some1-4,some3-6,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(5-some0,4-3,1-some1,3-7,6-2,some2-4,some3-6,8-8),[4-f(5-some0,4-3,1-some1,3-7,6-2,some2-4,some3-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(5-some0,4-3,1-some1,3-7,6-2,some2-4,some3-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_859 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_859.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma952> a r:Inference;
  r:gives {
    "queens([3-f(3-some4,1-some5,some2-5,7-some0,6-3,some6-2,5-6,8-8)],7,[3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(3-f(3-some0,1-some1,some2-5,7-some3,6-3,some4-2,5-6,8-8),[3-f(3-some0,1-some1,some2-5,7-some3,6-3,some4-2,5-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(3-some0,1-some1,some2-5,7-some3,6-3,some4-2,5-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_860 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_860.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma953> a r:Inference;
  r:gives {
    "queens([4-f(3-4,some2-some5,1-some6,7-5,6-3,5-2,4-6,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(3-4,some0-some1,1-some2,7-5,6-3,5-2,4-6,8-8),[4-f(3-4,some0-some1,1-some2,7-5,6-3,5-2,4-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(3-4,some0-some1,1-some2,7-5,6-3,5-2,4-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_861 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_861.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma954> a r:Inference;
  r:gives {
    "queens([6-f(some5-some2,3-6,5-4,1-3,4-7,some3-some4,2-5,8-8)],7,[6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(6-f(some0-some1,3-6,5-4,1-3,4-7,some2-some3,2-5,8-8),[6-f(some0-some1,3-6,5-4,1-3,4-7,some2-some3,2-5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-some1,3-6,5-4,1-3,4-7,some2-some3,2-5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_862 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_862.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma955> a r:Inference;
  r:gives {
    "queens([6-f(some4-2,4-some1,2-some2,1-some3,6-7,some0-4,3-6,8-8)],7,[6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(6-f(some0-2,4-some1,2-some2,1-some3,6-7,some4-4,3-6,8-8),[6-f(some0-2,4-some1,2-some2,1-some3,6-7,some4-4,3-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-2,4-some1,2-some2,1-some3,6-7,some4-4,3-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_863 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_863.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma956> a r:Inference;
  r:gives {
    "queens([1-f(7-some5,3-some6,6-1,some7-3,some8-some9,some10-2,some11-some1,8-8)],7,[1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(1-f(7-some0,3-some1,6-1,some2-3,some3-some4,some5-2,some6-some7,8-8),[1-f(7-some0,3-some1,6-1,some2-3,some3-some4,some5-2,some6-some7,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(7-some0,3-some1,6-1,some2-3,some3-some4,some5-2,some6-some7,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_864 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_864.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma957> a r:Inference;
  r:gives {
    "queens([6-f(some2-2,3-6,2-5,1-3,7-some3,some6-some4,5-some5,8-8)],7,[6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(6-f(some0-2,3-6,2-5,1-3,7-some1,some2-some3,5-some4,8-8),[6-f(some0-2,3-6,2-5,1-3,7-some1,some2-some3,5-some4,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-2,3-6,2-5,1-3,7-some1,some2-some3,5-some4,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_865 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_865.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma958> a r:Inference;
  r:gives {
    "queens([6-f(3-2,some6-4,2-7,1-some5,6-3,4-some7,some1-6,8-8)],7,[6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(6-f(3-2,some0-4,2-7,1-some1,6-3,4-some2,some3-6,8-8),[6-f(3-2,some0-4,2-7,1-some1,6-3,4-some2,some3-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(3-2,some0-4,2-7,1-some1,6-3,4-some2,some3-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_866 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_866.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma959> a r:Inference;
  r:gives {
    "queens([4-f(5-3,1-some5,4-6,7-2,3-4,some6-some2,some7-some3,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(5-3,1-some0,4-6,7-2,3-4,some1-some2,some3-some4,8-8),[4-f(5-3,1-some0,4-6,7-2,3-4,some1-some2,some3-some4,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(5-3,1-some0,4-6,7-2,3-4,some1-some2,some3-some4,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_867 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_867.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma960> a r:Inference;
  r:gives {
    "queens([5-f(2-5,4-some8,1-2,7-some1,some6-6,3-4,6-some4,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(2-5,4-some0,1-2,7-some1,some2-6,3-4,6-some3,8-8),[5-f(2-5,4-some0,1-2,7-some1,some2-6,3-4,6-some3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-5,4-some0,1-2,7-some1,some2-6,3-4,6-some3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_868 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_868.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma961> a r:Inference;
  r:gives {
    "queens([4-f(4-3,1-some7,7-6,5-2,3-some1,some8-5,some9-4,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(4-3,1-some0,7-6,5-2,3-some1,some2-5,some3-4,8-8),[4-f(4-3,1-some0,7-6,5-2,3-some1,some2-5,some3-4,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(4-3,1-some0,7-6,5-2,3-some1,some2-5,some3-4,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_869 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_869.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma962> a r:Inference;
  r:gives {
    "queens([2-f(3-some5,7-1,6-4,some6-some7,4-3,some8-2,some9-some2,8-8)],7,[2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(2-f(3-some0,7-1,6-4,some1-some2,4-3,some3-2,some4-some5,8-8),[2-f(3-some0,7-1,6-4,some1-some2,4-3,some3-2,some4-some5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(3-some0,7-1,6-4,some1-some2,4-3,some3-2,some4-some5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_870 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_870.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma963> a r:Inference;
  r:gives {
    "queens([1-f(7-some5,6-some6,4-1,some7-some8,some9-4,some10-3,some11-2,8-8)],7,[1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(1-f(7-some0,6-some1,4-1,some2-some3,some4-4,some5-3,some6-2,8-8),[1-f(7-some0,6-some1,4-1,some2-some3,some4-4,some5-3,some6-2,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(7-some0,6-some1,4-1,some2-some3,some4-4,some5-3,some6-2,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_871 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_871.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma964> a r:Inference;
  r:gives {
    "queens([2-f(6-some4,some3-1,5-4,7-some0,4-some2,some5-2,some6-5,8-8)],7,[2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(2-f(6-some0,some1-1,5-4,7-some2,4-some3,some4-2,some5-5,8-8),[2-f(6-some0,some1-1,5-4,7-some2,4-some3,some4-2,some5-5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(6-some0,some1-1,5-4,7-some2,4-some3,some4-2,some5-5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_872 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_872.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma965> a r:Inference;
  r:gives {
    "queens([4-f(some6-4,1-some3,6-some4,5-2,some1-7,some2-5,4-3,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(some0-4,1-some1,6-some2,5-2,some3-7,some4-5,4-3,8-8),[4-f(some0-4,1-some1,6-some2,5-2,some3-7,some4-5,4-3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-4,1-some1,6-some2,5-2,some3-7,some4-5,4-3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_873 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_873.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma966> a r:Inference;
  r:gives {
    "queens([5-f(2-4,some2-6,1-2,some4-5,7-some1,5-3,4-some3,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(2-4,some0-6,1-2,some1-5,7-some2,5-3,4-some3,8-8),[5-f(2-4,some0-6,1-2,some1-5,7-some2,5-3,4-some3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-4,some0-6,1-2,some1-5,7-some2,5-3,4-some3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_874 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_874.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma967> a r:Inference;
  r:gives {
    "queens([6-f(2-6,4-some3,some0-2,1-5,some2-7,5-4,3-some5,8-8)],7,[6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(6-f(2-6,4-some0,some1-2,1-5,some2-7,5-4,3-some3,8-8),[6-f(2-6,4-some0,some1-2,1-5,some2-7,5-4,3-some3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-6,4-some0,some1-2,1-5,some2-7,5-4,3-some3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_875 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_875.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma968> a r:Inference;
  r:gives {
    "queens([5-f(4-some4,some8-some6,1-7,5-2,some0-6,3-5,6-4,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(4-some0,some1-some2,1-7,5-2,some3-6,3-5,6-4,8-8),[5-f(4-some0,some1-some2,1-7,5-2,some3-6,3-5,6-4,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(4-some0,some1-some2,1-7,5-2,some3-6,3-5,6-4,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_876 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_876.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma969> a r:Inference;
  r:gives {
    "queens([5-f(some6-5,4-3,1-some4,3-7,6-2,some1-4,some3-6,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(some0-5,4-3,1-some1,3-7,6-2,some2-4,some3-6,8-8),[5-f(some0-5,4-3,1-some1,3-7,6-2,some2-4,some3-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-5,4-3,1-some1,3-7,6-2,some2-4,some3-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_877 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_877.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma970> a r:Inference;
  r:gives {
    "queens([6-f(some6-5,4-3,1-some3,3-7,6-some5,some1-4,2-6,8-8)],7,[6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(6-f(some0-5,4-3,1-some1,3-7,6-some2,some3-4,2-6,8-8),[6-f(some0-5,4-3,1-some1,3-7,6-some2,some3-4,2-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-5,4-3,1-some1,3-7,6-some2,some3-4,2-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_878 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_878.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma971> a r:Inference;
  r:gives {
    "queens([2-f(5-2,7-some4,2-1,some5-some6,6-some7,some8-3,some9-6,8-8)],7,[2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(2-f(5-2,7-some0,2-1,some1-some2,6-some3,some4-3,some5-6,8-8),[2-f(5-2,7-some0,2-1,some1-some2,6-some3,some4-3,some5-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(5-2,7-some0,2-1,some1-some2,6-some3,some4-3,some5-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_879 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_879.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma972> a r:Inference;
  r:gives {
    "queens([7-f(some4-3,some5-some3,4-7,1-5,3-4,5-some6,2-some7,8-8)],7,[7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(7-f(some0-3,some1-some2,4-7,1-5,3-4,5-some3,2-some4,8-8),[7-f(some0-3,some1-some2,4-7,1-5,3-4,5-some3,2-some4,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-3,some1-some2,4-7,1-5,3-4,5-some3,2-some4,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_880 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_880.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma973> a r:Inference;
  r:gives {
    "queens([5-f(3-some4,1-4,6-7,5-some7,2-3,4-5,some2-some8,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(3-some0,1-4,6-7,5-some1,2-3,4-5,some2-some3,8-8),[5-f(3-some0,1-4,6-7,5-some1,2-3,4-5,some2-some3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(3-some0,1-4,6-7,5-some1,2-3,4-5,some2-some3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_881 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_881.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma974> a r:Inference;
  r:gives {
    "queens([1-f(2-some4,4-some5,7-2,some2-1,some6-some0,some7-4,some8-some1,8-8)],7,[1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(1-f(2-some0,4-some1,7-2,some2-1,some3-some4,some5-4,some6-some7,8-8),[1-f(2-some0,4-some1,7-2,some2-1,some3-some4,some5-4,some6-some7,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-some0,4-some1,7-2,some2-1,some3-some4,some5-4,some6-some7,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_882 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_882.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma975> a r:Inference;
  r:gives {
    "queens([3-f(6-2,4-1,2-5,7-some1,some4-some2,some5-4,5-3,8-8)],7,[3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(3-f(6-2,4-1,2-5,7-some0,some1-some2,some3-4,5-3,8-8),[3-f(6-2,4-1,2-5,7-some0,some1-some2,some3-4,5-3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(6-2,4-1,2-5,7-some0,some1-some2,some3-4,5-3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_883 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_883.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma976> a r:Inference;
  r:gives {
    "queens([6-f(3-6,some4-some2,1-4,5-7,4-3,2-5,some1-some5,8-8)],7,[6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(6-f(3-6,some0-some1,1-4,5-7,4-3,2-5,some2-some3,8-8),[6-f(3-6,some0-some1,1-4,5-7,4-3,2-5,some2-some3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(3-6,some0-some1,1-4,5-7,4-3,2-5,some2-some3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_884 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_884.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma977> a r:Inference;
  r:gives {
    "queens([7-f(some5-some2,3-6,some0-4,1-3,4-7,some3-some4,2-some6,8-8)],7,[7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(7-f(some0-some1,3-6,some2-4,1-3,4-7,some3-some4,2-some5,8-8),[7-f(some0-some1,3-6,some2-4,1-3,4-7,some3-some4,2-some5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-some1,3-6,some2-4,1-3,4-7,some3-some4,2-some5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_885 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_885.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma978> a r:Inference;
  r:gives {
    "queens([7-f(some4-2,some5-4,2-7,1-some3,6-some6,4-some7,some0-6,8-8)],7,[7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(7-f(some0-2,some1-4,2-7,1-some2,6-some3,4-some4,some5-6,8-8),[7-f(some0-2,some1-4,2-7,1-some2,6-some3,4-some4,some5-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-2,some1-4,2-7,1-some2,6-some3,4-some4,some5-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_886 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_886.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma979> a r:Inference;
  r:gives {
    "queens([5-f(2-4,1-6,5-2,some1-some4,some2-7,some3-3,4-5,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(2-4,1-6,5-2,some0-some1,some2-7,some3-3,4-5,8-8),[5-f(2-4,1-6,5-2,some0-some1,some2-7,some3-3,4-5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-4,1-6,5-2,some0-some1,some2-7,some3-3,4-5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_887 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_887.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma980> a r:Inference;
  r:gives {
    "queens([2-f(6-some4,some2-some5,4-1,7-5,some3-4,5-2,some6-some1,8-8)],7,[2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(2-f(6-some0,some1-some2,4-1,7-5,some3-4,5-2,some4-some5,8-8),[2-f(6-some0,some1-some2,4-1,7-5,some3-4,5-2,some4-some5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(6-some0,some1-some2,4-1,7-5,some3-4,5-2,some4-some5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_888 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_888.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma981> a r:Inference;
  r:gives {
    "queens([3-f(some1-3,some2-1,5-some4,7-some0,3-6,some5-2,6-5,8-8)],7,[3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(3-f(some0-3,some1-1,5-some2,7-some3,3-6,some4-2,6-5,8-8),[3-f(some0-3,some1-1,5-some2,7-some3,3-6,some4-2,6-5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-3,some1-1,5-some2,7-some3,3-6,some4-2,6-5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_889 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_889.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma982> a r:Inference;
  r:gives {
    "queens([6-f(2-5,4-7,1-2,some6-some7,some8-6,3-4,6-some9,8-8)],7,[6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(6-f(2-5,4-7,1-2,some0-some1,some2-6,3-4,6-some3,8-8),[6-f(2-5,4-7,1-2,some0-some1,some2-6,3-4,6-some3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-5,4-7,1-2,some0-some1,some2-6,3-4,6-some3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_890 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_890.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma983> a r:Inference;
  r:gives {
    "queens([8-f(some3-2,some4-7,2-5,some5-some6,1-some7,3-some8,5-some9,8-8)],7,[8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(8-f(some0-2,some1-7,2-5,some2-some3,1-some4,3-some5,5-some6,8-8),[8-f(some0-2,some1-7,2-5,some2-some3,1-some4,3-some5,5-some6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-2,some1-7,2-5,some2-some3,1-some4,3-some5,5-some6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_891 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_891.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma984> a r:Inference;
  r:gives {
    "queens([2-f(7-some7,6-some8,4-1,some9-5,some10-4,5-3,some11-2,8-8)],7,[2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(2-f(7-some0,6-some1,4-1,some2-5,some3-4,5-3,some4-2,8-8),[2-f(7-some0,6-some1,4-1,some2-5,some3-4,5-3,some4-2,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(7-some0,6-some1,4-1,some2-5,some3-4,5-3,some4-2,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_892 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_892.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma985> a r:Inference;
  r:gives {
    "queens([5-f(some2-some6,1-4,some3-6,5-some1,7-2,4-5,3-some4,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(some0-some1,1-4,some2-6,5-some3,7-2,4-5,3-some4,8-8),[5-f(some0-some1,1-4,some2-6,5-some3,7-2,4-5,3-some4,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-some1,1-4,some2-6,5-some3,7-2,4-5,3-some4,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_893 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_893.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma986> a r:Inference;
  r:gives {
    "queens([3-f(5-3,4-1,some3-some5,7-some1,3-6,some6-4,6-2,8-8)],7,[3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(3-f(5-3,4-1,some0-some1,7-some2,3-6,some3-4,6-2,8-8),[3-f(5-3,4-1,some0-some1,7-some2,3-6,some3-4,6-2,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(5-3,4-1,some0-some1,7-some2,3-6,some3-4,6-2,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_894 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_894.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma987> a r:Inference;
  r:gives {
    "queens([6-f(some5-4,some6-3,1-7,3-2,6-some7,some1-some8,4-6,8-8)],7,[6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(6-f(some0-4,some1-3,1-7,3-2,6-some2,some3-some4,4-6,8-8),[6-f(some0-4,some1-3,1-7,3-2,6-some2,some3-some4,4-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-4,some1-3,1-7,3-2,6-some2,some3-some4,4-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_895 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_895.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma988> a r:Inference;
  r:gives {
    "queens([3-f(4-some5,3-some6,7-1,2-3,some7-6,some8-some2,6-4,8-8)],7,[3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(3-f(4-some0,3-some1,7-1,2-3,some2-6,some3-some4,6-4,8-8),[3-f(4-some0,3-some1,7-1,2-3,some2-6,some3-some4,6-4,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(4-some0,3-some1,7-1,2-3,some2-6,some3-some4,6-4,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_896 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_896.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma989> a r:Inference;
  r:gives {
    "queens([6-f(3-5,1-4,some5-some3,some0-7,6-3,4-some6,2-6,8-8)],7,[6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(6-f(3-5,1-4,some0-some1,some2-7,6-3,4-some3,2-6,8-8),[6-f(3-5,1-4,some0-some1,some2-7,6-3,4-some3,2-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(3-5,1-4,some0-some1,some2-7,6-3,4-some3,2-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_897 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_897.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma990> a r:Inference;
  r:gives {
    "queens([4-f(some6-some2,4-1,6-some4,some0-5,2-7,5-4,some3-3,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(some0-some1,4-1,6-some2,some3-5,2-7,5-4,some4-3,8-8),[4-f(some0-some1,4-1,6-some2,some3-5,2-7,5-4,some4-3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-some1,4-1,6-some2,some3-5,2-7,5-4,some4-3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_898 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_898.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma991> a r:Inference;
  r:gives {
    "queens([7-f(some7-7,some8-6,1-4,5-some9,4-some10,3-5,2-some11,8-8)],7,[7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(7-f(some0-7,some1-6,1-4,5-some2,4-some3,3-5,2-some4,8-8),[7-f(some0-7,some1-6,1-4,5-some2,4-some3,3-5,2-some4,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-7,some1-6,1-4,5-some2,4-some3,3-5,2-some4,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_899 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_899.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma992> a r:Inference;
  r:gives {
    "queens([1-f(2-some3,7-some4,5-2,some5-some6,some7-1,some8-3,some9-5,8-8)],7,[1])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(1-f(2-some0,7-some1,5-2,some2-some3,some4-1,some5-3,some6-5,8-8),[1-f(2-some0,7-some1,5-2,some2-some3,some4-1,some5-3,some6-5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-some0,7-some1,5-2,some2-some3,some4-1,some5-3,some6-5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_900 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_900.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma993> a r:Inference;
  r:gives {
    "queens([3-f(5-2,7-4,2-1,some6-some7,6-some8,4-3,some9-6,8-8)],7,[3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(3-f(5-2,7-4,2-1,some0-some1,6-some2,4-3,some3-6,8-8),[3-f(5-2,7-4,2-1,some0-some1,6-some2,4-3,some3-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(5-2,7-4,2-1,some0-some1,6-some2,4-3,some3-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_901 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_901.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma994> a r:Inference;
  r:gives {
    "queens([6-f(3-some1,1-some2,some4-5,some0-7,6-3,2-some5,5-6,8-8)],7,[6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(6-f(3-some0,1-some1,some2-5,some3-7,6-3,2-some4,5-6,8-8),[6-f(3-some0,1-some1,some2-5,some3-7,6-3,2-some4,5-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(3-some0,1-some1,some2-5,some3-7,6-3,2-some4,5-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_902 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_902.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma995> a r:Inference;
  r:gives {
    "queens([7-f(some4-6,some5-some2,1-4,5-7,4-some3,2-5,some1-some6,8-8)],7,[7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(7-f(some0-6,some1-some2,1-4,5-7,4-some3,2-5,some4-some5,8-8),[7-f(some0-6,some1-some2,1-4,5-7,4-some3,2-5,some4-some5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-6,some1-some2,1-4,5-7,4-some3,2-5,some4-some5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_903 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_903.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma996> a r:Inference;
  r:gives {
    "queens([4-f(4-2,6-1,2-5,some4-some1,7-some2,3-some3,5-4,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(4-2,6-1,2-5,some0-some1,7-some2,3-some3,5-4,8-8),[4-f(4-2,6-1,2-5,some0-some1,7-some2,3-some3,5-4,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(4-2,6-1,2-5,some0-some1,7-some2,3-some3,5-4,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_904 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_904.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma997> a r:Inference;
  r:gives {
    "queens([2-f(2-some4,4-some5,7-2,some2-1,some6-6,some7-4,6-some1,8-8)],7,[2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(2-f(2-some0,4-some1,7-2,some2-1,some3-6,some4-4,6-some5,8-8),[2-f(2-some0,4-some1,7-2,some2-1,some3-6,some4-4,6-some5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-some0,4-some1,7-2,some2-1,some3-6,some4-4,6-some5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_905 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_905.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma998> a r:Inference;
  r:gives {
    "queens([2-f(some2-some5,6-3,4-some0,3-1,7-4,some4-some3,some6-2,8-8)],7,[2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(2-f(some0-some1,6-3,4-some2,3-1,7-4,some3-some4,some5-2,8-8),[2-f(some0-some1,6-3,4-some2,3-1,7-4,some3-some4,some5-2,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-some1,6-3,4-some2,3-1,7-4,some3-some4,some5-2,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_906 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_906.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma999> a r:Inference;
  r:gives {
    "queens([3-f(6-3,some2-some4,4-1,7-5,3-4,5-2,some5-some1,8-8)],7,[3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(3-f(6-3,some0-some1,4-1,7-5,3-4,5-2,some2-some3,8-8),[3-f(6-3,some0-some1,4-1,7-5,3-4,5-2,some2-some3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(6-3,some0-some1,4-1,7-5,3-4,5-2,some2-some3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_907 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_907.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1000> a r:Inference;
  r:gives {
    "queens([6-f(2-6,1-4,5-2,some0-7,some2-some4,4-some5,3-5,8-8)],7,[6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(6-f(2-6,1-4,5-2,some0-7,some1-some2,4-some3,3-5,8-8),[6-f(2-6,1-4,5-2,some0-7,some1-some2,4-some3,3-5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-6,1-4,5-2,some0-7,some1-some2,4-some3,3-5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_908 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_908.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1001> a r:Inference;
  r:gives {
    "queens([8-f(some4-2,some5-4,2-7,1-some3,some0-some6,4-some7,some1-some8,8-8)],7,[8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(8-f(some0-2,some1-4,2-7,1-some2,some3-some4,4-some5,some6-some7,8-8),[8-f(some0-2,some1-4,2-7,1-some2,some3-some4,4-some5,some6-some7,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-2,some1-4,2-7,1-some2,some3-some4,4-some5,some6-some7,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_909 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_909.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1002> a r:Inference;
  r:gives {
    "queens([4-f(some3-3,4-1,7-6,some6-5,3-2,5-4,some8-some2,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(some0-3,4-1,7-6,some1-5,3-2,5-4,some2-some3,8-8),[4-f(some0-3,4-1,7-6,some1-5,3-2,5-4,some2-some3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-3,4-1,7-6,some1-5,3-2,5-4,some2-some3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_910 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_910.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1003> a r:Inference;
  r:gives {
    "queens([2-f(3-some4,some2-some5,7-4,5-1,4-3,some6-5,some7-2,8-8)],7,[2])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(2-f(3-some0,some1-some2,7-4,5-1,4-3,some3-5,some4-2,8-8),[2-f(3-some0,some1-some2,7-4,5-1,4-3,some3-5,some4-2,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(3-some0,some1-some2,7-4,5-1,4-3,some3-5,some4-2,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_911 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_911.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1004> a r:Inference;
  r:gives {
    "queens([7-f(2-5,some4-7,1-2,some5-some6,some7-6,3-some8,6-some9,8-8)],7,[7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(7-f(2-5,some0-7,1-2,some1-some2,some3-6,3-some4,6-some5,8-8),[7-f(2-5,some0-7,1-2,some1-some2,some3-6,3-some4,6-some5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-5,some0-7,1-2,some1-some2,some3-6,3-some4,6-some5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_912 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_912.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1005> a r:Inference;
  r:gives {
    "queens([3-f(5-some6,3-4,some3-1,7-3,some4-6,4-some2,6-2,8-8)],7,[3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(3-f(5-some0,3-4,some1-1,7-3,some2-6,4-some3,6-2,8-8),[3-f(5-some0,3-4,some1-1,7-3,some2-6,4-some3,6-2,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(5-some0,3-4,some1-1,7-3,some2-6,4-some3,6-2,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_913 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_913.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1006> a r:Inference;
  r:gives {
    "queens([4-f(5-some6,3-4,some4-1,7-3,2-6,4-some2,6-some3,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(5-some0,3-4,some1-1,7-3,2-6,4-some2,6-some3,8-8),[4-f(5-some0,3-4,some1-1,7-3,2-6,4-some2,6-some3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(5-some0,3-4,some1-1,7-3,2-6,4-some2,6-some3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_914 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_914.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1007> a r:Inference;
  r:gives {
    "queens([4-f(some3-4,some5-some8,7-1,2-5,6-some1,5-3,4-6,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(some0-4,some1-some2,7-1,2-5,6-some3,5-3,4-6,8-8),[4-f(some0-4,some1-some2,7-1,2-5,6-some3,5-3,4-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-4,some1-some2,7-1,2-5,6-some3,5-3,4-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_915 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_915.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1008> a r:Inference;
  r:gives {
    "queens([3-f(6-2,some3-4,2-some0,5-1,7-some2,4-5,some5-3,8-8)],7,[3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(3-f(6-2,some0-4,2-some1,5-1,7-some2,4-5,some3-3,8-8),[3-f(6-2,some0-4,2-some1,5-1,7-some2,4-5,some3-3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(6-2,some0-4,2-some1,5-1,7-some2,4-5,some3-3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_916 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_916.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1009> a r:Inference;
  r:gives {
    "queens([4-f(4-2,6-some2,2-1,5-some4,some1-7,3-5,some3-4,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(4-2,6-some0,2-1,5-some1,some2-7,3-5,some3-4,8-8),[4-f(4-2,6-some0,2-1,5-some1,some2-7,3-5,some3-4,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(4-2,6-some0,2-1,5-some1,some2-7,3-5,some3-4,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_917 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_917.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1010> a r:Inference;
  r:gives {
    "queens([5-f(4-some6,some2-1,some4-6,2-5,7-some1,5-some3,3-4,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(4-some0,some1-1,some2-6,2-5,7-some3,5-some4,3-4,8-8),[5-f(4-some0,some1-1,some2-6,2-5,7-some3,5-some4,3-4,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(4-some0,some1-1,some2-6,2-5,7-some3,5-some4,3-4,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_918 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_918.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1011> a r:Inference;
  r:gives {
    "queens([7-f(some4-6,1-some3,4-5,some0-7,some1-4,2-some5,5-some6,8-8)],7,[7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(7-f(some0-6,1-some1,4-5,some2-7,some3-4,2-some4,5-some5,8-8),[7-f(some0-6,1-some1,4-5,some2-7,some3-4,2-some4,5-some5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-6,1-some1,4-5,some2-7,some3-4,2-some4,5-some5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_919 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_919.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1012> a r:Inference;
  r:gives {
    "queens([8-f(some5-7,some6-6,1-4,some7-some8,4-some9,3-some10,2-some11,8-8)],7,[8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(8-f(some0-7,some1-6,1-4,some2-some3,4-some4,3-some5,2-some6,8-8),[8-f(some0-7,some1-6,1-4,some2-some3,4-some4,3-some5,2-some6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-7,some1-6,1-4,some2-some3,4-some4,3-some5,2-some6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_920 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_920.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1013> a r:Inference;
  r:gives {
    "queens([7-f(some5-3,1-7,4-6,some6-some7,3-4,2-some8,some1-some9,8-8)],7,[7])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(7-f(some0-3,1-7,4-6,some1-some2,3-4,2-some3,some4-some5,8-8),[7-f(some0-3,1-7,4-6,some1-some2,3-4,2-some3,some4-some5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-3,1-7,4-6,some1-some2,3-4,2-some3,some4-some5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_921 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_921.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1014> a r:Inference;
  r:gives {
    "queens([5-f(3-4,some7-1,6-7,2-5,some0-3,5-some8,4-some9,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(3-4,some0-1,6-7,2-5,some1-3,5-some2,4-some3,8-8),[5-f(3-4,some0-1,6-7,2-5,some1-3,5-some2,4-some3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(3-4,some0-1,6-7,2-5,some1-3,5-some2,4-some3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_922 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_922.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1015> a r:Inference;
  r:gives {
    "queens([4-f(5-2,some8-4,2-1,some0-7,6-some7,4-3,some4-6,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(5-2,some0-4,2-1,some1-7,6-some2,4-3,some3-6,8-8),[4-f(5-2,some0-4,2-1,some1-7,6-some2,4-3,some3-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(5-2,some0-4,2-1,some1-7,6-some2,4-3,some3-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_923 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_923.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1016> a r:Inference;
  r:gives {
    "queens([5-f(3-5,some5-1,6-4,2-7,4-3,some2-some6,some3-some7,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(3-5,some0-1,6-4,2-7,4-3,some1-some2,some3-some4,8-8),[5-f(3-5,some0-1,6-4,2-7,4-3,some1-some2,some3-some4,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(3-5,some0-1,6-4,2-7,4-3,some1-some2,some3-some4,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_924 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_924.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1017> a r:Inference;
  r:gives {
    "queens([3-f(2-3,4-some6,7-2,some4-1,3-6,some7-4,6-some2,8-8)],7,[3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(3-f(2-3,4-some0,7-2,some1-1,3-6,some2-4,6-some3,8-8),[3-f(2-3,4-some0,7-2,some1-1,3-6,some2-4,6-some3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-3,4-some0,7-2,some1-1,3-6,some2-4,6-some3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_925 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_925.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1018> a r:Inference;
  r:gives {
    "queens([3-f(2-some3,6-3,5-2,3-1,some2-7,some4-some7,some5-5,8-8)],7,[3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(3-f(2-some0,6-3,5-2,3-1,some1-7,some2-some3,some4-5,8-8),[3-f(2-some0,6-3,5-2,3-1,some1-7,some2-some3,some4-5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-some0,6-3,5-2,3-1,some1-7,some2-some3,some4-5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_926 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_926.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1019> a r:Inference;
  r:gives {
    "queens([8-f(some5-7,some6-3,1-6,3-some7,some8-some9,2-some10,some0-some11,8-8)],7,[8])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(8-f(some0-7,some1-3,1-6,3-some2,some3-some4,2-some5,some6-some7,8-8),[8-f(some0-7,some1-3,1-6,3-some2,some3-some4,2-some5,some6-some7,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-7,some1-3,1-6,3-some2,some3-some4,2-some5,some6-some7,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_927 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_927.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1020> a r:Inference;
  r:gives {
    "queens([3-f(2-some4,some0-4,some2-2,some3-1,7-6,4-some1,6-3,8-8)],7,[3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(3-f(2-some0,some1-4,some2-2,some3-1,7-6,4-some4,6-3,8-8),[3-f(2-some0,some1-4,some2-2,some3-1,7-6,4-some4,6-3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-some0,some1-4,some2-2,some3-1,7-6,4-some4,6-3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_928 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_928.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1021> a r:Inference;
  r:gives {
    "queens([3-f(some2-some5,6-3,4-5,3-1,7-4,some4-some3,5-2,8-8)],7,[3])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(3-f(some0-some1,6-3,4-5,3-1,7-4,some2-some3,5-2,8-8),[3-f(some0-some1,6-3,4-5,3-1,7-4,some2-some3,5-2,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-some1,6-3,4-5,3-1,7-4,some2-some3,5-2,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_929 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_929.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1022> a r:Inference;
  r:gives {
    "queens([5-f(4-3,some5-some2,some6-1,5-7,3-6,2-5,6-4,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(4-3,some0-some1,some2-1,5-7,3-6,2-5,6-4,8-8),[5-f(4-3,some0-some1,some2-1,5-7,3-6,2-5,6-4,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(4-3,some0-some1,some2-1,5-7,3-6,2-5,6-4,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_930 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_930.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1023> a r:Inference;
  r:gives {
    "queens([6-f(some4-3,some5-1,5-some2,some0-7,3-6,2-some6,6-5,8-8)],7,[6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(6-f(some0-3,some1-1,5-some2,some3-7,3-6,2-some4,6-5,8-8),[6-f(some0-3,some1-1,5-some2,some3-7,3-6,2-some4,6-5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-3,some1-1,5-some2,some3-7,3-6,2-some4,6-5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_931 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_931.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1024> a r:Inference;
  r:gives {
    "queens([5-f(some3-5,3-4,some5-1,7-3,2-6,4-some2,6-some4,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(some0-5,3-4,some1-1,7-3,2-6,4-some2,6-some3,8-8),[5-f(some0-5,3-4,some1-1,7-3,2-6,4-some2,6-some3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-5,3-4,some1-1,7-3,2-6,4-some2,6-some3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_932 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_932.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1025> a r:Inference;
  r:gives {
    "queens([4-f(5-2,4-some2,2-some4,some1-1,6-7,3-4,some3-6,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(5-2,4-some0,2-some1,some2-1,6-7,3-4,some3-6,8-8),[4-f(5-2,4-some0,2-some1,some2-1,6-7,3-4,some3-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(5-2,4-some0,2-some1,some2-1,6-7,3-4,some3-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_933 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_933.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1026> a r:Inference;
  r:gives {
    "queens([4-f(some1-2,some3-4,2-6,5-1,7-some2,4-5,some5-3,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(some0-2,some1-4,2-6,5-1,7-some2,4-5,some3-3,8-8),[4-f(some0-2,some1-4,2-6,5-1,7-some2,4-5,some3-3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-2,some1-4,2-6,5-1,7-some2,4-5,some3-3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_934 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_934.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1027> a r:Inference;
  r:gives {
    "queens([6-f(some4-6,some5-1,5-4,2-7,4-some3,some1-some6,3-5,8-8)],7,[6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(6-f(some0-6,some1-1,5-4,2-7,4-some2,some3-some4,3-5,8-8),[6-f(some0-6,some1-1,5-4,2-7,4-some2,some3-some4,3-5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-6,some1-1,5-4,2-7,4-some2,some3-some4,3-5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_935 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_935.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1028> a r:Inference;
  r:gives {
    "queens([5-f(4-2,some4-6,2-1,5-some3,some1-7,3-5,some2-4,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(4-2,some0-6,2-1,5-some1,some2-7,3-5,some3-4,8-8),[5-f(4-2,some0-6,2-1,5-some1,some2-7,3-5,some3-4,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(4-2,some0-6,2-1,5-some1,some2-7,3-5,some3-4,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_936 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_936.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1029> a r:Inference;
  r:gives {
    "queens([4-f(2-4,6-3,5-2,3-1,some2-7,some3-some5,4-5,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(2-4,6-3,5-2,3-1,some0-7,some1-some2,4-5,8-8),[4-f(2-4,6-3,5-2,3-1,some0-7,some1-some2,4-5,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(2-4,6-3,5-2,3-1,some0-7,some1-some2,4-5,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_937 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_937.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1030> a r:Inference;
  r:gives {
    "queens([6-f(some3-3,some4-some1,some5-1,5-7,3-6,2-5,6-some6,8-8)],7,[6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(6-f(some0-3,some1-some2,some3-1,5-7,3-6,2-5,6-some4,8-8),[6-f(some0-3,some1-some2,some3-1,5-7,3-6,2-5,6-some4,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-3,some1-some2,some3-1,5-7,3-6,2-5,6-some4,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_938 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_938.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1031> a r:Inference;
  r:gives {
    "queens([6-f(some4-4,some5-3,some0-1,3-some2,6-7,2-some3,4-6,8-8)],7,[6])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(6-f(some0-4,some1-3,some2-1,3-some3,6-7,2-some4,4-6,8-8),[6-f(some0-4,some1-3,some2-1,3-some3,6-7,2-some4,4-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-4,some1-3,some2-1,3-some3,6-7,2-some4,4-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_939 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_939.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1032> a r:Inference;
  r:gives {
    "queens([4-f(some4-2,4-some7,2-5,7-some1,6-1,3-4,5-6,8-8)],7,[4])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(4-f(some0-2,4-some1,2-5,7-some2,6-1,3-4,5-6,8-8),[4-f(some0-2,4-some1,2-5,7-some2,6-1,3-4,5-6,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-2,4-some1,2-5,7-some2,6-1,3-4,5-6,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_940 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_940.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1033> a r:Inference;
  r:gives {
    "queens([5-f(some2-2,some4-4,2-6,5-1,7-some3,4-5,3-some5,8-8)],7,[5])".
  };
  r:evidence (
    [ a r:Fact; r:gives {(7 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> 8}]
    [ a r:Fact; r:gives {"select(5-f(some0-2,some1-4,2-6,5-1,7-some2,4-5,3-some3,8-8),[5-f(some0-2,some1-4,2-6,5-1,7-some2,4-5,3-some3,8-8)],[])"}]
    [ a r:Fact; r:gives {"arg(8,f(some0-2,some1-4,2-6,5-1,7-some2,4-5,3-some3,8-8),8-8)"}]
    <#lemma1037>
  );
  r:rule [ a r:Fact; r:gives {"queens([avar4|avar5],avar1,[avar2|avar7])" <= {(_:x_1_941 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#plus> _:x_0_941.
    "select(avar2-avar3,[avar4|avar5],avar6)".
    "arg(avar0,avar3,avar0-avar0)".
    "queens(avar6,avar0,avar7)"}}].

<#lemma1034> a r:Inference;
  r:gives {
    "constraints(1,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),[some0|some16],[some1|some17])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"arg(1,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),some0-some1)"}]
    [ a r:Fact; r:gives {(1 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> 0}]
    <#lemma1038>
  );
  r:rule [ a r:Fact; r:gives {{"arg(avar0,avar1,avar2-avar3)".
    (_:x_0_942 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> _:x_4_942.
    "constraints(avar4,avar1,avar5,avar6)"} => "constraints(avar0,avar1,[avar2|avar5],[avar3|avar6])"}].

<#lemma1035> a r:Inference;
  r:gives {
    "constraints(8,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),[some14,some12,some10,some8,some6,some4,some2,some0|some16],[some15,some13,some11,some9,some7,some5,some3,some1,some17,some18,some19,some20,some21,some22,some23|some24])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"arg(8,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),some14-some15)"}]
    [ a r:Fact; r:gives {(8 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> 7}]
    <#lemma464>
  );
  r:rule [ a r:Fact; r:gives {{"arg(avar0,avar1,avar2-avar3)".
    (_:x_0_943 1) <http://eulersharp.sourceforge.net/2003/03swap/prolog#minus> _:x_4_943.
    "constraints(avar4,avar1,avar5,avar6)"} => "constraints(avar0,avar1,[avar2|avar5],[avar3|avar6])"}].

<#lemma1036> a r:Extraction;
  r:gives {
    "board([],[],8,8,[some14,some12,some10,some8,some6,some4,some2,some0|some16],[some25,some15,some13,some11,some9,some7,some5,some3,some1,some17,some18,some19,some20,some21,some22,some23|some24])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma1037> a r:Extraction;
  r:gives {
    "queens([],8,[])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma1038> a r:Inference;
  r:gives {
    "constraints(0,f(some0-some1,some2-some3,some4-some5,some6-some7,some8-some9,some10-some11,some12-some13,some14-some15),some16,some17)".
  };
  r:evidence (
    [ a r:Fact; r:gives {("!") <http://eulersharp.sourceforge.net/2003/03swap/log-rules#derive> true}]
  );
  r:rule [ a r:Fact; r:gives {"constraints(0,avar0,avar1,avar2)" <= {("!") <http://eulersharp.sourceforge.net/2003/03swap/log-rules#derive> true}}].

#2019-08-14T10:41:26.795Z in=1 out=92 ent=92 step=92 brake=1 inf=5924625 sec=2.366 inf/sec=2504068
#ENDS

