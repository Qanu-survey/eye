#Processed by EYE v19.0817.2233 josd
#eye --plugin http://josd.github.io/eye/reasoning/utm/utm_interpreter.pl --plugin http://josd.github.io/eye/reasoning/utm/utm_program.pl --query http://josd.github.io/eye/reasoning/utm/utm_query.n3

PREFIX utm: <http://josd.github.io/eye/reasoning/utm#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[] a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:component <#lemma3>;
  r:component <#lemma4>;
  r:gives {
    (1 0 1 0 0 1) utm:compute (1 0 1 0 1 0 "#").
    (1 0 1 1 1 1) utm:compute (1 1 0 0 0 0 "#").
    (1 1 1 1 1 1) utm:compute (1 0 0 0 0 0 0 "#").
    () utm:compute (1 "#").
  }.

<#lemma1> a r:Inference;
  r:gives {
    (1 0 1 0 0 1) utm:compute (1 0 1 0 1 0 "#").
  };
  r:evidence (
    <#lemma5>
  );
  r:rule <#lemma6>.

<#lemma2> a r:Inference;
  r:gives {
    (1 0 1 1 1 1) utm:compute (1 1 0 0 0 0 "#").
  };
  r:evidence (
    <#lemma7>
  );
  r:rule <#lemma8>.

<#lemma3> a r:Inference;
  r:gives {
    (1 1 1 1 1 1) utm:compute (1 0 0 0 0 0 0 "#").
  };
  r:evidence (
    <#lemma9>
  );
  r:rule <#lemma10>.

<#lemma4> a r:Inference;
  r:gives {
    () utm:compute (1 "#").
  };
  r:evidence (
    <#lemma11>
  );
  r:rule <#lemma12>.

<#lemma5> a r:Inference;
  r:gives {
    (1 0 1 0 0 1) utm:compute (1 0 1 0 1 0 "#").
  };
  r:evidence (
    <#lemma13>
    <#lemma14>
  );
  r:rule [ a r:Fact; r:gives {{[ <http://www.w3.org/1999/02/22-rdf-syntax-ns#first> _:x_1_1; <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest> _:x_2_1] utm:compute _:x_3_1} <= {"start(avar0)".
    "find(avar0,[],avar1,avar2,avar3)"}}].

<#lemma6> a r:Extraction;
  r:gives {
    {(1 0 1 0 0 1) utm:compute ?x_0_2} => {(1 0 1 0 0 1) utm:compute ?x_0_2}.
  };
  r:because [ a r:Parsing; r:source <http://josd.github.io/eye/reasoning/utm/utm_query.n3>].

<#lemma7> a r:Inference;
  r:gives {
    (1 0 1 1 1 1) utm:compute (1 1 0 0 0 0 "#").
  };
  r:evidence (
    <#lemma13>
    <#lemma15>
  );
  r:rule [ a r:Fact; r:gives {{[ <http://www.w3.org/1999/02/22-rdf-syntax-ns#first> _:x_1_3; <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest> _:x_2_3] utm:compute _:x_3_3} <= {"start(avar0)".
    "find(avar0,[],avar1,avar2,avar3)"}}].

<#lemma8> a r:Extraction;
  r:gives {
    {(1 0 1 1 1 1) utm:compute ?x_0_4} => {(1 0 1 1 1 1) utm:compute ?x_0_4}.
  };
  r:because [ a r:Parsing; r:source <http://josd.github.io/eye/reasoning/utm/utm_query.n3>].

<#lemma9> a r:Inference;
  r:gives {
    (1 1 1 1 1 1) utm:compute (1 0 0 0 0 0 0 "#").
  };
  r:evidence (
    <#lemma13>
    <#lemma16>
  );
  r:rule [ a r:Fact; r:gives {{[ <http://www.w3.org/1999/02/22-rdf-syntax-ns#first> _:x_1_5; <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest> _:x_2_5] utm:compute _:x_3_5} <= {"start(avar0)".
    "find(avar0,[],avar1,avar2,avar3)"}}].

<#lemma10> a r:Extraction;
  r:gives {
    {(1 1 1 1 1 1) utm:compute ?x_0_6} => {(1 1 1 1 1 1) utm:compute ?x_0_6}.
  };
  r:because [ a r:Parsing; r:source <http://josd.github.io/eye/reasoning/utm/utm_query.n3>].

<#lemma11> a r:Inference;
  r:gives {
    () utm:compute (1 "#").
  };
  r:evidence (
    <#lemma13>
    <#lemma17>
  );
  r:rule [ a r:Fact; r:gives {{() utm:compute _:x_1_7} <= {"start(avar0)".
    "find(avar0,[],#,[],avar1)"}}].

<#lemma12> a r:Extraction;
  r:gives {
    {() utm:compute ?x_0_8} => {() utm:compute ?x_0_8}.
  };
  r:because [ a r:Parsing; r:source <http://josd.github.io/eye/reasoning/utm/utm_query.n3>].

<#lemma13> a r:Extraction;
  r:gives {
    "start(0)" .
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma14> a r:Inference;
  r:gives {
    "find(0,[],1,[0,1,0,0,1],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    <#lemma18>
    <#lemma19>
    <#lemma20>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma15> a r:Inference;
  r:gives {
    "find(0,[],1,[0,1,1,1,1],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma18>
    <#lemma21>
    <#lemma22>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma16> a r:Inference;
  r:gives {
    "find(0,[],1,[1,1,1,1,1],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma18>
    <#lemma23>
    <#lemma24>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma17> a r:Inference;
  r:gives {
    "find(0,[],#,[],[1,#])".
  };
  r:evidence (
    <#lemma25>
    <#lemma26>
    <#lemma27>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma18> a r:Extraction;
  r:gives {
    "t(0,1,1,r,0)" .
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma19> a r:Extraction;
  r:gives {
    "move(r,[],1,[0,1,0,0,1],[1],0,[1,0,0,1])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma20> a r:Inference;
  r:gives {
    "continue(0,[1],0,[1,0,0,1],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    <#lemma28>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma21> a r:Extraction;
  r:gives {
    "move(r,[],1,[0,1,1,1,1],[1],0,[1,1,1,1])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma22> a r:Inference;
  r:gives {
    "continue(0,[1],0,[1,1,1,1],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma29>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma23> a r:Extraction;
  r:gives {
    "move(r,[],1,[1,1,1,1,1],[1],1,[1,1,1,1])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma24> a r:Inference;
  r:gives {
    "continue(0,[1],1,[1,1,1,1],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma30>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma25> a r:Extraction;
  r:gives {
    "t(0,#,#,l,1)" .
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma26> a r:Extraction;
  r:gives {
    "move(l,[],#,[],[],#,[#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma27> a r:Inference;
  r:gives {
    "continue(1,[],#,[#],[1,#])".
  };
  r:evidence (
    <#lemma31>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma28> a r:Inference;
  r:gives {
    "find(0,[1],0,[1,0,0,1],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    <#lemma32>
    <#lemma33>
    <#lemma34>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma29> a r:Inference;
  r:gives {
    "find(0,[1],0,[1,1,1,1],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma32>
    <#lemma35>
    <#lemma36>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma30> a r:Inference;
  r:gives {
    "find(0,[1],1,[1,1,1,1],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma18>
    <#lemma37>
    <#lemma38>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma31> a r:Inference;
  r:gives {
    "find(1,[],#,[#],[1,#])".
  };
  r:evidence (
    <#lemma39>
    <#lemma40>
    <#lemma41>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma32> a r:Extraction;
  r:gives {
    "t(0,0,0,r,0)" .
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma33> a r:Extraction;
  r:gives {
    "move(r,[1],0,[1,0,0,1],[0,1],1,[0,0,1])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma34> a r:Inference;
  r:gives {
    "continue(0,[0,1],1,[0,0,1],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    <#lemma42>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma35> a r:Extraction;
  r:gives {
    "move(r,[1],0,[1,1,1,1],[0,1],1,[1,1,1])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma36> a r:Inference;
  r:gives {
    "continue(0,[0,1],1,[1,1,1],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma43>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma37> a r:Extraction;
  r:gives {
    "move(r,[1],1,[1,1,1,1],[1,1],1,[1,1,1])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma38> a r:Inference;
  r:gives {
    "continue(0,[1,1],1,[1,1,1],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma44>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma39> a r:Extraction;
  r:gives {
    "t(1,#,1,s,halt)".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma40> a r:Extraction;
  r:gives {
    "move(s,[],1,[#],[],1,[#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma41> a r:Inference;
  r:gives {
    "continue(halt,[],1,[#],[1,#])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"reverse([],[])"}]
    [ a r:Fact; r:gives {"append([],[1,#],[1,#])"}]
  );
  r:rule [ a r:Fact; r:gives {"continue(halt,avar0,avar2,avar3,avar4)" <= {"reverse(avar0,avar1)".
    "append(avar1,[avar2|avar3],avar4)"}}].

<#lemma42> a r:Inference;
  r:gives {
    "find(0,[0,1],1,[0,0,1],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    <#lemma18>
    <#lemma45>
    <#lemma46>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma43> a r:Inference;
  r:gives {
    "find(0,[0,1],1,[1,1,1],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma18>
    <#lemma47>
    <#lemma48>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma44> a r:Inference;
  r:gives {
    "find(0,[1,1],1,[1,1,1],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma18>
    <#lemma49>
    <#lemma50>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma45> a r:Extraction;
  r:gives {
    "move(r,[0,1],1,[0,0,1],[1,0,1],0,[0,1])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma46> a r:Inference;
  r:gives {
    "continue(0,[1,0,1],0,[0,1],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    <#lemma51>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma47> a r:Extraction;
  r:gives {
    "move(r,[0,1],1,[1,1,1],[1,0,1],1,[1,1])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma48> a r:Inference;
  r:gives {
    "continue(0,[1,0,1],1,[1,1],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma52>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma49> a r:Extraction;
  r:gives {
    "move(r,[1,1],1,[1,1,1],[1,1,1],1,[1,1])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma50> a r:Inference;
  r:gives {
    "continue(0,[1,1,1],1,[1,1],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma53>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma51> a r:Inference;
  r:gives {
    "find(0,[1,0,1],0,[0,1],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    <#lemma32>
    <#lemma54>
    <#lemma55>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma52> a r:Inference;
  r:gives {
    "find(0,[1,0,1],1,[1,1],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma18>
    <#lemma56>
    <#lemma57>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma53> a r:Inference;
  r:gives {
    "find(0,[1,1,1],1,[1,1],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma18>
    <#lemma58>
    <#lemma59>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma54> a r:Extraction;
  r:gives {
    "move(r,[1,0,1],0,[0,1],[0,1,0,1],0,[1])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma55> a r:Inference;
  r:gives {
    "continue(0,[0,1,0,1],0,[1],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    <#lemma60>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma56> a r:Extraction;
  r:gives {
    "move(r,[1,0,1],1,[1,1],[1,1,0,1],1,[1])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma57> a r:Inference;
  r:gives {
    "continue(0,[1,1,0,1],1,[1],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma61>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma58> a r:Extraction;
  r:gives {
    "move(r,[1,1,1],1,[1,1],[1,1,1,1],1,[1])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma59> a r:Inference;
  r:gives {
    "continue(0,[1,1,1,1],1,[1],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma62>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma60> a r:Inference;
  r:gives {
    "find(0,[0,1,0,1],0,[1],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    <#lemma32>
    <#lemma63>
    <#lemma64>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma61> a r:Inference;
  r:gives {
    "find(0,[1,1,0,1],1,[1],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma18>
    <#lemma65>
    <#lemma66>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma62> a r:Inference;
  r:gives {
    "find(0,[1,1,1,1],1,[1],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma18>
    <#lemma67>
    <#lemma68>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma63> a r:Extraction;
  r:gives {
    "move(r,[0,1,0,1],0,[1],[0,0,1,0,1],1,[])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma64> a r:Inference;
  r:gives {
    "continue(0,[0,0,1,0,1],1,[],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    <#lemma69>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma65> a r:Extraction;
  r:gives {
    "move(r,[1,1,0,1],1,[1],[1,1,1,0,1],1,[])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma66> a r:Inference;
  r:gives {
    "continue(0,[1,1,1,0,1],1,[],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma70>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma67> a r:Extraction;
  r:gives {
    "move(r,[1,1,1,1],1,[1],[1,1,1,1,1],1,[])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma68> a r:Inference;
  r:gives {
    "continue(0,[1,1,1,1,1],1,[],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma71>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma69> a r:Inference;
  r:gives {
    "find(0,[0,0,1,0,1],1,[],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    <#lemma18>
    <#lemma72>
    <#lemma73>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma70> a r:Inference;
  r:gives {
    "find(0,[1,1,1,0,1],1,[],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma18>
    <#lemma74>
    <#lemma75>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma71> a r:Inference;
  r:gives {
    "find(0,[1,1,1,1,1],1,[],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma18>
    <#lemma76>
    <#lemma77>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma72> a r:Extraction;
  r:gives {
    "move(r,[0,0,1,0,1],1,[],[1,0,0,1,0,1],#,[])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma73> a r:Inference;
  r:gives {
    "continue(0,[1,0,0,1,0,1],#,[],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    <#lemma78>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma74> a r:Extraction;
  r:gives {
    "move(r,[1,1,1,0,1],1,[],[1,1,1,1,0,1],#,[])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma75> a r:Inference;
  r:gives {
    "continue(0,[1,1,1,1,0,1],#,[],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma79>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma76> a r:Extraction;
  r:gives {
    "move(r,[1,1,1,1,1],1,[],[1,1,1,1,1,1],#,[])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma77> a r:Inference;
  r:gives {
    "continue(0,[1,1,1,1,1,1],#,[],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma80>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma78> a r:Inference;
  r:gives {
    "find(0,[1,0,0,1,0,1],#,[],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    <#lemma25>
    <#lemma81>
    <#lemma82>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma79> a r:Inference;
  r:gives {
    "find(0,[1,1,1,1,0,1],#,[],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma25>
    <#lemma83>
    <#lemma84>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma80> a r:Inference;
  r:gives {
    "find(0,[1,1,1,1,1,1],#,[],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma25>
    <#lemma85>
    <#lemma86>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma81> a r:Extraction;
  r:gives {
    "move(l,[1,0,0,1,0,1],#,[],[0,0,1,0,1],1,[#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma82> a r:Inference;
  r:gives {
    "continue(1,[0,0,1,0,1],1,[#],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    <#lemma87>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma83> a r:Extraction;
  r:gives {
    "move(l,[1,1,1,1,0,1],#,[],[1,1,1,0,1],1,[#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma84> a r:Inference;
  r:gives {
    "continue(1,[1,1,1,0,1],1,[#],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma88>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma85> a r:Extraction;
  r:gives {
    "move(l,[1,1,1,1,1,1],#,[],[1,1,1,1,1],1,[#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma86> a r:Inference;
  r:gives {
    "continue(1,[1,1,1,1,1],1,[#],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma89>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma87> a r:Inference;
  r:gives {
    "find(1,[0,0,1,0,1],1,[#],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    <#lemma90>
    <#lemma91>
    <#lemma92>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma88> a r:Inference;
  r:gives {
    "find(1,[1,1,1,0,1],1,[#],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma90>
    <#lemma93>
    <#lemma94>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma89> a r:Inference;
  r:gives {
    "find(1,[1,1,1,1,1],1,[#],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma90>
    <#lemma95>
    <#lemma96>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma90> a r:Extraction;
  r:gives {
    "t(1,1,0,l,1)" .
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma91> a r:Extraction;
  r:gives {
    "move(l,[0,0,1,0,1],0,[#],[0,1,0,1],0,[0,#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma92> a r:Inference;
  r:gives {
    "continue(1,[0,1,0,1],0,[0,#],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    <#lemma97>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma93> a r:Extraction;
  r:gives {
    "move(l,[1,1,1,0,1],0,[#],[1,1,0,1],1,[0,#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma94> a r:Inference;
  r:gives {
    "continue(1,[1,1,0,1],1,[0,#],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma98>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma95> a r:Extraction;
  r:gives {
    "move(l,[1,1,1,1,1],0,[#],[1,1,1,1],1,[0,#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma96> a r:Inference;
  r:gives {
    "continue(1,[1,1,1,1],1,[0,#],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma99>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma97> a r:Inference;
  r:gives {
    "find(1,[0,1,0,1],0,[0,#],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    <#lemma100>
    <#lemma101>
    <#lemma102>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma98> a r:Inference;
  r:gives {
    "find(1,[1,1,0,1],1,[0,#],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma90>
    <#lemma103>
    <#lemma104>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma99> a r:Inference;
  r:gives {
    "find(1,[1,1,1,1],1,[0,#],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma90>
    <#lemma105>
    <#lemma106>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma100> a r:Extraction;
  r:gives {
    "t(1,0,1,s,halt)".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma101> a r:Extraction;
  r:gives {
    "move(s,[0,1,0,1],1,[0,#],[0,1,0,1],1,[0,#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma102> a r:Inference;
  r:gives {
    "continue(halt,[0,1,0,1],1,[0,#],[1,0,1,0,1,0,#])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"reverse([0,1,0,1],[1,0,1,0])"}]
    [ a r:Fact; r:gives {"append([1,0,1,0],[1,0,#],[1,0,1,0,1,0,#])"}]
  );
  r:rule [ a r:Fact; r:gives {"continue(halt,avar0,avar2,avar3,avar4)" <= {"reverse(avar0,avar1)".
    "append(avar1,[avar2|avar3],avar4)"}}].

<#lemma103> a r:Extraction;
  r:gives {
    "move(l,[1,1,0,1],0,[0,#],[1,0,1],1,[0,0,#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma104> a r:Inference;
  r:gives {
    "continue(1,[1,0,1],1,[0,0,#],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma107>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma105> a r:Extraction;
  r:gives {
    "move(l,[1,1,1,1],0,[0,#],[1,1,1],1,[0,0,#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma106> a r:Inference;
  r:gives {
    "continue(1,[1,1,1],1,[0,0,#],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma108>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma107> a r:Inference;
  r:gives {
    "find(1,[1,0,1],1,[0,0,#],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma90>
    <#lemma109>
    <#lemma110>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma108> a r:Inference;
  r:gives {
    "find(1,[1,1,1],1,[0,0,#],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma90>
    <#lemma111>
    <#lemma112>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma109> a r:Extraction;
  r:gives {
    "move(l,[1,0,1],0,[0,0,#],[0,1],1,[0,0,0,#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma110> a r:Inference;
  r:gives {
    "continue(1,[0,1],1,[0,0,0,#],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma113>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma111> a r:Extraction;
  r:gives {
    "move(l,[1,1,1],0,[0,0,#],[1,1],1,[0,0,0,#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma112> a r:Inference;
  r:gives {
    "continue(1,[1,1],1,[0,0,0,#],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma114>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma113> a r:Inference;
  r:gives {
    "find(1,[0,1],1,[0,0,0,#],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma90>
    <#lemma115>
    <#lemma116>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma114> a r:Inference;
  r:gives {
    "find(1,[1,1],1,[0,0,0,#],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma90>
    <#lemma117>
    <#lemma118>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma115> a r:Extraction;
  r:gives {
    "move(l,[0,1],0,[0,0,0,#],[1],0,[0,0,0,0,#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma116> a r:Inference;
  r:gives {
    "continue(1,[1],0,[0,0,0,0,#],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma119>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma117> a r:Extraction;
  r:gives {
    "move(l,[1,1],0,[0,0,0,#],[1],1,[0,0,0,0,#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma118> a r:Inference;
  r:gives {
    "continue(1,[1],1,[0,0,0,0,#],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma120>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma119> a r:Inference;
  r:gives {
    "find(1,[1],0,[0,0,0,0,#],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma100>
    <#lemma121>
    <#lemma122>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma120> a r:Inference;
  r:gives {
    "find(1,[1],1,[0,0,0,0,#],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma90>
    <#lemma123>
    <#lemma124>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma121> a r:Extraction;
  r:gives {
    "move(s,[1],1,[0,0,0,0,#],[1],1,[0,0,0,0,#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma122> a r:Inference;
  r:gives {
    "continue(halt,[1],1,[0,0,0,0,#],[1,1,0,0,0,0,#])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"reverse([1],[1])"}]
    [ a r:Fact; r:gives {"append([1],[1,0,0,0,0,#],[1,1,0,0,0,0,#])"}]
  );
  r:rule [ a r:Fact; r:gives {"continue(halt,avar0,avar2,avar3,avar4)" <= {"reverse(avar0,avar1)".
    "append(avar1,[avar2|avar3],avar4)"}}].

<#lemma123> a r:Extraction;
  r:gives {
    "move(l,[1],0,[0,0,0,0,#],[],1,[0,0,0,0,0,#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma124> a r:Inference;
  r:gives {
    "continue(1,[],1,[0,0,0,0,0,#],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma125>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma125> a r:Inference;
  r:gives {
    "find(1,[],1,[0,0,0,0,0,#],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma90>
    <#lemma126>
    <#lemma127>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma126> a r:Extraction;
  r:gives {
    "move(l,[],0,[0,0,0,0,0,#],[],#,[0,0,0,0,0,0,#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma127> a r:Inference;
  r:gives {
    "continue(1,[],#,[0,0,0,0,0,0,#],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma128>
  );
  r:rule [ a r:Fact; r:gives {"continue(avar0,avar1,avar2,avar3,avar4)" <= "find(avar0,avar1,avar2,avar3,avar4)"}].

<#lemma128> a r:Inference;
  r:gives {
    "find(1,[],#,[0,0,0,0,0,0,#],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    <#lemma39>
    <#lemma129>
    <#lemma130>
  );
  r:rule [ a r:Fact; r:gives {"find(avar0,avar5,avar1,avar6,avar10)" <= {"t(avar0,avar1,avar2,avar3,avar4)".
    "move(avar3,avar5,avar2,avar6,avar7,avar8,avar9)".
    "continue(avar4,avar7,avar8,avar9,avar10)"}}].

<#lemma129> a r:Extraction;
  r:gives {
    "move(s,[],1,[0,0,0,0,0,0,#],[],1,[0,0,0,0,0,0,#])".
  };
  r:because [ a r:Parsing; r:source <>].

<#lemma130> a r:Inference;
  r:gives {
    "continue(halt,[],1,[0,0,0,0,0,0,#],[1,0,0,0,0,0,0,#])".
  };
  r:evidence (
    [ a r:Fact; r:gives {"reverse([],[])"}]
    [ a r:Fact; r:gives {"append([],[1,0,0,0,0,0,0,#],[1,0,0,0,0,0,0,#])"}]
  );
  r:rule [ a r:Fact; r:gives {"continue(halt,avar0,avar2,avar3,avar4)" <= {"reverse(avar0,avar1)".
    "append(avar1,[avar2|avar3],avar4)"}}].

#2019-08-27T08:32:04.610Z in=4 out=4 ent=4 step=4 brake=1 inf=123646 sec=0.066 inf/sec=1873424
#ENDS

